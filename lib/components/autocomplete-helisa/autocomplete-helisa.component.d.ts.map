{"version":3,"file":"autocomplete-helisa.component.d.ts","sources":["autocomplete-helisa.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { OnInit, EventEmitter } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { Observable, Subject } from 'rxjs';\nimport { AutocompleteHelisaService } from './autocomplete-helisa.component.service';\nexport interface OptionAutocompleteHelisa<T> {\n    value: T;\n    displayText: string;\n}\nexport declare class AutocompleteHelisaComponent<T> implements OnInit {\n    private autocompleteHelisaService;\n    myControl: FormControl;\n    options: Array<OptionAutocompleteHelisa<T>>;\n    filteredOptions: Observable<OptionAutocompleteHelisa<T>[]>;\n    selectedValue: OptionAutocompleteHelisa<T>;\n    selectedValueEmmiter: EventEmitter<T>;\n    nextPage: EventEmitter<void>;\n    isRemote: boolean;\n    isLoading: boolean;\n    onScrollObservable: Subject<void>;\n    constructor(autocompleteHelisaService: AutocompleteHelisaService<T>);\n    ngOnInit(): void;\n    displayFn(option?: OptionAutocompleteHelisa<T>): string | undefined;\n    getService(): AutocompleteHelisaService<T>;\n    /** Elimina caracteres extra√±os */\n    private _checkRegex;\n    private _filter;\n    onSelected(event: {\n        option: {\n            value: OptionAutocompleteHelisa<T>;\n        };\n    }): void;\n    getNextPage(): void;\n}\n"]}