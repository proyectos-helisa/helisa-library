{"version":3,"file":"input-helisa.component.d.ts","sources":["input-helisa.component.d.ts"],"names":[],"mappings":"AAAA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { EventEmitter, OnInit, ElementRef, AfterViewInit } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nexport declare enum InputHelisaType {\n    DEFAULT = 0,\n    IDENTITY = 1,\n    NUMERIC = 2,\n    DOUBLE = 3\n}\nexport declare class InputHelisaComponent implements OnInit, AfterViewInit {\n    private readonly DECIMAL_SEPARATOR;\n    private readonly THOUSAND_SEPARATOR;\n    placeholder: string;\n    floatLabel: 'never' | 'always' | 'auto';\n    minlength: number;\n    maxlength: number;\n    /** Activar o desactivar el autocompletado\n     * (Caracteristica de los navegadores para campos comunes como\n     * Direccion , Usuario, Password ... etc)\n     */\n    autocompleteMode: boolean;\n    isSearch: boolean;\n    isFocused: boolean;\n    /**\n     * Deprecated\n     */\n    disabled: boolean;\n    type: InputHelisaType;\n    /**\n     * Deprecated\n     */\n    setValue: EventEmitter<string>;\n    blur: EventEmitter<any>;\n    formControlMask: FormControl;\n    private realValue;\n    private inputFormReal;\n    inputText: ElementRef;\n    constructor();\n    set inputFormControl(formControl: FormControl);\n    private statusChange;\n    ngOnInit(): void;\n    ngAfterViewInit(): void;\n    search(): void;\n    change(event: string): void;\n    private getMaskedValue;\n    private getRealValue;\n    onFocus($event: FocusEvent): void;\n}\n"]}