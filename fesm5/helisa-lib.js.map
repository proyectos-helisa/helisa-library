{"version":3,"file":"helisa-lib.js.map","sources":["ng://helisa-lib/lib/components/input-with-button/input-with-button.component.ts","ng://helisa-lib/lib/components/toast-helisa/toast-helisa.component.ts","ng://helisa-lib/lib/components/toast-helisa/toast-helisa.service.ts","ng://helisa-lib/lib/components/toast-helisa/toast-type.enum.ts","ng://helisa-lib/lib/components/alert-helisa/alert-helisa-type.enum.ts","ng://helisa-lib/lib/components/alert-helisa/alert-helisa.component.ts","ng://helisa-lib/lib/components/alert-helisa/alert-helisa.service.ts","ng://helisa-lib/lib/components/dependency-table-helisa/dependency-table-helisa.service.ts","ng://helisa-lib/lib/components/table-helisa/table-helisa.service.ts","ng://helisa-lib/lib/components/dependency-table-helisa/dependency-table-helisa.component.ts","ng://helisa-lib/lib/components/input-helisa/input-helisa.component.ts","ng://helisa-lib/lib/components/table-helisa/table-helisa.interface.ts","ng://helisa-lib/lib/components/table-helisa/table-helisa-connect.component.ts","ng://helisa-lib/lib/components/table-helisa/table-helisa.component.ts","ng://helisa-lib/lib/components/date-helisa/date-helisa.component.ts","ng://helisa-lib/lib/components/tree-helisa/tree-helisa.service.ts","ng://helisa-lib/lib/components/tree-helisa/tree-helisa-connect.ts","ng://helisa-lib/lib/components/tree-helisa/tree-helisa.component.ts","ng://helisa-lib/lib/components/autocomplete-helisa/autocomplete-helisa.component.service.ts","ng://helisa-lib/lib/components/autocomplete-helisa/autocomplete-helisa.component.ts","ng://helisa-lib/lib/directives/options-scroll.directive.ts","ng://helisa-lib/lib/directives/tooltip.directive.ts","ng://helisa-lib/lib/pipes/external-link.pipe.ts","ng://helisa-lib/lib/directives/external-link.directive.ts","ng://helisa-lib/lib/helisa-lib.module.ts"],"sourcesContent":["import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'hel-input-with-button',\n  templateUrl: './input-with-button.component.html',\n  styleUrls: ['./input-with-button.component.sass']\n})\nexport class InputWithButtonComponent implements OnInit {\n\n  @Input() placeholder: string = '';\n  @Input() inputFormControl: FormControl = new FormControl('', Validators.required);\n  @Input() requiredMessage: string = 'El campo es requerido';\n  @Input() value: string = '';\n\n  @Output() done: EventEmitter<string> = new EventEmitter<string>();\n  @Output() cancel: EventEmitter<void> = new EventEmitter<void>();\n\n\n  constructor() { }\n\n  ngOnInit(): void {\n    if (this.value !== '') {\n      this.inputFormControl.setValue(this.value);\n    }\n  }\n\n\n  onDone(): void {\n    if (this.inputFormControl.valid) {\n      this.done.emit(this.inputFormControl.value);\n    }\n  }\n\n  onCancel(): void {\n    this.cancel.emit();\n  }\n\n}\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_SNACK_BAR_DATA } from '@angular/material';\nimport { ToastType } from './toast-type.enum';\n\n// @dynamic\n@Component({\n  selector: 'hel-toast',\n  templateUrl: './toast-helisa.component.html',\n  styleUrls: ['./toast-helisa.component.sass']\n})\nexport class ToastHelisaComponent implements OnInit {\n\n  constructor(@Inject(MAT_SNACK_BAR_DATA) public data: {type: ToastType, message: string, subMessages?: string[]}) { }\n\n  ngOnInit(): void {}\n\n}\n","import { Injectable } from '@angular/core';\nimport { MatSnackBar } from '@angular/material';\nimport { ToastType } from './toast-type.enum';\nimport { ToastHelisaComponent } from './toast-helisa.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ToastHelisaService {\n\n  durationInSeconds: number = 5;\n\n  constructor(private snackBar: MatSnackBar) { }\n\n  showToast(type: ToastType, message: string, subMessages?: string[]): void {\n    subMessages = subMessages ? subMessages : [];\n    this.snackBar.openFromComponent(ToastHelisaComponent, {\n      data: {message, type, subMessages},\n      duration: this.durationInSeconds * 1000\n    });\n  }\n}\n","export enum ToastType {\n    DONE = 'done',\n    ERROR = 'error',\n    INFO = 'info'\n}\n","export enum AlertHelisaType {\n    ERROR = 'ERROR',\n    CONFIRMATION = 'CONFIRMATION'\n}\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { AlertHelisaType } from './alert-helisa-type.enum';\n\ninterface AlertHelisaProperties {\n  title: string;\n  content: string;\n  type: AlertHelisaType;\n}\n\n@Component({\n  selector: 'hel-alert',\n  templateUrl: './alert-helisa.component.html',\n  styleUrls: ['./alert-helisa.component.sass']\n})\nexport class AlertHelisaComponent implements OnInit {\n\n  content: string;\n  title: string;\n  hasCancel: boolean;\n\n  constructor(\n    public dialogRef: MatDialogRef<AlertHelisaComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: AlertHelisaProperties\n  ) {\n    this.content = data.content;\n    this.title = data.title;\n    this.hasCancel = data.type === AlertHelisaType.CONFIRMATION;\n    dialogRef.disableClose = true;\n    dialogRef.keydownEvents().subscribe((event: KeyboardEvent) => {\n      if (event.code === 'Escape') {\n        this.dialogRef.close(this.onCancel());\n      }\n    });\n  }\n\n  ngOnInit(): void {\n  }\n\n  onCancel(): void {\n    this.dialogRef.close();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material';\nimport { Observable } from 'rxjs';\nimport { AlertHelisaType } from './alert-helisa-type.enum';\nimport { AlertHelisaComponent } from './alert-helisa.component';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AlertHelisaService {\n\n  constructor(public dialog: MatDialog) { }\n\n  openDialog(type: AlertHelisaType, title: string, content: string): Observable<boolean> {\n    const dialogRef: MatDialogRef<AlertHelisaComponent> = this.dialog.open(AlertHelisaComponent, {\n      width: '250px',\n      data: { title, content, type }\n    });\n\n    return dialogRef.afterClosed();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, Subject, BehaviorSubject } from 'rxjs';\nimport {ColumnConfig, AddRowButton, ConfigRowStyles, TotalTableHelisa} from '../table-helisa/table-helisa.interface';\nimport { EventDependency} from './dependency-table-helisa.component';\n\nexport interface ConfigTable<T> {\n  columns: Array<ColumnConfig>;\n  isRemote: boolean;\n  dataSource?: Array<T>;\n  count?: number;\n  order?: number;\n  showTitle?: boolean;\n  indexRowSelect?: number;\n  isDragged?: boolean;\n  addRowButton?: AddRowButton;\n  configRowStylesFromColumn?: Array<ConfigRowStyles<T>>;\n  isCellSelection?: boolean;\n  addBookButton?: boolean;\n}\n\n@Injectable()\nexport class DependencyTableHelisaService<T> {\n\n\n  tables: Subject<ConfigTable<T>[]> = new Subject();\n  infoTables: Array<ConfigTable<T>> = new Array();\n\n  private emitVisibilityButton$: Subject<EventDependency<boolean>> = new Subject<EventDependency<boolean>>();\n  emitVisibilityButton: Observable<EventDependency<boolean>> = this.emitVisibilityButton$.asObservable();\n\n  private emitVisibilityAllButtons$: Subject<boolean> = new Subject<boolean>();\n  emitVisibilityAllButtons: Observable<boolean> = this.emitVisibilityAllButtons$.asObservable();\n\n  private emitIsCellSelection$: Subject<EventDependency<boolean>> = new Subject<EventDependency<boolean>>();\n  emitIsCellSelection: Observable<EventDependency<boolean>> = this.emitIsCellSelection$.asObservable();\n\n  private emitChangeColumns$: Subject<EventDependency<ColumnConfig[]>> = new Subject<EventDependency<ColumnConfig[]>>();\n  emitChangeColumns: Observable<EventDependency<ColumnConfig[]>> = this.emitChangeColumns$.asObservable();\n\n  emitTotal: Subject<EventDependency<TotalTableHelisa>> = new Subject<EventDependency<TotalTableHelisa>>();\n  emitNextPage: Subject<EventDependency<T[]>> = new Subject<EventDependency<T[]>>();\n\n  constructor() { }\n\n  /**\n   * retorna un Observable<ConfigTable[]>\n   */\n  getTables(): Observable<ConfigTable<T>[]> {\n    return this.tables;\n  }\n\n  /**\n   * Actualiza las dependencias, agrendo la tabla que envian en el orden correspondiente o al final.\n   * TambiÃ©n remueve las dependecias que hay apartir de la tabla segun se indique en el parametro.\n   * @param configTable Objeto que contiene la configuraciÃ³n para la tabla.\n   * @param withRemoveDependency boolean por defecto es false, si es 'true' indica que remueva las dependencias apartir de el.\n   */\n  updateDependency(configTable: ConfigTable<T>, withRemoveDependency: boolean = false): void {\n    if (withRemoveDependency) {\n      this.infoTables = this.infoTables.slice(0, !configTable.order ? 0 : configTable.order);\n    }\n    if (!configTable.order || configTable.order >= this.infoTables.length) {\n      configTable.order = this.infoTables.length;\n    }\n    this.infoTables[configTable.order] = configTable;\n    if (configTable.isRemote) {\n      configTable.dataSource = null;\n      if (configTable.count === null) {\n        throw new Error('hace falta el count');\n      }\n    } else {\n      if (configTable.dataSource === null) {\n        throw new Error('hace falta el dataSource');\n      }\n      configTable.count = configTable.dataSource.length;\n    }\n    this.tables.next(this.infoTables);\n  }\n\n  /**\n   * Emite un evento de total con la informaciÃ³n para la tabla correspondiente\n   * @param event wrapper que contiene el indice de la tabla y la informaciÃ³n de la pagina\n   */\n  setTotal(event: EventDependency<TotalTableHelisa>): void {\n    this.emitTotal.next(event);\n  }\n\n  /**\n   * Emite un evento de agregar pagina con la pagina para la tabla correspondiente\n   * @param event wrapper que contiene el indice de la tabla y la informaciÃ³n de la pagina\n   */\n  addPage(event: EventDependency<T[]>): void {\n    this.emitNextPage.next(event);\n  }\n\n  selectIndexRow(config: ConfigTable<T>): void {\n    if (this.infoTables[config.order]) {\n      this.infoTables[config.order].indexRowSelect = config.indexRowSelect;\n      this.tables.next(this.infoTables);\n    }\n  }\n\n\n  /**\n   * Muestra o esconde el boton una tabla en especifico\n   * @param event para indicar el index de la tabla y en \"data\" true o false\n   */\n  changeVisibilityButton(event: EventDependency<boolean>): void {\n    this.emitVisibilityButton$.next(event);\n  }\n\n\n  /**\n   * Esconde los botones de todas las tablas\n   * @param show indicar si se muestran o no todos los botones de las tablas\n   */\n  changeVisibilityAllButtons(show: boolean): void {\n    this.emitVisibilityAllButtons$.next(show);\n  }\n\n  /**\n   * Para habilitar el manejo de selecciÃ³n de celda\n   * @param event para indicar el index de la tabla y en \"data\" true o false\n   */\n  changeisCellSelection(event: EventDependency<boolean>): void {\n    this.emitIsCellSelection$.next(event);\n  }\n\n   /**\n    * Para habilitar el cambio de columnas\n    * @param event para indicar el index de la tabla y en \"data\" columnas\n    */\n  changeColumnsByTable( event: EventDependency<ColumnConfig[]>): void {\n    this.emitChangeColumns$.next(event);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport {BehaviorSubject, Observable, Subject} from 'rxjs';\nimport {TotalTableHelisa} from './table-helisa.interface';\nimport {TableHelisaComponent} from './table-helisa.component';\n\nexport interface TableHelisaServiceInfo<T> {\n  obj: T;\n  table?: {} | TableHelisaComponent<T>;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TableHelisaService<T> {\n\n  private emitChangeSource: Subject<TableHelisaServiceInfo<TotalTableHelisa>> = new Subject<TableHelisaServiceInfo<TotalTableHelisa>>();\n  private emitNextPage: Subject<TableHelisaServiceInfo<T[]>> = new Subject<TableHelisaServiceInfo<T[]>>();\n\n  totalReturn: Observable<TableHelisaServiceInfo<TotalTableHelisa>> = this.emitChangeSource.asObservable();\n  nextPageReturn: Observable<TableHelisaServiceInfo<T[]>> = this.emitNextPage.asObservable();\n\n  private emitVisibleButton$: Subject<boolean> = new Subject<boolean>();\n  /**\n   * Observable para saber si se debe mostrar o esconder el boton de add row\n   */\n  emitVisibleButton: Observable<boolean> = this.emitVisibleButton$.asObservable();\n\n  setTotal(total: TotalTableHelisa, table?: TableHelisaComponent<TotalTableHelisa>): void {\n    this.emitChangeSource.next({obj: total, table});\n  }\n\n  addPage(page: T[], table?: TableHelisaComponent<T>): void {\n    this.emitNextPage.next({obj: page, table});\n  }\n\n  /**\n   * para modificar el valor de si se muestra o no el boton de add row de la tabla\n   * @param change indicar si se muestra o no el boton de add row de la tabla\n   */\n  changeVisibilityButton(change: boolean): void {\n    this.emitVisibleButton$.next(change);\n  }\n\n}\n","import { Component, OnInit, EventEmitter, Output, QueryList, ViewChildren, Input } from '@angular/core';\nimport { DependencyTableHelisaService, ConfigTable } from './dependency-table-helisa.service';\nimport { ColumnConfig, RequestTableHelisa, SelectObject, TotalTableHelisa } from '../table-helisa/table-helisa.interface';\nimport { TableHelisaService } from '../table-helisa/table-helisa.service';\nimport { TableHelisaComponent } from '../table-helisa/table-helisa.component';\n\nexport interface EventDependency<T> {\n  index: number;\n  data: T;\n}\n\n\n\n@Component({\n  selector: 'hel-dependency-table',\n  templateUrl: './dependency-table-helisa.component.html',\n  styleUrls: ['./dependency-table-helisa.component.sass'],\n  providers: [DependencyTableHelisaService]\n})\nexport class DependencyTableHelisaComponent<T> implements OnInit {\n\n  tables: Array<ConfigTable<T>> = [];\n  @ViewChildren('viewTables') viewTables: QueryList<TableHelisaComponent<T>>;\n  @Input() showToolTip: boolean = true;\n\n  /**\n   * deprecated, use selectObject\n   */\n  @Output() selected: EventEmitter<EventDependency<T>> = new EventEmitter<EventDependency<T>>();\n  @Output() selectObject: EventEmitter<EventDependency<{} | T>> = new EventEmitter<EventDependency<{}  | T>>();\n  @Output() nextPage: EventEmitter<EventDependency<{} | T>> = new EventEmitter<EventDependency<{} | T>>();\n  @Output() total: EventEmitter<EventDependency<{} | T>> = new EventEmitter<EventDependency<{}>>();\n  @Output() sort: EventEmitter<EventDependency<{} | T>> = new EventEmitter<EventDependency<{}>>();\n  @Output() drop: EventEmitter<EventDependency<{} | T>> = new EventEmitter<EventDependency<{}>>();\n  @Output() addRow: EventEmitter<number> = new EventEmitter<number>();\n  @Output() selectCell: EventEmitter<EventDependency<{} | T>> = new EventEmitter<EventDependency<{} | T>>();\n  @Output() bookClicked: EventEmitter<EventDependency<{} | T>> = new EventEmitter<EventDependency<{} | T>>();\n  selectedObject: EventDependency<{}> = null;\n\n\n  /**\n   * Tiempo antes de ocultarla el mensaje del tooltip\n   */\n  @Input() hideDelay: number = 600;\n\n  /**\n   * Tiempo antes de mostra el mensaje del tooltip\n   */\n  @Input() showDelay: number = 500;\n\n\n  constructor(private dependencyTableHelisaService: DependencyTableHelisaService<T>, private tableService: TableHelisaService<T>) { }\n\n  ngOnInit(): void {\n    this.getTables();\n    this.dependencyTableHelisaService.emitNextPage.subscribe(\n      (event: EventDependency<T[]>) => {\n        this.tableService.addPage(event.data, this.viewTables.toArray()[event.index]);\n      }\n    );\n\n    this.dependencyTableHelisaService.emitTotal.subscribe(\n      (event: EventDependency<TotalTableHelisa>) => {\n        this.tableService.setTotal(event.data, this.viewTables[event.index]);\n      }\n    );\n\n    // Observable para mostrar o esconder el boton de una tabla\n    this.dependencyTableHelisaService.emitVisibilityButton.subscribe(\n      (data: EventDependency<boolean>) => {\n        if (!!data && data.index !== undefined) {\n          const table: ConfigTable<T> = this.tables[data.index];\n          if (!!table) {\n            table.addRowButton.showButton = data.data;\n          }\n        }\n      }\n    );\n\n    // Observable para mostrar o esconder los botones de todas las tablas\n    this.dependencyTableHelisaService.emitVisibilityAllButtons.subscribe(\n      (data: boolean) => {\n        if (data !== undefined && data != null) {\n          this.tables.forEach((element: ConfigTable<T>) => {\n            if (!!element.addRowButton) {\n              element.addRowButton.showButton = data;\n            }\n          });\n        }\n      }\n    );\n\n    // Observable para manejo de selecciÃ³n de celdas\n    this.dependencyTableHelisaService.emitIsCellSelection.subscribe(\n      (data: EventDependency<boolean>) => {\n        if (!!data && data.index !== undefined) {\n          const table: ConfigTable<T> = this.tables[data.index];\n          if (table) {\n            table.isCellSelection = data.data;\n          }\n        }\n      });\n\n    // Observable para manejo de columnas\n    this.dependencyTableHelisaService.emitChangeColumns.subscribe(\n      (data: EventDependency<ColumnConfig[]>) => {\n        if (!!data && data.index !== undefined) {\n          const table: ConfigTable<T> = this.tables[data.index];\n          if (table) {\n            table.columns = data.data;\n          }\n        }\n      });\n  }\n\n  /**\n   * retorna el servicio que gestiona el componente.\n   */\n  getService(): DependencyTableHelisaService<T> {\n    return this.dependencyTableHelisaService;\n  }\n\n  /**\n   * Obtiene un observable con las tablas dependientes desde el servicio.\n   */\n  getTables(): void {\n    this.dependencyTableHelisaService.getTables()\n      .subscribe((tables: ConfigTable<T>[]) => {\n        this.tables = tables;\n      }\n      );\n  }\n\n  /**\n   * Evento que se dispara desde una tabla, emitiendo un nuevo evento con el inidice de la tabla que dispara el evento y el evento generado.\n   * @param index indica el indice de la tabla seleccionada\n   * @param data retorna la fila que fue seleccionada\n   */\n  onSelectedDependency(index: number, event: SelectObject<T>): void {\n    this.selectedObject = { index, data: event };\n    this.selected.emit({ index, data: event.value });\n    this.selectObject.emit({ index, data: event });\n  }\n\n  /**\n   * Evento que se dispara desde una tabla, emitiendo un nuevo evento con el inidice de la tabla que dispara el evento y el evento generado.\n   * @param index indica el indice de la tabla que genera el evento\n   * @param event evento generado desde la tabla\n   */\n  onNextPage(index: number, event: RequestTableHelisa<T>): void {\n    this.nextPage.emit({ index, data: event });\n  }\n\n  /**\n   * Evento que se dispara desde una tabla, emitiendo un nuevo evento con el inidice de la tabla que dispara el evento y el evento generado.\n   * @param index indica el indice de la tabla que genera el evento\n   * @param event evento generado desde la tabla\n   */\n  onTotal(index: number, event: EventDependency<T>): void {\n    this.total.emit({ index, data: event });\n  }\n\n  /**\n   * Evento que se dispara desde una tabla, emitiendo un nuevo evento con el inidice de la tabla que dispara el evento y el evento generado.\n   * @param index indica el indice de la tabla que genera el evento\n   * @param event evento generado desde la tabla\n   */\n  onSort(index: number, event: EventDependency<T>): void {\n    this.sort.emit({ index, data: event });\n  }\n\n  /**\n   * Evento que se dispara desde una tabla, emitiendo un nuevo evento con el inidice de la tabla que dispara el evento y el evento generado.\n   * @param index indica el indice de la tabla que genera el evento\n   * @param event evento generado desde la tabla\n   */\n  onDrop(index: number, event: EventDependency<T>): void {\n    this.drop.emit({ index, data: event });\n  }\n\n  /**\n   * Evento que se dispara desde una tabla, emite el indice de la tabla al cual se le debe aÃ±adir una nueva fila\n   * @param index indica el indice de la tabla de la cual se dispara el evento\n   */\n  onAddRow(index: number): void {\n    this.addRow.emit(index);\n  }\n\n  selectedCell(index: number, event: EventDependency<T>): void {\n    if (this.tables[index].isCellSelection) {\n      this.selectCell.emit({ index, data: event });\n    }\n  }\n\n  onBookClicked(index: number, event: EventDependency<T>): void {\n    this.bookClicked.emit({ index, data: event });\n  }\n}\n","import { Component, EventEmitter, Input, OnInit, Output, ViewChild, ElementRef } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\nexport enum InputHelisaType {\n  DEFAULT, IDENTITY, NUMERIC, DOUBLE\n}\n\n@Component({\n  selector: 'hel-input',\n  templateUrl: './input-helisa.component.html',\n  styleUrls: ['./input-helisa.component.sass']\n})\nexport class InputHelisaComponent implements OnInit {\n\n  private readonly DECIMAL_SEPARATOR: string = '.';\n  private readonly THOUSAND_SEPARATOR: string = ',';\n\n  @Input() placeholder: string = '';\n\n  // Mostrar o no el icono de buscar\n  @Input() isSearch: boolean = false;\n  // @Input() inputFormControl: FormControl = new FormControl('');\n  @Input() isFocused: boolean = false;\n\n  /**\n   * Deprecated\n   */\n  @Input() disabled: boolean = false;\n  @Input() type: InputHelisaType = InputHelisaType.DEFAULT;\n\n  /**\n   * Deprecated\n   */\n  @Output() setValue: EventEmitter<string> = new EventEmitter<string>();\n\n\n  formControlMask: FormControl = new FormControl('');\n  private realValue: string = '';\n  private inputFormReal: FormControl = new FormControl('');\n\n  @ViewChild('inputText') nameInput: ElementRef;\n\n  constructor() {\n  }\n\n  @Input()\n  set inputFormControl(formControl: FormControl) {\n    this.inputFormReal = formControl;\n    this.inputFormReal.valueChanges.subscribe((data: string) => {\n      this.statusChange(this.inputFormReal.status);\n      if (this.getMaskedValue(data) !== this.formControlMask.value) {\n        this.change(data);\n      }\n    });\n    this.formControlMask.setValidators(this.inputFormReal.validator);\n    this.change(this.inputFormReal.value);\n\n    // disable control\n    if (formControl.disabled) {\n      this.formControlMask.disable({ onlySelf: true });\n    }\n\n\n    this.inputFormReal.statusChanges.subscribe(\n      (data: string) => {\n        this.statusChange(data);\n      }\n    );\n  }\n\n  private statusChange(data: string): void {\n    if (data === 'INVALID') {\n      this.formControlMask.setErrors({ key: 'Error de validaciÃ³n.' });\n    }\n  }\n\n  ngOnInit(): void {\n    if (this.isFocused) {\n      this.nameInput.nativeElement.focus();\n    }\n  }\n\n  search(): void {\n    this.setValue.emit(this.realValue);\n  }\n\n  change(event: string): void {\n    if (event != null) { event = event + ''; }\n    let position: number = this.nameInput.nativeElement.selectionStart;\n    const length: number = event ? event.length : 0;\n    this.realValue = this.getRealValue(event);\n    if (this.getMaskedValue(this.realValue) !== this.formControlMask.value) {\n      this.formControlMask.setValue(this.getMaskedValue(this.realValue));\n      position += this.nameInput.nativeElement.value.length - length;\n      this.nameInput.nativeElement.selectionStart = position;\n      this.nameInput.nativeElement.selectionEnd = position;\n    }\n    this.inputFormReal.setValue(this.realValue);\n  }\n\n  private getMaskedValue(str: string): string {\n    if (str == null) {\n      return str;\n    }\n    str = str + '';\n    if (this.type === InputHelisaType.DEFAULT) {\n      return str;\n    }\n    let maskedStr: string = '';\n    if (this.type === InputHelisaType.IDENTITY) {\n      for (let i: number = str.length - 1, j: number = 0; i >= 0; i-- , j++) {\n        if (j > 0 && j % 3 === 0) {\n          maskedStr = this.DECIMAL_SEPARATOR + maskedStr;\n        }\n        maskedStr = str[i] + maskedStr;\n      }\n    }\n    if (this.type === InputHelisaType.NUMERIC) {\n      for (let i: number = str.length - 1, j: number = 0; i >= 0; i-- , j++) {\n        if (j > 0 && j % 3 === 0) {\n          maskedStr = this.THOUSAND_SEPARATOR + maskedStr;\n        }\n        maskedStr = str[i] + maskedStr;\n      }\n    }\n    if (this.type === InputHelisaType.DOUBLE) {\n      if (str.indexOf(this.DECIMAL_SEPARATOR) >= 0) {\n        for (let i: number = str.indexOf(this.DECIMAL_SEPARATOR); i < str.length; i++) {\n          maskedStr += str[i];\n        }\n      }\n      for (let i: number = (str.indexOf(this.DECIMAL_SEPARATOR) >= 0 ? str.indexOf(this.DECIMAL_SEPARATOR) : str.length) - 1,\n           j: number = 0; i >= 0; i-- , j++) {\n\n        if (j > 0 && j % 3 === 0) {\n          maskedStr = this.THOUSAND_SEPARATOR + maskedStr;\n        }\n        maskedStr = str[i] + maskedStr;\n      }\n    }\n    return maskedStr;\n  }\n\n  private getRealValue(str: string): string {\n    if (str == null) {\n      return str;\n    }\n    str = str + '';\n    let realStr: string = '';\n    if (this.type === InputHelisaType.DEFAULT) {\n      return str;\n    }\n    if (this.type ===  InputHelisaType.IDENTITY) {\n      for (const strItem of str) {\n        if (strItem.match('[a-zA-Z0-9]')) {\n          realStr += strItem;\n        }\n      }\n    }\n    if (this.type === InputHelisaType.NUMERIC) {\n      for (const strItem of str) {\n        if (strItem.match('[0-9]')) {\n          realStr += strItem;\n        }\n      }\n    }\n    if (this.type === InputHelisaType.DOUBLE) {\n      let haveDot: boolean = false;\n\n      for (const strItem of str) {\n        if (strItem.match('[0-9]') || ((strItem === this.DECIMAL_SEPARATOR) && !haveDot)) {\n          realStr += strItem;\n        }\n        haveDot = haveDot || (strItem === this.DECIMAL_SEPARATOR);\n      }\n    }\n    return realStr;\n  }\n}\n","import {SortDirection} from '@angular/material';\nimport { RowData } from './table-helisa.component';\n\nexport enum ColumnType {\n  NORMAL, URL\n}\n\nexport interface ColumnConfig {\n  name: string;\n  title?: string;\n  visible?: boolean;\n  sortable?: boolean;\n  groupable?: boolean;\n  totalType?: TotalType;\n  searchable?: boolean;\n  sortDirection?: SortDirection;\n  subtitle?: string;\n  colspanTitle?: number;\n  colspanSubtitle?: number;\n  columnStyle?: string;\n  columnType?: ColumnType;\n}\n\nexport interface AddRowButton {\n  text: string;\n  showButton: boolean;\n}\n\nexport enum EventScope {\n  USER, CODE_CALL\n}\n\nexport enum TotalType {\n  SUM, AVERAGE, COUNT\n}\n\nexport enum ChangeColumnConfigurationType {\n  SORT, UNKNOWN, TOTAL\n}\n\nexport interface EventColumn {\n  column: ColumnConfig;\n  columnConfigurations: Array<ColumnConfig>;\n  type: ChangeColumnConfigurationType;\n}\n\nexport interface TotalTableHelisa {\n  column: ColumnConfig;\n  value: number;\n}\n\nexport interface TotalGroup {\n  sum: number;\n  count: number;\n}\n\nexport interface EventSearch {\n  text: string;\n  columnConfigurations: Array<ColumnConfig>;\n}\n\nexport interface RequestTableHelisa<T> {\n  page: number;\n  body: {} | T;\n}\n\nexport interface DropElement<T> {\n value: T;\n order: number;\n}\n\nexport interface SelectObject<T> {\n  value: T;\n  scope: EventScope;\n}\n\nexport enum TableHelisaType {\n  REMOTE, LOCAL\n}\n\n\nexport interface Cell<T> {\n  column: ColumnConfig;\n  row: RowData<T> | T;\n }\n\nexport interface ConfigCellStyles<T> {\n   cellData: T;\n   classCell: string;\n }\n\nexport interface ConfigRowStyles<T> {\n  column: ColumnConfig;\n  data: {} | T;\n  classRow: string;\n}\n\n// @dynamic\nexport class ColumnConfigUtil<T> {\n\n  getValue(obj: T, column: ColumnConfig): T | number | string {\n    return column.name.split('.').reduce((o: T, field: string) => o && o[field], obj);\n  }\n}\n\n","import {ColumnConfig} from './table-helisa.interface';\nimport {Observable} from 'rxjs';\n\n\nexport class TableHelisaConnectComponent<T> {\n  page: number;\n  isLastPage: boolean;\n  isUsed: boolean;\n\n  constructor() {\n    this.page = 0;\n    this.isLastPage = false;\n    this.isUsed = false;\n  }\n\n  public getBody(columnConfig: Array<ColumnConfig>, search: string): {} {\n    return {};\n  }\n\n  nextPage(): number {\n    return this.page++;\n  }\n}\n","import { AfterViewInit, Component, EventEmitter, Input, OnInit, Output, ViewChild, ElementRef } from '@angular/core';\nimport { MatSort, MatTable, MatTableDataSource } from '@angular/material';\nimport { Sort } from '@angular/material/typings/sort';\n\nimport {\n  AddRowButton,\n  Cell,\n  ChangeColumnConfigurationType,\n  ColumnConfig,\n  ColumnConfigUtil,\n  ConfigCellStyles,\n  ConfigRowStyles,\n  DropElement,\n  EventColumn,\n  EventScope,\n  EventSearch,\n  RequestTableHelisa,\n  SelectObject,\n  TableHelisaType,\n  TotalGroup,\n  TotalType,\n  ColumnType,\n  TotalTableHelisa\n} from './table-helisa.interface';\nimport { TableHelisaService, TableHelisaServiceInfo } from './table-helisa.service';\nimport { TableHelisaConnectComponent } from './table-helisa-connect.component';\nimport { CdkDragDrop, moveItemInArray } from '@angular/cdk/drag-drop';\nimport { of } from 'rxjs';\n\nexport interface RowData<T> {\n  data: {} | T;\n  rowType: RowType;\n}\n\nenum RowType {\n  GROUP_TITLE, GROUP_FOOTER, ROW\n}\n\n\n\n@Component({\n  selector: 'hel-table',\n  templateUrl: './table-helisa.component.html',\n  styleUrls: ['./table-helisa.component.sass']\n})\nexport class TableHelisaComponent<T> implements OnInit, AfterViewInit {\n\n  private tableHelisaConnectComponent: TableHelisaConnectComponent<T>;\n  totalData: Array<number>;\n  rawData: Array<T>;\n  data: MatTableDataSource<RowData<T>>;\n  displayedColumns: string[] = [];\n  displayedColumnsWithTitle: string[] = [];\n  displayedColumnsWithSubtitle: string[] = [];\n  displayedColumnsWithFooter: string[] = [];\n  columnConfig: Array<ColumnConfig>;\n  selectedObject: T;\n  lastSearch: string;\n  type: TableHelisaType = TableHelisaType.LOCAL;\n  indexRowSelect: number;\n  private scrollCount: number = 0;\n  hasSubtitle: boolean = false;\n  private indexRowStartDrag: number = -1;\n  private lastIndexRowDrag: number = -1;\n  private dataBeforeDrag: { data: RowData<T>[] } = null;\n  private dataSource$: Array<T> = [];\n  private scrollX: number = 0;\n  private scrollY: number = 0;\n\n  @ViewChild(MatSort) matSort: MatSort;\n  @ViewChild(MatTable) matTable: MatTable<T>;\n  @ViewChild(MatTable, { read: ElementRef }) matTableElement: ElementRef;\n  @ViewChild('containerTable') containerTable: ElementRef;\n\n  @Output() sort: EventEmitter<EventColumn> = new EventEmitter<EventColumn>();\n  @Output() total: EventEmitter<EventColumn> = new EventEmitter<EventColumn>();\n  @Output() search: EventEmitter<EventSearch> = new EventEmitter<EventSearch>();\n\n  /**\n   * Deprecado, cambiar por electObject\n   */\n  @Output() select: EventEmitter<T> = new EventEmitter<T>();\n  @Output() selectCell: EventEmitter<Cell<T>> = new EventEmitter<Cell<T>>();\n  @Output() selectObject: EventEmitter<SelectObject<T>> = new EventEmitter<SelectObject<T>>();\n  @Output() nextPage: EventEmitter<RequestTableHelisa<T>> = new EventEmitter<RequestTableHelisa<T>>();\n  @Input() showTitle: boolean = true;\n  @Input() isCellSelection: boolean = false;\n  @Input() count: number;\n  @Input() configCellStyles: Array<ConfigCellStyles<T>>;\n  @Input() configRowStylesFromColumn: Array<ConfigRowStyles<T>>;\n  @Input() selectedCells: Cell<T>;\n  @Output() drop: EventEmitter<DropElement<T>> = new EventEmitter<DropElement<T>>();\n  @Input() isDragged: boolean = false;\n  @Input() addRowButton: AddRowButton = { showButton: false, text: '' };\n  @Output() addRow: EventEmitter<void> = new EventEmitter<void>();\n  @Output() bookClicked: EventEmitter<T> = new EventEmitter<T>();\n  @Input() addBookButton: boolean = false;\n  @Input() showToolTip: boolean = true;\n  showFooter: boolean = false;\n  showSearch: boolean = false;\n\n\n\n  /**\n   * Tiempo antes de ocultarla el mensaje del tooltip\n   */\n  @Input() hideDelay: number = 600;\n\n  /**\n   * Tiempo antes de mostra el mensaje del tooltip\n   */\n  @Input() showDelay: number = 500;\n\n\n  constructor(private tableService: TableHelisaService<T>) { }\n\n  ngOnInit(): void {\n    this.tableService.nextPageReturn.subscribe(\n      (data: TableHelisaServiceInfo<T[]>) => {\n        if (!data.table || data.table) {\n          this.receivePage(data.obj);\n        }\n      }\n    );\n    this.tableService.totalReturn.subscribe((info: TableHelisaServiceInfo<TotalTableHelisa>) => {\n      if (info) {\n        this.columnConfig.forEach((column: ColumnConfig, idx: number) => {\n          if (column === info.obj.column) {\n            this.totalData[idx] = this.getGroupValue(column, { sum: info.obj.value, count: this.count });\n          }\n        });\n      }\n    });\n    this.matSort.sortChange.subscribe(\n      (event: Sort) => {\n        const column: ColumnConfig = this.columnConfig.find((c: ColumnConfig) => c.name === event.active);\n        column.sortDirection = event.direction;\n        this.sort.emit({ column, columnConfigurations: this.columnConfig, type: ChangeColumnConfigurationType.SORT });\n      }\n    );\n\n    this.tableService.emitVisibleButton.subscribe(\n      (data: boolean) => {\n        if (data !== undefined && data != null) {\n          this.addRowButton.showButton = data;\n        }\n\n      }\n    );\n  }\n\n  ngAfterViewInit(): void {\n    if (this.isCellSelection) {\n      this.matTable.renderRows();\n    }\n  }\n\n  @Input()\n  set isRemote(w: boolean) {\n    this.type = w ? TableHelisaType.REMOTE : TableHelisaType.LOCAL;\n    this.tableHelisaConnectComponent = new TableHelisaConnectComponent<T>();\n    if (this.type === TableHelisaType.REMOTE) {\n      this.goNextPage();\n    } else {\n      this.tableHelisaConnectComponent.page++;\n    }\n  }\n\n  @Input()\n  set columnConfiguration(columnConfiguration: Array<ColumnConfig>) {\n    this.hasSubtitle = false;\n    this.columnConfig = columnConfiguration;\n    this.displayedColumns.splice(0, this.displayedColumns.length);\n\n    if (columnConfiguration) {\n      if (this.addBookButton) {\n        const columnCount: number = columnConfiguration.length;\n        let countSubtitle: number = 0;\n        let showBookButton: boolean = false;\n        columnConfiguration.forEach((column: ColumnConfig) => {\n          if (!!column.subtitle) {\n            countSubtitle = countSubtitle + 1;\n          }\n          if ((!showBookButton) && (column.name === 'bookButton')) {\n            showBookButton = true;\n          }\n        });\n        const subtitleTemp: boolean = columnCount === countSubtitle;\n        if (!showBookButton) {\n          columnConfiguration.push({\n            name: 'bookButton',\n            title: '',\n            subtitle: subtitleTemp ? '' : undefined ,\n            visible: true\n          });\n        }\n      }\n\n      columnConfiguration.forEach((column: ColumnConfig) => {\n        if (column.visible) {\n          this.displayedColumns.push(column.name);\n        }\n        if (!this.hasSubtitle) {\n          this.hasSubtitle = column.subtitle !== undefined;\n        }\n      });\n      if (this.rawData) {\n        this.dataSource = this.rawData;\n      }\n    }\n    this.displayedColumnsWithTitle.splice(0, this.displayedColumnsWithTitle.length);\n    this.displayedColumnsWithSubtitle.splice(0, this.displayedColumnsWithSubtitle.length);\n    this.displayedColumnsWithFooter.splice(0, this.displayedColumnsWithFooter.length);\n    this.getColumnsWithTitle().forEach((col: string) => this.displayedColumnsWithTitle.push(col));\n    this.getHeaderSubtitle().forEach((col: string) => this.displayedColumnsWithSubtitle.push(col));\n    this.footerDisplayedColumns().forEach((col: string) => this.displayedColumnsWithFooter.push(col));\n  }\n\n\n\n  @Input()\n  set dataSource(dataSource: Array<T>) {\n    this.dataSource$ = dataSource;\n    this.rawData = dataSource;\n    if (this.rawData) { this.prepareDataSource(); }\n  }\n\n  get dataSource(): Array<T> {\n    return this.dataSource$;\n  }\n\n  @Input()\n  set selectedIndexRow(idRowSelected: number) {\n    this.indexRowSelect = idRowSelected;\n    if (this.rawData && this.rawData.length) {\n      if ((idRowSelected >= this.rawData.length || idRowSelected < 0)) {\n        this.indexRowSelect = 0;\n      }\n      this.selectRow({ data: this.rawData[this.indexRowSelect], rowType: RowType.ROW }, false);\n    }\n  }\n\n  private prepareDataSource(): void {\n    const changeData: Array<RowData<T>> = Array<RowData<T>>();\n    let haveGroup: boolean = false;\n    let groupFooter: Array<TotalGroup>;\n    this.columnConfig.forEach((column: ColumnConfig) => {\n      if (column.totalType !== undefined && (this.type === TableHelisaType.LOCAL || this.tableHelisaConnectComponent.page <= 1)) {\n        this.totalData = new Array<number>(this.columnConfig.length);\n        this.showFooter = true;\n        this.total.emit({ column, columnConfigurations: this.columnConfig, type: ChangeColumnConfigurationType.TOTAL });\n      }\n      this.showSearch = this.showSearch || column.searchable;\n      haveGroup = haveGroup || column.groupable;\n    });\n    if (haveGroup) {\n      this.rawData = this.rawData.sort((a: T, b: T) => {\n        let result: number = 0;\n        this.columnConfig.forEach((column: ColumnConfig) => {\n          if (result === 0) {\n            result = this.compare(a, b);\n          }\n        });\n        return result;\n      });\n    }\n    this.rawData.forEach((row: T) => {\n      if (haveGroup && (changeData.length === 0 || this.compare(changeData[changeData.length - 1].data as T, row) !== 0)) {\n        if (groupFooter) {\n          changeData.push({ data: groupFooter, rowType: RowType.GROUP_FOOTER });\n        }\n        changeData.push({ data: row, rowType: RowType.GROUP_TITLE });\n        groupFooter = new Array<TotalGroup>(this.columnConfig.length);\n      }\n      if (haveGroup) { this.addTotalGroup(groupFooter, row); }\n      changeData.push({ data: row, rowType: RowType.ROW });\n    });\n    this.data = new MatTableDataSource<RowData<T>>(changeData);\n    if (this.rawData && this.rawData.length && this.indexRowSelect && !this.selectedObject) {\n      if (this.indexRowSelect >= this.rawData.length || this.indexRowSelect < 0) {\n        this.indexRowSelect = 0;\n      }\n      this.selectRow({ data: this.rawData[this.indexRowSelect], rowType: RowType.ROW }, false);\n    }\n  }\n\n  private addTotalGroup(rowTotal: Array<TotalGroup>, row: T): void {\n    this.columnConfig.forEach((column: ColumnConfig, index: number) => {\n      if (column.totalType !== undefined) {\n        if (rowTotal[index] === undefined) {\n          rowTotal[index] = { sum: (new ColumnConfigUtil().getValue(row, column) as number), count: 1 };\n        } else {\n          rowTotal[index].sum += (new ColumnConfigUtil().getValue(row, column) as number);\n          rowTotal[index].count++;\n        }\n      }\n    });\n  }\n\n  private compare(a: T, b: T): number {\n    let ws: number = 0;\n    this.columnConfig.forEach((column: ColumnConfig) => {\n      if (ws === 0 && column.groupable) {\n        if ((new ColumnConfigUtil().getValue(a, column) as number) < (new ColumnConfigUtil().getValue(b, column) as number)) {\n          ws = -1;\n        } else if ((new ColumnConfigUtil().getValue(a, column) as number) > (new ColumnConfigUtil().getValue(b, column) as number)) {\n          ws = 1;\n        }\n      }\n    });\n    return ws;\n  }\n\n  getGroupDescription(obj: T): string {\n    let result: string = '';\n    this.columnConfig.forEach((column: ColumnConfig) => {\n      if (column.groupable) {\n        result += (result.length ? ' - ' : '') + (new ColumnConfigUtil().getValue(obj, column));\n      }\n    });\n    return result;\n  }\n\n  isGroupTitle(index: number, item: RowData<T>): boolean {\n    return item.rowType === RowType.GROUP_TITLE;\n  }\n\n  isRow(index: number, item: RowData<T>): boolean {\n    return item.rowType === RowType.ROW;\n  }\n\n  isGroupFooter(index: number, item: RowData<T>): boolean {\n    return item.rowType === RowType.GROUP_FOOTER;\n  }\n\n  footerDisplayedColumns(): Array<string> {\n    return this.displayedColumns.map((name: string) => 'footer-' + name);\n  }\n\n  getGroupValue(column: ColumnConfig, data: TotalGroup): number {\n    if (column.totalType === TotalType.SUM) { return data.sum; }\n    if (column.totalType === TotalType.COUNT) { return data.count; }\n    if (column.totalType === TotalType.AVERAGE) { return 1. * data.sum / data.count; }\n    return undefined;\n  }\n\n  getValue(obj: T, column: ColumnConfig): T {\n    return new ColumnConfigUtil().getValue(obj, column) as T;\n  }\n\n  getValueTooltip(obj: T, column: ColumnConfig): string {\n    if (this.showToolTip) {\n      return new ColumnConfigUtil().getValue(obj, column) as string;\n    } else {\n      return null;\n    }\n  }\n\n  searchText(text: string): void {\n    this.lastSearch = text;\n    this.search.emit({ text, columnConfigurations: this.columnConfig });\n  }\n\n  selectRow(row: RowData<T>, isUser: boolean): void {\n    this.selectedObject = row.data as T;\n    this.select.emit(this.selectedObject);\n    this.selectObject.emit({ value: this.selectedObject, scope: isUser ? EventScope.USER : EventScope.CODE_CALL });\n  }\n\n  onScroll(event: Event): void {\n    const element: HTMLDivElement = event.target as HTMLDivElement;\n    let isScrollY: boolean;\n\n    if (this.scrollY !== element.scrollTop) {\n      isScrollY = true;\n      this.scrollY = element.scrollTop;\n      this.scrollX = element.scrollLeft;\n    }\n\n    if (this.scrollX !== element.scrollLeft) {\n      isScrollY = false;\n      this.scrollY = element.scrollTop;\n      this.scrollX = element.scrollLeft;\n    }\n\n    if ((element.scrollHeight - element.scrollTop < 1000) && isScrollY) {\n      this.goNextPage();\n    }\n\n  }\n\n  private goNextPage(): void {\n    if (!this.tableHelisaConnectComponent.isLastPage && !this.tableHelisaConnectComponent.isUsed) {\n      this.tableHelisaConnectComponent.isUsed = true;\n      this.nextPage.emit({\n        page: this.tableHelisaConnectComponent.nextPage(),\n        body: this.tableHelisaConnectComponent.getBody(this.columnConfig, this.lastSearch)\n      });\n    }\n  }\n\n  private receivePage(data: T[]): void {\n    if (!this.rawData) {\n      this.rawData = new Array<T>();\n    }\n    this.rawData = this.rawData.concat(data);\n    this.dataSource = this.rawData;\n    this.tableHelisaConnectComponent.isLastPage = data.length === 0;\n    this.tableHelisaConnectComponent.isUsed = false;\n  }\n\n  dblClickCell(): void {\n    this.selectCell.emit(this.selectedCells as Cell<T>);\n  }\n\n  selectedCell(element: RowData<T>, column: ColumnConfig): void {\n    this.selectedCells = { column, row: element };\n    this.selectCell.emit(this.selectedCells);\n  }\n\n  isSelectedCell(row: RowData<T>, column: ColumnConfig): boolean {\n    if (this.isCellSelection) {\n      if (this.selectedCells != null) {\n        if (this.selectedCells.column.name === column.name &&\n          (this.selectedCells.row as RowData<T>).data === row.data) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  getClassToCell(row: T, column: ColumnConfig): string[] {\n    const classToCell: Array<string> = new Array<string>();\n    if (this.configCellStyles) {\n      const found: ConfigCellStyles<T> = this.configCellStyles.find((c: ConfigCellStyles<T>) => {\n        return c.cellData === this.getValue(row, column);\n      });\n      if (found) {\n        classToCell.push(found.classCell);\n      }\n    }\n    if (column.columnStyle) {\n      classToCell.push(column.columnStyle);\n    }\n    return classToCell;\n  }\n\n  getClassToRow(row: T): string[] {\n    const classToRow: Array<string> = new Array<string>();\n    if (row === this.selectedObject && !this.isCellSelection) {\n      classToRow.push('');\n    }\n    if (this.configRowStylesFromColumn) {\n      const found: ConfigRowStyles<T> = this.configRowStylesFromColumn.find((c: ConfigRowStyles<T>) => {\n        return c.data === this.getValue(row, c.column);\n      });\n      if (found) {\n        classToRow.push(found.classRow);\n      }\n    }\n    return classToRow;\n  }\n\n  onDrop(event: MouseEvent): void {\n    if (this.isDragged && this.indexRowStartDrag >= 0) {\n      const rowIndex: number = this.getRowIndex(event.pageY);\n      const array: RowData<T>[] = this.dataBeforeDrag.data;\n      const rawData: T[] = this.rawData;\n      moveItemInArray(array, this.indexRowStartDrag, rowIndex);\n      moveItemInArray(rawData, this.indexRowStartDrag, rowIndex);\n      this.drop.emit({ value: array[rowIndex].data as T, order: rowIndex });\n      this.rawData = rawData;\n      this.data = new MatTableDataSource(array);\n      event.stopPropagation();\n    }\n  }\n\n  tableKeydown(event: KeyboardEvent): void {\n    if (!this.isCellSelection) {\n      let currentIndex: number = this.data.data.findIndex((row: RowData<T>) => row.data === this.selectedObject);\n      let newSelection: number = -10;\n      if (event.key === 'ArrowDown') {\n        this.scrollCount++;\n        this.data.data.forEach((row: RowData<T>, index: number) => {\n          if (newSelection === -10 && index > currentIndex && row.rowType === RowType.ROW) {\n            newSelection = index;\n          }\n        });\n      }\n      if (event.key === 'ArrowUp') {\n        this.scrollCount--;\n        currentIndex = this.data.data.length - currentIndex - 1;\n        this.data.data.reverse().forEach((row: RowData<T>, index: number) => {\n          if (newSelection === -10 && index > currentIndex && row.rowType === RowType.ROW) {\n            newSelection = index;\n          }\n        });\n        this.data.data.reverse();\n        if (newSelection !== -10) {\n          newSelection = this.data.data.length - newSelection - 1;\n        }\n      }\n      if (newSelection !== -10) {\n        this.selectRow(this.data.data[newSelection], true);\n      }\n      if (Math.abs(this.scrollCount) >= 2) {\n        this.scrollCount = 0;\n      } else {\n        event.preventDefault();\n      }\n    }\n  }\n\n  /**\n   * Emite el evento cuando se da click al boton AddRow\n   */\n  onAddRow(): void {\n    this.addRow.emit();\n  }\n\n  onBookClicked(selectedObject: T): void {\n    this.bookClicked.emit(selectedObject);\n  }\n\n  getHeaderSubtitle(): string[] {\n    const x: string[] = this.columnConfig.map((column: ColumnConfig, index: number) => {\n      if (column.visible && column.subtitle !== undefined) {\n        return 'subtitle' + index;\n      } else {\n        return null;\n      }\n    }).filter((data: string) => data != null);\n    return x;\n  }\n\n  getColumnsWithTitle(): string[] {\n    return this.columnConfig.filter((column: ColumnConfig) =>\n      column.visible && column.title !== undefined\n    ).map((col: ColumnConfig) => col.name);\n  }\n\n  dragger(event: MouseEvent): boolean {\n    if (this.isDragged && this.indexRowStartDrag >= 0) {\n      const rowIndex: number = this.getRowIndex(event.pageY);\n      if (rowIndex !== this.lastIndexRowDrag) {\n        this.lastIndexRowDrag = rowIndex;\n        // This can have a memory problem with big data\n        const array: RowData<T>[] = [...this.dataBeforeDrag.data];\n        moveItemInArray(array, this.indexRowStartDrag, rowIndex);\n        this.data = new MatTableDataSource(array);\n      }\n      event.preventDefault();\n      return true;\n    }\n  }\n\n  startDrag(event: MouseEvent): void {\n    this.indexRowStartDrag = this.getRowIndex(event.pageY);\n    this.lastIndexRowDrag = this.indexRowStartDrag;\n    this.dataBeforeDrag = this.data;\n  }\n\n  private getRowIndex(pageY: number): number {\n    let offsetTop: number = 0;\n    let container: HTMLElement = this.containerTable.nativeElement;\n    while ((container !== null) && (offsetTop === 0)) {\n      offsetTop = container.offsetTop;\n      container = container.parentElement;\n    }\n    let rowIndex: number = -1;\n    const rows: HTMLCollection = this.matTableElement.nativeElement.children[1].children;\n    for (let i: number = 0; i < rows.length; i++) {\n      const row: HTMLElement = (rows[i] as HTMLElement);\n      if (pageY - offsetTop > row.offsetTop - this.containerTable.nativeElement.scrollTop) {\n        rowIndex = i;\n      }\n    }\n    if (rowIndex < 0) { rowIndex = 0; }\n    return rowIndex;\n  }\n\n  get columnType(): typeof ColumnType {\n    return ColumnType;\n  }\n\n}\n","import { Component, OnInit, Input } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\nimport * as moment_ from 'moment';\nconst moment: typeof moment_ = moment_;\n\nimport { MatDatepickerInputEvent, MatDatepicker } from '@angular/material';\nimport { filter, tap } from 'rxjs/operators';\n\n\nexport enum TypeCalendarEnum {\n  NORMAL = 'norma',\n  MONTH_YEAR = 'mounth-year'\n}\n\n\n@Component({\n  selector: 'hel-date-helisa',\n  templateUrl: './date-helisa.component.html',\n  styleUrls: ['./date-helisa.component.css'],\n})\nexport class DateHelisaComponent implements OnInit {\n\n\n  @Input() floatLabel: 'never' | 'always' | 'auto' = 'never';\n  @Input() dateFormControl: FormControl = new FormControl('');\n  private date: Date = new Date();\n\n  /**\n   * Formato de fecha.\n   * Los formatos validos son aquellos que maneja la libreria momentjs\n   * https://momentjs.com/docs/#/parsing/string-format/\n   */\n  @Input() dateFormat: string = 'DD/MM/YYYY';\n  @Input() errorMessage: string = 'La fecha no concuerda con el formato ';\n  @Input() placeholder: string = this.dateFormat;\n\n  /**\n   * Si este valor es diferente a TypeCalendarEnum.NORMAL no\n   * serÃ¡ tomado en cuenta\n   */\n  @Input() typeCalendar: TypeCalendarEnum = TypeCalendarEnum.NORMAL;\n\n\n  dateToVisualize: FormControl;\n\n  /**\n   * Para evitar nuevos eventos miestras se realiza el parseo\n   */\n  private isFromInputEvent: boolean = false;\n\n  /**\n   * Verificar si el formato es valido\n   */\n  invalidFormat: boolean = false;\n\n  constructor() { }\n\n  ngOnInit(): void {\n    this.dateToVisualize = new FormControl('', this.dateFormControl.validator);\n    this.formHandler();\n\n    if (this.typeCalendar === TypeCalendarEnum.MONTH_YEAR) {\n      this.dateFormat = 'MM/YYYY';\n      this.placeholder = this.dateFormat;\n    }\n\n    /**\n     * establecer valor por defecto de la fecha\n     */\n    const incommingDate: string = moment(this.dateFormControl.value, this.dateFormat).format(this.dateFormat);\n    if (this.dateFormControl.value !== '' && incommingDate !== 'Invalid date') {\n      this.dateToVisualize.setValue(incommingDate);\n    }\n\n  }\n\n  get typeCalendarEnum(): typeof TypeCalendarEnum {\n    return TypeCalendarEnum;\n  }\n\n  /**\n   * Determina como se debe inicializar la visualizacion del calendar\n   */\n  getStartView(): string {\n    // multi-year\n    if (this.typeCalendar === this.typeCalendarEnum.MONTH_YEAR) {\n      return 'multi-year';\n    } else {\n      return 'month';\n    }\n  }\n\n  private formHandler(): void {\n    this.dateToVisualize.valueChanges\n      .pipe(\n        tap((date: string) => {\n          if (date.length > this.dateFormat.length) {\n            this.invalidFormat = true;\n          } else {\n            this.invalidFormat = false;\n          }\n        }),\n        filter((date: string) => date.length === this.dateFormat.length)\n      )\n      .subscribe((date: string) => {\n        this.invalidFormat = false;\n        const isValid: boolean = moment(date, this.dateFormat, true).isValid();\n        const result: string = moment(date, this.dateFormat).format('YYYY-MM-DD');\n\n        if (!!result && (result === 'Invalid date' || !isValid)) {\n          this.invalidFormat = true;\n          return;\n        }\n\n        if (!!result) {\n          if (!this.isFromInputEvent) {\n            this.isFromInputEvent = true;\n            const subString: string[] = result.split('-');\n\n            const year: number = parseFloat(subString[0]);\n            const month: number = parseFloat(subString[1]);\n            const day: number = parseFloat(subString[2]);\n\n            this.date.setFullYear(year);\n            this.date.setDate(day);\n            this.date.setMonth(month - 1); // -1 por que los meses se toman como los indices en un array\n\n            /** cuando es de tipo MOUNTH_YEAR retorna el ultimo dia del mes seleccionado */\n            if (this.typeCalendar === TypeCalendarEnum.MONTH_YEAR) {\n              this.date = moment(this.date).endOf('month').toDate();\n            }\n\n            this.dateToVisualize.setValue(moment(this.date, 'YYYY-MM-DD').format(this.dateFormat));\n            this.dateFormControl.setValue(this.date);\n\n            this.isFromInputEvent = false;\n          } else {\n            setTimeout(() => {\n              this.isFromInputEvent = false;\n            }, 1500);\n          }\n\n        }\n      });\n\n\n    this.dateFormControl.valueChanges\n      .subscribe((date: string) => {\n        const incommingDate: string = moment(date, this.dateFormat).format(this.dateFormat);\n        if (this.dateFormControl.value !== '' && incommingDate !== 'Invalid date') {\n          this.dateToVisualize.setValue(incommingDate);\n        }\n      });\n  }\n\n\n  /**\n   * Evento que se dispara luego seleccionar un mes\n   */\n  monthSelectedHandler(chosenMonthDate: moment_.Moment, datepicker: MatDatepicker<moment_.Moment>): void {\n\n    if (this.typeCalendar === TypeCalendarEnum.MONTH_YEAR) {\n      datepicker.close();\n      const date: Date = moment(chosenMonthDate).endOf('month').toDate();\n\n      this.dateToVisualize.setValue(moment(date, 'YYYY-MM-DD').format(this.dateFormat));\n      this.dateFormControl.setValue(date);\n    }\n  }\n\n  /**\n   * Evento desde el control touch del calendar\n   */\n  dateChange(type: string, event: MatDatepickerInputEvent<Date>): void {\n\n    this.dateToVisualize.setValue(moment(event.value, 'YYYY-MM-DD').format(this.dateFormat));\n    this.dateFormControl.setValue(event.value);\n  }\n\n  getErrorMessage(): string {\n    return this.errorMessage + this.dateFormat;\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Subject, BehaviorSubject, Subscriber, Observable } from 'rxjs';\nimport { Node } from './node';\n\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class TreeHelisaService {\n\n    // Observable string sources\n    private emitNodeSelected: BehaviorSubject<number | string> = new BehaviorSubject<number | string>(1);\n    // Observable string streams\n    nodeSelected: Observable<string | number> = this.emitNodeSelected.asObservable();\n\n    // Observable string sources\n    private emitDataSource: BehaviorSubject<Node> = new BehaviorSubject<Node>(undefined);\n\n    // Observable string streams\n    dataSourceObservable: Observable<Node> = this.emitDataSource.asObservable();\n\n    // Expand node observable\n    private emitExpandAllNodes: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(null);\n    nodeExpand: Observable<boolean> = this.emitExpandAllNodes.asObservable();\n\n     // Collapse node observable\n     private emitCollapseAllNodes: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(null);\n     nodeCollapse: Observable<boolean> = this.emitCollapseAllNodes.asObservable();\n\n    private emitRefreshTree: Subject<void> = new Subject<void>();\n    refreshTreeObservable: Observable<void> = this.emitRefreshTree.asObservable();\n\n    private emitRefreshTreeWithPagination: Subject<void> = new Subject<void>();\n    refreshTreeWithPaginationObservable: Observable<void> = this.emitRefreshTreeWithPagination.asObservable();\n\n    private emitExpandOneNode: Subject<Node> = new Subject<Node>();\n    expandOneNodeObservable: Observable<Node> = this.emitExpandOneNode.asObservable();\n\n    private emitCollapseOneNode: Subject<Node> = new Subject<Node>();\n    collapseOneNodeObservable: Observable<Node> = this.emitCollapseOneNode.asObservable();\n\n    // Service message commands\n    changeNodeSelected(idResidentialArea: number | string): void {\n        this.emitNodeSelected.next(idResidentialArea);\n    }\n\n    // Service message commands\n    changeDataSource(data: Node): void {\n        this.emitDataSource.next(data);\n    }\n\n    expandAllNodes(expand: boolean): void {\n        this.emitExpandAllNodes.next(expand);\n    }\n\n    collapseAllNodes(collapse: boolean): void {\n        this.emitCollapseAllNodes.next(collapse);\n    }\n\n    refreshTree(): void {\n        this.emitRefreshTree.next();\n    }\n\n\n    refreshTreeWithPagination(): void {\n        this.emitRefreshTreeWithPagination.next();\n    }\n\n\n    expandOneNode(node: Node): void {\n    this.emitExpandOneNode.next(node);\n    }\n\n\n    collapseOneNode(node: Node): void {\n        this.emitCollapseOneNode.next(node);\n    }\n\n    constructor() {\n\n    }\n\n}\n","export class TreeHelisaConnect<T> {\n    page: number;\n    isLastPage: boolean;\n    isUsed: boolean;\n\n    constructor() {\n      this.page = 0;\n      this.isLastPage = false;\n      this.isUsed = false;\n    }\n\n    nextPage(): number {\n      return this.page = this.page + 1;\n    }\n  }\n","import { Component, OnInit, Input, Output, EventEmitter, ViewChild, AfterViewInit, ElementRef, HostListener } from '@angular/core';\nimport { NestedTreeControl, TreeControl } from '@angular/cdk/tree';\nimport { MatTreeNestedDataSource, MatTree, MatOptionSelectionChange } from '@angular/material';\nimport { Node } from './node';\nimport { TreeHelisaService } from './tree-helisa.service';\nimport { Router } from '@angular/router';\nimport * as _ from 'lodash';\nimport { TreeHelisaConnect } from './tree-helisa-connect';\nimport { FormControl } from '@angular/forms';\nimport { Observable } from 'rxjs';\n\n\n\nexport interface RequestTreeHelisa {\n  page: number;\n}\n\n@Component({\n  selector: 'hel-tree',\n  templateUrl: './tree-helisa.component.html',\n  styleUrls: ['./tree-helisa.component.sass'],\n  // host: { '(document:keyup)': 'onKeyDown($event)' }\n})\nexport class TreeHelisaComponent implements OnInit, AfterViewInit {\n\n  //#endregion ====== Variables ========\n\n  constructor(private treeHelisaService: TreeHelisaService,\n              private router: Router,\n              private elementRef: ElementRef) {\n    // cargar datos pasados por el @Input\n    if (!!this.data) {\n      const data: Node = this.data;\n      this.data = null;\n      this.receivePage(data.children);\n    } else {\n      this.dataSource.data = [];\n      this.treeControl.dataNodes = [];\n    }\n\n  }\n\n  //#region  ====== Variables =============\n  private treeHelisaConnect: TreeHelisaConnect<Node>;\n  formEdit: FormControl;\n  @ViewChild('tree') tree: MatTree<{}>;\n  private selectedOptions: Map<string | number, {\n    formControl: FormControl;\n    editMode: boolean;\n  }> = new Map<string | number, {\n    formControl: FormControl;\n    editMode: boolean;\n  }>();\n  /**\n   * Datos del Arbol\n   */\n  @Input() data: Node;\n\n  /**\n   * Retorna el id del nodo removido\n   */\n  @Output() removed: EventEmitter<string | number> = new EventEmitter<number | string>();\n\n  /**\n   * Retorna un nodo editado\n   */\n  @Output() edited: EventEmitter<Node> = new EventEmitter<Node>();\n\n  /**\n   * Retorna un nodo sin id del nodo , pero si con el parent\n   * para conocer a cual fue aÃ±adido\n   */\n  @Output() added: EventEmitter<Node> = new EventEmitter<Node>();\n  @Output() collapseParent: EventEmitter<boolean> = new EventEmitter<boolean>();\n  @Output() rangeScrolled: EventEmitter<RequestTreeHelisa> = new EventEmitter<RequestTreeHelisa>();\n  @Output() nodeSelected: EventEmitter<number | string> = new EventEmitter<number | string>();\n  @Output() dobleClick: EventEmitter<number | string> = new EventEmitter<number | string>();\n  @Output() keypressDelete: EventEmitter<number | string | null> = new EventEmitter<number | string | null>();\n  @Output() keypressInsert: EventEmitter<number | string | null> = new EventEmitter<number | string | null>();\n  @Output() checkedOptionNode: EventEmitter<number | string | null> = new EventEmitter<number | string | null>();\n  @Output() uncheckedOptionNode: EventEmitter<number | string | null> = new EventEmitter<number | string | null>();\n\n  treeControl: NestedTreeControl<Node> = new NestedTreeControl<Node>((node: Node): Node[] | Observable<Node[]> => node.children);\n  dataSource: MatTreeNestedDataSource<Node> = new MatTreeNestedDataSource<Node>();\n\n\n  isSingleClick: boolean = true;\n  currentNode: Node = null;\n\n  /**\n   * Obtiene la descripcion completa del nodo\n   * @example Nodo padre,nodo hijo,nodo nieto\n   * @param node Debe tener todos los parent llenos hacia arriba\n   */\n  public static getDescription(node: Node): string {\n    let result: string[] = [node.name];\n    let concat: string = '';\n\n    if (node.parent) {\n      result.push(this.getDescription(node.parent));\n    }\n\n\n    if (result.length === 1) {\n      return node.name;\n    }\n\n    result = result.reverse();\n\n    for (let i: number = 0; i < result.length; i++) {\n      const element: string = result[i];\n      concat = concat + element + ((i === result.length - 1) ? '' : ',');\n    }\n\n    return concat;\n  }\n\n\n\n  ngOnInit(): void {\n    // si se cargan datos por medio del servicio\n    this.treeHelisaService.dataSourceObservable\n      .subscribe((res: Node) => {\n        if (!!res && !!res.children) {\n          this.receivePage(res.children);\n        } else {\n          this.dataSource.data = [];\n          this.treeControl.dataNodes = [];\n        }\n      });\n\n    // Observable, si cambia el nodo seleccionado por medio del servicio\n    this.treeHelisaService.nodeSelected\n      .subscribe((res: string | number) => {\n        if (!!this.data && !!this.data.children) {\n          this.selectNode(this.data, res);\n        }\n      });\n\n\n    this.treeHelisaService.refreshTreeObservable\n      .subscribe((res: void) => {\n        this.refreshTree();\n      });\n\n    this.treeHelisaService.refreshTreeWithPaginationObservable\n      .subscribe((res: void) => {\n        this.refreshTreeWithPagination();\n      });\n  }\n\n  ngAfterViewInit(): void {\n    this.treeHelisaService.nodeExpand.subscribe((res: boolean) => {\n      if (res != null) {\n        if (res) {\n          this.tree.treeControl.expandAll();\n        }\n      }\n    });\n\n    this.treeHelisaService.nodeCollapse.subscribe((res: boolean) => {\n      if (res !== null) {\n        if (res) {\n          this.tree.treeControl.collapseAll();\n        }\n      }\n    });\n\n\n    this.treeHelisaService.expandOneNodeObservable\n      .subscribe((res: Node) => {\n        if (res !== undefined) {\n          this.treeControl.expand(res);\n        }\n      });\n\n    this.treeHelisaService.collapseOneNodeObservable\n      .subscribe((res: Node) => {\n        if (res !== undefined) {\n          this.treeControl.collapse(res);\n        }\n      });\n  }\n\n\n  //#region  ====== Events ===========\n  onRedirect(node: Node): void {\n\n    this.isSingleClick = true;\n    setTimeout(() => {\n      if (this.isSingleClick) {\n\n        this.selectNode(this.data, node.id);\n\n        // if(!!node && !node.children){\n        if (!!node) {\n          this.nodeSelected.emit(node.id);\n          this.currentNode = node;\n        }\n      }\n    }, 350);\n  }\n\n  onScroll(event: Event): void {\n    const element: HTMLDivElement = event.target as HTMLDivElement;\n\n    if ((element.offsetHeight + element.scrollTop) >= element.scrollHeight) {\n      this.goNextPage();\n    }\n  }\n\n  onEdit(node: Node): void {\n    node.isEditable = true;\n  }\n\n  onAdd(node: Node): void {\n    // si no tiene hijos instanciar el array\n    if (!node.children) {\n      node.children = [];\n    }\n    node.children.push(\n      {\n        id: null,\n        name: '',\n        isSelected: false,\n        parent: node,\n        isEditable: true\n      }\n    );\n    this.refreshTree();\n  }\n\n  onDelete(node: Node): void {\n    // Remueve el nodo utilizando la libreria de lodash\n    _.remove(node.parent.children, node);\n\n    this.refreshTree();\n    this.removed.emit(node.id);\n  }\n\n  onEdited(node: Node, value: string): void {\n\n    node.name = value;\n\n    if (node.id == null && node.name === '') {\n      _.remove(node.parent.children, node);\n      this.refreshTree();\n    } else if (node.id && node.id != null && node.name.trim() !== '') {\n      this.edited.emit(node);\n      node.isEditable = false;\n    } else if (node.id == null && node.name.trim() !== '') {\n      this.added.emit(node);\n      node.isEditable = false;\n    }\n  }\n\n  onCancel(node: Node, value: string): void {\n    // Si no tiene id por ser un nuevo item, lo elimina\n    if (node.id == null) {\n      _.remove(node.parent.children, node);\n      this.refreshTree();\n    }\n\n    node.isEditable = false;\n  }\n\n  onDblClick(node: Node): void {\n    this.isSingleClick = false;\n    this.dobleClick.emit(node.id);\n  }\n\n  @HostListener('document:keyup', ['$event'])\n  onKeyDown(event: KeyboardEvent): void {\n    switch (event.key) {\n      case 'Delete':\n        this.keypressDelete.emit((!!this.currentNode && this.currentNode.id) ? this.currentNode.id : null);\n        break;\n      case 'Insert':\n        this.keypressInsert.emit((!!this.currentNode && this.currentNode.id) ? this.currentNode.id : null);\n        break;\n      case 'ArrowDown':\n        this.moveDownIntoTree();\n        break;\n      case 'ArrowUp':\n        this.moveUpIntoTree();\n        break;\n    }\n\n  }\n\n  //#endregion ======= Events ========\n\n\n\n  //#region  ======== Metodos =============\n\n  private moveUpIntoTree(): number {\n    if (!!this.data) {\n      // si aun no hay ningun node seleccionado selecciona el primero\n      if (this.currentNode == null) {\n        this.selectNode(this.data, this.data.children[0].id);\n        this.currentNode = this.data.children[0];\n        if (!!this.currentNode.children && this.currentNode.children.length > 0) {\n          this.treeHelisaService.expandOneNode(this.currentNode);\n        }\n      } else {\n        if (!!this.currentNode.parent && this.currentNode.id != null) {\n          // obtiene el indice del nodo seleccionado actualmente\n          const index: number = this.currentNode.parent.children.indexOf(this.currentNode);\n\n          if (this.currentNode.parent.id == null && index === 0) {\n            return 0;\n          } else {// si tiene nodos al mismo nivel salta al nodo anterior\n            if (index !== undefined && index === 0) {\n              this.currentNode = this.currentNode.parent;\n              this.selectNode(this.data, this.currentNode.id);\n              if (!!this.currentNode.children && this.currentNode.children.length > 0) {\n                this.treeHelisaService.expandOneNode(this.currentNode);\n              }\n            } else { // si no tiene nodos al mismo nivel salta al nodo padre\n              this.currentNode = this.currentNode.parent.children[index - 1];\n              this.selectNode(this.data, this.currentNode.id);\n              if (!!this.currentNode.children && this.currentNode.children.length > 0) {\n                this.treeHelisaService.expandOneNode(this.currentNode);\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n\n  private moveDownIntoTree(): void {\n    if (!!this.data) {\n      if (this.currentNode == null) {\n        this.selectNode(this.data, this.data.children[0].id);\n        this.currentNode = this.data.children[0];\n        if (!!this.currentNode.children && this.currentNode.children.length > 0) {\n          this.treeHelisaService.expandOneNode(this.currentNode);\n        }\n      } else {\n        if (!!this.currentNode) {\n          // obtiene el indice del nodo seleccionado actualmente\n          const index: number = (!!this.currentNode && !!this.currentNode.parent) ?\n          this.currentNode.parent.children.indexOf(this.currentNode) :\n          null;\n\n          // si tiene childrens pasa al primer children\n          if (!!this.currentNode.children &&\n            this.currentNode.children.length > 0) {\n\n            this.currentNode = this.currentNode.children[0];\n            this.selectNode(this.data, this.currentNode.id);\n            if (!!this.currentNode.children && this.currentNode.children.length > 0) {\n              this.treeHelisaService.expandOneNode(this.currentNode);\n            }\n          } else if (index !== undefined &&\n            index === this.currentNode.parent.children.length - 1 &&\n            this.currentNode.parent.parent != null &&\n            this.currentNode.parent.parent.children != null &&\n            this.currentNode.parent.parent.children.length > 0) {\n\n            const indexOfParent: number = this.currentNode.parent.parent.children.indexOf(this.currentNode.parent);\n            this.currentNode = (this.currentNode.parent.parent.children[indexOfParent + 1] === undefined) ?\n            this.currentNode : this.currentNode.parent.parent.children[indexOfParent + 1];\n\n            this.selectNode(this.data, this.currentNode.id);\n            if (!!this.currentNode.children && this.currentNode.children.length > 0) {\n              this.treeHelisaService.expandOneNode(this.currentNode);\n            }\n          } else { // si no tiene nodos al mismo nivel salta al siguiente hacia abajo\n            this.currentNode = this.currentNode.parent.children[index + 1];\n            this.selectNode(this.data, this.currentNode.id);\n            if (!!this.currentNode.children && this.currentNode.children.length > 0) {\n              this.treeHelisaService.expandOneNode(this.currentNode);\n            }\n          }\n\n        }\n      }\n    }\n  }\n\n  /**\n   * Verifica si el nodo tiene hijos\n   */\n  hasChild = (t: number, node: Node): boolean => {\n    return !!node.children && node.children.length > 0;\n  }\n\n\n  /**\n   * Actualiza el arbol borrando toda la data , solo cuando no se utiliza paginacion\n   */\n  private refreshTree(): void {\n    this.data = null;\n    const datasourceData: Node[] = this.dataSource.data;\n    this.dataSource.data = null;\n    this.dataSource.data = datasourceData;\n    this.treeControl.dataNodes = datasourceData;\n  }\n\n  /**\n   * Actualiza el arbol cuando se utiliza la paginacion (Cuando no , utilice el metodo refreshTree())\n   */\n  private refreshTreeWithPagination(): void {\n    const datasourceData: Node[] = this.dataSource.data;\n    this.dataSource.data = null;\n    this.dataSource.data = datasourceData;\n    this.treeControl.dataNodes = datasourceData;\n  }\n\n\n\n\n  private goNextPage(): void {\n    if (!this.treeHelisaConnect.isLastPage && !this.treeHelisaConnect.isUsed) {\n      this.treeHelisaConnect.isUsed = true;\n      this.rangeScrolled.emit({\n        page: this.treeHelisaConnect.nextPage()\n      });\n    }\n  }\n\n  private receivePage(data: Node[]): void {\n    if (!this.data) { this.data = { id: null, name: 'root', isSelected: false }; }\n    if (!this.data.children) { this.data.children = new Array<Node>(); this.treeHelisaConnect = new TreeHelisaConnect<Node>(); }\n    this.data.children = this.data.children.concat(data);\n    this.data.children.forEach((node: Node) => {\n      this.fillParent(node, this.data);\n    });\n\n\n    this.data.children = this.reorderByOrderIndex(this.data.children);\n\n    this.dataSource.data = this.data.children;\n    this.treeControl.dataNodes = this.data.children;\n    this.treeHelisaConnect.isLastPage = data.length === 0;\n    this.treeHelisaConnect.isUsed = false;\n  }\n\n  /**\n   * Llenan el campo parent de todos los nodos hijos\n   */\n  private fillParent(node: Node, parent: Node): void {\n\n    node.parent = parent;\n    if (node.children && node.children.length > 0) {\n      node.children.forEach((item: Node) => {\n        this.fillParent(item, node);\n      });\n    }\n  }\n\n\n  /**\n   * coloca como true del isSelected del nodo que concuerde con el id\n   */\n  private selectNode(node: Node, id: number | string): Node {\n\n    this.upSelectNode(node);\n    if (!!!node) {\n      return null;\n    }\n    if (node.id !== undefined && node.id === id) {\n      node.isSelected = true;\n      this.expandAllParents(node);\n      return node;\n    } else if (node.children != null) {\n      let i: number;\n      let result: Node = null;\n      for (i = 0; result == null && i < node.children.length; i++) {\n        result = this.selectNode(node.children[i], id);\n      }\n      return result;\n    }\n    return null;\n  }\n\n  private expandAllParents(node: Node): void {\n    if (!!node && !!node.parent) {\n      this.treeHelisaService.expandOneNode(node.parent);\n      this.expandAllParents(node.parent);\n    }\n  }\n\n  /**\n   * Elimina el isSelected de todos los nodos\n   */\n  private upSelectNode(node: Node): void {\n    if (!!node && node.isSelected !== undefined) {\n      node.isSelected = false;\n      if (!!node.children) {\n        for (const childrenNode of node.children) {\n          this.upSelectNode(childrenNode);\n        }\n      }\n    }\n  }\n\n  getClassNode(node: Node): string[] {\n    const classNode: string[] = [];\n    if (node.isSelected) {\n      classNode.push('isSelected');\n    }\n    if (node.classNode) {\n      classNode.push(node.classNode);\n    }\n    return classNode;\n  }\n\n  onEditMode(node: Node, editMode: boolean): void {\n    this.getSelectedOptions(node).editMode = editMode;\n  }\n\n  onSelectOption(event: MatOptionSelectionChange, node: Node): void {\n    node.isCheckedOption = event.source.selected;\n    if (node.isCheckedOption) {\n      this.checkedOptionNode.emit(node.id);\n    } else {\n      this.uncheckedOptionNode.emit(node.id);\n    }\n  }\n\n  getSelectedOptions(node: Node): {\n    formControl: FormControl;\n    editMode: boolean;\n} {\n    if (this.selectedOptions.has(node.id)) {\n      this.reloadSelectedOptions(node, this.selectedOptions.get(node.id).editMode);\n    } else {\n      this.reloadSelectedOptions(node, false);\n    }\n    return this.selectedOptions.get(node.id);\n  }\n\n  private reloadSelectedOptions(node: Node, editMode: boolean): void {\n    const array: Array<string | number | null> = new Array<string | number | null>();\n    node.options.forEach((option: Node) => {\n      if (option.isCheckedOption) {\n        array.push(option.id);\n      }\n    });\n    const obj: {\n      formControl: FormControl;\n      editMode: boolean;\n    } = { formControl: new FormControl(array), editMode };\n    this.selectedOptions.set(node.id, obj);\n  }\n\n  /**\n   * Retorna el primer Node que encuentre segun el id enviado o null si no hay ninguno\n   * @param id  number | string\n   * @returns Node o null si no hay un nodo con ese id\n   */\n  getNodeById(id: number | string): Node {\n    const queue: Node[] = [...this.dataSource.data];\n    while (queue.length > 0) {\n      const curr: Node = queue.shift();\n      if (curr.id === id) {\n        return curr;\n      } else {\n        if (!!curr.children) {\n          queue.push(...curr.children);\n        }\n      }\n    }\n    return null;\n  }\n\n  reorderByOrderIndex(node: Node[]): Node[] {\n    if (!!node && node.length > 0) {\n\n      try {\n        node = _.orderBy(node, (x: Node) => x.orderIndex, ['asc']);\n        node.forEach((element: Node) => {\n          if (!!element.children && element != null) {\n            element.children = this.reorderByOrderIndex(element.children);\n          }\n        });\n        return node;\n      } catch (error) {\n        console.log(error);\n      }\n    }\n\n\n  }\n\n  //#endregion ====== Metodos ============\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { OptionAutocompleteHelisa } from './autocomplete-helisa.component';\n\n@Injectable()\nexport class AutocompleteHelisaService<T> {\n\n  private emitChangeSource: BehaviorSubject<Array<OptionAutocompleteHelisa<T>>> =\n  new BehaviorSubject<Array<OptionAutocompleteHelisa<T>>>([]);\n\n  public dataSource$: Observable<Array<OptionAutocompleteHelisa<T>>> = this.emitChangeSource.asObservable();\n\n  constructor() { }\n\n  setDataSource(options: Array<OptionAutocompleteHelisa<T>>): void {\n    this.emitChangeSource.next(options);\n  }\n\n}\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { Observable, of, Subject } from 'rxjs';\nimport { map, startWith, throttleTime, debounceTime } from 'rxjs/operators';\nimport { AutocompleteHelisaService } from './autocomplete-helisa.component.service';\n\nexport interface OptionAutocompleteHelisa<T> {\n  value: T;\n  displayText: string;\n}\n\n@Component({\n  selector: 'hel-autocomplete',\n  templateUrl: './autocomplete-helisa.component.html',\n  styleUrls: ['./autocomplete-helisa.component.css'],\n  providers: [AutocompleteHelisaService]\n})\nexport class AutocompleteHelisaComponent<T> implements OnInit {\n\n  @Input() myControl: FormControl = new FormControl();\n  @Input() options: Array<OptionAutocompleteHelisa<T>> = new Array<OptionAutocompleteHelisa<T>>();\n  filteredOptions: Observable<OptionAutocompleteHelisa<T>[]>;\n  selectedValue: OptionAutocompleteHelisa<T>;\n  @Output() selectedValueEmmiter: EventEmitter<T> = new EventEmitter<T>();\n  @Output() nextPage: EventEmitter<void> = new EventEmitter<void>();\n  @Input() isRemote: boolean = false;\n  isLoading: boolean = false;\n\n\n  onScrollObservable: Subject<void> = new Subject<void>();\n\n  constructor(private autocompleteHelisaService: AutocompleteHelisaService<T>) {\n  }\n\n  ngOnInit(): void {\n\n    this.onScrollObservable.asObservable()\n    .pipe(\n      debounceTime(500),\n      throttleTime(500)\n    )\n    .subscribe(() => {\n      this.nextPage.emit();\n    });\n\n    if (this.isRemote) {\n      this.autocompleteHelisaService.dataSource$.subscribe((data: OptionAutocompleteHelisa<T>[]) => {\n        setTimeout(() => {\n          this.options = data;\n          this.filteredOptions = of<OptionAutocompleteHelisa<T>[]>(this.options);\n        });\n      });\n    }\n\n    this.filteredOptions = this.myControl.valueChanges.pipe(\n      startWith(''),\n      map((x: string) => this._checkRegex(x)),\n      map((value: string) => this._filter(value))\n    );\n\n  }\n\n  displayFn(option?: OptionAutocompleteHelisa<T>): string | undefined {\n    return option ? option.displayText : undefined;\n  }\n\n  getService(): AutocompleteHelisaService<T> {\n    return this.autocompleteHelisaService;\n  }\n\n\n  /** Elimina caracteres extraÃ±os */\n  private _checkRegex(value: string): string {\n    value = value.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '');\n    return value;\n  }\n\n  private _filter(value: string): OptionAutocompleteHelisa<T>[] {\n    if (!(value)) {\n      if (!this.isRemote) {\n        const filterValue: string[] = value.toLowerCase().split(' ');\n        return this.options.filter((option: OptionAutocompleteHelisa<T>) => {\n          let ws: boolean = true;\n          filterValue.forEach((text: string) => ws = ws && option.displayText.toLowerCase().indexOf(text) >= 0);\n          return ws;\n        }).splice(0, 5);\n      } else {\n        return this.options;\n      }\n    }\n  }\n\n  public onSelected(event: {option: {value: OptionAutocompleteHelisa<T>}}): void {\n    this.selectedValue = event.option.value;\n    this.selectedValueEmmiter.emit(this.selectedValue.value);\n  }\n\n  getNextPage(): void {\n    this.onScrollObservable.next();\n  }\n}\n","import { Directive, EventEmitter, Input, Output, OnDestroy} from '@angular/core';\nimport { MatAutocomplete} from '@angular/material';\nimport { takeUntil, tap} from 'rxjs/operators';\nimport { Subject } from 'rxjs';\n\n\nexport interface IAutoCompleteScrollEvent {\n  autoComplete: MatAutocomplete;\n  scrollEvent: Event;\n}\n\n\n@Directive({\n  selector: 'mat-autocomplete[optionsScroll]'\n})\nexport class OptionsScrollDirective implements OnDestroy  {\n\n  /**\n   * This value would different depends of styles\n   */\n  @Input() thresholdPercent: number = .9;\n  @Output() optionsScroll: EventEmitter<IAutoCompleteScrollEvent> = new EventEmitter<IAutoCompleteScrollEvent>();\n  destroy: Subject<void> = new Subject<void>();\n  lastScrollTop: number  = 0;\n\n  constructor(public autoComplete: MatAutocomplete) {\n    this.autoComplete.opened.pipe(\n      tap(() => {\n        // Note: When autocomplete raises opened, panel is not yet created (by Overlay)\n        // Note: The panel will be available on next tick\n        // Note: The panel wil NOT open if there are no options to display\n        setTimeout(() => {\n          // Note: remove listner just for safety, in case the close event is skipped.\n          this.removeScrollEventListener();\n          if (!!this.autoComplete &&\n            !!this.autoComplete.panel &&\n            !!this.autoComplete.panel.nativeElement) {\n              this.autoComplete.panel.nativeElement\n                .addEventListener('scroll', this.onScroll.bind(this), false);\n            }\n        });\n      }),\n      takeUntil(this.destroy)).subscribe();\n\n    this.autoComplete.closed.pipe(\n      tap(() => this.removeScrollEventListener()),\n      takeUntil(this.destroy)).subscribe();\n  }\n\n  private removeScrollEventListener(): void {\n    if (!!this.autoComplete &&\n      !!this.autoComplete.panel &&\n      !!this.autoComplete.panel.nativeElement) {\n    this.autoComplete.panel.nativeElement\n      .removeEventListener('scroll', this.onScroll);\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.destroy.next();\n    this.destroy.complete();\n\n    this.removeScrollEventListener();\n  }\n\n\n  onScroll(event: Event): void {\n    // Credits: how to know if it's down or up scroll \"https://github.com/qeremy/so/blob/master/so.dom.js#L426\"\n    const st: number = (event.target as Window).pageYOffset || (event.target as Element).scrollTop;\n    if (st > this.lastScrollTop) {\n       // downscroll code\n       if (this.thresholdPercent === undefined) {\n        this.optionsScroll.next({ autoComplete: this.autoComplete, scrollEvent: event });\n      } else {\n        const threshold: number = this.thresholdPercent * 100 * (event.target as Element).scrollHeight / 100;\n        const current: number = (event.target as Element).scrollTop + (event.target as Element).clientHeight;\n        // console.log(`scroll ${current}, threshold: ${threshold}`)\n        if (current > threshold) {\n          // console.log('load next page');\n          this.optionsScroll.next({ autoComplete: this.autoComplete, scrollEvent: event });\n        }\n      }\n    } else {\n       // upscroll code\n    }\n    this.lastScrollTop = st <= 0 ? 0 : st;\n  }\n\n}\n","import { Directive, Input, HostListener, ElementRef } from '@angular/core';\nimport { MatTooltip } from '@angular/material';\n\n@Directive({\n    selector: '[helTooltip]',\n    providers: [MatTooltip]\n})\nexport class HelTooltipDirective {\n\n    tooltip: MatTooltip;\n\n    /**\n     * Mensaje a mostrar\n     */\n    @Input('helTooltip') message: string;\n\n    /**\n     * Tiempo antes de ocultarla el mensaje\n     */\n    @Input() hideDelay: number = 600;\n\n    /**\n     * Tiempo antes de mostra el mensaje\n     */\n    @Input() showDelay: number = 500;\n\n\n    constructor(tooltip: MatTooltip, private elemRef: ElementRef) {\n      this.tooltip = tooltip;\n    }\n\n    @HostListener('mouseover') mouseover(): void {\n      const currentContent: string = this.elemRef.nativeElement.innerText;\n\n      if (!!currentContent && !!this.message) {\n        if ((currentContent.toUpperCase() !== this.message.toString().toUpperCase()) || this.isEllipsisActive(this.elemRef.nativeElement)) {\n          this.tooltip.message = this.message;\n        }\n      }\n\n      this.tooltip.showDelay =  this.showDelay;\n      this.tooltip.hideDelay = this.hideDelay;\n    }\n\n\n    private isEllipsisActive(e: {offsetWidth: number , scrollWidth: number}): boolean {\n      return (e.offsetWidth < e.scrollWidth);\n    }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n    name: 'externalLink'\n})\nexport class ExternalLinkPipe implements PipeTransform {\n    transform(value: string, ...args: string[]): string {\n        return '//' + value;\n    }\n}\n","import { Directive, HostBinding, PLATFORM_ID, Inject, Input, OnChanges } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\n\n@Directive({\n  selector: 'a[href]',\n})\nexport class ExternalLinkDirective implements OnChanges {\n  @HostBinding('attr.rel') relAttr: string = '';\n  @HostBinding('attr.target') targetAttr: string = '';\n  @HostBinding('attr.href') hrefAttr: string = '';\n  @Input() href: string;\n\n  constructor(@Inject(PLATFORM_ID) private platformId: string) {}\n\n  ngOnChanges(): void {\n\n    this.hrefAttr = this.href;\n\n    if (this.isLinkExternal()) {\n      this.relAttr = 'noopener';\n      this.targetAttr = '_blank';\n    }\n  }\n\n  private isLinkExternal(): boolean {\n    return isPlatformBrowser(this.platformId) && !this.href.includes(location.hostname);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { InputWithButtonComponent } from './components/input-with-button/input-with-button.component';\nimport { ToastHelisaComponent } from './components/toast-helisa/toast-helisa.component';\n\n\nimport {MatAutocompleteModule} from '@angular/material';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatListModule} from '@angular/material/list';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatCardModule} from '@angular/material/card';\nimport { LayoutModule } from '@angular/cdk/layout';\nimport { MatSidenavModule,\n  MatGridListModule,\n  MatMenuModule,\n  MatRadioModule,\n  MatButtonModule,\n  MatCheckboxModule,\n  MatInputModule,\n  MatOptionModule,\n  MatSnackBarModule, MatTableModule, MatPaginatorModule, MatSortModule } from '@angular/material';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatNativeDateModule } from '@angular/material';\nimport {MatStepperModule} from '@angular/material/stepper';\nimport {MatChipsModule} from '@angular/material/chips';\nimport {DragDropModule} from '@angular/cdk/drag-drop';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { AlertHelisaComponent } from './components/alert-helisa/alert-helisa.component';\nimport { DependencyTableHelisaComponent } from './components/dependency-table-helisa/dependency-table-helisa.component';\nimport { InputHelisaComponent } from './components/input-helisa/input-helisa.component';\nimport { TableHelisaComponent } from './components/table-helisa/table-helisa.component';\nimport {TableHelisaService} from './components/table-helisa/table-helisa.service';\nimport {\n  ChangeColumnConfigurationType,\n  ColumnConfig,\n  EventColumn, TotalType\n} from './components/table-helisa/table-helisa.interface';\nimport { TreeHelisaComponent } from './components/tree-helisa/tree-helisa.component';\nimport {MatTreeModule} from '@angular/material/tree';\nimport { DateHelisaComponent } from './components/date-helisa/date-helisa.component';\nimport {TreeHelisaService} from './components/tree-helisa/tree-helisa.service';\nimport { AutocompleteHelisaComponent } from './components/autocomplete-helisa/autocomplete-helisa.component';\nimport { OptionsScrollDirective } from './directives/options-scroll.directive';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport { HelTooltipDirective } from './directives/tooltip.directive';\nimport { ExternalLinkPipe } from './pipes/external-link.pipe';\nimport { ExternalLinkDirective } from './directives/external-link.directive';\n\n\n@NgModule({\n  declarations: [\n    InputWithButtonComponent,\n    ToastHelisaComponent,\n    AlertHelisaComponent,\n    DependencyTableHelisaComponent,\n    InputHelisaComponent,\n    TableHelisaComponent,\n    TreeHelisaComponent,\n    DateHelisaComponent,\n    AutocompleteHelisaComponent,\n    OptionsScrollDirective,\n    HelTooltipDirective,\n    ExternalLinkDirective,\n    ExternalLinkPipe\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n\n    MatAutocompleteModule,\n    MatButtonModule,\n    MatCheckboxModule,\n    MatToolbarModule,\n    MatExpansionModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatSelectModule,\n    MatOptionModule,\n    MatListModule,\n    MatIconModule,\n    MatSnackBarModule,\n    MatCardModule,\n    LayoutModule,\n    MatTooltipModule,\n    MatButtonModule,\n    MatSidenavModule,\n    MatIconModule,\n    MatListModule,\n    MatGridListModule,\n    MatCardModule,\n    MatMenuModule,\n    MatInputModule,\n    MatSelectModule,\n    MatRadioModule,\n    MatProgressSpinnerModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatSortModule,\n    MatDialogModule,\n    MatTabsModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatStepperModule,\n    MatChipsModule,\n    DragDropModule,\n    MatTreeModule\n  ],\n  exports: [\n    InputWithButtonComponent,\n    ToastHelisaComponent,\n    AlertHelisaComponent,\n    DependencyTableHelisaComponent,\n    InputHelisaComponent,\n    TableHelisaComponent,\n    TreeHelisaComponent,\n    DateHelisaComponent,\n    AutocompleteHelisaComponent,\n    OptionsScrollDirective,\n    HelTooltipDirective,\n    ExternalLinkDirective,\n    ExternalLinkPipe,\n    MatButtonModule,\n    MatCheckboxModule,\n    MatToolbarModule,\n    MatExpansionModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatSelectModule,\n    MatOptionModule,\n    MatListModule,\n    MatIconModule,\n    MatSnackBarModule,\n    MatCardModule,\n    LayoutModule,\n    MatTooltipModule,\n    MatButtonModule,\n    MatSidenavModule,\n    MatIconModule,\n    MatListModule,\n    MatGridListModule,\n    MatCardModule,\n    MatMenuModule,\n    MatInputModule,\n    MatSelectModule,\n    MatRadioModule,\n    MatProgressSpinnerModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatSortModule,\n    MatDialogModule,\n    MatTabsModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatStepperModule,\n    MatChipsModule,\n    DragDropModule,\n    MatTreeModule\n  ],\n  providers: [\n    TableHelisaService,\n    TreeHelisaService\n  ]\n})\nexport class HelisaLibModule { }\n"],"names":["tslib_1.__values","_.remove","_.orderBy"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;IAmBE;QATS,gBAAW,GAAW,EAAE,CAAC;QACzB,qBAAgB,GAAgB,IAAI,WAAW,CAAC,EAAE,EAAE,UAAU,CAAC,QAAQ,CAAC,CAAC;QACzE,oBAAe,GAAW,uBAAuB,CAAC;QAClD,UAAK,GAAW,EAAE,CAAC;QAElB,SAAI,GAAyB,IAAI,YAAY,EAAU,CAAC;QACxD,WAAM,GAAuB,IAAI,YAAY,EAAQ,CAAC;KAG/C;;;;IAEjB,2CAAQ;;;IAAR;QACE,IAAI,IAAI,CAAC,KAAK,KAAK,EAAE,EAAE;YACrB,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SAC5C;KACF;;;;IAGD,yCAAM;;;IAAN;QACE,IAAI,IAAI,CAAC,gBAAgB,CAAC,KAAK,EAAE;YAC/B,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;SAC7C;KACF;;;;IAED,2CAAQ;;;IAAR;QACE,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;KACpB;;gBAjCF,SAAS,SAAC;oBACT,QAAQ,EAAE,uBAAuB;oBACjC,+YAAiD;;iBAElD;;;;;8BAGE,KAAK;mCACL,KAAK;kCACL,KAAK;wBACL,KAAK;uBAEL,MAAM;yBACN,MAAM;;IAsBT,+BAAC;CAnCD;;;;;;ACHA;AAKA;IAOE,8BAA+C,IAAgE;QAAhE,SAAI,GAAJ,IAAI,CAA4D;KAAK;;;;IAEpH,uCAAQ;;;IAAR,eAAmB;;gBATpB,SAAS,SAAC;oBACT,QAAQ,EAAE,WAAW;oBACrB,oTAA4C;;iBAE7C;;;;gDAGc,MAAM,SAAC,kBAAkB;;IAIxC,2BAAC;CAXD;;;;;;ACLA;IAYE,4BAAoB,QAAqB;QAArB,aAAQ,GAAR,QAAQ,CAAa;QAFzC,sBAAiB,GAAW,CAAC,CAAC;KAEgB;;;;;;;IAE9C,sCAAS;;;;;;IAAT,UAAU,IAAe,EAAE,OAAe,EAAE,WAAsB;QAChE,WAAW,GAAG,WAAW,GAAG,WAAW,GAAG,EAAE,CAAC;QAC7C,IAAI,CAAC,QAAQ,CAAC,iBAAiB,CAAC,oBAAoB,EAAE;YACpD,IAAI,EAAE,EAAC,OAAO,SAAA,EAAE,IAAI,MAAA,EAAE,WAAW,aAAA,EAAC;YAClC,QAAQ,EAAE,IAAI,CAAC,iBAAiB,GAAG,IAAI;SACxC,CAAC,CAAC;KACJ;;gBAfF,UAAU,SAAC;oBACV,UAAU,EAAE,MAAM;iBACnB;;;;gBANQ,WAAW;;;6BADpB;CAKA;;;;;;;;ICJI,MAAO,MAAM;IACb,OAAQ,OAAO;IACf,MAAO,MAAM;;;;;;;;;ICFb,OAAQ,OAAO;IACf,cAAe,cAAc;;;;;;;ACFjC;IAqBE,8BACS,SAA6C,EACpB,IAA2B;QAF7D,iBAaC;QAZQ,cAAS,GAAT,SAAS,CAAoC;QACpB,SAAI,GAAJ,IAAI,CAAuB;QAE3D,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAC5B,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;QACxB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,IAAI,KAAK,eAAe,CAAC,YAAY,CAAC;QAC5D,SAAS,CAAC,YAAY,GAAG,IAAI,CAAC;QAC9B,SAAS,CAAC,aAAa,EAAE,CAAC,SAAS;;;;QAAC,UAAC,KAAoB;YACvD,IAAI,KAAK,CAAC,IAAI,KAAK,QAAQ,EAAE;gBAC3B,KAAI,CAAC,SAAS,CAAC,KAAK,CAAC,KAAI,CAAC,QAAQ,EAAE,CAAC,CAAC;aACvC;SACF,EAAC,CAAC;KACJ;;;;IAED,uCAAQ;;;IAAR;KACC;;;;IAED,uCAAQ;;;IAAR;QACE,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;KACxB;;gBA/BF,SAAS,SAAC;oBACT,QAAQ,EAAE,WAAW;oBACrB,uTAA4C;;iBAE7C;;;;gBAbQ,YAAY;gDAsBhB,MAAM,SAAC,eAAe;;IAmB3B,2BAAC;CAhCD;;;;;;ACVA;IAaE,4BAAmB,MAAiB;QAAjB,WAAM,GAAN,MAAM,CAAW;KAAK;;;;;;;IAEzC,uCAAU;;;;;;IAAV,UAAW,IAAqB,EAAE,KAAa,EAAE,OAAe;;YACxD,SAAS,GAAuC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,oBAAoB,EAAE;YAC3F,KAAK,EAAE,OAAO;YACd,IAAI,EAAE,EAAE,KAAK,OAAA,EAAE,OAAO,SAAA,EAAE,IAAI,MAAA,EAAE;SAC/B,CAAC;QAEF,OAAO,SAAS,CAAC,WAAW,EAAE,CAAC;KAChC;;gBAdF,UAAU,SAAC;oBACV,UAAU,EAAE,MAAM;iBACnB;;;;gBATQ,SAAS;;;6BADlB;CAQA;;;;;;ACRA;;;AAoBA;IAsBE;QAlBA,WAAM,GAA8B,IAAI,OAAO,EAAE,CAAC;QAClD,eAAU,GAA0B,IAAI,KAAK,EAAE,CAAC;QAExC,0BAAqB,GAAsC,IAAI,OAAO,EAA4B,CAAC;QAC3G,yBAAoB,GAAyC,IAAI,CAAC,qBAAqB,CAAC,YAAY,EAAE,CAAC;QAE/F,8BAAyB,GAAqB,IAAI,OAAO,EAAW,CAAC;QAC7E,6BAAwB,GAAwB,IAAI,CAAC,yBAAyB,CAAC,YAAY,EAAE,CAAC;QAEtF,yBAAoB,GAAsC,IAAI,OAAO,EAA4B,CAAC;QAC1G,wBAAmB,GAAyC,IAAI,CAAC,oBAAoB,CAAC,YAAY,EAAE,CAAC;QAE7F,uBAAkB,GAA6C,IAAI,OAAO,EAAmC,CAAC;QACtH,sBAAiB,GAAgD,IAAI,CAAC,kBAAkB,CAAC,YAAY,EAAE,CAAC;QAExG,cAAS,GAA+C,IAAI,OAAO,EAAqC,CAAC;QACzG,iBAAY,GAAkC,IAAI,OAAO,EAAwB,CAAC;KAEjE;;;;;;;;IAKjB,gDAAS;;;;IAAT;QACE,OAAO,IAAI,CAAC,MAAM,CAAC;KACpB;;;;;;;;;;;;;;IAQD,uDAAgB;;;;;;;IAAhB,UAAiB,WAA2B,EAAE,oBAAqC;QAArC,qCAAA,EAAA,4BAAqC;QACjF,IAAI,oBAAoB,EAAE;YACxB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,WAAW,CAAC,KAAK,GAAG,CAAC,GAAG,WAAW,CAAC,KAAK,CAAC,CAAC;SACxF;QACD,IAAI,CAAC,WAAW,CAAC,KAAK,IAAI,WAAW,CAAC,KAAK,IAAI,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE;YACrE,WAAW,CAAC,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC;SAC5C;QACD,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,KAAK,CAAC,GAAG,WAAW,CAAC;QACjD,IAAI,WAAW,CAAC,QAAQ,EAAE;YACxB,WAAW,CAAC,UAAU,GAAG,IAAI,CAAC;YAC9B,IAAI,WAAW,CAAC,KAAK,KAAK,IAAI,EAAE;gBAC9B,MAAM,IAAI,KAAK,CAAC,qBAAqB,CAAC,CAAC;aACxC;SACF;aAAM;YACL,IAAI,WAAW,CAAC,UAAU,KAAK,IAAI,EAAE;gBACnC,MAAM,IAAI,KAAK,CAAC,0BAA0B,CAAC,CAAC;aAC7C;YACD,WAAW,CAAC,KAAK,GAAG,WAAW,CAAC,UAAU,CAAC,MAAM,CAAC;SACnD;QACD,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;KACnC;;;;;;;;;;IAMD,+CAAQ;;;;;IAAR,UAAS,KAAwC;QAC/C,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KAC5B;;;;;;;;;;IAMD,8CAAO;;;;;IAAP,UAAQ,KAA2B;QACjC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KAC/B;;;;;IAED,qDAAc;;;;IAAd,UAAe,MAAsB;QACnC,IAAI,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE;YACjC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,cAAc,GAAG,MAAM,CAAC,cAAc,CAAC;YACrE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;SACnC;KACF;;;;;;;;;;IAOD,6DAAsB;;;;;IAAtB,UAAuB,KAA+B;QACpD,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KACxC;;;;;;;;;;IAOD,iEAA0B;;;;;IAA1B,UAA2B,IAAa;QACtC,IAAI,CAAC,yBAAyB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KAC3C;;;;;;;;;;IAMD,4DAAqB;;;;;IAArB,UAAsB,KAA+B;QACnD,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KACvC;;;;;;;;;;IAMD,2DAAoB;;;;;IAApB,UAAsB,KAAsC;QAC1D,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KACrC;;gBAlHF,UAAU;;;;IAoHX,mCAAC;CApHD;;;;;;ACpBA;;;AAUA;IAAA;QAKU,qBAAgB,GAAsD,IAAI,OAAO,EAA4C,CAAC;QAC9H,iBAAY,GAAyC,IAAI,OAAO,EAA+B,CAAC;QAExG,gBAAW,GAAyD,IAAI,CAAC,gBAAgB,CAAC,YAAY,EAAE,CAAC;QACzG,mBAAc,GAA4C,IAAI,CAAC,YAAY,CAAC,YAAY,EAAE,CAAC;QAEnF,uBAAkB,GAAqB,IAAI,OAAO,EAAW,CAAC;;;;QAItE,sBAAiB,GAAwB,IAAI,CAAC,kBAAkB,CAAC,YAAY,EAAE,CAAC;KAkBjF;;;;;;IAhBC,qCAAQ;;;;;IAAR,UAAS,KAAuB,EAAE,KAA8C;QAC9E,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,EAAC,GAAG,EAAE,KAAK,EAAE,KAAK,OAAA,EAAC,CAAC,CAAC;KACjD;;;;;;IAED,oCAAO;;;;;IAAP,UAAQ,IAAS,EAAE,KAA+B;QAChD,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,EAAC,GAAG,EAAE,IAAI,EAAE,KAAK,OAAA,EAAC,CAAC,CAAC;KAC5C;;;;;;;;;;IAMD,mDAAsB;;;;;IAAtB,UAAuB,MAAe;QACpC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;KACtC;;gBA/BF,UAAU,SAAC;oBACV,UAAU,EAAE,MAAM;iBACnB;;;6BAZD;CAUA;;;;;;ACVA;;;AAaA;IAsCE,wCAAoB,4BAA6D,EAAU,YAAmC;QAA1G,iCAA4B,GAA5B,4BAA4B,CAAiC;QAAU,iBAAY,GAAZ,YAAY,CAAuB;QA9B9H,WAAM,GAA0B,EAAE,CAAC;QAE1B,gBAAW,GAAY,IAAI,CAAC;;;;QAK3B,aAAQ,GAAqC,IAAI,YAAY,EAAsB,CAAC;QACpF,iBAAY,GAA0C,IAAI,YAAY,EAA4B,CAAC;QACnG,aAAQ,GAA0C,IAAI,YAAY,EAA2B,CAAC;QAC9F,UAAK,GAA0C,IAAI,YAAY,EAAuB,CAAC;QACvF,SAAI,GAA0C,IAAI,YAAY,EAAuB,CAAC;QACtF,SAAI,GAA0C,IAAI,YAAY,EAAuB,CAAC;QACtF,WAAM,GAAyB,IAAI,YAAY,EAAU,CAAC;QAC1D,eAAU,GAA0C,IAAI,YAAY,EAA2B,CAAC;QAChG,gBAAW,GAA0C,IAAI,YAAY,EAA2B,CAAC;QAC3G,mBAAc,GAAwB,IAAI,CAAC;;;;QAMlC,cAAS,GAAW,GAAG,CAAC;;;;QAKxB,cAAS,GAAW,GAAG,CAAC;KAGkG;;;;IAEnI,iDAAQ;;;IAAR;QAAA,iBA4DC;QA3DC,IAAI,CAAC,SAAS,EAAE,CAAC;QACjB,IAAI,CAAC,4BAA4B,CAAC,YAAY,CAAC,SAAS;;;;QACtD,UAAC,KAA2B;YAC1B,KAAI,CAAC,YAAY,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,EAAE,KAAI,CAAC,UAAU,CAAC,OAAO,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC;SAC/E,EACF,CAAC;QAEF,IAAI,CAAC,4BAA4B,CAAC,SAAS,CAAC,SAAS;;;;QACnD,UAAC,KAAwC;YACvC,KAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,EAAE,KAAI,CAAC,UAAU,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC;SACtE,EACF,CAAC;;QAGF,IAAI,CAAC,4BAA4B,CAAC,oBAAoB,CAAC,SAAS;;;;QAC9D,UAAC,IAA8B;YAC7B,IAAI,CAAC,CAAC,IAAI,IAAI,IAAI,CAAC,KAAK,KAAK,SAAS,EAAE;;oBAChC,KAAK,GAAmB,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC;gBACrD,IAAI,CAAC,CAAC,KAAK,EAAE;oBACX,KAAK,CAAC,YAAY,CAAC,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC;iBAC3C;aACF;SACF,EACF,CAAC;;QAGF,IAAI,CAAC,4BAA4B,CAAC,wBAAwB,CAAC,SAAS;;;;QAClE,UAAC,IAAa;YACZ,IAAI,IAAI,KAAK,SAAS,IAAI,IAAI,IAAI,IAAI,EAAE;gBACtC,KAAI,CAAC,MAAM,CAAC,OAAO;;;;gBAAC,UAAC,OAAuB;oBAC1C,IAAI,CAAC,CAAC,OAAO,CAAC,YAAY,EAAE;wBAC1B,OAAO,CAAC,YAAY,CAAC,UAAU,GAAG,IAAI,CAAC;qBACxC;iBACF,EAAC,CAAC;aACJ;SACF,EACF,CAAC;;QAGF,IAAI,CAAC,4BAA4B,CAAC,mBAAmB,CAAC,SAAS;;;;QAC7D,UAAC,IAA8B;YAC7B,IAAI,CAAC,CAAC,IAAI,IAAI,IAAI,CAAC,KAAK,KAAK,SAAS,EAAE;;oBAChC,KAAK,GAAmB,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC;gBACrD,IAAI,KAAK,EAAE;oBACT,KAAK,CAAC,eAAe,GAAG,IAAI,CAAC,IAAI,CAAC;iBACnC;aACF;SACF,EAAC,CAAC;;QAGL,IAAI,CAAC,4BAA4B,CAAC,iBAAiB,CAAC,SAAS;;;;QAC3D,UAAC,IAAqC;YACpC,IAAI,CAAC,CAAC,IAAI,IAAI,IAAI,CAAC,KAAK,KAAK,SAAS,EAAE;;oBAChC,KAAK,GAAmB,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC;gBACrD,IAAI,KAAK,EAAE;oBACT,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC;iBAC3B;aACF;SACF,EAAC,CAAC;KACN;;;;;;;;IAKD,mDAAU;;;;IAAV;QACE,OAAO,IAAI,CAAC,4BAA4B,CAAC;KAC1C;;;;;;;;IAKD,kDAAS;;;;IAAT;QAAA,iBAMC;QALC,IAAI,CAAC,4BAA4B,CAAC,SAAS,EAAE;aAC1C,SAAS;;;;QAAC,UAAC,MAAwB;YAClC,KAAI,CAAC,MAAM,GAAG,MAAM,CAAC;SACtB,EACA,CAAC;KACL;;;;;;;;;;;;IAOD,6DAAoB;;;;;;IAApB,UAAqB,KAAa,EAAE,KAAsB;QACxD,IAAI,CAAC,cAAc,GAAG,EAAE,KAAK,OAAA,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC;QAC7C,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,KAAK,OAAA,EAAE,IAAI,EAAE,KAAK,CAAC,KAAK,EAAE,CAAC,CAAC;QACjD,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE,KAAK,OAAA,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,CAAC;KAChD;;;;;;;;;;;;IAOD,mDAAU;;;;;;IAAV,UAAW,KAAa,EAAE,KAA4B;QACpD,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,KAAK,OAAA,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,CAAC;KAC5C;;;;;;;;;;;;IAOD,gDAAO;;;;;;IAAP,UAAQ,KAAa,EAAE,KAAyB;QAC9C,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,KAAK,OAAA,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,CAAC;KACzC;;;;;;;;;;;;IAOD,+CAAM;;;;;;IAAN,UAAO,KAAa,EAAE,KAAyB;QAC7C,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,KAAK,OAAA,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,CAAC;KACxC;;;;;;;;;;;;IAOD,+CAAM;;;;;;IAAN,UAAO,KAAa,EAAE,KAAyB;QAC7C,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,KAAK,OAAA,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,CAAC;KACxC;;;;;;;;;;IAMD,iDAAQ;;;;;IAAR,UAAS,KAAa;QACpB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KACzB;;;;;;IAED,qDAAY;;;;;IAAZ,UAAa,KAAa,EAAE,KAAyB;QACnD,IAAI,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,eAAe,EAAE;YACtC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE,KAAK,OAAA,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,CAAC;SAC9C;KACF;;;;;;IAED,sDAAa;;;;;IAAb,UAAc,KAAa,EAAE,KAAyB;QACpD,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,KAAK,OAAA,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,CAAC;KAC/C;;gBAvLF,SAAS,SAAC;oBACT,QAAQ,EAAE,sBAAsB;oBAChC,o9BAAuD;oBAEvD,SAAS,EAAE,CAAC,4BAA4B,CAAC;;iBAC1C;;;;gBAjBQ,4BAA4B;gBAE5B,kBAAkB;;;6BAmBxB,YAAY,SAAC,YAAY;8BACzB,KAAK;2BAKL,MAAM;+BACN,MAAM;2BACN,MAAM;wBACN,MAAM;uBACN,MAAM;uBACN,MAAM;yBACN,MAAM;6BACN,MAAM;8BACN,MAAM;4BAON,KAAK;4BAKL,KAAK;;IAqJR,qCAAC;CAxLD;;;;;;;;ICTE,UAAO,EAAE,WAAQ,EAAE,UAAO,EAAE,SAAM;;;;;;AAGpC;IAmCE;QA5BiB,sBAAiB,GAAW,GAAG,CAAC;QAChC,uBAAkB,GAAW,GAAG,CAAC;QAEzC,gBAAW,GAAW,EAAE,CAAC;;QAGzB,aAAQ,GAAY,KAAK,CAAC;;QAE1B,cAAS,GAAY,KAAK,CAAC;;;;QAK3B,aAAQ,GAAY,KAAK,CAAC;QAC1B,SAAI,GAAoB,eAAe,CAAC,OAAO,CAAC;;;;QAK/C,aAAQ,GAAyB,IAAI,YAAY,EAAU,CAAC;QAGtE,oBAAe,GAAgB,IAAI,WAAW,CAAC,EAAE,CAAC,CAAC;QAC3C,cAAS,GAAW,EAAE,CAAC;QACvB,kBAAa,GAAgB,IAAI,WAAW,CAAC,EAAE,CAAC,CAAC;KAKxD;IAED,sBACI,kDAAgB;;;;;QADpB,UACqB,WAAwB;YAD7C,iBAuBC;YArBC,IAAI,CAAC,aAAa,GAAG,WAAW,CAAC;YACjC,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,SAAS;;;;YAAC,UAAC,IAAY;gBACrD,KAAI,CAAC,YAAY,CAAC,KAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;gBAC7C,IAAI,KAAI,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,KAAI,CAAC,eAAe,CAAC,KAAK,EAAE;oBAC5D,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;iBACnB;aACF,EAAC,CAAC;YACH,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC;YACjE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;;YAGtC,IAAI,WAAW,CAAC,QAAQ,EAAE;gBACxB,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;aAClD;YAGD,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,SAAS;;;;YACxC,UAAC,IAAY;gBACX,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;aACzB,EACF,CAAC;SACH;;;OAAA;;;;;;IAEO,2CAAY;;;;;IAApB,UAAqB,IAAY;QAC/B,IAAI,IAAI,KAAK,SAAS,EAAE;YACtB,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,EAAE,GAAG,EAAE,sBAAsB,EAAE,CAAC,CAAC;SACjE;KACF;;;;IAED,uCAAQ;;;IAAR;QACE,IAAI,IAAI,CAAC,SAAS,EAAE;YAClB,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;SACtC;KACF;;;;IAED,qCAAM;;;IAAN;QACE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;KACpC;;;;;IAED,qCAAM;;;;IAAN,UAAO,KAAa;QAClB,IAAI,KAAK,IAAI,IAAI,EAAE;YAAE,KAAK,GAAG,KAAK,GAAG,EAAE,CAAC;SAAE;;YACtC,QAAQ,GAAW,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,cAAc;;YAC5D,MAAM,GAAW,KAAK,GAAG,KAAK,CAAC,MAAM,GAAG,CAAC;QAC/C,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;QAC1C,IAAI,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,IAAI,CAAC,eAAe,CAAC,KAAK,EAAE;YACtE,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;YACnE,QAAQ,IAAI,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,KAAK,CAAC,MAAM,GAAG,MAAM,CAAC;YAC/D,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,cAAc,GAAG,QAAQ,CAAC;YACvD,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,YAAY,GAAG,QAAQ,CAAC;SACtD;QACD,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;KAC7C;;;;;;IAEO,6CAAc;;;;;IAAtB,UAAuB,GAAW;QAChC,IAAI,GAAG,IAAI,IAAI,EAAE;YACf,OAAO,GAAG,CAAC;SACZ;QACD,GAAG,GAAG,GAAG,GAAG,EAAE,CAAC;QACf,IAAI,IAAI,CAAC,IAAI,KAAK,eAAe,CAAC,OAAO,EAAE;YACzC,OAAO,GAAG,CAAC;SACZ;;YACG,SAAS,GAAW,EAAE;QAC1B,IAAI,IAAI,CAAC,IAAI,KAAK,eAAe,CAAC,QAAQ,EAAE;YAC1C,KAAK,IAAI,CAAC,GAAW,GAAG,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,GAAW,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAG,CAAC,EAAE,EAAE;gBACrE,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE;oBACxB,SAAS,GAAG,IAAI,CAAC,iBAAiB,GAAG,SAAS,CAAC;iBAChD;gBACD,SAAS,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC;aAChC;SACF;QACD,IAAI,IAAI,CAAC,IAAI,KAAK,eAAe,CAAC,OAAO,EAAE;YACzC,KAAK,IAAI,CAAC,GAAW,GAAG,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,GAAW,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAG,CAAC,EAAE,EAAE;gBACrE,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE;oBACxB,SAAS,GAAG,IAAI,CAAC,kBAAkB,GAAG,SAAS,CAAC;iBACjD;gBACD,SAAS,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC;aAChC;SACF;QACD,IAAI,IAAI,CAAC,IAAI,KAAK,eAAe,CAAC,MAAM,EAAE;YACxC,IAAI,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,EAAE;gBAC5C,KAAK,IAAI,CAAC,GAAW,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,iBAAiB,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;oBAC7E,SAAS,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC;iBACrB;aACF;YACD,KAAK,IAAI,CAAC,GAAW,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,iBAAiB,CAAC,GAAG,GAAG,CAAC,MAAM,IAAI,CAAC,EACjH,CAAC,GAAW,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAG,CAAC,EAAE,EAAE;gBAErC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE;oBACxB,SAAS,GAAG,IAAI,CAAC,kBAAkB,GAAG,SAAS,CAAC;iBACjD;gBACD,SAAS,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC;aAChC;SACF;QACD,OAAO,SAAS,CAAC;KAClB;;;;;;IAEO,2CAAY;;;;;IAApB,UAAqB,GAAW;;QAC9B,IAAI,GAAG,IAAI,IAAI,EAAE;YACf,OAAO,GAAG,CAAC;SACZ;QACD,GAAG,GAAG,GAAG,GAAG,EAAE,CAAC;;YACX,OAAO,GAAW,EAAE;QACxB,IAAI,IAAI,CAAC,IAAI,KAAK,eAAe,CAAC,OAAO,EAAE;YACzC,OAAO,GAAG,CAAC;SACZ;QACD,IAAI,IAAI,CAAC,IAAI,KAAM,eAAe,CAAC,QAAQ,EAAE;;gBAC3C,KAAsB,IAAA,QAAAA,SAAA,GAAG,CAAA,wBAAA,yCAAE;oBAAtB,IAAM,OAAO,gBAAA;oBAChB,IAAI,OAAO,CAAC,KAAK,CAAC,aAAa,CAAC,EAAE;wBAChC,OAAO,IAAI,OAAO,CAAC;qBACpB;iBACF;;;;;;;;;SACF;QACD,IAAI,IAAI,CAAC,IAAI,KAAK,eAAe,CAAC,OAAO,EAAE;;gBACzC,KAAsB,IAAA,QAAAA,SAAA,GAAG,CAAA,wBAAA,yCAAE;oBAAtB,IAAM,OAAO,gBAAA;oBAChB,IAAI,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,EAAE;wBAC1B,OAAO,IAAI,OAAO,CAAC;qBACpB;iBACF;;;;;;;;;SACF;QACD,IAAI,IAAI,CAAC,IAAI,KAAK,eAAe,CAAC,MAAM,EAAE;;gBACpC,OAAO,GAAY,KAAK;;gBAE5B,KAAsB,IAAA,QAAAA,SAAA,GAAG,CAAA,wBAAA,yCAAE;oBAAtB,IAAM,OAAO,gBAAA;oBAChB,IAAI,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,OAAO,KAAK,IAAI,CAAC,iBAAiB,KAAK,CAAC,OAAO,CAAC,EAAE;wBAChF,OAAO,IAAI,OAAO,CAAC;qBACpB;oBACD,OAAO,GAAG,OAAO,KAAK,OAAO,KAAK,IAAI,CAAC,iBAAiB,CAAC,CAAC;iBAC3D;;;;;;;;;SACF;QACD,OAAO,OAAO,CAAC;KAChB;;gBA1KF,SAAS,SAAC;oBACT,QAAQ,EAAE,WAAW;oBACrB,8VAA4C;;iBAE7C;;;;;8BAME,KAAK;2BAGL,KAAK;4BAEL,KAAK;2BAKL,KAAK;uBACL,KAAK;2BAKL,MAAM;4BAON,SAAS,SAAC,WAAW;mCAKrB,KAAK;;IAqIR,2BAAC;CA3KD;;;;;;;;ICHE,SAAM,EAAE,MAAG;;;;;;IAyBX,OAAI,EAAE,YAAS;;;;;;IAIf,MAAG,EAAE,UAAO,EAAE,QAAK;;;;;;;IAInB,OAAI,EAAE,UAAO,EAAE,QAAK;;;;;;;IAwCpB,SAAM,EAAE,QAAK;;;;;;;;AAqBf;;;;;;IAAA;KAKC;;;;;;IAHC,mCAAQ;;;;;IAAR,UAAS,GAAM,EAAE,MAAoB;QACnC,OAAO,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,MAAM;;;;;QAAC,UAAC,CAAI,EAAE,KAAa,IAAK,OAAA,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,GAAA,GAAE,GAAG,CAAC,CAAC;KACnF;IACH,uBAAC;CAAA;;;;;;;;;ACnGD;;;;IAKE;QACE,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;QACd,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QACxB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;KACrB;;;;;;IAEM,6CAAO;;;;;IAAd,UAAe,YAAiC,EAAE,MAAc;QAC9D,OAAO,EAAE,CAAC;KACX;;;;IAED,8CAAQ;;;IAAR;QACE,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;KACpB;IACH,kCAAC;CAAA,IAAA;;;;;;;;ICaC,cAAW,EAAE,eAAY,EAAE,MAAG;;;;;;;;AAKhC;IA0EE,8BAAoB,YAAmC;QAAnC,iBAAY,GAAZ,YAAY,CAAuB;QA/DvD,qBAAgB,GAAa,EAAE,CAAC;QAChC,8BAAyB,GAAa,EAAE,CAAC;QACzC,iCAA4B,GAAa,EAAE,CAAC;QAC5C,+BAA0B,GAAa,EAAE,CAAC;QAI1C,SAAI,GAAoB,eAAe,CAAC,KAAK,CAAC;QAEtC,gBAAW,GAAW,CAAC,CAAC;QAChC,gBAAW,GAAY,KAAK,CAAC;QACrB,sBAAiB,GAAW,CAAC,CAAC,CAAC;QAC/B,qBAAgB,GAAW,CAAC,CAAC,CAAC;QAC9B,mBAAc,GAA2B,IAAI,CAAC;QAC9C,gBAAW,GAAa,EAAE,CAAC;QAC3B,YAAO,GAAW,CAAC,CAAC;QACpB,YAAO,GAAW,CAAC,CAAC;QAOlB,SAAI,GAA8B,IAAI,YAAY,EAAe,CAAC;QAClE,UAAK,GAA8B,IAAI,YAAY,EAAe,CAAC;QACnE,WAAM,GAA8B,IAAI,YAAY,EAAe,CAAC;;;;QAKpE,WAAM,GAAoB,IAAI,YAAY,EAAK,CAAC;QAChD,eAAU,GAA0B,IAAI,YAAY,EAAW,CAAC;QAChE,iBAAY,GAAkC,IAAI,YAAY,EAAmB,CAAC;QAClF,aAAQ,GAAwC,IAAI,YAAY,EAAyB,CAAC;QAC3F,cAAS,GAAY,IAAI,CAAC;QAC1B,oBAAe,GAAY,KAAK,CAAC;QAKhC,SAAI,GAAiC,IAAI,YAAY,EAAkB,CAAC;QACzE,cAAS,GAAY,KAAK,CAAC;QAC3B,iBAAY,GAAiB,EAAE,UAAU,EAAE,KAAK,EAAE,IAAI,EAAE,EAAE,EAAE,CAAC;QAC5D,WAAM,GAAuB,IAAI,YAAY,EAAQ,CAAC;QACtD,gBAAW,GAAoB,IAAI,YAAY,EAAK,CAAC;QACtD,kBAAa,GAAY,KAAK,CAAC;QAC/B,gBAAW,GAAY,IAAI,CAAC;QACrC,eAAU,GAAY,KAAK,CAAC;QAC5B,eAAU,GAAY,KAAK,CAAC;;;;QAOnB,cAAS,GAAW,GAAG,CAAC;;;;QAKxB,cAAS,GAAW,GAAG,CAAC;KAG2B;;;;IAE5D,uCAAQ;;;IAAR;QAAA,iBAiCC;QAhCC,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC,SAAS;;;;QACxC,UAAC,IAAiC;YAChC,IAAI,CAAC,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,EAAE;gBAC7B,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;aAC5B;SACF,EACF,CAAC;QACF,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,SAAS;;;;QAAC,UAAC,IAA8C;YACrF,IAAI,IAAI,EAAE;gBACR,KAAI,CAAC,YAAY,CAAC,OAAO;;;;;gBAAC,UAAC,MAAoB,EAAE,GAAW;oBAC1D,IAAI,MAAM,KAAK,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE;wBAC9B,KAAI,CAAC,SAAS,CAAC,GAAG,CAAC,GAAG,KAAI,CAAC,aAAa,CAAC,MAAM,EAAE,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,KAAK,EAAE,KAAI,CAAC,KAAK,EAAE,CAAC,CAAC;qBAC9F;iBACF,EAAC,CAAC;aACJ;SACF,EAAC,CAAC;QACH,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,SAAS;;;;QAC/B,UAAC,KAAW;;gBACJ,MAAM,GAAiB,KAAI,CAAC,YAAY,CAAC,IAAI;;;;YAAC,UAAC,CAAe,IAAK,OAAA,CAAC,CAAC,IAAI,KAAK,KAAK,CAAC,MAAM,GAAA,EAAC;YACjG,MAAM,CAAC,aAAa,GAAG,KAAK,CAAC,SAAS,CAAC;YACvC,KAAI,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,MAAM,QAAA,EAAE,oBAAoB,EAAE,KAAI,CAAC,YAAY,EAAE,IAAI,EAAE,6BAA6B,CAAC,IAAI,EAAE,CAAC,CAAC;SAC/G,EACF,CAAC;QAEF,IAAI,CAAC,YAAY,CAAC,iBAAiB,CAAC,SAAS;;;;QAC3C,UAAC,IAAa;YACZ,IAAI,IAAI,KAAK,SAAS,IAAI,IAAI,IAAI,IAAI,EAAE;gBACtC,KAAI,CAAC,YAAY,CAAC,UAAU,GAAG,IAAI,CAAC;aACrC;SAEF,EACF,CAAC;KACH;;;;IAED,8CAAe;;;IAAf;QACE,IAAI,IAAI,CAAC,eAAe,EAAE;YACxB,IAAI,CAAC,QAAQ,CAAC,UAAU,EAAE,CAAC;SAC5B;KACF;IAED,sBACI,0CAAQ;;;;;QADZ,UACa,CAAU;YACrB,IAAI,CAAC,IAAI,GAAG,CAAC,GAAG,eAAe,CAAC,MAAM,GAAG,eAAe,CAAC,KAAK,CAAC;YAC/D,IAAI,CAAC,2BAA2B,GAAG,IAAI,2BAA2B,EAAK,CAAC;YACxE,IAAI,IAAI,CAAC,IAAI,KAAK,eAAe,CAAC,MAAM,EAAE;gBACxC,IAAI,CAAC,UAAU,EAAE,CAAC;aACnB;iBAAM;gBACL,IAAI,CAAC,2BAA2B,CAAC,IAAI,EAAE,CAAC;aACzC;SACF;;;OAAA;IAED,sBACI,qDAAmB;;;;;QADvB,UACwB,mBAAwC;YADhE,iBAgDC;YA9CC,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;YACzB,IAAI,CAAC,YAAY,GAAG,mBAAmB,CAAC;YACxC,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,CAAC,EAAE,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,CAAC;YAE9D,IAAI,mBAAmB,EAAE;gBACvB,IAAI,IAAI,CAAC,aAAa,EAAE;;wBAChB,WAAW,GAAW,mBAAmB,CAAC,MAAM;;wBAClD,eAAa,GAAW,CAAC;;wBACzB,gBAAc,GAAY,KAAK;oBACnC,mBAAmB,CAAC,OAAO;;;;oBAAC,UAAC,MAAoB;wBAC/C,IAAI,CAAC,CAAC,MAAM,CAAC,QAAQ,EAAE;4BACrB,eAAa,GAAG,eAAa,GAAG,CAAC,CAAC;yBACnC;wBACD,IAAI,CAAC,CAAC,gBAAc,MAAM,MAAM,CAAC,IAAI,KAAK,YAAY,CAAC,EAAE;4BACvD,gBAAc,GAAG,IAAI,CAAC;yBACvB;qBACF,EAAC,CAAC;;wBACG,YAAY,GAAY,WAAW,KAAK,eAAa;oBAC3D,IAAI,CAAC,gBAAc,EAAE;wBACnB,mBAAmB,CAAC,IAAI,CAAC;4BACvB,IAAI,EAAE,YAAY;4BAClB,KAAK,EAAE,EAAE;4BACT,QAAQ,EAAE,YAAY,GAAG,EAAE,GAAG,SAAS;4BACvC,OAAO,EAAE,IAAI;yBACd,CAAC,CAAC;qBACJ;iBACF;gBAED,mBAAmB,CAAC,OAAO;;;;gBAAC,UAAC,MAAoB;oBAC/C,IAAI,MAAM,CAAC,OAAO,EAAE;wBAClB,KAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;qBACzC;oBACD,IAAI,CAAC,KAAI,CAAC,WAAW,EAAE;wBACrB,KAAI,CAAC,WAAW,GAAG,MAAM,CAAC,QAAQ,KAAK,SAAS,CAAC;qBAClD;iBACF,EAAC,CAAC;gBACH,IAAI,IAAI,CAAC,OAAO,EAAE;oBAChB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC;iBAChC;aACF;YACD,IAAI,CAAC,yBAAyB,CAAC,MAAM,CAAC,CAAC,EAAE,IAAI,CAAC,yBAAyB,CAAC,MAAM,CAAC,CAAC;YAChF,IAAI,CAAC,4BAA4B,CAAC,MAAM,CAAC,CAAC,EAAE,IAAI,CAAC,4BAA4B,CAAC,MAAM,CAAC,CAAC;YACtF,IAAI,CAAC,0BAA0B,CAAC,MAAM,CAAC,CAAC,EAAE,IAAI,CAAC,0BAA0B,CAAC,MAAM,CAAC,CAAC;YAClF,IAAI,CAAC,mBAAmB,EAAE,CAAC,OAAO;;;;YAAC,UAAC,GAAW,IAAK,OAAA,KAAI,CAAC,yBAAyB,CAAC,IAAI,CAAC,GAAG,CAAC,GAAA,EAAC,CAAC;YAC9F,IAAI,CAAC,iBAAiB,EAAE,CAAC,OAAO;;;;YAAC,UAAC,GAAW,IAAK,OAAA,KAAI,CAAC,4BAA4B,CAAC,IAAI,CAAC,GAAG,CAAC,GAAA,EAAC,CAAC;YAC/F,IAAI,CAAC,sBAAsB,EAAE,CAAC,OAAO;;;;YAAC,UAAC,GAAW,IAAK,OAAA,KAAI,CAAC,0BAA0B,CAAC,IAAI,CAAC,GAAG,CAAC,GAAA,EAAC,CAAC;SACnG;;;OAAA;IAID,sBACI,4CAAU;;;;QAMd;YACE,OAAO,IAAI,CAAC,WAAW,CAAC;SACzB;;;;;QATD,UACe,UAAoB;YACjC,IAAI,CAAC,WAAW,GAAG,UAAU,CAAC;YAC9B,IAAI,CAAC,OAAO,GAAG,UAAU,CAAC;YAC1B,IAAI,IAAI,CAAC,OAAO,EAAE;gBAAE,IAAI,CAAC,iBAAiB,EAAE,CAAC;aAAE;SAChD;;;OAAA;IAMD,sBACI,kDAAgB;;;;;QADpB,UACqB,aAAqB;YACxC,IAAI,CAAC,cAAc,GAAG,aAAa,CAAC;YACpC,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE;gBACvC,KAAK,aAAa,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,IAAI,aAAa,GAAG,CAAC,GAAG;oBAC/D,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC;iBACzB;gBACD,IAAI,CAAC,SAAS,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,cAAc,CAAC,EAAE,OAAO,EAAE,OAAO,CAAC,GAAG,EAAE,EAAE,KAAK,CAAC,CAAC;aAC1F;SACF;;;OAAA;;;;;IAEO,gDAAiB;;;;IAAzB;QAAA,iBA0CC;;YAzCO,UAAU,GAAsB,KAAK,EAAc;;YACrD,SAAS,GAAY,KAAK;;YAC1B,WAA8B;QAClC,IAAI,CAAC,YAAY,CAAC,OAAO;;;;QAAC,UAAC,MAAoB;YAC7C,IAAI,MAAM,CAAC,SAAS,KAAK,SAAS,KAAK,KAAI,CAAC,IAAI,KAAK,eAAe,CAAC,KAAK,IAAI,KAAI,CAAC,2BAA2B,CAAC,IAAI,IAAI,CAAC,CAAC,EAAE;gBACzH,KAAI,CAAC,SAAS,GAAG,IAAI,KAAK,CAAS,KAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;gBAC7D,KAAI,CAAC,UAAU,GAAG,IAAI,CAAC;gBACvB,KAAI,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,MAAM,QAAA,EAAE,oBAAoB,EAAE,KAAI,CAAC,YAAY,EAAE,IAAI,EAAE,6BAA6B,CAAC,KAAK,EAAE,CAAC,CAAC;aACjH;YACD,KAAI,CAAC,UAAU,GAAG,KAAI,CAAC,UAAU,IAAI,MAAM,CAAC,UAAU,CAAC;YACvD,SAAS,GAAG,SAAS,IAAI,MAAM,CAAC,SAAS,CAAC;SAC3C,EAAC,CAAC;QACH,IAAI,SAAS,EAAE;YACb,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI;;;;;YAAC,UAAC,CAAI,EAAE,CAAI;;oBACtC,MAAM,GAAW,CAAC;gBACtB,KAAI,CAAC,YAAY,CAAC,OAAO;;;;gBAAC,UAAC,MAAoB;oBAC7C,IAAI,MAAM,KAAK,CAAC,EAAE;wBAChB,MAAM,GAAG,KAAI,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;qBAC7B;iBACF,EAAC,CAAC;gBACH,OAAO,MAAM,CAAC;aACf,EAAC,CAAC;SACJ;QACD,IAAI,CAAC,OAAO,CAAC,OAAO;;;;QAAC,UAAC,GAAM;YAC1B,IAAI,SAAS,KAAK,UAAU,CAAC,MAAM,KAAK,CAAC,IAAI,KAAI,CAAC,OAAO,oBAAC,UAAU,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,IAAI,IAAO,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE;gBAClH,IAAI,WAAW,EAAE;oBACf,UAAU,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,WAAW,EAAE,OAAO,EAAE,OAAO,CAAC,YAAY,EAAE,CAAC,CAAC;iBACvE;gBACD,UAAU,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,GAAG,EAAE,OAAO,EAAE,OAAO,CAAC,WAAW,EAAE,CAAC,CAAC;gBAC7D,WAAW,GAAG,IAAI,KAAK,CAAa,KAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;aAC/D;YACD,IAAI,SAAS,EAAE;gBAAE,KAAI,CAAC,aAAa,CAAC,WAAW,EAAE,GAAG,CAAC,CAAC;aAAE;YACxD,UAAU,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,GAAG,EAAE,OAAO,EAAE,OAAO,CAAC,GAAG,EAAE,CAAC,CAAC;SACtD,EAAC,CAAC;QACH,IAAI,CAAC,IAAI,GAAG,IAAI,kBAAkB,CAAa,UAAU,CAAC,CAAC;QAC3D,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,IAAI,IAAI,CAAC,cAAc,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE;YACtF,IAAI,IAAI,CAAC,cAAc,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,IAAI,IAAI,CAAC,cAAc,GAAG,CAAC,EAAE;gBACzE,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC;aACzB;YACD,IAAI,CAAC,SAAS,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,cAAc,CAAC,EAAE,OAAO,EAAE,OAAO,CAAC,GAAG,EAAE,EAAE,KAAK,CAAC,CAAC;SAC1F;KACF;;;;;;;IAEO,4CAAa;;;;;;IAArB,UAAsB,QAA2B,EAAE,GAAM;QACvD,IAAI,CAAC,YAAY,CAAC,OAAO;;;;;QAAC,UAAC,MAAoB,EAAE,KAAa;YAC5D,IAAI,MAAM,CAAC,SAAS,KAAK,SAAS,EAAE;gBAClC,IAAI,QAAQ,CAAC,KAAK,CAAC,KAAK,SAAS,EAAE;oBACjC,QAAQ,CAAC,KAAK,CAAC,GAAG,EAAE,GAAG,sBAAG,IAAI,gBAAgB,EAAE,CAAC,QAAQ,CAAC,GAAG,EAAE,MAAM,CAAC,GAAW,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC;iBAC/F;qBAAM;oBACL,QAAQ,CAAC,KAAK,CAAC,CAAC,GAAG,wBAAK,IAAI,gBAAgB,EAAE,CAAC,QAAQ,CAAC,GAAG,EAAE,MAAM,CAAC,GAAW,CAAC;oBAChF,QAAQ,CAAC,KAAK,CAAC,CAAC,KAAK,EAAE,CAAC;iBACzB;aACF;SACF,EAAC,CAAC;KACJ;;;;;;;IAEO,sCAAO;;;;;;IAAf,UAAgB,CAAI,EAAE,CAAI;;YACpB,EAAE,GAAW,CAAC;QAClB,IAAI,CAAC,YAAY,CAAC,OAAO;;;;QAAC,UAAC,MAAoB;YAC7C,IAAI,EAAE,KAAK,CAAC,IAAI,MAAM,CAAC,SAAS,EAAE;gBAChC,IAAI,oBAAC,IAAI,gBAAgB,EAAE,CAAC,QAAQ,CAAC,CAAC,EAAE,MAAM,CAAC,0BAAe,IAAI,gBAAgB,EAAE,CAAC,QAAQ,CAAC,CAAC,EAAE,MAAM,CAAC,GAAW,EAAE;oBACnH,EAAE,GAAG,CAAC,CAAC,CAAC;iBACT;qBAAM,IAAI,oBAAC,IAAI,gBAAgB,EAAE,CAAC,QAAQ,CAAC,CAAC,EAAE,MAAM,CAAC,0BAAe,IAAI,gBAAgB,EAAE,CAAC,QAAQ,CAAC,CAAC,EAAE,MAAM,CAAC,GAAW,EAAE;oBAC1H,EAAE,GAAG,CAAC,CAAC;iBACR;aACF;SACF,EAAC,CAAC;QACH,OAAO,EAAE,CAAC;KACX;;;;;IAED,kDAAmB;;;;IAAnB,UAAoB,GAAM;;YACpB,MAAM,GAAW,EAAE;QACvB,IAAI,CAAC,YAAY,CAAC,OAAO;;;;QAAC,UAAC,MAAoB;YAC7C,IAAI,MAAM,CAAC,SAAS,EAAE;gBACpB,MAAM,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,KAAK,GAAG,EAAE,KAAK,IAAI,gBAAgB,EAAE,CAAC,QAAQ,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC,CAAC;aACzF;SACF,EAAC,CAAC;QACH,OAAO,MAAM,CAAC;KACf;;;;;;IAED,2CAAY;;;;;IAAZ,UAAa,KAAa,EAAE,IAAgB;QAC1C,OAAO,IAAI,CAAC,OAAO,KAAK,OAAO,CAAC,WAAW,CAAC;KAC7C;;;;;;IAED,oCAAK;;;;;IAAL,UAAM,KAAa,EAAE,IAAgB;QACnC,OAAO,IAAI,CAAC,OAAO,KAAK,OAAO,CAAC,GAAG,CAAC;KACrC;;;;;;IAED,4CAAa;;;;;IAAb,UAAc,KAAa,EAAE,IAAgB;QAC3C,OAAO,IAAI,CAAC,OAAO,KAAK,OAAO,CAAC,YAAY,CAAC;KAC9C;;;;IAED,qDAAsB;;;IAAtB;QACE,OAAO,IAAI,CAAC,gBAAgB,CAAC,GAAG;;;;QAAC,UAAC,IAAY,IAAK,OAAA,SAAS,GAAG,IAAI,GAAA,EAAC,CAAC;KACtE;;;;;;IAED,4CAAa;;;;;IAAb,UAAc,MAAoB,EAAE,IAAgB;QAClD,IAAI,MAAM,CAAC,SAAS,KAAK,SAAS,CAAC,GAAG,EAAE;YAAE,OAAO,IAAI,CAAC,GAAG,CAAC;SAAE;QAC5D,IAAI,MAAM,CAAC,SAAS,KAAK,SAAS,CAAC,KAAK,EAAE;YAAE,OAAO,IAAI,CAAC,KAAK,CAAC;SAAE;QAChE,IAAI,MAAM,CAAC,SAAS,KAAK,SAAS,CAAC,OAAO,EAAE;YAAE,OAAO,EAAE,GAAG,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC;SAAE;QAClF,OAAO,SAAS,CAAC;KAClB;;;;;;IAED,uCAAQ;;;;;IAAR,UAAS,GAAM,EAAE,MAAoB;QACnC,0BAAO,IAAI,gBAAgB,EAAE,CAAC,QAAQ,CAAC,GAAG,EAAE,MAAM,CAAC,GAAM;KAC1D;;;;;;IAED,8CAAe;;;;;IAAf,UAAgB,GAAM,EAAE,MAAoB;QAC1C,IAAI,IAAI,CAAC,WAAW,EAAE;YACpB,0BAAO,IAAI,gBAAgB,EAAE,CAAC,QAAQ,CAAC,GAAG,EAAE,MAAM,CAAC,GAAW;SAC/D;aAAM;YACL,OAAO,IAAI,CAAC;SACb;KACF;;;;;IAED,yCAAU;;;;IAAV,UAAW,IAAY;QACrB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACvB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,IAAI,MAAA,EAAE,oBAAoB,EAAE,IAAI,CAAC,YAAY,EAAE,CAAC,CAAC;KACrE;;;;;;IAED,wCAAS;;;;;IAAT,UAAU,GAAe,EAAE,MAAe;QACxC,IAAI,CAAC,cAAc,sBAAG,GAAG,CAAC,IAAI,EAAK,CAAC;QACpC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;QACtC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,IAAI,CAAC,cAAc,EAAE,KAAK,EAAE,MAAM,GAAG,UAAU,CAAC,IAAI,GAAG,UAAU,CAAC,SAAS,EAAE,CAAC,CAAC;KAChH;;;;;IAED,uCAAQ;;;;IAAR,UAAS,KAAY;;YACb,OAAO,sBAAmB,KAAK,CAAC,MAAM,EAAkB;;YAC1D,SAAkB;QAEtB,IAAI,IAAI,CAAC,OAAO,KAAK,OAAO,CAAC,SAAS,EAAE;YACtC,SAAS,GAAG,IAAI,CAAC;YACjB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC,SAAS,CAAC;YACjC,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC,UAAU,CAAC;SACnC;QAED,IAAI,IAAI,CAAC,OAAO,KAAK,OAAO,CAAC,UAAU,EAAE;YACvC,SAAS,GAAG,KAAK,CAAC;YAClB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC,SAAS,CAAC;YACjC,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC,UAAU,CAAC;SACnC;QAED,IAAI,CAAC,OAAO,CAAC,YAAY,GAAG,OAAO,CAAC,SAAS,GAAG,IAAI,KAAK,SAAS,EAAE;YAClE,IAAI,CAAC,UAAU,EAAE,CAAC;SACnB;KAEF;;;;;IAEO,yCAAU;;;;IAAlB;QACE,IAAI,CAAC,IAAI,CAAC,2BAA2B,CAAC,UAAU,IAAI,CAAC,IAAI,CAAC,2BAA2B,CAAC,MAAM,EAAE;YAC5F,IAAI,CAAC,2BAA2B,CAAC,MAAM,GAAG,IAAI,CAAC;YAC/C,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC;gBACjB,IAAI,EAAE,IAAI,CAAC,2BAA2B,CAAC,QAAQ,EAAE;gBACjD,IAAI,EAAE,IAAI,CAAC,2BAA2B,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,UAAU,CAAC;aACnF,CAAC,CAAC;SACJ;KACF;;;;;;IAEO,0CAAW;;;;;IAAnB,UAAoB,IAAS;QAC3B,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;YACjB,IAAI,CAAC,OAAO,GAAG,IAAI,KAAK,EAAK,CAAC;SAC/B;QACD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QACzC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC;QAC/B,IAAI,CAAC,2BAA2B,CAAC,UAAU,GAAG,IAAI,CAAC,MAAM,KAAK,CAAC,CAAC;QAChE,IAAI,CAAC,2BAA2B,CAAC,MAAM,GAAG,KAAK,CAAC;KACjD;;;;IAED,2CAAY;;;IAAZ;QACE,IAAI,CAAC,UAAU,CAAC,IAAI,oBAAC,IAAI,CAAC,aAAa,GAAY,CAAC;KACrD;;;;;;IAED,2CAAY;;;;;IAAZ,UAAa,OAAmB,EAAE,MAAoB;QACpD,IAAI,CAAC,aAAa,GAAG,EAAE,MAAM,QAAA,EAAE,GAAG,EAAE,OAAO,EAAE,CAAC;QAC9C,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;KAC1C;;;;;;IAED,6CAAc;;;;;IAAd,UAAe,GAAe,EAAE,MAAoB;QAClD,IAAI,IAAI,CAAC,eAAe,EAAE;YACxB,IAAI,IAAI,CAAC,aAAa,IAAI,IAAI,EAAE;gBAC9B,IAAI,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,IAAI,KAAK,MAAM,CAAC,IAAI;oBAChD,oBAAC,IAAI,CAAC,aAAa,CAAC,GAAG,IAAgB,IAAI,KAAK,GAAG,CAAC,IAAI,EAAE;oBAC1D,OAAO,IAAI,CAAC;iBACb;aACF;SACF;QACD,OAAO,KAAK,CAAC;KACd;;;;;;IAED,6CAAc;;;;;IAAd,UAAe,GAAM,EAAE,MAAoB;QAA3C,iBAcC;;YAbO,WAAW,GAAkB,IAAI,KAAK,EAAU;QACtD,IAAI,IAAI,CAAC,gBAAgB,EAAE;;gBACnB,KAAK,GAAwB,IAAI,CAAC,gBAAgB,CAAC,IAAI;;;;YAAC,UAAC,CAAsB;gBACnF,OAAO,CAAC,CAAC,QAAQ,KAAK,KAAI,CAAC,QAAQ,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;aAClD,EAAC;YACF,IAAI,KAAK,EAAE;gBACT,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;aACnC;SACF;QACD,IAAI,MAAM,CAAC,WAAW,EAAE;YACtB,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;SACtC;QACD,OAAO,WAAW,CAAC;KACpB;;;;;IAED,4CAAa;;;;IAAb,UAAc,GAAM;QAApB,iBAcC;;YAbO,UAAU,GAAkB,IAAI,KAAK,EAAU;QACrD,IAAI,GAAG,KAAK,IAAI,CAAC,cAAc,IAAI,CAAC,IAAI,CAAC,eAAe,EAAE;YACxD,UAAU,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;SACrB;QACD,IAAI,IAAI,CAAC,yBAAyB,EAAE;;gBAC5B,KAAK,GAAuB,IAAI,CAAC,yBAAyB,CAAC,IAAI;;;;YAAC,UAAC,CAAqB;gBAC1F,OAAO,CAAC,CAAC,IAAI,KAAK,KAAI,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC;aAChD,EAAC;YACF,IAAI,KAAK,EAAE;gBACT,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;aACjC;SACF;QACD,OAAO,UAAU,CAAC;KACnB;;;;;IAED,qCAAM;;;;IAAN,UAAO,KAAiB;QACtB,IAAI,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,iBAAiB,IAAI,CAAC,EAAE;;gBAC3C,QAAQ,GAAW,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,KAAK,CAAC;;gBAChD,KAAK,GAAiB,IAAI,CAAC,cAAc,CAAC,IAAI;;gBAC9C,OAAO,GAAQ,IAAI,CAAC,OAAO;YACjC,eAAe,CAAC,KAAK,EAAE,IAAI,CAAC,iBAAiB,EAAE,QAAQ,CAAC,CAAC;YACzD,eAAe,CAAC,OAAO,EAAE,IAAI,CAAC,iBAAiB,EAAE,QAAQ,CAAC,CAAC;YAC3D,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,KAAK,qBAAE,KAAK,CAAC,QAAQ,CAAC,CAAC,IAAI,EAAK,EAAE,KAAK,EAAE,QAAQ,EAAE,CAAC,CAAC;YACtE,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;YACvB,IAAI,CAAC,IAAI,GAAG,IAAI,kBAAkB,CAAC,KAAK,CAAC,CAAC;YAC1C,KAAK,CAAC,eAAe,EAAE,CAAC;SACzB;KACF;;;;;IAED,2CAAY;;;;IAAZ,UAAa,KAAoB;QAAjC,iBAkCC;QAjCC,IAAI,CAAC,IAAI,CAAC,eAAe,EAAE;;gBACrB,cAAY,GAAW,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS;;;;YAAC,UAAC,GAAe,IAAK,OAAA,GAAG,CAAC,IAAI,KAAK,KAAI,CAAC,cAAc,GAAA,EAAC;;gBACtG,cAAY,GAAW,CAAC,EAAE;YAC9B,IAAI,KAAK,CAAC,GAAG,KAAK,WAAW,EAAE;gBAC7B,IAAI,CAAC,WAAW,EAAE,CAAC;gBACnB,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO;;;;;gBAAC,UAAC,GAAe,EAAE,KAAa;oBACpD,IAAI,cAAY,KAAK,CAAC,EAAE,IAAI,KAAK,GAAG,cAAY,IAAI,GAAG,CAAC,OAAO,KAAK,OAAO,CAAC,GAAG,EAAE;wBAC/E,cAAY,GAAG,KAAK,CAAC;qBACtB;iBACF,EAAC,CAAC;aACJ;YACD,IAAI,KAAK,CAAC,GAAG,KAAK,SAAS,EAAE;gBAC3B,IAAI,CAAC,WAAW,EAAE,CAAC;gBACnB,cAAY,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,cAAY,GAAG,CAAC,CAAC;gBACxD,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,OAAO;;;;;gBAAC,UAAC,GAAe,EAAE,KAAa;oBAC9D,IAAI,cAAY,KAAK,CAAC,EAAE,IAAI,KAAK,GAAG,cAAY,IAAI,GAAG,CAAC,OAAO,KAAK,OAAO,CAAC,GAAG,EAAE;wBAC/E,cAAY,GAAG,KAAK,CAAC;qBACtB;iBACF,EAAC,CAAC;gBACH,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC;gBACzB,IAAI,cAAY,KAAK,CAAC,EAAE,EAAE;oBACxB,cAAY,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,cAAY,GAAG,CAAC,CAAC;iBACzD;aACF;YACD,IAAI,cAAY,KAAK,CAAC,EAAE,EAAE;gBACxB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,cAAY,CAAC,EAAE,IAAI,CAAC,CAAC;aACpD;YACD,IAAI,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE;gBACnC,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;aACtB;iBAAM;gBACL,KAAK,CAAC,cAAc,EAAE,CAAC;aACxB;SACF;KACF;;;;;;;;IAKD,uCAAQ;;;;IAAR;QACE,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;KACpB;;;;;IAED,4CAAa;;;;IAAb,UAAc,cAAiB;QAC7B,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;KACvC;;;;IAED,gDAAiB;;;IAAjB;;YACQ,CAAC,GAAa,IAAI,CAAC,YAAY,CAAC,GAAG;;;;;QAAC,UAAC,MAAoB,EAAE,KAAa;YAC5E,IAAI,MAAM,CAAC,OAAO,IAAI,MAAM,CAAC,QAAQ,KAAK,SAAS,EAAE;gBACnD,OAAO,UAAU,GAAG,KAAK,CAAC;aAC3B;iBAAM;gBACL,OAAO,IAAI,CAAC;aACb;SACF,EAAC,CAAC,MAAM;;;;QAAC,UAAC,IAAY,IAAK,OAAA,IAAI,IAAI,IAAI,GAAA,EAAC;QACzC,OAAO,CAAC,CAAC;KACV;;;;IAED,kDAAmB;;;IAAnB;QACE,OAAO,IAAI,CAAC,YAAY,CAAC,MAAM;;;;QAAC,UAAC,MAAoB;YACnD,OAAA,MAAM,CAAC,OAAO,IAAI,MAAM,CAAC,KAAK,KAAK,SAAS;SAAA,EAC7C,CAAC,GAAG;;;;QAAC,UAAC,GAAiB,IAAK,OAAA,GAAG,CAAC,IAAI,GAAA,EAAC,CAAC;KACxC;;;;;IAED,sCAAO;;;;IAAP,UAAQ,KAAiB;QACvB,IAAI,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,iBAAiB,IAAI,CAAC,EAAE;;gBAC3C,QAAQ,GAAW,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,KAAK,CAAC;YACtD,IAAI,QAAQ,KAAK,IAAI,CAAC,gBAAgB,EAAE;gBACtC,IAAI,CAAC,gBAAgB,GAAG,QAAQ,CAAC;;;oBAE3B,KAAK,YAAqB,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC;gBACzD,eAAe,CAAC,KAAK,EAAE,IAAI,CAAC,iBAAiB,EAAE,QAAQ,CAAC,CAAC;gBACzD,IAAI,CAAC,IAAI,GAAG,IAAI,kBAAkB,CAAC,KAAK,CAAC,CAAC;aAC3C;YACD,KAAK,CAAC,cAAc,EAAE,CAAC;YACvB,OAAO,IAAI,CAAC;SACb;KACF;;;;;IAED,wCAAS;;;;IAAT,UAAU,KAAiB;QACzB,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QACvD,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,iBAAiB,CAAC;QAC/C,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,IAAI,CAAC;KACjC;;;;;;IAEO,0CAAW;;;;;IAAnB,UAAoB,KAAa;;YAC3B,SAAS,GAAW,CAAC;;YACrB,SAAS,GAAgB,IAAI,CAAC,cAAc,CAAC,aAAa;QAC9D,OAAO,CAAC,SAAS,KAAK,IAAI,MAAM,SAAS,KAAK,CAAC,CAAC,EAAE;YAChD,SAAS,GAAG,SAAS,CAAC,SAAS,CAAC;YAChC,SAAS,GAAG,SAAS,CAAC,aAAa,CAAC;SACrC;;YACG,QAAQ,GAAW,CAAC,CAAC;;YACnB,IAAI,GAAmB,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,QAAQ;QACpF,KAAK,IAAI,CAAC,GAAW,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;;gBACtC,GAAG,uBAAiB,IAAI,CAAC,CAAC,CAAC,GAAgB;YACjD,IAAI,KAAK,GAAG,SAAS,GAAG,GAAG,CAAC,SAAS,GAAG,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,SAAS,EAAE;gBACnF,QAAQ,GAAG,CAAC,CAAC;aACd;SACF;QACD,IAAI,QAAQ,GAAG,CAAC,EAAE;YAAE,QAAQ,GAAG,CAAC,CAAC;SAAE;QACnC,OAAO,QAAQ,CAAC;KACjB;IAED,sBAAI,4CAAU;;;;QAAd;YACE,OAAO,UAAU,CAAC;SACnB;;;OAAA;;gBAhiBF,SAAS,SAAC;oBACT,QAAQ,EAAE,WAAW;oBACrB,82JAA4C;;iBAE7C;;;;gBApBQ,kBAAkB;;;0BA6CxB,SAAS,SAAC,OAAO;2BACjB,SAAS,SAAC,QAAQ;kCAClB,SAAS,SAAC,QAAQ,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE;iCACxC,SAAS,SAAC,gBAAgB;uBAE1B,MAAM;wBACN,MAAM;yBACN,MAAM;yBAKN,MAAM;6BACN,MAAM;+BACN,MAAM;2BACN,MAAM;4BACN,KAAK;kCACL,KAAK;wBACL,KAAK;mCACL,KAAK;4CACL,KAAK;gCACL,KAAK;uBACL,MAAM;4BACN,KAAK;+BACL,KAAK;yBACL,MAAM;8BACN,MAAM;gCACN,KAAK;8BACL,KAAK;4BASL,KAAK;4BAKL,KAAK;2BA8CL,KAAK;sCAWL,KAAK;6BAoDL,KAAK;mCAWL,KAAK;;IAmWR,2BAAC;CAliBD;;;;;;ACxCA;IAIM,MAAM,GAAmB,OAAO;AAGtC;;IAIE,QAAS,OAAO;IAChB,YAAa,aAAa;;;IA4C1B;QAhCS,eAAU,GAAgC,OAAO,CAAC;QAClD,oBAAe,GAAgB,IAAI,WAAW,CAAC,EAAE,CAAC,CAAC;QACpD,SAAI,GAAS,IAAI,IAAI,EAAE,CAAC;;;;;;QAOvB,eAAU,GAAW,YAAY,CAAC;QAClC,iBAAY,GAAW,uCAAuC,CAAC;QAC/D,gBAAW,GAAW,IAAI,CAAC,UAAU,CAAC;;;;;QAMtC,iBAAY,GAAqB,gBAAgB,CAAC,MAAM,CAAC;;;;QAQ1D,qBAAgB,GAAY,KAAK,CAAC;;;;QAK1C,kBAAa,GAAY,KAAK,CAAC;KAEd;;;;IAEjB,sCAAQ;;;IAAR;QACE,IAAI,CAAC,eAAe,GAAG,IAAI,WAAW,CAAC,EAAE,EAAE,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,CAAC;QAC3E,IAAI,CAAC,WAAW,EAAE,CAAC;QAEnB,IAAI,IAAI,CAAC,YAAY,KAAK,gBAAgB,CAAC,UAAU,EAAE;YACrD,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;YAC5B,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,UAAU,CAAC;SACpC;;;;;YAKK,aAAa,GAAW,MAAM,CAAC,IAAI,CAAC,eAAe,CAAC,KAAK,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC;QACzG,IAAI,IAAI,CAAC,eAAe,CAAC,KAAK,KAAK,EAAE,IAAI,aAAa,KAAK,cAAc,EAAE;YACzE,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC;SAC9C;KAEF;IAED,sBAAI,iDAAgB;;;;QAApB;YACE,OAAO,gBAAgB,CAAC;SACzB;;;OAAA;;;;;;;;IAKD,0CAAY;;;;IAAZ;;QAEE,IAAI,IAAI,CAAC,YAAY,KAAK,IAAI,CAAC,gBAAgB,CAAC,UAAU,EAAE;YAC1D,OAAO,YAAY,CAAC;SACrB;aAAM;YACL,OAAO,OAAO,CAAC;SAChB;KACF;;;;;IAEO,yCAAW;;;;IAAnB;QAAA,iBA6DC;QA5DC,IAAI,CAAC,eAAe,CAAC,YAAY;aAC9B,IAAI,CACH,GAAG;;;;QAAC,UAAC,IAAY;YACf,IAAI,IAAI,CAAC,MAAM,GAAG,KAAI,CAAC,UAAU,CAAC,MAAM,EAAE;gBACxC,KAAI,CAAC,aAAa,GAAG,IAAI,CAAC;aAC3B;iBAAM;gBACL,KAAI,CAAC,aAAa,GAAG,KAAK,CAAC;aAC5B;SACF,EAAC,EACF,MAAM;;;;QAAC,UAAC,IAAY,IAAK,OAAA,IAAI,CAAC,MAAM,KAAK,KAAI,CAAC,UAAU,CAAC,MAAM,GAAA,EAAC,CACjE;aACA,SAAS;;;;QAAC,UAAC,IAAY;YACtB,KAAI,CAAC,aAAa,GAAG,KAAK,CAAC;;gBACrB,OAAO,GAAY,MAAM,CAAC,IAAI,EAAE,KAAI,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC,OAAO,EAAE;;gBAChE,MAAM,GAAW,MAAM,CAAC,IAAI,EAAE,KAAI,CAAC,UAAU,CAAC,CAAC,MAAM,CAAC,YAAY,CAAC;YAEzE,IAAI,CAAC,CAAC,MAAM,KAAK,MAAM,KAAK,cAAc,IAAI,CAAC,OAAO,CAAC,EAAE;gBACvD,KAAI,CAAC,aAAa,GAAG,IAAI,CAAC;gBAC1B,OAAO;aACR;YAED,IAAI,CAAC,CAAC,MAAM,EAAE;gBACZ,IAAI,CAAC,KAAI,CAAC,gBAAgB,EAAE;oBAC1B,KAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;;wBACvB,SAAS,GAAa,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC;;wBAEvC,IAAI,GAAW,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;;wBACvC,KAAK,GAAW,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;;wBACxC,GAAG,GAAW,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;oBAE5C,KAAI,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;oBAC5B,KAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;oBACvB,KAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;;oBAG9B,IAAI,KAAI,CAAC,YAAY,KAAK,gBAAgB,CAAC,UAAU,EAAE;wBACrD,KAAI,CAAC,IAAI,GAAG,MAAM,CAAC,KAAI,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,MAAM,EAAE,CAAC;qBACvD;oBAED,KAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAI,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC,MAAM,CAAC,KAAI,CAAC,UAAU,CAAC,CAAC,CAAC;oBACvF,KAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,KAAI,CAAC,IAAI,CAAC,CAAC;oBAEzC,KAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;iBAC/B;qBAAM;oBACL,UAAU;;;oBAAC;wBACT,KAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;qBAC/B,GAAE,IAAI,CAAC,CAAC;iBACV;aAEF;SACF,EAAC,CAAC;QAGL,IAAI,CAAC,eAAe,CAAC,YAAY;aAC9B,SAAS;;;;QAAC,UAAC,IAAY;;gBAChB,aAAa,GAAW,MAAM,CAAC,IAAI,EAAE,KAAI,CAAC,UAAU,CAAC,CAAC,MAAM,CAAC,KAAI,CAAC,UAAU,CAAC;YACnF,IAAI,KAAI,CAAC,eAAe,CAAC,KAAK,KAAK,EAAE,IAAI,aAAa,KAAK,cAAc,EAAE;gBACzE,KAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC;aAC9C;SACF,EAAC,CAAC;KACN;;;;;;;;;;IAMD,kDAAoB;;;;;;IAApB,UAAqB,eAA+B,EAAE,UAAyC;QAE7F,IAAI,IAAI,CAAC,YAAY,KAAK,gBAAgB,CAAC,UAAU,EAAE;YACrD,UAAU,CAAC,KAAK,EAAE,CAAC;;gBACb,IAAI,GAAS,MAAM,CAAC,eAAe,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,MAAM,EAAE;YAElE,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;YAClF,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;SACrC;KACF;;;;;;;;;;IAKD,wCAAU;;;;;;IAAV,UAAW,IAAY,EAAE,KAAoC;QAE3D,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,EAAE,YAAY,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;QACzF,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;KAC5C;;;;IAED,6CAAe;;;IAAf;QACE,OAAO,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,UAAU,CAAC;KAC5C;;gBAtKF,SAAS,SAAC;oBACT,QAAQ,EAAE,iBAAiB;oBAC3B,86BAA2C;;iBAE5C;;;;;6BAIE,KAAK;kCACL,KAAK;6BAQL,KAAK;+BACL,KAAK;8BACL,KAAK;+BAML,KAAK;;IA+IR,0BAAC;CAxKD;;;;;;AChBA;IA8EI;;QAnEQ,qBAAgB,GAAqC,IAAI,eAAe,CAAkB,CAAC,CAAC,CAAC;;QAErG,iBAAY,GAAgC,IAAI,CAAC,gBAAgB,CAAC,YAAY,EAAE,CAAC;;QAGzE,mBAAc,GAA0B,IAAI,eAAe,CAAO,SAAS,CAAC,CAAC;;QAGrF,yBAAoB,GAAqB,IAAI,CAAC,cAAc,CAAC,YAAY,EAAE,CAAC;;QAGpE,uBAAkB,GAA6B,IAAI,eAAe,CAAU,IAAI,CAAC,CAAC;QAC1F,eAAU,GAAwB,IAAI,CAAC,kBAAkB,CAAC,YAAY,EAAE,CAAC;;QAGhE,yBAAoB,GAA6B,IAAI,eAAe,CAAU,IAAI,CAAC,CAAC;QAC5F,iBAAY,GAAwB,IAAI,CAAC,oBAAoB,CAAC,YAAY,EAAE,CAAC;QAEtE,oBAAe,GAAkB,IAAI,OAAO,EAAQ,CAAC;QAC7D,0BAAqB,GAAqB,IAAI,CAAC,eAAe,CAAC,YAAY,EAAE,CAAC;QAEtE,kCAA6B,GAAkB,IAAI,OAAO,EAAQ,CAAC;QAC3E,wCAAmC,GAAqB,IAAI,CAAC,6BAA6B,CAAC,YAAY,EAAE,CAAC;QAElG,sBAAiB,GAAkB,IAAI,OAAO,EAAQ,CAAC;QAC/D,4BAAuB,GAAqB,IAAI,CAAC,iBAAiB,CAAC,YAAY,EAAE,CAAC;QAE1E,wBAAmB,GAAkB,IAAI,OAAO,EAAQ,CAAC;QACjE,8BAAyB,GAAqB,IAAI,CAAC,mBAAmB,CAAC,YAAY,EAAE,CAAC;KAyCrF;;;;;;;IAtCD,8CAAkB;;;;;;IAAlB,UAAmB,iBAAkC;QACjD,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;KACjD;;;;;;;IAGD,4CAAgB;;;;;;IAAhB,UAAiB,IAAU;QACvB,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KAClC;;;;;IAED,0CAAc;;;;IAAd,UAAe,MAAe;QAC1B,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;KACxC;;;;;IAED,4CAAgB;;;;IAAhB,UAAiB,QAAiB;QAC9B,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;KAC5C;;;;IAED,uCAAW;;;IAAX;QACI,IAAI,CAAC,eAAe,CAAC,IAAI,EAAE,CAAC;KAC/B;;;;IAGD,qDAAyB;;;IAAzB;QACI,IAAI,CAAC,6BAA6B,CAAC,IAAI,EAAE,CAAC;KAC7C;;;;;IAGD,yCAAa;;;;IAAb,UAAc,IAAU;QACxB,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KACjC;;;;;IAGD,2CAAe;;;;IAAf,UAAgB,IAAU;QACtB,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KACvC;;gBAvEJ,UAAU,SAAC;oBACR,UAAU,EAAE,MAAM;iBACrB;;;;;4BAPD;CAKA;;;;;;;;;ACLA;;;;IAKI;QACE,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;QACd,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QACxB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;KACrB;;;;IAED,oCAAQ;;;IAAR;QACE,OAAO,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;KAClC;IACH,wBAAC;CAAA;;;;;;;;ICaD,6BAAoB,iBAAoC,EACpC,MAAc,EACd,UAAsB;QAFtB,sBAAiB,GAAjB,iBAAiB,CAAmB;QACpC,WAAM,GAAN,MAAM,CAAQ;QACd,eAAU,GAAV,UAAU,CAAY;QAiBlC,oBAAe,GAGlB,IAAI,GAAG,EAGR,CAAC;;;;QASK,YAAO,GAAkC,IAAI,YAAY,EAAmB,CAAC;;;;QAK7E,WAAM,GAAuB,IAAI,YAAY,EAAQ,CAAC;;;;;QAMtD,UAAK,GAAuB,IAAI,YAAY,EAAQ,CAAC;QACrD,mBAAc,GAA0B,IAAI,YAAY,EAAW,CAAC;QACpE,kBAAa,GAAoC,IAAI,YAAY,EAAqB,CAAC;QACvF,iBAAY,GAAkC,IAAI,YAAY,EAAmB,CAAC;QAClF,eAAU,GAAkC,IAAI,YAAY,EAAmB,CAAC;QAChF,mBAAc,GAAyC,IAAI,YAAY,EAA0B,CAAC;QAClG,mBAAc,GAAyC,IAAI,YAAY,EAA0B,CAAC;QAClG,sBAAiB,GAAyC,IAAI,YAAY,EAA0B,CAAC;QACrG,wBAAmB,GAAyC,IAAI,YAAY,EAA0B,CAAC;QAEjH,gBAAW,GAA4B,IAAI,iBAAiB;;;;QAAO,UAAC,IAAU,IAAkC,OAAA,IAAI,CAAC,QAAQ,GAAA,EAAC,CAAC;QAC/H,eAAU,GAAkC,IAAI,uBAAuB,EAAQ,CAAC;QAGhF,kBAAa,GAAY,IAAI,CAAC;QAC9B,gBAAW,GAAS,IAAI,CAAC;;;;QA2SzB,aAAQ;;;;;QAAG,UAAC,CAAS,EAAE,IAAU;YAC/B,OAAO,CAAC,CAAC,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC;SACpD,EAAA;;QArWC,IAAI,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE;;gBACT,IAAI,GAAS,IAAI,CAAC,IAAI;YAC5B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;YACjB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;SACjC;aAAM;YACL,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,EAAE,CAAC;YAC1B,IAAI,CAAC,WAAW,CAAC,SAAS,GAAG,EAAE,CAAC;SACjC;KAEF;;;;;;;;;;;;IAsDa,kCAAc;;;;;;IAA5B,UAA6B,IAAU;;YACjC,MAAM,GAAa,CAAC,IAAI,CAAC,IAAI,CAAC;;YAC9B,MAAM,GAAW,EAAE;QAEvB,IAAI,IAAI,CAAC,MAAM,EAAE;YACf,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;SAC/C;QAGD,IAAI,MAAM,CAAC,MAAM,KAAK,CAAC,EAAE;YACvB,OAAO,IAAI,CAAC,IAAI,CAAC;SAClB;QAED,MAAM,GAAG,MAAM,CAAC,OAAO,EAAE,CAAC;QAE1B,KAAK,IAAI,CAAC,GAAW,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;;gBACxC,OAAO,GAAW,MAAM,CAAC,CAAC,CAAC;YACjC,MAAM,GAAG,MAAM,GAAG,OAAO,IAAI,CAAC,CAAC,KAAK,MAAM,CAAC,MAAM,GAAG,CAAC,IAAI,EAAE,GAAG,GAAG,CAAC,CAAC;SACpE;QAED,OAAO,MAAM,CAAC;KACf;;;;IAID,sCAAQ;;;IAAR;QAAA,iBA8BC;;QA5BC,IAAI,CAAC,iBAAiB,CAAC,oBAAoB;aACxC,SAAS;;;;QAAC,UAAC,GAAS;YACnB,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,QAAQ,EAAE;gBAC3B,KAAI,CAAC,WAAW,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;aAChC;iBAAM;gBACL,KAAI,CAAC,UAAU,CAAC,IAAI,GAAG,EAAE,CAAC;gBAC1B,KAAI,CAAC,WAAW,CAAC,SAAS,GAAG,EAAE,CAAC;aACjC;SACF,EAAC,CAAC;;QAGL,IAAI,CAAC,iBAAiB,CAAC,YAAY;aAChC,SAAS;;;;QAAC,UAAC,GAAoB;YAC9B,IAAI,CAAC,CAAC,KAAI,CAAC,IAAI,IAAI,CAAC,CAAC,KAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;gBACvC,KAAI,CAAC,UAAU,CAAC,KAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;aACjC;SACF,EAAC,CAAC;QAGL,IAAI,CAAC,iBAAiB,CAAC,qBAAqB;aACzC,SAAS;;;;QAAC,UAAC,GAAS;YACnB,KAAI,CAAC,WAAW,EAAE,CAAC;SACpB,EAAC,CAAC;QAEL,IAAI,CAAC,iBAAiB,CAAC,mCAAmC;aACvD,SAAS;;;;QAAC,UAAC,GAAS;YACnB,KAAI,CAAC,yBAAyB,EAAE,CAAC;SAClC,EAAC,CAAC;KACN;;;;IAED,6CAAe;;;IAAf;QAAA,iBA+BC;QA9BC,IAAI,CAAC,iBAAiB,CAAC,UAAU,CAAC,SAAS;;;;QAAC,UAAC,GAAY;YACvD,IAAI,GAAG,IAAI,IAAI,EAAE;gBACf,IAAI,GAAG,EAAE;oBACP,KAAI,CAAC,IAAI,CAAC,WAAW,CAAC,SAAS,EAAE,CAAC;iBACnC;aACF;SACF,EAAC,CAAC;QAEH,IAAI,CAAC,iBAAiB,CAAC,YAAY,CAAC,SAAS;;;;QAAC,UAAC,GAAY;YACzD,IAAI,GAAG,KAAK,IAAI,EAAE;gBAChB,IAAI,GAAG,EAAE;oBACP,KAAI,CAAC,IAAI,CAAC,WAAW,CAAC,WAAW,EAAE,CAAC;iBACrC;aACF;SACF,EAAC,CAAC;QAGH,IAAI,CAAC,iBAAiB,CAAC,uBAAuB;aAC3C,SAAS;;;;QAAC,UAAC,GAAS;YACnB,IAAI,GAAG,KAAK,SAAS,EAAE;gBACrB,KAAI,CAAC,WAAW,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;aAC9B;SACF,EAAC,CAAC;QAEL,IAAI,CAAC,iBAAiB,CAAC,yBAAyB;aAC7C,SAAS;;;;QAAC,UAAC,GAAS;YACnB,IAAI,GAAG,KAAK,SAAS,EAAE;gBACrB,KAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;aAChC;SACF,EAAC,CAAC;KACN;;;;;;;IAID,wCAAU;;;;;;IAAV,UAAW,IAAU;QAArB,iBAeC;QAbC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;QAC1B,UAAU;;;QAAC;YACT,IAAI,KAAI,CAAC,aAAa,EAAE;gBAEtB,KAAI,CAAC,UAAU,CAAC,KAAI,CAAC,IAAI,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC;;gBAGpC,IAAI,CAAC,CAAC,IAAI,EAAE;oBACV,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;oBAChC,KAAI,CAAC,WAAW,GAAG,IAAI,CAAC;iBACzB;aACF;SACF,GAAE,GAAG,CAAC,CAAC;KACT;;;;;IAED,sCAAQ;;;;IAAR,UAAS,KAAY;;YACb,OAAO,sBAAmB,KAAK,CAAC,MAAM,EAAkB;QAE9D,IAAI,CAAC,OAAO,CAAC,YAAY,GAAG,OAAO,CAAC,SAAS,KAAK,OAAO,CAAC,YAAY,EAAE;YACtE,IAAI,CAAC,UAAU,EAAE,CAAC;SACnB;KACF;;;;;IAED,oCAAM;;;;IAAN,UAAO,IAAU;QACf,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;KACxB;;;;;IAED,mCAAK;;;;IAAL,UAAM,IAAU;;QAEd,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;YAClB,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;SACpB;QACD,IAAI,CAAC,QAAQ,CAAC,IAAI,CAChB;YACE,EAAE,EAAE,IAAI;YACR,IAAI,EAAE,EAAE;YACR,UAAU,EAAE,KAAK;YACjB,MAAM,EAAE,IAAI;YACZ,UAAU,EAAE,IAAI;SACjB,CACF,CAAC;QACF,IAAI,CAAC,WAAW,EAAE,CAAC;KACpB;;;;;IAED,sCAAQ;;;;IAAR,UAAS,IAAU;;QAEjBC,MAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;QAErC,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;KAC5B;;;;;;IAED,sCAAQ;;;;;IAAR,UAAS,IAAU,EAAE,KAAa;QAEhC,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;QAElB,IAAI,IAAI,CAAC,EAAE,IAAI,IAAI,IAAI,IAAI,CAAC,IAAI,KAAK,EAAE,EAAE;YACvCA,MAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;YACrC,IAAI,CAAC,WAAW,EAAE,CAAC;SACpB;aAAM,IAAI,IAAI,CAAC,EAAE,IAAI,IAAI,CAAC,EAAE,IAAI,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,EAAE,EAAE;YAChE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACvB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;SACzB;aAAM,IAAI,IAAI,CAAC,EAAE,IAAI,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,EAAE,EAAE;YACrD,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACtB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;SACzB;KACF;;;;;;IAED,sCAAQ;;;;;IAAR,UAAS,IAAU,EAAE,KAAa;;QAEhC,IAAI,IAAI,CAAC,EAAE,IAAI,IAAI,EAAE;YACnBA,MAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;YACrC,IAAI,CAAC,WAAW,EAAE,CAAC;SACpB;QAED,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;KACzB;;;;;IAED,wCAAU;;;;IAAV,UAAW,IAAU;QACnB,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;QAC3B,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;KAC/B;;;;;IAGD,uCAAS;;;;IADT,UACU,KAAoB;QAC5B,QAAQ,KAAK,CAAC,GAAG;YACf,KAAK,QAAQ;gBACX,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,WAAW,CAAC,EAAE,IAAI,IAAI,CAAC,WAAW,CAAC,EAAE,GAAG,IAAI,CAAC,CAAC;gBACnG,MAAM;YACR,KAAK,QAAQ;gBACX,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,WAAW,CAAC,EAAE,IAAI,IAAI,CAAC,WAAW,CAAC,EAAE,GAAG,IAAI,CAAC,CAAC;gBACnG,MAAM;YACR,KAAK,WAAW;gBACd,IAAI,CAAC,gBAAgB,EAAE,CAAC;gBACxB,MAAM;YACR,KAAK,SAAS;gBACZ,IAAI,CAAC,cAAc,EAAE,CAAC;gBACtB,MAAM;SACT;KAEF;;;;;;;;;IAQO,4CAAc;;;;;;;IAAtB;QACE,IAAI,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE;;YAEf,IAAI,IAAI,CAAC,WAAW,IAAI,IAAI,EAAE;gBAC5B,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;gBACrD,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;gBACzC,IAAI,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,IAAI,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE;oBACvE,IAAI,CAAC,iBAAiB,CAAC,aAAa,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;iBACxD;aACF;iBAAM;gBACL,IAAI,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,IAAI,IAAI,CAAC,WAAW,CAAC,EAAE,IAAI,IAAI,EAAE;;;wBAEtD,KAAK,GAAW,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC;oBAEhF,IAAI,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,EAAE,IAAI,IAAI,IAAI,KAAK,KAAK,CAAC,EAAE;wBACrD,OAAO,CAAC,CAAC;qBACV;yBAAM;wBACL,IAAI,KAAK,KAAK,SAAS,IAAI,KAAK,KAAK,CAAC,EAAE;4BACtC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC;4BAC3C,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;4BAChD,IAAI,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,IAAI,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE;gCACvE,IAAI,CAAC,iBAAiB,CAAC,aAAa,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;6BACxD;yBACF;6BAAM;4BACL,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;4BAC/D,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;4BAChD,IAAI,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,IAAI,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE;gCACvE,IAAI,CAAC,iBAAiB,CAAC,aAAa,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;6BACxD;yBACF;qBACF;iBACF;aACF;SACF;KACF;;;;;IAEO,8CAAgB;;;;IAAxB;QACE,IAAI,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE;YACf,IAAI,IAAI,CAAC,WAAW,IAAI,IAAI,EAAE;gBAC5B,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;gBACrD,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;gBACzC,IAAI,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,IAAI,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE;oBACvE,IAAI,CAAC,iBAAiB,CAAC,aAAa,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;iBACxD;aACF;iBAAM;gBACL,IAAI,CAAC,CAAC,IAAI,CAAC,WAAW,EAAE;;;wBAEhB,KAAK,GAAW,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,IAAI,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM;wBACtE,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC;wBAC1D,IAAI;;oBAGJ,IAAI,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ;wBAC7B,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE;wBAEtC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;wBAChD,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;wBAChD,IAAI,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,IAAI,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE;4BACvE,IAAI,CAAC,iBAAiB,CAAC,aAAa,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;yBACxD;qBACF;yBAAM,IAAI,KAAK,KAAK,SAAS;wBAC5B,KAAK,KAAK,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC;wBACrD,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,MAAM,IAAI,IAAI;wBACtC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,MAAM,CAAC,QAAQ,IAAI,IAAI;wBAC/C,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE;;4BAE9C,aAAa,GAAW,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC;wBACtG,IAAI,CAAC,WAAW,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,aAAa,GAAG,CAAC,CAAC,KAAK,SAAS;4BAC5F,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,aAAa,GAAG,CAAC,CAAC,CAAC;wBAE9E,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;wBAChD,IAAI,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,IAAI,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE;4BACvE,IAAI,CAAC,iBAAiB,CAAC,aAAa,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;yBACxD;qBACF;yBAAM;wBACL,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;wBAC/D,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;wBAChD,IAAI,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,IAAI,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE;4BACvE,IAAI,CAAC,iBAAiB,CAAC,aAAa,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;yBACxD;qBACF;iBAEF;aACF;SACF;KACF;;;;;;;;;IAaO,yCAAW;;;;;IAAnB;QACE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;;YACX,cAAc,GAAW,IAAI,CAAC,UAAU,CAAC,IAAI;QACnD,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC;QAC5B,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,cAAc,CAAC;QACtC,IAAI,CAAC,WAAW,CAAC,SAAS,GAAG,cAAc,CAAC;KAC7C;;;;;;;;;IAKO,uDAAyB;;;;;IAAjC;;YACQ,cAAc,GAAW,IAAI,CAAC,UAAU,CAAC,IAAI;QACnD,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC;QAC5B,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,cAAc,CAAC;QACtC,IAAI,CAAC,WAAW,CAAC,SAAS,GAAG,cAAc,CAAC;KAC7C;;;;;IAKO,wCAAU;;;;IAAlB;QACE,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,UAAU,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,MAAM,EAAE;YACxE,IAAI,CAAC,iBAAiB,CAAC,MAAM,GAAG,IAAI,CAAC;YACrC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC;gBACtB,IAAI,EAAE,IAAI,CAAC,iBAAiB,CAAC,QAAQ,EAAE;aACxC,CAAC,CAAC;SACJ;KACF;;;;;;IAEO,yCAAW;;;;;IAAnB,UAAoB,IAAY;QAAhC,iBAeC;QAdC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;YAAE,IAAI,CAAC,IAAI,GAAG,EAAE,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,MAAM,EAAE,UAAU,EAAE,KAAK,EAAE,CAAC;SAAE;QAC9E,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;YAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,KAAK,EAAQ,CAAC;YAAC,IAAI,CAAC,iBAAiB,GAAG,IAAI,iBAAiB,EAAQ,CAAC;SAAE;QAC5H,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QACrD,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO;;;;QAAC,UAAC,IAAU;YACpC,KAAI,CAAC,UAAU,CAAC,IAAI,EAAE,KAAI,CAAC,IAAI,CAAC,CAAC;SAClC,EAAC,CAAC;QAGH,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAElE,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC;QAC1C,IAAI,CAAC,WAAW,CAAC,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC;QAChD,IAAI,CAAC,iBAAiB,CAAC,UAAU,GAAG,IAAI,CAAC,MAAM,KAAK,CAAC,CAAC;QACtD,IAAI,CAAC,iBAAiB,CAAC,MAAM,GAAG,KAAK,CAAC;KACvC;;;;;;;;;;;IAKO,wCAAU;;;;;;;IAAlB,UAAmB,IAAU,EAAE,MAAY;QAA3C,iBAQC;QANC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE;YAC7C,IAAI,CAAC,QAAQ,CAAC,OAAO;;;;YAAC,UAAC,IAAU;gBAC/B,KAAI,CAAC,UAAU,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;aAC7B,EAAC,CAAC;SACJ;KACF;;;;;;;;;;;IAMO,wCAAU;;;;;;;IAAlB,UAAmB,IAAU,EAAE,EAAmB;QAEhD,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;QACxB,IAAI,CAAC,CAAC,CAAC,IAAI,EAAE;YACX,OAAO,IAAI,CAAC;SACb;QACD,IAAI,IAAI,CAAC,EAAE,KAAK,SAAS,IAAI,IAAI,CAAC,EAAE,KAAK,EAAE,EAAE;YAC3C,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;YACvB,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;YAC5B,OAAO,IAAI,CAAC;SACb;aAAM,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,EAAE;;gBAC5B,CAAC,SAAQ;;gBACT,MAAM,GAAS,IAAI;YACvB,KAAK,CAAC,GAAG,CAAC,EAAE,MAAM,IAAI,IAAI,IAAI,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBAC3D,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;aAChD;YACD,OAAO,MAAM,CAAC;SACf;QACD,OAAO,IAAI,CAAC;KACb;;;;;;IAEO,8CAAgB;;;;;IAAxB,UAAyB,IAAU;QACjC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,IAAI,CAAC,MAAM,EAAE;YAC3B,IAAI,CAAC,iBAAiB,CAAC,aAAa,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YAClD,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;SACpC;KACF;;;;;;;;;;IAKO,0CAAY;;;;;;IAApB,UAAqB,IAAU;;QAC7B,IAAI,CAAC,CAAC,IAAI,IAAI,IAAI,CAAC,UAAU,KAAK,SAAS,EAAE;YAC3C,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;YACxB,IAAI,CAAC,CAAC,IAAI,CAAC,QAAQ,EAAE;;oBACnB,KAA2B,IAAA,KAAAD,SAAA,IAAI,CAAC,QAAQ,CAAA,gBAAA,4BAAE;wBAArC,IAAM,YAAY,WAAA;wBACrB,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,CAAC;qBACjC;;;;;;;;;aACF;SACF;KACF;;;;;IAED,0CAAY;;;;IAAZ,UAAa,IAAU;;YACf,SAAS,GAAa,EAAE;QAC9B,IAAI,IAAI,CAAC,UAAU,EAAE;YACnB,SAAS,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;SAC9B;QACD,IAAI,IAAI,CAAC,SAAS,EAAE;YAClB,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;SAChC;QACD,OAAO,SAAS,CAAC;KAClB;;;;;;IAED,wCAAU;;;;;IAAV,UAAW,IAAU,EAAE,QAAiB;QACtC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,CAAC,QAAQ,GAAG,QAAQ,CAAC;KACnD;;;;;;IAED,4CAAc;;;;;IAAd,UAAe,KAA+B,EAAE,IAAU;QACxD,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC,MAAM,CAAC,QAAQ,CAAC;QAC7C,IAAI,IAAI,CAAC,eAAe,EAAE;YACxB,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;SACtC;aAAM;YACL,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;SACxC;KACF;;;;;IAED,gDAAkB;;;;IAAlB,UAAmB,IAAU;QAI3B,IAAI,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE;YACrC,IAAI,CAAC,qBAAqB,CAAC,IAAI,EAAE,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC;SAC9E;aAAM;YACL,IAAI,CAAC,qBAAqB,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;SACzC;QACD,OAAO,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;KAC1C;;;;;;;IAEO,mDAAqB;;;;;;IAA7B,UAA8B,IAAU,EAAE,QAAiB;;YACnD,KAAK,GAAkC,IAAI,KAAK,EAA0B;QAChF,IAAI,CAAC,OAAO,CAAC,OAAO;;;;QAAC,UAAC,MAAY;YAChC,IAAI,MAAM,CAAC,eAAe,EAAE;gBAC1B,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;aACvB;SACF,EAAC,CAAC;;YACG,GAAG,GAGL,EAAE,WAAW,EAAE,IAAI,WAAW,CAAC,KAAK,CAAC,EAAE,QAAQ,UAAA,EAAE;QACrD,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC;KACxC;;;;;;;;;;;IAOD,yCAAW;;;;;IAAX,UAAY,EAAmB;;YACvB,KAAK,YAAe,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC;QAC/C,OAAO,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;;gBACjB,IAAI,GAAS,KAAK,CAAC,KAAK,EAAE;YAChC,IAAI,IAAI,CAAC,EAAE,KAAK,EAAE,EAAE;gBAClB,OAAO,IAAI,CAAC;aACb;iBAAM;gBACL,IAAI,CAAC,CAAC,IAAI,CAAC,QAAQ,EAAE;oBACnB,KAAK,CAAC,IAAI,OAAV,KAAK,WAAS,IAAI,CAAC,QAAQ,GAAE;iBAC9B;aACF;SACF;QACD,OAAO,IAAI,CAAC;KACb;;;;;IAED,iDAAmB;;;;IAAnB,UAAoB,IAAY;QAAhC,iBAiBC;QAhBC,IAAI,CAAC,CAAC,IAAI,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;YAE7B,IAAI;gBACF,IAAI,GAAGE,OAAS,CAAC,IAAI;;;;gBAAE,UAAC,CAAO,IAAK,OAAA,CAAC,CAAC,UAAU,GAAA,GAAE,CAAC,KAAK,CAAC,CAAC,CAAC;gBAC3D,IAAI,CAAC,OAAO;;;;gBAAC,UAAC,OAAa;oBACzB,IAAI,CAAC,CAAC,OAAO,CAAC,QAAQ,IAAI,OAAO,IAAI,IAAI,EAAE;wBACzC,OAAO,CAAC,QAAQ,GAAG,KAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;qBAC/D;iBACF,EAAC,CAAC;gBACH,OAAO,IAAI,CAAC;aACb;YAAC,OAAO,KAAK,EAAE;gBACd,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;aACpB;SACF;KAGF;;gBA1jBF,SAAS,SAAC;oBACT,QAAQ,EAAE,UAAU;oBACpB,+oJAA2C;;iBAG5C;;;;gBAlBQ,iBAAiB;gBACjB,MAAM;gBALoE,UAAU;;;uBA6C1F,SAAS,SAAC,MAAM;uBAWhB,KAAK;0BAKL,MAAM;yBAKN,MAAM;wBAMN,MAAM;iCACN,MAAM;gCACN,MAAM;+BACN,MAAM;6BACN,MAAM;iCACN,MAAM;iCACN,MAAM;oCACN,MAAM;sCACN,MAAM;4BA+LN,YAAY,SAAC,gBAAgB,EAAE,CAAC,QAAQ,CAAC;;IA+T5C,0BAAC;CA7jBD;;;;;;;;;;;ACjBA;;;AAIA;IAQE;QALQ,qBAAgB,GACxB,IAAI,eAAe,CAAqC,EAAE,CAAC,CAAC;QAErD,gBAAW,GAAmD,IAAI,CAAC,gBAAgB,CAAC,YAAY,EAAE,CAAC;KAEzF;;;;;IAEjB,iDAAa;;;;IAAb,UAAc,OAA2C;QACvD,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;KACrC;;gBAZF,UAAU;;;;IAcX,gCAAC;CAdD;;;;;;ACJA;;;AAWA;IAoBE,qCAAoB,yBAAuD;QAAvD,8BAAyB,GAAzB,yBAAyB,CAA8B;QAZlE,cAAS,GAAgB,IAAI,WAAW,EAAE,CAAC;QAC3C,YAAO,GAAuC,IAAI,KAAK,EAA+B,CAAC;QAGtF,yBAAoB,GAAoB,IAAI,YAAY,EAAK,CAAC;QAC9D,aAAQ,GAAuB,IAAI,YAAY,EAAQ,CAAC;QACzD,aAAQ,GAAY,KAAK,CAAC;QACnC,cAAS,GAAY,KAAK,CAAC;QAG3B,uBAAkB,GAAkB,IAAI,OAAO,EAAQ,CAAC;KAGvD;;;;IAED,8CAAQ;;;IAAR;QAAA,iBA0BC;QAxBC,IAAI,CAAC,kBAAkB,CAAC,YAAY,EAAE;aACrC,IAAI,CACH,YAAY,CAAC,GAAG,CAAC,EACjB,YAAY,CAAC,GAAG,CAAC,CAClB;aACA,SAAS;;;QAAC;YACT,KAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;SACtB,EAAC,CAAC;QAEH,IAAI,IAAI,CAAC,QAAQ,EAAE;YACjB,IAAI,CAAC,yBAAyB,CAAC,WAAW,CAAC,SAAS;;;;YAAC,UAAC,IAAmC;gBACvF,UAAU;;;gBAAC;oBACT,KAAI,CAAC,OAAO,GAAG,IAAI,CAAC;oBACpB,KAAI,CAAC,eAAe,GAAG,EAAE,CAAgC,KAAI,CAAC,OAAO,CAAC,CAAC;iBACxE,EAAC,CAAC;aACJ,EAAC,CAAC;SACJ;QAED,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,IAAI,CACrD,SAAS,CAAC,EAAE,CAAC,EACb,GAAG;;;;QAAC,UAAC,CAAS,IAAK,OAAA,KAAI,CAAC,WAAW,CAAC,CAAC,CAAC,GAAA,EAAC,EACvC,GAAG;;;;QAAC,UAAC,KAAa,IAAK,OAAA,KAAI,CAAC,OAAO,CAAC,KAAK,CAAC,GAAA,EAAC,CAC5C,CAAC;KAEH;;;;;IAED,+CAAS;;;;IAAT,UAAU,MAAoC;QAC5C,OAAO,MAAM,GAAG,MAAM,CAAC,WAAW,GAAG,SAAS,CAAC;KAChD;;;;IAED,gDAAU;;;IAAV;QACE,OAAO,IAAI,CAAC,yBAAyB,CAAC;KACvC;;;;;;;;IAIO,iDAAW;;;;;;IAAnB,UAAoB,KAAa;QAC/B,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC,wBAAwB,EAAE,EAAE,CAAC,CAAC;QACpD,OAAO,KAAK,CAAC;KACd;;;;;;IAEO,6CAAO;;;;;IAAf,UAAgB,KAAa;QAC3B,IAAI,EAAE,KAAK,CAAC,EAAE;YACZ,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;;oBACZ,aAAW,GAAa,KAAK,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC;gBAC5D,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM;;;;gBAAC,UAAC,MAAmC;;wBACzD,EAAE,GAAY,IAAI;oBACtB,aAAW,CAAC,OAAO;;;;oBAAC,UAAC,IAAY,IAAK,OAAA,EAAE,GAAG,EAAE,IAAI,MAAM,CAAC,WAAW,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,GAAA,EAAC,CAAC;oBACtG,OAAO,EAAE,CAAC;iBACX,EAAC,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;aACjB;iBAAM;gBACL,OAAO,IAAI,CAAC,OAAO,CAAC;aACrB;SACF;KACF;;;;;IAEM,gDAAU;;;;IAAjB,UAAkB,KAAqD;QACrE,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC;QACxC,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;KAC1D;;;;IAED,iDAAW;;;IAAX;QACE,IAAI,CAAC,kBAAkB,CAAC,IAAI,EAAE,CAAC;KAChC;;gBAxFF,SAAS,SAAC;oBACT,QAAQ,EAAE,kBAAkB;oBAC5B,wfAAmD;oBAEnD,SAAS,EAAE,CAAC,yBAAyB,CAAC;;iBACvC;;;;gBAZQ,yBAAyB;;;4BAe/B,KAAK;0BACL,KAAK;uCAGL,MAAM;2BACN,MAAM;2BACN,KAAK;;IA2ER,kCAAC;CAzFD;;;;;;ACXA;IAyBE,gCAAmB,YAA6B;QAAhD,iBAsBC;QAtBkB,iBAAY,GAAZ,YAAY,CAAiB;;;;QALvC,qBAAgB,GAAW,EAAE,CAAC;QAC7B,kBAAa,GAA2C,IAAI,YAAY,EAA4B,CAAC;QAC/G,YAAO,GAAkB,IAAI,OAAO,EAAQ,CAAC;QAC7C,kBAAa,GAAY,CAAC,CAAC;QAGzB,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,IAAI,CAC3B,GAAG;;;QAAC;;;;YAIF,UAAU;;;YAAC;;gBAET,KAAI,CAAC,yBAAyB,EAAE,CAAC;gBACjC,IAAI,CAAC,CAAC,KAAI,CAAC,YAAY;oBACrB,CAAC,CAAC,KAAI,CAAC,YAAY,CAAC,KAAK;oBACzB,CAAC,CAAC,KAAI,CAAC,YAAY,CAAC,KAAK,CAAC,aAAa,EAAE;oBACvC,KAAI,CAAC,YAAY,CAAC,KAAK,CAAC,aAAa;yBAClC,gBAAgB,CAAC,QAAQ,EAAE,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAI,CAAC,EAAE,KAAK,CAAC,CAAC;iBAChE;aACJ,EAAC,CAAC;SACJ,EAAC,EACF,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC;QAEvC,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,IAAI,CAC3B,GAAG;;;QAAC,cAAM,OAAA,KAAI,CAAC,yBAAyB,EAAE,GAAA,EAAC,EAC3C,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC;KACxC;;;;;IAEO,0DAAyB;;;;IAAjC;QACE,IAAI,CAAC,CAAC,IAAI,CAAC,YAAY;YACrB,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK;YACzB,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,aAAa,EAAE;YAC3C,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,aAAa;iBAClC,mBAAmB,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;SAC/C;KACF;;;;IAED,4CAAW;;;IAAX;QACE,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;QACpB,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC;QAExB,IAAI,CAAC,yBAAyB,EAAE,CAAC;KAClC;;;;;IAGD,yCAAQ;;;;IAAR,UAAS,KAAY;;;YAEb,EAAE,GAAW,oBAAC,KAAK,CAAC,MAAM,IAAY,WAAW,IAAI,oBAAC,KAAK,CAAC,MAAM,IAAa,SAAS;QAC9F,IAAI,EAAE,GAAG,IAAI,CAAC,aAAa,EAAE;;YAE1B,IAAI,IAAI,CAAC,gBAAgB,KAAK,SAAS,EAAE;gBACxC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,EAAE,YAAY,EAAE,IAAI,CAAC,YAAY,EAAE,WAAW,EAAE,KAAK,EAAE,CAAC,CAAC;aAClF;iBAAM;;oBACC,SAAS,GAAW,IAAI,CAAC,gBAAgB,GAAG,GAAG,GAAG,oBAAC,KAAK,CAAC,MAAM,IAAa,YAAY,GAAG,GAAG;;oBAC9F,OAAO,GAAW,oBAAC,KAAK,CAAC,MAAM,IAAa,SAAS,GAAG,oBAAC,KAAK,CAAC,MAAM,IAAa,YAAY;;gBAEpG,IAAI,OAAO,GAAG,SAAS,EAAE;;oBAEvB,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,EAAE,YAAY,EAAE,IAAI,CAAC,YAAY,EAAE,WAAW,EAAE,KAAK,EAAE,CAAC,CAAC;iBAClF;aACF;SACF,AAEA;QACD,IAAI,CAAC,aAAa,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC;KACvC;;gBA1EF,SAAS,SAAC;oBACT,QAAQ,EAAE,iCAAiC;iBAC5C;;;;gBAbQ,eAAe;;;mCAmBrB,KAAK;gCACL,MAAM;;IAmET,6BAAC;CA5ED;;;;;;ACZA;IA2BI,6BAAY,OAAmB,EAAU,OAAmB;QAAnB,YAAO,GAAP,OAAO,CAAY;;;;QARnD,cAAS,GAAW,GAAG,CAAC;;;;QAKxB,cAAS,GAAW,GAAG,CAAC;QAI/B,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;KACxB;;;;IAE0B,uCAAS;;;IAApC;;YACQ,cAAc,GAAW,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,SAAS;QAEnE,IAAI,CAAC,CAAC,cAAc,IAAI,CAAC,CAAC,IAAI,CAAC,OAAO,EAAE;YACtC,IAAI,CAAC,cAAc,CAAC,WAAW,EAAE,KAAK,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,WAAW,EAAE,KAAK,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,EAAE;gBACjI,IAAI,CAAC,OAAO,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;aACrC;SACF;QAED,IAAI,CAAC,OAAO,CAAC,SAAS,GAAI,IAAI,CAAC,SAAS,CAAC;QACzC,IAAI,CAAC,OAAO,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;KACzC;;;;;;IAGO,8CAAgB;;;;;IAAxB,UAAyB,CAA8C;QACrE,QAAQ,CAAC,CAAC,WAAW,GAAG,CAAC,CAAC,WAAW,EAAE;KACxC;;gBA5CJ,SAAS,SAAC;oBACP,QAAQ,EAAE,cAAc;oBACxB,SAAS,EAAE,CAAC,UAAU,CAAC;iBAC1B;;;;gBALQ,UAAU;gBADsB,UAAU;;;0BAc9C,KAAK,SAAC,YAAY;4BAKlB,KAAK;4BAKL,KAAK;4BAOL,YAAY,SAAC,WAAW;;IAiB7B,0BAAC;CA7CD;;;;;;ACHA;IAEA;KAOC;;;;;;IAHG,oCAAS;;;;;IAAT,UAAU,KAAa;QAAE,cAAiB;aAAjB,UAAiB,EAAjB,qBAAiB,EAAjB,IAAiB;YAAjB,6BAAiB;;QACtC,OAAO,IAAI,GAAG,KAAK,CAAC;KACvB;;gBANJ,IAAI,SAAC;oBACF,IAAI,EAAE,cAAc;iBACvB;;IAKD,uBAAC;CAPD;;;;;;ACFA;IAYE,+BAAyC,UAAkB;QAAlB,eAAU,GAAV,UAAU,CAAQ;QALlC,YAAO,GAAW,EAAE,CAAC;QAClB,eAAU,GAAW,EAAE,CAAC;QAC1B,aAAQ,GAAW,EAAE,CAAC;KAGe;;;;IAE/D,2CAAW;;;IAAX;QAEE,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC;QAE1B,IAAI,IAAI,CAAC,cAAc,EAAE,EAAE;YACzB,IAAI,CAAC,OAAO,GAAG,UAAU,CAAC;YAC1B,IAAI,CAAC,UAAU,GAAG,QAAQ,CAAC;SAC5B;KACF;;;;;IAEO,8CAAc;;;;IAAtB;QACE,OAAO,iBAAiB,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;KACrF;;gBAvBF,SAAS,SAAC;oBACT,QAAQ,EAAE,SAAS;iBACpB;;;;6CAOc,MAAM,SAAC,WAAW;;;0BAL9B,WAAW,SAAC,UAAU;6BACtB,WAAW,SAAC,aAAa;2BACzB,WAAW,SAAC,WAAW;uBACvB,KAAK;;IAiBR,4BAAC;CAxBD;;;;;;ACHA;IAuDA;KAmHgC;;gBAnH/B,QAAQ,SAAC;oBACR,YAAY,EAAE;wBACZ,wBAAwB;wBACxB,oBAAoB;wBACpB,oBAAoB;wBACpB,8BAA8B;wBAC9B,oBAAoB;wBACpB,oBAAoB;wBACpB,mBAAmB;wBACnB,mBAAmB;wBACnB,2BAA2B;wBAC3B,sBAAsB;wBACtB,mBAAmB;wBACnB,qBAAqB;wBACrB,gBAAgB;qBACjB;oBACD,OAAO,EAAE;wBACP,YAAY;wBACZ,WAAW;wBACX,mBAAmB;wBAEnB,qBAAqB;wBACrB,eAAe;wBACf,iBAAiB;wBACjB,gBAAgB;wBAChB,kBAAkB;wBAClB,kBAAkB;wBAClB,cAAc;wBACd,eAAe;wBACf,eAAe;wBACf,aAAa;wBACb,aAAa;wBACb,iBAAiB;wBACjB,aAAa;wBACb,YAAY;wBACZ,gBAAgB;wBAChB,eAAe;wBACf,gBAAgB;wBAChB,aAAa;wBACb,aAAa;wBACb,iBAAiB;wBACjB,aAAa;wBACb,aAAa;wBACb,cAAc;wBACd,eAAe;wBACf,cAAc;wBACd,wBAAwB;wBACxB,cAAc;wBACd,kBAAkB;wBAClB,aAAa;wBACb,eAAe;wBACf,aAAa;wBACb,mBAAmB;wBACnB,mBAAmB;wBACnB,gBAAgB;wBAChB,cAAc;wBACd,cAAc;wBACd,aAAa;qBACd;oBACD,OAAO,EAAE;wBACP,wBAAwB;wBACxB,oBAAoB;wBACpB,oBAAoB;wBACpB,8BAA8B;wBAC9B,oBAAoB;wBACpB,oBAAoB;wBACpB,mBAAmB;wBACnB,mBAAmB;wBACnB,2BAA2B;wBAC3B,sBAAsB;wBACtB,mBAAmB;wBACnB,qBAAqB;wBACrB,gBAAgB;wBAChB,eAAe;wBACf,iBAAiB;wBACjB,gBAAgB;wBAChB,kBAAkB;wBAClB,kBAAkB;wBAClB,cAAc;wBACd,eAAe;wBACf,eAAe;wBACf,aAAa;wBACb,aAAa;wBACb,iBAAiB;wBACjB,aAAa;wBACb,YAAY;wBACZ,gBAAgB;wBAChB,eAAe;wBACf,gBAAgB;wBAChB,aAAa;wBACb,aAAa;wBACb,iBAAiB;wBACjB,aAAa;wBACb,aAAa;wBACb,cAAc;wBACd,eAAe;wBACf,cAAc;wBACd,wBAAwB;wBACxB,cAAc;wBACd,kBAAkB;wBAClB,aAAa;wBACb,eAAe;wBACf,aAAa;wBACb,mBAAmB;wBACnB,mBAAmB;wBACnB,gBAAgB;wBAChB,cAAc;wBACd,cAAc;wBACd,aAAa;qBACd;oBACD,SAAS,EAAE;wBACT,kBAAkB;wBAClB,iBAAiB;qBAClB;iBACF;;IAC8B,sBAAC;CAnHhC;;;;;;;;;;;;;;"}
