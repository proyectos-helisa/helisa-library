{"version":3,"file":"helisa-lib.js.map","sources":["ng://helisa-lib/lib/components/input-with-button/input-with-button.component.ts","ng://helisa-lib/lib/components/toast-helisa/toast-helisa.component.ts","ng://helisa-lib/lib/components/toast-helisa/toast-helisa.service.ts","ng://helisa-lib/lib/components/toast-helisa/toast-type.enum.ts","ng://helisa-lib/lib/components/alert-helisa/alert-helisa-type.enum.ts","ng://helisa-lib/lib/components/alert-helisa/alert-helisa.component.ts","ng://helisa-lib/lib/components/alert-helisa/alert-helisa.service.ts","ng://helisa-lib/lib/components/dependency-table-helisa/dependency-table-helisa.service.ts","ng://helisa-lib/lib/components/table-helisa/table-helisa.service.ts","ng://helisa-lib/lib/components/dependency-table-helisa/dependency-table-helisa.component.ts","ng://helisa-lib/lib/components/input-helisa/input-helisa.component.ts","ng://helisa-lib/lib/components/table-helisa/table-helisa.interface.ts","ng://helisa-lib/lib/components/table-helisa/table-helisa-connect.component.ts","ng://helisa-lib/lib/components/table-helisa/table-helisa.component.ts","ng://helisa-lib/lib/components/date-helisa/date-helisa.component.ts","ng://helisa-lib/lib/components/tree-helisa/tree-helisa.service.ts","ng://helisa-lib/lib/components/tree-helisa/tree-helisa-connect.ts","ng://helisa-lib/lib/components/tree-helisa/tree-helisa.component.ts","ng://helisa-lib/lib/components/autocomplete-helisa/autocomplete-helisa.component.service.ts","ng://helisa-lib/lib/components/autocomplete-helisa/autocomplete-helisa.component.ts","ng://helisa-lib/lib/directives/options-scroll.directive.ts","ng://helisa-lib/lib/directives/tooltip.directive.ts","ng://helisa-lib/lib/helisa-lib.module.ts"],"sourcesContent":["import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { FormControl, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'hel-input-with-button',\r\n  templateUrl: './input-with-button.component.html',\r\n  styleUrls: ['./input-with-button.component.sass']\r\n})\r\nexport class InputWithButtonComponent implements OnInit {\r\n\r\n  @Input() placeholder: string =\"\";  \r\n  @Input() inputFormControl:FormControl = new FormControl('',Validators.required);\r\n  @Input() requiredMessage:string = \"El campo es requerido\";\r\n  @Input() value:string = \"\";\r\n\r\n  @Output() done = new EventEmitter<string>();\r\n  @Output() cancel = new EventEmitter<any>();\r\n\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n    if(this.value != \"\"){\r\n      this.inputFormControl.setValue(this.value);\r\n    }\r\n  }\r\n\r\n\r\n  onDone(){\r\n    if(this.inputFormControl.valid)\r\n    {\r\n      this.done.emit(this.inputFormControl.value);\r\n    }\r\n  }\r\n\r\n  onCancel(){\r\n    this.cancel.emit();\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MAT_SNACK_BAR_DATA } from '@angular/material';\r\n\r\n@Component({\r\n  selector: 'hel-toast',\r\n  templateUrl: './toast-helisa.component.html',\r\n  styleUrls: ['./toast-helisa.component.sass']\r\n})\r\nexport class ToastHelisaComponent implements OnInit {\r\n\r\n  constructor(@Inject(MAT_SNACK_BAR_DATA) public data: any) { }\r\n\r\n  ngOnInit() {}\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material';\r\nimport { ToastType } from './toast-type.enum';\r\nimport { ToastHelisaComponent } from './toast-helisa.component';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ToastHelisaService {\r\n\r\n  durationInSeconds = 5;\r\n\r\n  constructor(private snackBar: MatSnackBar) { }\r\n\r\n  showToast(type:ToastType, message:String, subMessages?:String[]){\r\n    subMessages = subMessages ? subMessages : [];\r\n    this.snackBar.openFromComponent(ToastHelisaComponent, {\r\n      data: {message: message, type: type, subMessages:subMessages},\r\n      duration: this.durationInSeconds * 1000\r\n    });\r\n  }\r\n}\r\n","export enum ToastType {\r\n    DONE = \"done\",\r\n    ERROR = \"error\",\r\n    INFO = \"info\"\r\n}\r\n","export enum AlertHelisaType {\r\n    ERROR = \"ERROR\",\r\n    CONFIRMATION = \"CONFIRMATION\"\r\n}\r\n","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\nimport { AlertHelisaType } from './alert-helisa-type.enum';\r\n\r\n@Component({\r\n  selector: 'hel-alert',\r\n  templateUrl: './alert-helisa.component.html',\r\n  styleUrls: ['./alert-helisa.component.sass']\r\n})\r\nexport class AlertHelisaComponent implements OnInit {\r\n\r\n  content: string;\r\n  title: String;\r\n  hasCancel: boolean;\r\n\r\n  constructor(public dialogRef: MatDialogRef<AlertHelisaComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data) {\r\n      this.content = data.content;\r\n      this.title = data.title;\r\n      this.hasCancel = data.type == AlertHelisaType.CONFIRMATION;\r\n      dialogRef.disableClose = true;\r\n      dialogRef.keydownEvents().subscribe(event => {\r\n        if(event.code == 'Escape')\r\n          this.dialogRef.close(this.onCancel());\r\n      });\r\n    }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  onCancel(){\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { MatDialog } from '@angular/material';\r\nimport { Observable } from 'rxjs';\r\nimport { AlertHelisaComponent } from './alert-helisa.component';\r\nimport { AlertHelisaType } from './alert-helisa-type.enum';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AlertHelisaService {\r\n\r\n  constructor(public dialog: MatDialog) { }\r\n\r\n  openDialog(type:AlertHelisaType, title:String, content:String): Observable<any> {\r\n    const dialogRef = this.dialog.open(AlertHelisaComponent, {\r\n      width: '250px',\r\n      data: {title: title, content: content, type:type}\r\n    });\r\n\r\n    return dialogRef.afterClosed();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, Subject, BehaviorSubject } from 'rxjs';\r\nimport {ColumnConfig, RequestTableHelisa, AddRowButton, ConfigRowStyles} from '../table-helisa/table-helisa.interface';\r\nimport { EventDependency} from './dependency-table-helisa.component';\r\n\r\nexport interface ConfigTable {\r\n  columns: Array<ColumnConfig>,\r\n  isRemote: boolean,\r\n  dataSource?: Array<any>,\r\n  count?: number,\r\n  order?: number,\r\n  showTitle?: boolean,\r\n  indexRowSelect?: number,\r\n  isDragged?: boolean,\r\n  addRowButton?: AddRowButton,\r\n  configRowStylesFromColumn?: Array<ConfigRowStyles>,\r\n  isCellSelection?: boolean,\r\n  addBookButton?: boolean\r\n}\r\n\r\n@Injectable()\r\nexport class DependencyTableHelisaService {\r\n\r\n\r\n  tables: Subject<ConfigTable[]> = new Subject();\r\n  infoTables: Array<ConfigTable> = new Array();\r\n  \r\n  private emitVisibilityButton$ = new Subject<EventDependency>();\r\n  emitVisibilityButton = this.emitVisibilityButton$.asObservable();\r\n  \r\n  private emitVisibilityAllButtons$ = new Subject<boolean>();\r\n  emitVisibilityAllButtons = this.emitVisibilityAllButtons$.asObservable();\r\n\r\n  private emitIsCellSelection$ = new Subject<EventDependency>();\r\n  emitIsCellSelection = this.emitIsCellSelection$.asObservable();\r\n\r\n  private emitChangeColumns$ = new Subject<EventDependency>();\r\n  emitChangeColumns = this.emitChangeColumns$.asObservable();\r\n\r\n  emitTotal = new Subject<EventDependency>();\r\n  emitNextPage = new Subject<EventDependency>();\r\n\r\n  constructor() { }\r\n\r\n  /**\r\n   * retorna un Observable<ConfigTable[]>\r\n   */\r\n  getTables(): Observable<ConfigTable[]> {\r\n    return this.tables;\r\n  }\r\n\r\n  /**\r\n   * Actualiza las dependencias, agrendo la tabla que envian en el orden correspondiente o al final.\r\n   * TambiÃ©n remueve las dependecias que hay apartir de la tabla segun se indique en el parametro.\r\n   * @param configTable Objeto que contiene la configuraciÃ³n para la tabla.\r\n   * @param withRemoveDependency boolean por defecto es false, si es 'true' indica que remueva las dependencias apartir de el.\r\n   */\r\n  updateDependency(configTable: ConfigTable, withRemoveDependency: boolean = false) {\r\n    if (withRemoveDependency) {\r\n      this.infoTables = this.infoTables.slice(0, !configTable.order ? 0 : configTable.order);\r\n    }\r\n    if (!configTable.order || configTable.order >= this.infoTables.length) {\r\n      configTable.order = this.infoTables.length;\r\n    }\r\n    this.infoTables[configTable.order] = configTable;\r\n    if (configTable.isRemote) {\r\n      configTable.dataSource = null;\r\n      if (configTable.count === null)\r\n        throw \"hace falta el count\";\r\n    } else {\r\n      if (configTable.dataSource === null)\r\n        throw \"hace falta el dataSource\";\r\n      configTable.count = configTable.dataSource.length;\r\n    }\r\n    this.tables.next(this.infoTables);\r\n  }\r\n\r\n  /**\r\n   * Emite un evento de total con la informaciÃ³n para la tabla correspondiente\r\n   * @param event wrapper que contiene el indice de la tabla y la informaciÃ³n de la pagina \r\n   */\r\n  setTotal(event: EventDependency) {\r\n    this.emitTotal.next(event);\r\n  }\r\n\r\n  /**\r\n   * Emite un evento de agregar pagina con la pagina para la tabla correspondiente\r\n   * @param event wrapper que contiene el indice de la tabla y la informaciÃ³n de la pagina\r\n   */\r\n  addPage(event: EventDependency) {\r\n    this.emitNextPage.next(event);\r\n  }\r\n\r\n  selectIndexRow(config: ConfigTable) {\r\n    if (this.infoTables[config.order]) {\r\n      this.infoTables[config.order].indexRowSelect = config.indexRowSelect;\r\n      this.tables.next(this.infoTables); }\r\n  }\r\n\r\n\r\n  /**\r\n   * Muestra o esconde el boton una tabla en especifico\r\n   * @param event para indicar el index de la tabla y en \"data\" true o false\r\n   */\r\n  changeVisibilityButton(event:EventDependency){\r\n    this.emitVisibilityButton$.next(event);\r\n  }\r\n\r\n\r\n  /**\r\n   * Esconde los botones de todas las tablas\r\n   * @param show indicar si se muestran o no todos los botones de las tablas\r\n   */\r\n  changeVisibilityAllButtons(show:boolean){\r\n    this.emitVisibilityAllButtons$.next(show);\r\n  }\r\n\r\n  /**\r\n   * Para habilitar el manejo de selecciÃ³n de celda\r\n   * @param event para indicar el index de la tabla y en \"data\" true o false \r\n   */\r\n  changeisCellSelection(event:EventDependency) {\r\n    this.emitIsCellSelection$.next(event);\r\n  }\r\n\r\n   /**\r\n   * Para habilitar el cambio de columnas\r\n   * @param event para indicar el index de la tabla y en \"data\" columnas \r\n   */\r\n  changeColumnsByTable(event:EventDependency) {\r\n    this.emitChangeColumns$.next(event);\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {BehaviorSubject, Observable, Subject} from \"rxjs\";\r\nimport {TotalTableHelisa} from \"./table-helisa.interface\";\r\nimport {TableHelisaComponent} from \"./table-helisa.component\";\r\n\r\nexport interface TableHelisaServiceInfo<T> {\r\n  obj: T;\r\n  table?: TableHelisaComponent<any>;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TableHelisaService<T> {\r\n\r\n  private emitChangeSource = new Subject<TableHelisaServiceInfo<TotalTableHelisa>>();\r\n  private emitNextPage = new Subject<TableHelisaServiceInfo<T[]>>();\r\n\r\n  totalReturn = this.emitChangeSource.asObservable();\r\n  nextPageReturn = this.emitNextPage.asObservable();\r\n\r\n  setTotal(total: TotalTableHelisa, table?: TableHelisaComponent<T>) {\r\n    this.emitChangeSource.next({obj: total, table: table});\r\n  }\r\n\r\n  addPage(page: T[], table?: TableHelisaComponent<T>) {\r\n    this.emitNextPage.next({obj: page, table: table});\r\n  }\r\n\r\n\r\n  private emitVisibleButton$ = new Subject<boolean>();\r\n  /**\r\n   * Observable para saber si se debe mostrar o esconder el boton de add row\r\n   */\r\n  emitVisibleButton = this.emitVisibleButton$.asObservable();\r\n\r\n  /**\r\n   * para modificar el valor de si se muestra o no el boton de add row de la tabla\r\n   * @param change indicar si se muestra o no el boton de add row de la tabla\r\n   */\r\n  changeVisibilityButton(change:boolean){\r\n    this.emitVisibleButton$.next(change);\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, EventEmitter, Output, QueryList, ViewChildren, Input } from '@angular/core';\r\nimport { DependencyTableHelisaService, ConfigTable } from './dependency-table-helisa.service';\r\nimport {ColumnConfig, RequestTableHelisa, SelectObject} from '../table-helisa/table-helisa.interface';\r\nimport { TableHelisaService } from '../table-helisa/table-helisa.service';\r\nimport { TableHelisaComponent } from '../table-helisa/table-helisa.component';\r\n\r\nexport interface EventDependency {\r\n  index: number,\r\n  data: any\r\n}\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'hel-dependency-table',\r\n  templateUrl: './dependency-table-helisa.component.html',\r\n  styleUrls: ['./dependency-table-helisa.component.sass'],\r\n  providers: [DependencyTableHelisaService]\r\n})\r\nexport class DependencyTableHelisaComponent implements OnInit {\r\n\r\n  tables: Array<ConfigTable> = [];\r\n  @ViewChildren('viewTables') viewTables: QueryList<TableHelisaComponent<any>>;\r\n  @Input() showToolTip:boolean = true;\r\n\r\n  /**\r\n   * deprecated, use selectObject\r\n   */\r\n  @Output() selected: EventEmitter<EventDependency> = new EventEmitter<EventDependency>();\r\n  @Output() selectObject: EventEmitter<EventDependency> = new EventEmitter<EventDependency>();\r\n  @Output() nextPage: EventEmitter<EventDependency> = new EventEmitter<EventDependency>();\r\n  @Output() total: EventEmitter<EventDependency> = new EventEmitter<EventDependency>();\r\n  @Output() sort: EventEmitter<EventDependency> = new EventEmitter<EventDependency>();\r\n  @Output() drop: EventEmitter<EventDependency> = new EventEmitter<EventDependency>();\r\n  @Output() addRow: EventEmitter<number> = new EventEmitter<number>();\r\n  @Output() selectCell = new EventEmitter<EventDependency>();\r\n  @Output() bookClicked: EventEmitter<EventDependency> = new EventEmitter<EventDependency>();  \r\n  selectedObject: EventDependency = null;\r\n\r\n\r\n  /**\r\n     * Tiempo antes de ocultarla el mensaje del tooltip\r\n     */\r\n    @Input('hideDelay') hideDelay: number = 600;\r\n\r\n    /**\r\n     * Tiempo antes de mostra el mensaje del tooltip\r\n     */\r\n    @Input('showDelay') showDelay: number = 500;\r\n  \r\n\r\n  constructor(private dependencyTableHelisaService: DependencyTableHelisaService, private tableService: TableHelisaService<any>) { }\r\n\r\n  ngOnInit() {\r\n    this.getTables();\r\n    this.dependencyTableHelisaService.emitNextPage.subscribe(\r\n      event => {\r\n        this.tableService.addPage(event.data, this.viewTables.toArray()[event.index]);\r\n      }\r\n    );\r\n\r\n    this.dependencyTableHelisaService.emitTotal.subscribe(\r\n      event => {\r\n        this.tableService.setTotal(event.data, this.viewTables[event.index]);\r\n      }\r\n    );\r\n\r\n    // Observable para mostrar o esconder el boton de una tabla\r\n    this.dependencyTableHelisaService.emitVisibilityButton.subscribe(\r\n      data=>{        \r\n        if(!!data && data.index != undefined){\r\n            let table = this.tables[data.index];\r\n            if(!!table){\r\n              table.addRowButton.showButton = data.data;\r\n            }\r\n        }\r\n      }\r\n    )\r\n\r\n    //Observable para mostrar o esconder los botones de todas las tablas\r\n    this.dependencyTableHelisaService.emitVisibilityAllButtons.subscribe(\r\n      data=>{\r\n        if(data != undefined && data != null){\r\n          this.tables.forEach(element => {\r\n            if(!!element.addRowButton){\r\n              element.addRowButton.showButton = data;\r\n            }\r\n          });\r\n        }\r\n      }\r\n    )\r\n\r\n    //Observable para manejo de selecciÃ³n de celdas\r\n    this.dependencyTableHelisaService.emitIsCellSelection.subscribe(\r\n      data => {\r\n        if (!!data && data.index != undefined) {\r\n          let table = this.tables[data.index];\r\n          if (table) {\r\n            table.isCellSelection = data.data;\r\n          }\r\n        }\r\n      });\r\n\r\n    //Observable para manejo de columnas\r\n    this.dependencyTableHelisaService.emitChangeColumns.subscribe(\r\n      data => {\r\n        if (!!data && data.index != undefined) {\r\n          let table = this.tables[data.index];\r\n          if (table) {\r\n            table.columns = data.data;\r\n          }\r\n        }\r\n      });\r\n  }\r\n\r\n  /**\r\n   * retorna el servicio que gestiona el componente.\r\n   */\r\n  getService(): DependencyTableHelisaService {\r\n    return this.dependencyTableHelisaService;\r\n  }\r\n\r\n  /**\r\n   * Obtiene un observable con las tablas dependientes desde el servicio.\r\n   */\r\n  getTables() {\r\n    this.dependencyTableHelisaService.getTables()\r\n      .subscribe(tables => {\r\n        this.tables = tables;\r\n      }\r\n      );\r\n  }\r\n\r\n  /**\r\n   * Evento que se dispara desde una tabla, emitiendo un nuevo evento con el inidice de la tabla que dispara el evento y el evento generado.\r\n   * @param index indica el indice de la tabla seleccionada\r\n   * @param data retorna la fila que fue seleccionada\r\n   */\r\n  onSelectedDependency(index: number, event: SelectObject<any>) {\r\n    this.selectedObject = { index: index, data: event };\r\n    this.selected.emit({ index: index, data: event.value });\r\n    this.selectObject.emit({index: index, data: event});\r\n  }\r\n\r\n  /**\r\n   * Evento que se dispara desde una tabla, emitiendo un nuevo evento con el inidice de la tabla que dispara el evento y el evento generado.\r\n   * @param index indica el indice de la tabla que genera el evento\r\n   * @param event evento generado desde la tabla\r\n   */\r\n  onNextPage(index: number, event: RequestTableHelisa) {\r\n    this.nextPage.emit({ index: index, data: event });\r\n  }\r\n\r\n  /**\r\n   * Evento que se dispara desde una tabla, emitiendo un nuevo evento con el inidice de la tabla que dispara el evento y el evento generado.\r\n   * @param index indica el indice de la tabla que genera el evento\r\n   * @param event evento generado desde la tabla\r\n   */\r\n  onTotal(index: number, event: any) {\r\n    this.total.emit({ index: index, data: event });\r\n  }\r\n\r\n  /**\r\n   * Evento que se dispara desde una tabla, emitiendo un nuevo evento con el inidice de la tabla que dispara el evento y el evento generado.\r\n   * @param index indica el indice de la tabla que genera el evento\r\n   * @param event evento generado desde la tabla\r\n   */\r\n  onSort(index: number, event: any) {\r\n    this.sort.emit({ index: index, data: event });\r\n  }\r\n\r\n  /**\r\n   * Evento que se dispara desde una tabla, emitiendo un nuevo evento con el inidice de la tabla que dispara el evento y el evento generado.\r\n   * @param index indica el indice de la tabla que genera el evento\r\n   * @param event evento generado desde la tabla\r\n   */\r\n  onDrop(index: number, event: any) {\r\n    this.drop.emit({ index: index, data: event });\r\n  }\r\n\r\n  /**\r\n   * Evento que se dispara desde una tabla, emite el indice de la tabla al cual se le debe aÃ±adir una nueva fila\r\n   * @param index indica el indice de la tabla de la cual se dispara el evento\r\n   */\r\n  onAddRow(index:number){\r\n    this.addRow.emit(index);\r\n  }\r\n\r\n  selectedCell(index: number, event: any) {\r\n    if (this.tables[index].isCellSelection) {\r\n      this.selectCell.emit({ index: index, data: event });\r\n    }\r\n  }\r\n\r\n  onBookClicked(index,event){\r\n    this.bookClicked.emit({index:index ,data:event});\r\n  }\r\n}\r\n","import { Component, EventEmitter, Input, OnInit, Output, ViewChild, ElementRef } from '@angular/core';\r\nimport { FormControl } from \"@angular/forms\";\r\n\r\nexport enum InputHelisaType {\r\n  DEFAULT, IDENTITY, NUMERIC, DOUBLE\r\n}\r\n\r\n@Component({\r\n  selector: 'hel-input',\r\n  templateUrl: './input-helisa.component.html',\r\n  styleUrls: ['./input-helisa.component.sass']\r\n})\r\nexport class InputHelisaComponent implements OnInit {\r\n\r\n  private readonly DECIMAL_SEPARATOR = '.';\r\n  private readonly THOUSAND_SEPARATOR = ',';\r\n\r\n  @Input() placeholder = '';\r\n  @Output() setValue: EventEmitter<string> = new EventEmitter<string>();\r\n  @Input() isSearch = false;\r\n  //@Input() inputFormControl: FormControl = new FormControl('');\r\n  @Input() isFocused = false;\r\n  @Input() disabled = false;\r\n  @Input() type: InputHelisaType = InputHelisaType.DEFAULT;\r\n\r\n\r\n  formControlMask: FormControl = new FormControl('');\r\n  private realValue = '';\r\n  private inputFormReal: FormControl = new FormControl('');\r\n\r\n  @ViewChild('inputText') nameInput: ElementRef;\r\n\r\n  constructor() {\r\n  }\r\n\r\n  @Input()\r\n  set inputFormControl(formControl: FormControl) {\r\n    this.inputFormReal = formControl;\r\n    this.inputFormReal.valueChanges.subscribe(data => {\r\n      this.statusChange(this.inputFormReal.status);\r\n      if (this.getMaskedValue(data) != this.formControlMask.value)\r\n        this.change(data);\r\n    });\r\n    this.formControlMask.setValidators(this.inputFormReal.validator)\r\n    this.change(this.inputFormReal.value);\r\n    this.inputFormReal.statusChanges.subscribe(\r\n      data => {\r\n        this.statusChange(data);\r\n      }\r\n    );\r\n  }\r\n\r\n  private statusChange(data) {\r\n    if (data == 'INVALID') {\r\n      this.formControlMask.setErrors({key: 'Error de validaciÃ³n.'});\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (this.isFocused) {\r\n      this.nameInput.nativeElement.focus();\r\n    }\r\n  }\r\n\r\n  search() {\r\n    this.setValue.emit(this.realValue);\r\n  }\r\n\r\n  change(event) {\r\n    if (event != null) event = event + '';\r\n    let position = this.nameInput.nativeElement.selectionStart;\r\n    const length = event ? event.length : 0;\r\n    this.realValue = this.getRealValue(event);\r\n    if (this.getMaskedValue(this.realValue) != this.formControlMask.value) {\r\n      this.formControlMask.setValue(this.getMaskedValue(this.realValue));\r\n      position += this.nameInput.nativeElement.value.length - length;\r\n      this.nameInput.nativeElement.selectionStart = position;\r\n      this.nameInput.nativeElement.selectionEnd = position;\r\n    }\r\n    this.inputFormReal.setValue(this.realValue);\r\n    //this.formControlMask.updateValueAndValidity();\r\n    //this.formControlMask.markAsTouched();\r\n//    this.inputFormReal.updateValueAndValidity();\r\n    //this.formControlMask.updateValueAndValidity();\r\n  }\r\n\r\n  private getMaskedValue(str) {\r\n    if (str == null)\r\n      return str;\r\n    str = str + '';\r\n    if (this.type == InputHelisaType.DEFAULT)\r\n      return str;\r\n    let maskedStr = '';\r\n    if (this.type == InputHelisaType.IDENTITY) {\r\n      for (let i = str.length - 1, j = 0; i >= 0; i-- , j++) {\r\n        if (j > 0 && j % 3 == 0)\r\n          maskedStr = this.DECIMAL_SEPARATOR + maskedStr;\r\n        maskedStr = str[i] + maskedStr;\r\n      }\r\n    }\r\n    if (this.type == InputHelisaType.NUMERIC) {\r\n      for (let i = str.length - 1, j = 0; i >= 0; i-- , j++) {\r\n        if (j > 0 && j % 3 == 0)\r\n          maskedStr = this.THOUSAND_SEPARATOR + maskedStr;\r\n        maskedStr = str[i] + maskedStr;\r\n      }\r\n    }\r\n    if (this.type == InputHelisaType.DOUBLE) {\r\n      if (str.indexOf(this.DECIMAL_SEPARATOR) >= 0)\r\n        for (let i = str.indexOf(this.DECIMAL_SEPARATOR); i < str.length; i++)\r\n          maskedStr += str[i];\r\n      for (let i = (str.indexOf(this.DECIMAL_SEPARATOR) >= 0 ? str.indexOf(this.DECIMAL_SEPARATOR) : str.length) - 1, j = 0; i >= 0; i-- , j++) {\r\n        if (j > 0 && j % 3 == 0)\r\n          maskedStr = this.THOUSAND_SEPARATOR + maskedStr;\r\n        maskedStr = str[i] + maskedStr;\r\n      }\r\n    }\r\n    return maskedStr;\r\n  }\r\n\r\n  private getRealValue(str) {\r\n    if (str == null)\r\n      return str;\r\n    str = str + '';\r\n    let realStr = '';\r\n    if (this.type == InputHelisaType.DEFAULT)\r\n      return str;\r\n    if (this.type == InputHelisaType.IDENTITY) {\r\n      for (let i = 0; i < str.length; i++)\r\n        if (str[i].match('[a-zA-Z0-9]'))\r\n          realStr += str[i];\r\n    }\r\n    if (this.type == InputHelisaType.NUMERIC) {\r\n      for (let i = 0; i < str.length; i++)\r\n        if (str[i].match('[0-9]'))\r\n          realStr += str[i];\r\n    }\r\n    if (this.type == InputHelisaType.DOUBLE) {\r\n      let haveDot = false;\r\n      for (let i = 0; i < str.length; i++) {\r\n        if (str[i].match('[0-9]') || ((str[i] == this.DECIMAL_SEPARATOR) && !haveDot))\r\n          realStr += str[i];\r\n        haveDot = haveDot || (str[i] == this.DECIMAL_SEPARATOR);\r\n      }\r\n    }\r\n    return realStr;\r\n  }\r\n}\r\n","import {SortDirection} from \"@angular/material\";\r\n\r\nexport interface ColumnConfig {\r\n  name: string;\r\n  title?: string;\r\n  visible?: boolean;\r\n  sortable?: boolean;\r\n  groupable?: boolean;\r\n  totalType?: TotalType;\r\n  searchable?: boolean;\r\n  sortDirection?: SortDirection;\r\n  subtitle?: string;\r\n  colspanTitle?: number;\r\n  colspanSubtitle?: number;\r\n  columnStyle?: string;\r\n}\r\n\r\nexport interface AddRowButton{  \r\n  text: string;\r\n  showButton:boolean;\r\n}\r\n\r\nexport enum EventScope {\r\n  USER, CODE_CALL\r\n}\r\n\r\nexport enum TotalType {\r\n  SUM, AVERAGE, COUNT\r\n}\r\n\r\nexport enum ChangeColumnConfigurationType {\r\n  SORT, UNKNOWN, TOTAL\r\n}\r\n\r\nexport interface EventColumn {\r\n  column: ColumnConfig;\r\n  columnConfigurations: Array<ColumnConfig>;\r\n  type: ChangeColumnConfigurationType;\r\n}\r\n\r\nexport interface TotalTableHelisa {\r\n  column: ColumnConfig;\r\n  value: number;\r\n}\r\n\r\nexport interface TotalGroup {\r\n  sum: number;\r\n  count: number;\r\n}\r\n\r\nexport interface EventSearch {\r\n  text: string;\r\n  columnConfigurations: Array<ColumnConfig>;\r\n}\r\n\r\nexport interface RequestTableHelisa {\r\n  page: number;\r\n  body: any;\r\n}\r\n\r\nexport interface DropElement<T>{\r\n value: T;\r\n order: number;\r\n}\r\n\r\nexport interface SelectObject<T> {\r\n  value: T;\r\n  scope: EventScope;\r\n}\r\n\r\nexport enum TableHelisaType {\r\n  REMOTE, LOCAL\r\n}\r\n\r\n\r\nexport interface Cell {\r\n  column: ColumnConfig;\r\n  row: any;\r\n }\r\n\r\n export interface ConfigCellStyles{\r\n   cellData: any;\r\n   classCell: string \r\n }\r\n\r\n export interface ConfigRowStyles{\r\n  column: ColumnConfig;\r\n  data: any,\r\n  classRow: string \r\n}\r\n\r\n//@dynamic\r\nexport abstract class ColumnConfigUtil {\r\n  static getValue(obj: any, column: ColumnConfig): any {\r\n    return column.name.split('.').reduce((o, field) => o && o[field], obj);\r\n  }\r\n}\r\n\r\n","import {ColumnConfig} from \"./table-helisa.interface\";\r\nimport {Observable} from \"rxjs\";\r\n\r\n\r\nexport class TableHelisaConnectComponent<T> {\r\n  page: number;\r\n  isLastPage: boolean;\r\n  isUsed: boolean;\r\n\r\n  constructor() {\r\n    this.page = 0;\r\n    this.isLastPage = false;\r\n    this.isUsed = false;\r\n  }\r\n\r\n  public getBody(columnConfig: Array<ColumnConfig>, search: string): any {\r\n    return {};\r\n  }\r\n\r\n  nextPage() {\r\n    return this.page++;\r\n  }\r\n}\r\n","import { AfterViewInit, Component, EventEmitter, Input, OnInit, Output, ViewChild, ElementRef } from '@angular/core';\r\nimport { MatSort, MatTable, MatTableDataSource } from '@angular/material';\r\nimport { Sort } from '@angular/material/typings/sort';\r\n\r\nimport {\r\n  AddRowButton,\r\n  Cell,\r\n  ChangeColumnConfigurationType,\r\n  ColumnConfig,\r\n  ColumnConfigUtil,\r\n  ConfigCellStyles,\r\n  ConfigRowStyles,\r\n  DropElement,\r\n  EventColumn,\r\n  EventScope,\r\n  EventSearch,\r\n  RequestTableHelisa,\r\n  SelectObject,\r\n  TableHelisaType,\r\n  TotalGroup,\r\n  TotalType\r\n} from './table-helisa.interface';\r\nimport { TableHelisaService } from './table-helisa.service';\r\nimport { TableHelisaConnectComponent } from './table-helisa-connect.component';\r\nimport { CdkDragDrop, moveItemInArray } from '@angular/cdk/drag-drop';\r\nimport {of} from 'rxjs';\r\n\r\ninterface RowData {\r\n  data: any;\r\n  rowType: RowType;\r\n}\r\n\r\nenum RowType {\r\n  GROUP_TITLE, GROUP_FOOTER, ROW\r\n}\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'hel-table',\r\n  templateUrl: './table-helisa.component.html',\r\n  styleUrls: ['./table-helisa.component.sass']\r\n})\r\nexport class TableHelisaComponent<T> implements OnInit, AfterViewInit {\r\n\r\n  private tableHelisaConnectComponent: TableHelisaConnectComponent<T>;\r\n  totalData: Array<number>;\r\n  rawData: Array<T>;\r\n  data: MatTableDataSource<RowData>;\r\n  displayedColumns: string[] = [];\r\n  displayedColumnsWithTitle: string[] = [];\r\n  displayedColumnsWithSubtitle: string[] = [];\r\n  displayedColumnsWithFooter: string[] = [];\r\n  columnConfig: Array<ColumnConfig>;\r\n  selectedObject: T;\r\n  lastSearch: string;\r\n  type: TableHelisaType = TableHelisaType.LOCAL;\r\n  indexRowSelect: number;\r\n  private scrollCount: number = 0;\r\n  hasSubtitle = false;\r\n  private indexRowStartDrag = -1;\r\n  private lastIndexRowDrag = -1;\r\n  private dataBeforeDrag = null;\r\n\r\n  @ViewChild(MatSort) matSort: MatSort;\r\n  @ViewChild(MatTable) matTable: MatTable<any>;\r\n  @ViewChild(MatTable,{read:ElementRef}) matTableElement: ElementRef;\r\n  @ViewChild(\"containerTable\") containerTable:ElementRef;\r\n\r\n  @Output() sort: EventEmitter<EventColumn> = new EventEmitter<EventColumn>();\r\n  @Output() total: EventEmitter<EventColumn> = new EventEmitter<EventColumn>();\r\n  @Output() search: EventEmitter<EventSearch> = new EventEmitter<EventSearch>();\r\n\r\n  /**\r\n   * Deprecado, cambiar por electObject\r\n   */\r\n  @Output() select: EventEmitter<T> = new EventEmitter<T>();\r\n  @Output() selectCell = new EventEmitter<Cell>();\r\n  @Output() selectObject: EventEmitter<SelectObject<T>> = new EventEmitter<SelectObject<T>>();\r\n  @Output() nextPage: EventEmitter<RequestTableHelisa> = new EventEmitter<RequestTableHelisa>();\r\n  @Input() showTitle = true;\r\n  @Input() isCellSelection = false;\r\n  @Input() count: number;\r\n  @Input() configCellStyles: Array<ConfigCellStyles>;\r\n  @Input() configRowStylesFromColumn: Array<ConfigRowStyles>;\r\n  @Input() selectedCells: Cell;\r\n  @Output() drop: EventEmitter<DropElement<T>> = new EventEmitter<DropElement<T>>();\r\n  @Input() isDragged = false;\r\n  @Input() addRowButton: AddRowButton = { showButton: false, text: \"\" };\r\n  @Output() addRow: EventEmitter<void> = new EventEmitter<void>();\r\n  @Output() bookClicked: EventEmitter<T> = new EventEmitter<T>();\r\n  @Input() addBookButton: boolean = false;\r\n  @Input() showToolTip: boolean = true;\r\n  showFooter = false;\r\n  showSearch = false;\r\n\r\n\r\n\r\n  /**\r\n     * Tiempo antes de ocultarla el mensaje del tooltip\r\n     */\r\n    @Input('hideDelay') hideDelay: number = 600;\r\n\r\n    /**\r\n     * Tiempo antes de mostra el mensaje del tooltip\r\n     */\r\n    @Input('showDelay') showDelay: number = 500;\r\n   \r\n\r\n  constructor(private tableService: TableHelisaService<T>) { }\r\n\r\n  ngOnInit() {\r\n    this.tableService.nextPageReturn.subscribe(\r\n      data => {\r\n        if (!data.table || data.table === this) {\r\n          this.receivePage(data.obj);\r\n        }\r\n      }\r\n    );\r\n    this.tableService.totalReturn.subscribe(info => {\r\n      if (info) {\r\n        this.columnConfig.forEach((column, idx) => {\r\n          if (column === info.obj.column) {\r\n            this.totalData[idx] = this.getGroupValue(column, { sum: info.obj.value, count: this.count });\r\n          }\r\n        });\r\n      }\r\n    });\r\n    this.matSort.sortChange.subscribe(\r\n      (event: Sort) => {\r\n        const column: ColumnConfig = this.columnConfig.find(c => c.name === event.active);\r\n        column.sortDirection = event.direction;\r\n        this.sort.emit({ column, columnConfigurations: this.columnConfig, type: ChangeColumnConfigurationType.SORT });\r\n      }\r\n    );\r\n\r\n    this.tableService.emitVisibleButton.subscribe(\r\n      data => {\r\n        if (data != undefined && data != null) {\r\n          this.addRowButton.showButton = data;\r\n        }\r\n\r\n      }\r\n    )\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    if (this.isCellSelection) {\r\n      this.matTable.renderRows();\r\n    }\r\n  }\r\n\r\n  @Input()\r\n  set isRemote(w: boolean) {\r\n    this.type = w ? TableHelisaType.REMOTE : TableHelisaType.LOCAL;\r\n    this.tableHelisaConnectComponent = new TableHelisaConnectComponent<T>();\r\n    if (this.type === TableHelisaType.REMOTE) {\r\n      this.goNextPage();\r\n    } else {\r\n      this.tableHelisaConnectComponent.page++;\r\n    }\r\n  }\r\n\r\n  @Input()\r\n  set columnConfiguration(columnConfiguration: Array<ColumnConfig>) {\r\n    this.hasSubtitle = false;\r\n    this.columnConfig = columnConfiguration;\r\n    this.displayedColumns.splice(0, this.displayedColumns.length);\r\n    if (columnConfiguration) {\r\n      columnConfiguration.forEach(column => {\r\n        if (column.visible) {\r\n          this.displayedColumns.push(column.name);\r\n        }\r\n        if (!this.hasSubtitle) {\r\n          this.hasSubtitle = column.subtitle != undefined;\r\n        }\r\n      });\r\n      if (this.rawData) {\r\n        this.dataSource = this.rawData;\r\n      }\r\n    }\r\n    this.displayedColumnsWithTitle.splice(0, this.displayedColumnsWithTitle.length);\r\n    this.displayedColumnsWithSubtitle.splice(0, this.displayedColumnsWithSubtitle.length);\r\n    this.displayedColumnsWithFooter.splice(0, this.displayedColumnsWithFooter.length);\r\n    this.getColumnsWithTitle().forEach(col => this.displayedColumnsWithTitle.push(col));\r\n    this.getHeaderSubtitle().forEach(col => this.displayedColumnsWithSubtitle.push(col));\r\n    this.footerDisplayedColumns().forEach(col => this.displayedColumnsWithFooter.push(col));\r\n  }\r\n\r\n  private _dataSource: Array<any> = [];\r\n\r\n  @Input()\r\n  set dataSource(dataSource: Array<any>) {\r\n    this._dataSource = dataSource;\r\n    this.rawData = dataSource;\r\n    if (this.rawData) { this.prepareDataSource(); }\r\n  }\r\n\r\n  get dataSource():Array<any>{\r\n    return this._dataSource;\r\n  }\r\n\r\n  @Input()\r\n  set selectedIndexRow(idRowSelected: number) {\r\n    this.indexRowSelect = idRowSelected;\r\n    if (this.rawData && this.rawData.length) {\r\n      if ((idRowSelected >= this.rawData.length || idRowSelected < 0)) {\r\n        this.indexRowSelect = 0;\r\n      }\r\n      this.selectRow({ data: this.rawData[this.indexRowSelect], rowType: RowType.ROW }, false);\r\n    }\r\n  }\r\n\r\n  private prepareDataSource() {\r\n    const changeData = Array<RowData>();\r\n    let haveGroup = false;\r\n    let groupFooter: Array<TotalGroup>;\r\n    this.columnConfig.forEach(column => {\r\n      if (column.totalType !== undefined && (this.type === TableHelisaType.LOCAL || this.tableHelisaConnectComponent.page <= 1)) {\r\n        this.totalData = new Array<number>(this.columnConfig.length);\r\n        this.showFooter = true;\r\n        this.total.emit({ column, columnConfigurations: this.columnConfig, type: ChangeColumnConfigurationType.TOTAL });\r\n      }\r\n      this.showSearch = this.showSearch || column.searchable;\r\n      haveGroup = haveGroup || column.groupable;\r\n    });\r\n    if (haveGroup) {\r\n      this.rawData = this.rawData.sort((a, b) => {\r\n        let result = 0;\r\n        this.columnConfig.forEach(column => {\r\n          if (result === 0) {\r\n            result = this.compare(a, b);\r\n          }\r\n        });\r\n        return result;\r\n      });\r\n    }\r\n    this.rawData.forEach(row => {\r\n      if (haveGroup && (changeData.length === 0 || this.compare(changeData[changeData.length - 1].data, row) !== 0)) {\r\n        if (groupFooter) {\r\n          changeData.push({ data: groupFooter, rowType: RowType.GROUP_FOOTER });\r\n        }\r\n        changeData.push({ data: row, rowType: RowType.GROUP_TITLE });\r\n        groupFooter = new Array<TotalGroup>(this.columnConfig.length);\r\n      }\r\n      if (haveGroup) { this.addTotalGroup(groupFooter, row); }\r\n      changeData.push({ data: row, rowType: RowType.ROW });\r\n    });\r\n    this.data = new MatTableDataSource<RowData>(changeData);\r\n    if (this.rawData && this.rawData.length && this.indexRowSelect && !this.selectedObject) {\r\n      if (this.indexRowSelect >= this.rawData.length || this.indexRowSelect < 0)\r\n        this.indexRowSelect = 0;\r\n      this.selectRow({ data: this.rawData[this.indexRowSelect], rowType: RowType.ROW }, false);\r\n    }\r\n  }\r\n\r\n  private addTotalGroup(rowTotal: Array<TotalGroup>, row: any) {\r\n    this.columnConfig.forEach((column, index) => {\r\n      if (column.totalType !== undefined) {\r\n        if (rowTotal[index] === undefined) {\r\n          rowTotal[index] = { sum: ColumnConfigUtil.getValue(row, column), count: 1 };\r\n        } else {\r\n          rowTotal[index].sum += ColumnConfigUtil.getValue(row, column);\r\n          rowTotal[index].count++;\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  private compare(a: any, b: any): number {\r\n    let ws = 0;\r\n    this.columnConfig.forEach(column => {\r\n      if (ws === 0 && column.groupable) {\r\n        if (ColumnConfigUtil.getValue(a, column) < ColumnConfigUtil.getValue(b, column)) { ws = -1; } else if (ColumnConfigUtil.getValue(a, column) > ColumnConfigUtil.getValue(b, column)) { ws = 1; }\r\n      }\r\n    });\r\n    return ws;\r\n  }\r\n\r\n  getGroupDescription(obj: any): string {\r\n    let result = '';\r\n    this.columnConfig.forEach(column => {\r\n      if (column.groupable) {\r\n        result += (result.length ? ' - ' : '') + ColumnConfigUtil.getValue(obj, column);\r\n      }\r\n    });\r\n    return result;\r\n  }\r\n\r\n  isGroupTitle(index, item): boolean {\r\n    return item.rowType === RowType.GROUP_TITLE;\r\n  }\r\n\r\n  isRow(index, item): boolean {\r\n    return item.rowType === RowType.ROW;\r\n  }\r\n\r\n  isGroupFooter(index, item): boolean {\r\n    return item.rowType === RowType.GROUP_FOOTER;\r\n  }\r\n\r\n  footerDisplayedColumns(): Array<string> {\r\n    return this.displayedColumns.map(name => 'footer-' + name);\r\n  }\r\n\r\n  getGroupValue(column: ColumnConfig, data: TotalGroup): number {\r\n    if (column.totalType === TotalType.SUM) { return data.sum; }\r\n    if (column.totalType === TotalType.COUNT) { return data.count; }\r\n    if (column.totalType === TotalType.AVERAGE) { return 1. * data.sum / data.count; }\r\n    return undefined;\r\n  }\r\n\r\n  getValue(obj: any, column: ColumnConfig) {\r\n    return ColumnConfigUtil.getValue(obj, column);\r\n  }\r\n\r\n  getValueTooltip(obj: any, column: ColumnConfig) {\r\n    if (this.showToolTip) {\r\n      return ColumnConfigUtil.getValue(obj, column);\r\n    } else { return null }\r\n  }\r\n\r\n  searchText(text) {\r\n    this.lastSearch = text;\r\n    this.search.emit({ text, columnConfigurations: this.columnConfig });\r\n  }\r\n\r\n  selectRow(row, isUser) {\r\n    this.selectedObject = row.data;\r\n    this.select.emit(this.selectedObject);\r\n    this.selectObject.emit({ value: this.selectedObject, scope: isUser ? EventScope.USER : EventScope.CODE_CALL });\r\n  }\r\n\r\n  onScroll(event) {\r\n    const element: HTMLDivElement = event.target;\r\n    if (element.scrollHeight - element.scrollTop < 1000) {\r\n      this.goNextPage();\r\n    }\r\n  }\r\n\r\n  private goNextPage() {\r\n    if (!this.tableHelisaConnectComponent.isLastPage && !this.tableHelisaConnectComponent.isUsed) {\r\n      this.tableHelisaConnectComponent.isUsed = true;\r\n      this.nextPage.emit({\r\n        page: this.tableHelisaConnectComponent.nextPage(),\r\n        body: this.tableHelisaConnectComponent.getBody(this.columnConfig, this.lastSearch)\r\n      });\r\n    }\r\n  }\r\n\r\n  private receivePage(data: T[]) {\r\n    if (!this.rawData) {\r\n      this.rawData = new Array<T>();\r\n    }\r\n    this.rawData = this.rawData.concat(data);\r\n    this.dataSource = this.rawData;\r\n    this.tableHelisaConnectComponent.isLastPage = data.length === 0;\r\n    this.tableHelisaConnectComponent.isUsed = false;\r\n  }\r\n\r\n  dblClickCell() {\r\n    this.selectCell.emit(this.selectedCells);\r\n  }\r\n\r\n  selectedCell(element, column: ColumnConfig) {\r\n    this.selectedCells = { column: column, row: element };\r\n    this.selectCell.emit(this.selectedCells);\r\n  }\r\n\r\n  isSelectedCell(row, column: ColumnConfig): boolean {\r\n    if (this.isCellSelection) {\r\n      if (this.selectedCells != null) {\r\n        if (this.selectedCells.column.name === column.name &&\r\n          this.selectedCells.row.data === row.data) {\r\n          return true;\r\n        }\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  getClassToCell(row, column: ColumnConfig) {\r\n    let classToCell = new Array<string>();\r\n    if (this.configCellStyles) {\r\n      let found = this.configCellStyles.find(c => {\r\n        return c.cellData === this.getValue(row, column);\r\n      });\r\n      if (found) {\r\n        classToCell.push(found.classCell);\r\n      }\r\n    }\r\n    if (column.columnStyle)\r\n      classToCell.push(column.columnStyle);\r\n    return classToCell;\r\n  }\r\n\r\n  getClassToRow(row) {\r\n    const classToRow = new Array<string>();\r\n    if(row === this.selectedObject && !this.isCellSelection)\r\n      classToRow.push('');\r\n    if (this.configRowStylesFromColumn) {\r\n      let found = this.configRowStylesFromColumn.find(c => {\r\n        return c.data === this.getValue(row, c.column);\r\n      });\r\n      if (found) {\r\n        classToRow.push(found.classRow);\r\n      }\r\n    }\r\n    return classToRow;\r\n  }\r\n\r\n  onDrop(event) {\r\n    if(this.isDragged && this.indexRowStartDrag >= 0) {\r\n      const rowIndex = this.getRowIndex(event.pageY);\r\n      const array: RowData[] = this.dataBeforeDrag.data;\r\n      const rawData = this.rawData;\r\n      moveItemInArray(array, this.indexRowStartDrag, rowIndex);\r\n      moveItemInArray(rawData, this.indexRowStartDrag, rowIndex);\r\n      this.drop.emit({ value: array[rowIndex].data, order: rowIndex });\r\n      this.rawData = rawData;\r\n      this.data = new MatTableDataSource(array);\r\n      event.stopPropagation();\r\n    }\r\n  }\r\n\r\n  tableKeydown(event: KeyboardEvent) {\r\n    if (!this.isCellSelection) {\r\n      let currentIndex = this.data.data.findIndex(row => row.data === this.selectedObject);\r\n      let newSelection = -10;\r\n      if (event.key === 'ArrowDown') {\r\n        this.scrollCount++;\r\n        this.data.data.forEach((row, index) => {\r\n          if (newSelection == -10 && index > currentIndex && row.rowType == RowType.ROW)\r\n            newSelection = index;\r\n        });\r\n      }\r\n      if (event.key === 'ArrowUp') {\r\n        this.scrollCount--;\r\n        currentIndex = this.data.data.length - currentIndex - 1;\r\n        this.data.data.reverse().forEach((row, index) => {\r\n          if (newSelection == -10 && index > currentIndex && row.rowType == RowType.ROW)\r\n            newSelection = index;\r\n        });\r\n        this.data.data.reverse();\r\n        if (newSelection != -10) {\r\n          newSelection = this.data.data.length - newSelection - 1;\r\n        }\r\n      }\r\n      if (newSelection != -10) {\r\n        this.selectRow(this.data.data[newSelection], true);\r\n      }\r\n      if (Math.abs(this.scrollCount) >= 2)\r\n        this.scrollCount = 0;\r\n      else\r\n        event.preventDefault();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Emite el evento cuando se da click al boton AddRow\r\n   */\r\n  onAddRow() {\r\n    this.addRow.emit();\r\n  }\r\n\r\n  onBookClicked(selectedObject) {\r\n    this.bookClicked.emit(selectedObject);\r\n  }\r\n\r\n  getHeaderSubtitle(): string[] {\r\n    let x = this.columnConfig.map((column, index) => {\r\n      if (column.visible && column.subtitle != undefined)\r\n        return 'subtitle' + index;\r\n      else\r\n        return null;\r\n    }).filter(data => data != null);\r\n    return x;\r\n  }\r\n\r\n  getColumnsWithTitle(){\r\n    return this.columnConfig.filter(column => \r\n        column.visible && column.title != undefined\r\n    ).map(col => col.name);\r\n  }\r\n\r\n  dragger(event) {\r\n    if (this.isDragged && this.indexRowStartDrag >= 0) {\r\n      const rowIndex = this.getRowIndex(event.pageY);\r\n      if (rowIndex != this.lastIndexRowDrag) {\r\n        this.lastIndexRowDrag = rowIndex;\r\n        //This can have a memory problem with big data\r\n        const array: RowData[] = [...this.dataBeforeDrag.data];\r\n        moveItemInArray(array, this.indexRowStartDrag, rowIndex);\r\n        this.data = new MatTableDataSource(array);\r\n      }\r\n      event.preventDefault();\r\n      return true;\r\n    }\r\n  }\r\n\r\n  startDrag(event) {\r\n    this.indexRowStartDrag = this.getRowIndex(event.pageY);\r\n    this.lastIndexRowDrag = this.indexRowStartDrag;\r\n    this.dataBeforeDrag = this.data;\r\n  }\r\n\r\n  private getRowIndex(pageY) {\r\n    let offsetTop = 0;\r\n    let container = this.containerTable.nativeElement;\r\n    while ((container != null) && (offsetTop == 0)) {\r\n      offsetTop = container.offsetTop;\r\n      container = container.parentElement;\r\n    }\r\n    let rowIndex = -1;\r\n    const rows: HTMLCollection = this.matTableElement.nativeElement.children[1].children;\r\n    for (let i = 0; i < rows.length; i++){\r\n      const row: HTMLElement = (rows[i] as HTMLElement);\r\n      if (pageY - offsetTop > row.offsetTop - this.containerTable.nativeElement.scrollTop)\r\n        rowIndex = i;\r\n    }\r\n    if (rowIndex < 0) rowIndex = 0;\r\n    return rowIndex;\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\n\r\nimport * as moment_ from 'moment';\r\nconst moment = moment_;\r\n\r\nimport { MatDatepickerInputEvent, MatDatepicker } from '@angular/material';\r\nimport { filter, tap } from 'rxjs/operators';\r\n\r\n\r\nexport enum TypeCalendarEnum{\r\n  NORMAL = 'norma',\r\n  MONTH_YEAR = 'mounth-year'\r\n}\r\n\r\n\r\n@Component({\r\n  selector: 'hel-date-helisa',\r\n  templateUrl: './date-helisa.component.html',\r\n  styleUrls: ['./date-helisa.component.css'],\r\n})\r\nexport class DateHelisaComponent implements OnInit {\r\n  \r\n\r\n  @Input() floatLabel: 'never' | 'always' | 'auto' = 'never';\r\n  @Input() dateFormControl: FormControl = new FormControl('');\r\n  private date:Date = new Date();\r\n\r\n  /**\r\n   * Formato de fecha.\r\n   * Los formatos validos son aquellos que maneja la libreria momentjs  \r\n   * https://momentjs.com/docs/#/parsing/string-format/\r\n   */\r\n  @Input() dateFormat = 'DD/MM/YYYY';\r\n  @Input() errorMessage = 'La fecha no concuerda con el formato ';\r\n  @Input() placeholder = this.dateFormat;\r\n\r\n  /**\r\n   * Si este valor es diferente a TypeCalendarEnum.NORMAL no\r\n   * serÃ¡ tomado en cuenta\r\n   */\r\n  @Input() typeCalendar:TypeCalendarEnum = TypeCalendarEnum.NORMAL;\r\n  \r\n\r\n  dateToVisualize:FormControl;\r\n\r\n  /**\r\n   * Para evitar nuevos eventos miestras se realiza el parseo\r\n   */\r\n  private isFromInputEvent:boolean= false;\r\n\r\n  /**\r\n   * Verificar si el formato es valido\r\n   */\r\n  invalidFormat:boolean = false;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {            \r\n    this.dateToVisualize= new FormControl('',this.dateFormControl.validator)\r\n    this.formHandler();\r\n    \r\n    if(this.typeCalendar == TypeCalendarEnum.MONTH_YEAR){\r\n      this.dateFormat = 'MM/YYYY'\r\n      this.placeholder = this.dateFormat;\r\n    }        \r\n    \r\n    /**\r\n     * establecer valor por defecto de la fecha\r\n     */\r\n    let incommingDate = moment(this.dateFormControl.value,this.dateFormat).format(this.dateFormat);\r\n    if(this.dateFormControl.value != '' && incommingDate != 'Invalid date'){\r\n      this.dateToVisualize.setValue(incommingDate);\r\n    }\r\n    \r\n  }\r\n\r\n  get typeCalendarEnum(){\r\n    return TypeCalendarEnum;\r\n  }\r\n\r\n  /**\r\n   * Determina como se debe inicializar la visualizacion del calendar\r\n   */\r\n  getStartView():string{\r\n    //multi-year\r\n    if(this.typeCalendar == this.typeCalendarEnum.MONTH_YEAR){\r\n      return 'multi-year';\r\n    }else{\r\n      return 'month';\r\n    }    \r\n  }\r\n\r\n  private formHandler(){   \r\n    this.dateToVisualize.valueChanges\r\n    .pipe(\r\n      tap(date => {        \r\n        if(date.length > this.dateFormat.length){\r\n          this.invalidFormat = true\r\n        }else{this.invalidFormat = false}\r\n      }),\r\n      filter(date => date.length == this.dateFormat.length)\r\n    )    \r\n    .subscribe(date=>{         \r\n      this.invalidFormat = false;\r\n      let isValid = moment(date,this.dateFormat,true).isValid()\r\n      let result = moment(date,this.dateFormat).format('YYYY-MM-DD');\r\n      \r\n      \r\n      if(!!result && (result == 'Invalid date' || !isValid)){\r\n        this.invalidFormat = true;\r\n        return\r\n      }\r\n\r\n      if(!!result ){        \r\n        if(!this.isFromInputEvent){          \r\n          this.isFromInputEvent = true;\r\n          let subString:string[] = result.split('-');\r\n\r\n          let year = parseFloat(subString[0])\r\n          let month = parseFloat(subString[1])\r\n          let day = parseFloat(subString[2])\r\n\r\n          this.date.setFullYear(year)\r\n          this.date.setDate(day)\r\n          this.date.setMonth(month - 1) // -1 por que los meses se toman como los indices en un array\r\n          \r\n          /** cuando es de tipo MOUNTH_YEAR retorna el ultimo dia del mes seleccionado */\r\n          if(this.typeCalendar == TypeCalendarEnum.MONTH_YEAR){\r\n            this.date = moment(this.date).endOf('month').toDate();\r\n          }\r\n\r\n          this.dateToVisualize.setValue(moment(this.date,'YYYY-MM-DD').format(this.dateFormat))\r\n          this.dateFormControl.setValue(this.date)          \r\n          \r\n          this.isFromInputEvent = false;\r\n        }else{\r\n          setTimeout(() => {\r\n            this.isFromInputEvent = false\r\n          }, 1500);\r\n        }\r\n        \r\n      }\r\n    })\r\n\r\n\r\n    this.dateFormControl.valueChanges\r\n    .subscribe(date=>{\r\n      let incommingDate = moment(date,this.dateFormat).format(this.dateFormat);\r\n      if(this.dateFormControl.value != '' && incommingDate != 'Invalid date'){\r\n        this.dateToVisualize.setValue(incommingDate);\r\n      }      \r\n    })\r\n  }\r\n\r\n\r\n  /**\r\n   * Evento que se dispara luego seleccionar un mes\r\n   * @param chosenMonthDate \r\n   * @param datepicker \r\n   */\r\n  monthSelectedHandler(chosenMonthDate: moment_.Moment, datepicker: MatDatepicker<moment_.Moment>){    \r\n    \r\n    if(this.typeCalendar == TypeCalendarEnum.MONTH_YEAR){\r\n      datepicker.close();\r\n      let date = moment(chosenMonthDate).endOf('month').toDate();\r\n  \r\n      this.dateToVisualize.setValue(moment(date,'YYYY-MM-DD').format(this.dateFormat))\r\n      this.dateFormControl.setValue(date);\r\n    }   \r\n  }\r\n\r\n  /**\r\n   * Evento desde el control touch del calendar\r\n   * @param type \r\n   * @param event \r\n   */\r\n  dateChange(type: string, event: MatDatepickerInputEvent<Date>) {\r\n        \r\n    this.dateToVisualize.setValue(moment(event.value,'YYYY-MM-DD').format(this.dateFormat))\r\n    this.dateFormControl.setValue(event.value);\r\n  }\r\n\r\n  getErrorMessage():string{\r\n    return this.errorMessage+ this.dateFormat\r\n  }\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { Subject, BehaviorSubject, Subscriber } from 'rxjs';\r\nimport { Node } from './node';\r\n\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class TreeHelisaService {\r\n\r\n    // Observable string sources\r\n    private emitNodeSelected = new BehaviorSubject<number | string>(1);\r\n    // Observable string streams\r\n    nodeSelected = this.emitNodeSelected.asObservable();\r\n    // Service message commands\r\n    changeNodeSelected(idResidentialArea: number | string) {\r\n        this.emitNodeSelected.next(idResidentialArea);\r\n    }\r\n\r\n\r\n\r\n    // Observable string sources\r\n    private emitDataSource = new BehaviorSubject<Node>(undefined);    \r\n    // Observable string streams\r\n    dataSourceObservable = this.emitDataSource.asObservable();\r\n    // Service message commands\r\n    changeDataSource(data:Node) {\r\n        this.emitDataSource.next(data);\r\n    }\r\n\r\n\r\n      \r\n    // Expand node observable\r\n      private emitExpandAllNodes = new BehaviorSubject<boolean>(null);          \r\n      nodeExpand = this.emitExpandAllNodes.asObservable();      \r\n      expandAllNodes(expand:boolean) {\r\n          this.emitExpandAllNodes.next(expand);\r\n      }\r\n\r\n\r\n      // Collapse node observable\r\n      private emitCollapseAllNodes = new BehaviorSubject<boolean>(null);          \r\n      nodeCollapse = this.emitCollapseAllNodes.asObservable();      \r\n      collapseAllNodes(collapse:boolean) {\r\n          this.emitCollapseAllNodes.next(collapse);\r\n      }\r\n\r\n\r\n      private emitRefreshTree = new Subject<void>();\r\n      refreshTreeObservable = this.emitRefreshTree.asObservable();\r\n      refreshTree(){\r\n          this.emitRefreshTree.next();\r\n      }\r\n\r\n      private emitRefreshTreeWithPagination = new Subject<void>();\r\n      refreshTreeWithPaginationObservable = this.emitRefreshTreeWithPagination.asObservable();\r\n      refreshTreeWithPagination(){\r\n          this.emitRefreshTreeWithPagination.next();\r\n      }\r\n\r\n\r\n\r\n      private emitExpandOneNode = new Subject<Node>();\r\n      expandOneNodeObservable = this.emitExpandOneNode.asObservable();\r\n      expandOneNode(node:Node){\r\n        this.emitExpandOneNode.next(node);\r\n      }\r\n\r\n      private emitCollapseOneNode = new Subject<Node>();\r\n      collapseOneNodeObservable = this.emitCollapseOneNode.asObservable();\r\n      collapseOneNode(node:Node){\r\n        this.emitCollapseOneNode.next(node);\r\n      }\r\n\r\n    constructor(){\r\n        \r\n    }\r\n  \r\n}\r\n","export class TreeHelisaConnect<T> {\r\n    page: number;\r\n    isLastPage: boolean;\r\n    isUsed: boolean;\r\n  \r\n    constructor() {\r\n      this.page = 0;\r\n      this.isLastPage = false;\r\n      this.isUsed = false;\r\n    }          \r\n  \r\n    nextPage() {\r\n      return this.page = this.page + 1;\r\n    }\r\n  }","import { Component, OnInit, Input, Output, EventEmitter, ViewChild, AfterViewInit, ElementRef } from '@angular/core';\r\nimport { NestedTreeControl } from '@angular/cdk/tree';\r\nimport { MatTreeNestedDataSource, MatTree } from '@angular/material';\r\nimport { Node } from './node';\r\nimport { TreeHelisaService } from './tree-helisa.service';\r\nimport { Router } from '@angular/router';\r\nimport * as _ from 'lodash';\r\nimport { TreeHelisaConnect } from './tree-helisa-connect';\r\nimport { FormControl } from '@angular/forms';\r\n\r\n\r\n\r\nexport interface RequestTreeHelisa {\r\n  page: number;  \r\n}\r\n\r\n@Component({\r\n  selector: 'hel-tree',\r\n  templateUrl: './tree-helisa.component.html',\r\n  styleUrls: ['./tree-helisa.component.sass'],\r\n  host:{\r\n    '(document:keyup)': 'onKeyDown($event)'\r\n  }\r\n})\r\nexport class TreeHelisaComponent implements OnInit,AfterViewInit {\r\n\r\n  //#region  ====== Variables =============\r\n  private treeHelisaConnect: TreeHelisaConnect<Node>;\r\n  formEdit:FormControl;\r\n  @ViewChild('tree') tree:MatTree<any>;\r\n  private selectedOptions = new Map<any, any>();\r\n  /**\r\n   * Datos del Arbol\r\n   */\r\n  @Input() data:Node;\r\n\r\n  \r\n  /**\r\n   * Establece si se mostraran las opciones de \r\n   * Creacion, ediciÃ³n y eliminacion del nodo\r\n   */\r\n  @Input() showOptionsNode:boolean = true; \r\n  \r\n\r\n  /**\r\n   * Retorna el id del nodo removido\r\n   */\r\n  @Output() removed = new EventEmitter<number | string>();\r\n\r\n  /**\r\n   * Retorna un nodo editado\r\n   */\r\n  @Output() edited = new EventEmitter<Node>();\r\n\r\n  /**\r\n   * Retorna un nodo sin id del nodo , pero si con el parent\r\n   * para conocer a cual fue aÃ±adido\r\n   */\r\n  @Output() added = new EventEmitter<Node>();\r\n  @Output() collapseParent = new EventEmitter<boolean>();\r\n  @Output() rangeScrolled = new EventEmitter<RequestTreeHelisa>();\r\n  @Output() nodeSelected = new EventEmitter<number | string>();\r\n  @Output() dobleClick = new EventEmitter<number | string>();\r\n  @Output() keypressDelete = new EventEmitter<number | string | null>();\r\n  @Output() keypressInsert = new EventEmitter<number | string | null>();\r\n  @Output() checkedOptionNode = new EventEmitter<number | string | null>();\r\n  @Output() uncheckedOptionNode = new EventEmitter<number | string | null>();\r\n  \r\n  treeControl = new NestedTreeControl<Node>(node => node.children);\r\n  dataSource = new MatTreeNestedDataSource<Node>();\r\n\r\n\r\n  isSingleClick: Boolean = true;  \r\n  currentNode: Node = null;\r\n\r\n  //#endregion ====== Variables ========\r\n\r\n  constructor(private treeHelisaService:TreeHelisaService,\r\n    private router:Router,\r\n    private elementRef:ElementRef) {    \r\n    //cargar datos pasados por el @Input\r\n    if (!!this.data) {      \r\n      let data = this.data;\r\n      this.data = null;\r\n      this.receivePage(data.children);\r\n    } else {\r\n      this.dataSource.data = [];     \r\n      this.treeControl.dataNodes = []; \r\n    }\r\n    \r\n  }\r\n\r\n  \r\n\r\n  ngOnInit() {     \r\n    // si se cargan datos por medio del servicio\r\n    this.treeHelisaService.dataSourceObservable    \r\n    .subscribe((res) => {         \r\n      if(!!res && !!res.children){              \r\n        this.receivePage(res.children)\r\n      }else{\r\n        this.dataSource.data = [];\r\n        this.treeControl.dataNodes = [];\r\n      }    \r\n    });\r\n\r\n    // Observable, si cambia el nodo seleccionado por medio del servicio\r\n    this.treeHelisaService.nodeSelected\r\n      .subscribe((res)=>{\r\n        if(!!this.data && !!this.data.children)\r\n        this.selectNode(this.data,res);\r\n      })\r\n\r\n    \r\n      this.treeHelisaService.refreshTreeObservable\r\n      .subscribe(res=>{\r\n        this.refreshTree();\r\n      })\r\n      \r\n      this.treeHelisaService.refreshTreeWithPaginationObservable\r\n      .subscribe(res=>{\r\n        this.refreshTreeWithPagination();\r\n      })    \r\n  }\r\n\r\n  ngAfterViewInit() {     \r\n    this.treeHelisaService.nodeExpand.subscribe(res=>{\r\n      if(res != null){\r\n        if(res){\r\n          this.tree.treeControl.expandAll();\r\n        }\r\n      }\r\n    })\r\n\r\n    this.treeHelisaService.nodeCollapse.subscribe(res=>{\r\n      if(res != null){\r\n        if(res){\r\n          this.tree.treeControl.collapseAll();\r\n        }\r\n      }\r\n    })\r\n\r\n\r\n    this.treeHelisaService.expandOneNodeObservable\r\n      .subscribe(res => {        \r\n        if (res != undefined) {          \r\n          this.treeControl.expand(res);          \r\n        }\r\n      })\r\n\r\n      this.treeHelisaService.collapseOneNodeObservable\r\n      .subscribe(res => {        \r\n        if (res != undefined) {\r\n          this.treeControl.collapse(res);\r\n        }\r\n      })\r\n  }\r\n\r\n\r\n  //#region  ====== Events ===========\r\n  onRedirect(node:Node){\r\n\r\n    this.isSingleClick = true;\r\n        setTimeout(()=>{\r\n            if(this.isSingleClick){\r\n              \r\n              this.selectNode(this.data,node.id);    \r\n\r\n              // if(!!node && !node.children){\r\n              if(!!node){\r\n                this.nodeSelected.emit(node.id);\r\n                this.currentNode = node;\r\n              }\r\n            }\r\n         },350)   \r\n  }\r\n\r\n  onScroll(event) {\r\n    const element: HTMLDivElement = event.target;\r\n\r\n    if ((element.offsetHeight + element.scrollTop) >= element.scrollHeight) {      \r\n      this.goNextPage();\r\n    }\r\n  }\r\n\r\n  onEdit(node:Node){  \r\n    node.isEditable = true;\r\n  }\r\n\r\n  onAdd(node:Node){\r\n    // si no tiene hijos instanciar el array\r\n    if(!node.children){\r\n      node.children = [];\r\n    }\r\n    node.children.push(\r\n      {\r\n        id: null,\r\n        name: \"\",       \r\n        isSelected: false,\r\n        parent : node,\r\n        isEditable : true\r\n      }\r\n    );     \r\n    this.refreshTree();\r\n  }\r\n\r\n  onDelete(node:Node){ \r\n    // Remueve el nodo utilizando la libreria de lodash   \r\n    _.remove(node.parent.children, node);\r\n    \r\n    this.refreshTree();\r\n    this.removed.emit(node.id);\r\n  }\r\n\r\n  onEdited(node:Node,value:any){\r\n    \r\n      node.name = value;\r\n\r\n      if(node.id == null && node.name == \"\"){              \r\n        _.remove(node.parent.children, node);\r\n        this.refreshTree();\r\n      }\r\n      else if(node.id && node.id != null && node.name.trim() !== \"\"){\r\n        this.edited.emit(node);\r\n        node.isEditable = false;\r\n      }else if(!!node.id && node.id == null && node.name.trim() !== \"\"){\r\n        this.added.emit(node);\r\n        node.isEditable = false;\r\n      }         \r\n  }\r\n\r\n  onCancel(node:Node,value:string){\r\n    // Si no tiene id por ser un nuevo item, lo elimina\r\n    if(node.id == null){\r\n      _.remove(node.parent.children, node);\r\n      this.refreshTree();  \r\n    }\r\n\r\n    node.isEditable = false; \r\n  }\r\n\r\n  onDblClick(node:Node){\r\n    this.isSingleClick = false;\r\n    this.dobleClick.emit(node.id);\r\n  }\r\n\r\n  onKeyDown(event:KeyboardEvent){      \r\n    switch (event.key) {\r\n      case 'Delete':\r\n        this.keypressDelete.emit((!!this.currentNode && this.currentNode.id)?this.currentNode.id:null)\r\n        break;\r\n      case 'Insert':\r\n        this.keypressInsert.emit((!!this.currentNode && this.currentNode.id)?this.currentNode.id:null)\r\n        break;\r\n      case 'ArrowDown':        \r\n        this.moveDownIntoTree();\r\n        break;\r\n      case 'ArrowUp':          \r\n          this.moveUpIntoTree();\r\n        break;     \r\n    }\r\n    \r\n  }\r\n\r\n  //#endregion ======= Events ========\r\n\r\n\r\n\r\n  //#region  ======== Metodos =============\r\n\r\n  private moveUpIntoTree(){\r\n    if(!!this.data){\r\n      // si aun no hay ningun node seleccionado selecciona el primero\r\n      if(this.currentNode == null){\r\n        this.selectNode(this.data,this.data.children[0].id);\r\n        this.currentNode = this.data.children[0];\r\n        if(!!this.currentNode.children && this.currentNode.children.length > 0){\r\n          this.treeHelisaService.expandOneNode(this.currentNode);\r\n        }\r\n      }else{\r\n        if(!!this.currentNode.parent && this.currentNode.id != null){\r\n          // obtiene el indice del nodo seleccionado actualmente\r\n          let index = this.currentNode.parent.children.indexOf(this.currentNode);\r\n          \r\n          if(this.currentNode.parent.id == null && index == 0){ \r\n            return 0;\r\n          }else{// si tiene nodos al mismo nivel salta al nodo anterior\r\n            if (index != undefined && index == 0) {\r\n              this.currentNode = this.currentNode.parent;\r\n              this.selectNode(this.data, this.currentNode.id);\r\n              if (!!this.currentNode.children && this.currentNode.children.length > 0) {\r\n                this.treeHelisaService.expandOneNode(this.currentNode);\r\n              }\r\n            } else { // si no tiene nodos al mismo nivel salta al nodo padre\r\n              this.currentNode = this.currentNode.parent.children[index - 1];\r\n              this.selectNode(this.data, this.currentNode.id);\r\n              if (!!this.currentNode.children && this.currentNode.children.length > 0) {\r\n                this.treeHelisaService.expandOneNode(this.currentNode);\r\n              }\r\n            } \r\n          }         \r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  private moveDownIntoTree(){      \r\n    if(!!this.data){\r\n      if(this.currentNode == null){\r\n        this.selectNode(this.data,this.data.children[0].id);\r\n        this.currentNode = this.data.children[0];\r\n        if(!!this.currentNode.children && this.currentNode.children.length > 0){\r\n          this.treeHelisaService.expandOneNode(this.currentNode);\r\n        }\r\n      }else{\r\n        if(!!this.currentNode){\r\n          // obtiene el indice del nodo seleccionado actualmente\r\n          let index = (!!this.currentNode && !!this.currentNode.parent)?this.currentNode.parent.children.indexOf(this.currentNode): null;\r\n          \r\n          // si tiene childrens pasa al primer children\r\n          if(!!this.currentNode.children  &&\r\n            this.currentNode.children.length > 0){\r\n\r\n            this.currentNode = this.currentNode.children[0];\r\n            this.selectNode(this.data,this.currentNode.id);\r\n            if(!!this.currentNode.children && this.currentNode.children.length > 0){\r\n              this.treeHelisaService.expandOneNode(this.currentNode);\r\n            }\r\n          }\r\n          // Si es el ultimo nodo del array pasa al nodo hermano del padre (tio) hacia abajo\r\n          else if(index != undefined &&  \r\n            index == this.currentNode.parent.children.length - 1 &&\r\n            this.currentNode.parent.parent != null &&\r\n            this.currentNode.parent.parent.children != null &&\r\n            this.currentNode.parent.parent.children.length > 0){\r\n\r\n            let indexOfParent = this.currentNode.parent.parent.children.indexOf(this.currentNode.parent); \r\n            this.currentNode = (this.currentNode.parent.parent.children[indexOfParent + 1] == undefined)? this.currentNode : this.currentNode.parent.parent.children[indexOfParent + 1];\r\n\r\n            this.selectNode(this.data,this.currentNode.id);\r\n            if(!!this.currentNode.children && this.currentNode.children.length > 0){\r\n              this.treeHelisaService.expandOneNode(this.currentNode);\r\n            }\r\n          }else{ // si no tiene nodos al mismo nivel salta al siguiente hacia abajo\r\n            this.currentNode = this.currentNode.parent.children[index + 1];\r\n            this.selectNode(this.data,this.currentNode.id);\r\n            if(!!this.currentNode.children && this.currentNode.children.length > 0){\r\n              this.treeHelisaService.expandOneNode(this.currentNode);\r\n            }\r\n          }\r\n\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Verifica si el nodo tiene hijos\r\n   */\r\n  hasChild = (_: number, node: Node) => !!node.children && node.children.length > 0;\r\n\r\n  /**\r\n   * Obtiene la descripcion completa del nodo\r\n   * @example Nodo padre,nodo hijo,nodo nieto\r\n   * @param node Debe tener todos los parent llenos hacia arriba\r\n   */\r\n  public static getDescription(node:Node):string{\r\n      let result:string[]=[node.name];        \r\n      let concat:string=\"\";\r\n\r\n      if(node.parent){          \r\n        result.push(this.getDescription(node.parent))\r\n      }                \r\n\r\n\r\n      if(result.length == 1)\r\n          return node.name;\r\n\r\n      result = result.reverse();\r\n\r\n      for (let i = 0; i < result.length; i++) {            \r\n          let element = result[i];\r\n          concat = concat + element + ((i == result.length-1)?\"\":\",\");                \r\n      }\r\n              \r\n      return concat;\r\n  }\r\n\r\n\r\n  /**\r\n   * Actualiza el arbol borrando toda la data , solo cuando no se utiliza paginacion\r\n   */\r\n  private refreshTree(){\r\n    this.data = null;\r\n    let _data = this.dataSource.data; \r\n    this.dataSource.data = null;\r\n    this.dataSource.data = _data;\r\n    this.treeControl.dataNodes = _data;\r\n  }\r\n\r\n  /**\r\n   * Actualiza el arbol cuando se utiliza la paginacion (Cuando no , utilice el metodo refreshTree())    \r\n   */\r\n  private refreshTreeWithPagination(){    \r\n    let _data = this.dataSource.data; \r\n    this.dataSource.data = null;\r\n    this.dataSource.data = _data;\r\n    this.treeControl.dataNodes = _data;\r\n  }\r\n\r\n\r\n\r\n\r\n  private goNextPage() {\r\n    if (!this.treeHelisaConnect.isLastPage && !this.treeHelisaConnect.isUsed) {\r\n      this.treeHelisaConnect.isUsed = true;\r\n      this.rangeScrolled.emit({\r\n        page: this.treeHelisaConnect.nextPage()              \r\n      });\r\n    }\r\n  }\r\n\r\n  private receivePage(data: Node[]) {    \r\n    if(!this.data){ this.data = {id:null,name:\"root\",isSelected:false}}\r\n    if (!this.data.children) { this.data.children = new Array<Node>(); this.treeHelisaConnect = new TreeHelisaConnect<Node>(); }    \r\n    this.data.children = this.data.children.concat(data);\r\n    this.data.children.forEach(node=>{\r\n      this.fillParent(node,this.data);\r\n    })\r\n\r\n    \r\n    this.data.children = this.reorderByOrderIndex(this.data.children);\r\n    \r\n    this.dataSource.data = this.data.children;    \r\n    this.treeControl.dataNodes = this.data.children;\r\n    this.treeHelisaConnect.isLastPage = data.length === 0;\r\n    this.treeHelisaConnect.isUsed = false;\r\n  }\r\n\r\n  /**\r\n   * Llenan el campo parent de todos los nodos hijos\r\n   * @param node \r\n   * @param parent \r\n   */\r\n  private fillParent(node:Node,parent:Node){\r\n\r\n    node.parent = parent;\r\n    if(node.children && node.children.length > 0){\r\n      node.children.forEach(item=>{\r\n        this.fillParent(item,node);   \r\n      })      \r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * coloca como true del isSelected del nodo que concuerde con el id\r\n   * @param node \r\n   * @param id \r\n   */\r\n  private selectNode(node:Node,id:number|string){ \r\n      \r\n      this.upSelectNode(node)\r\n   \r\n      if(node == undefined || node.id == undefined){\r\n        return null;\r\n      }\r\n      if(node.id == id){\r\n        node.isSelected = true\r\n        this.expandAllParents(node);\r\n        return node;\r\n      }else if (node.children != null){\r\n           var i;\r\n           var result = null;\r\n           for(i=0; result == null && i < node.children.length; i++){\r\n                result = this.selectNode(node.children[i], id);                \r\n           }\r\n           return result;\r\n      }\r\n      return null; \r\n  }\r\n\r\n  private expandAllParents(node:Node){\r\n    if(!!node && !!node.parent){\r\n      this.treeHelisaService.expandOneNode(node.parent);\r\n      this.expandAllParents(node.parent);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Elimina el isSelected de todos los nodos\r\n   * @param node \r\n   */\r\n  private upSelectNode(node: Node) {\r\n    if (!!node && node.isSelected != undefined) {\r\n      node.isSelected = false;\r\n      if (!!node.children)\r\n        for (var i = 0; i < node.children.length; i++) {\r\n          this.upSelectNode(node.children[i]);\r\n        }\r\n    }\r\n  }\r\n\r\n  getClassNode(node: Node): string[]{\r\n    let classNode = [];\r\n    if(node.isSelected) {\r\n      classNode.push(\"isSelected\");\r\n    }\r\n    if(node.classNode){\r\n      classNode.push(node.classNode);\r\n    }\r\n    return classNode;\r\n  }\r\n\r\n  onEditMode(node, editMode) {\r\n    this.getSelectedOptions(node).editMode = editMode;\r\n  }\r\n\r\n  onSelectOption(event, node) {\r\n    node.isCheckedOption = event.source.selected;\r\n    if (node.isCheckedOption)\r\n      this.checkedOptionNode.emit(node.id);\r\n    else\r\n      this.uncheckedOptionNode.emit(node.id);\r\n  }\r\n\r\n  getSelectedOptions(node: Node): any {\r\n    if (this.selectedOptions.has(node.id))\r\n      this.reloadSelectedOptions(node, this.selectedOptions.get(node.id).editMode);\r\n    else\r\n      this.reloadSelectedOptions(node, false);\r\n    return this.selectedOptions.get(node.id);\r\n  }\r\n\r\n  private reloadSelectedOptions(node: Node, editMode: boolean) {\r\n    const array = new Array();\r\n    node.options.forEach(option => {\r\n      if (option.isCheckedOption)\r\n        array.push(option.id);\r\n    });\r\n    const obj = {formControl: new FormControl(array), editMode: editMode};\r\n    this.selectedOptions.set(node.id, obj);\r\n  }\r\n\r\n  /**\r\n   * Retorna el primer Node que encuentre segun el id enviado o null si no hay ninguno\r\n   * @param id  number | string \r\n   * @returns Node o null si no hay un nodo con ese id\r\n   */\r\n  getNodeById(id: number | string) : Node{\r\n    let queue: Node[] = [...this.dataSource.data];\r\n    while(queue.length > 0){\r\n      let curr = queue.shift();\r\n      if(curr.id === id){\r\n        return curr;\r\n      } else {\r\n        if(!!curr.children)\r\n          queue.push(...curr.children)\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  reorderByOrderIndex(node:Node[]):Node[]{\r\n    if(!!node && node.length > 0){\r\n      \r\n      try {\r\n        node = _.orderBy(node, x=> x.orderIndex ,['asc'])        \r\n        node.forEach(element => {\r\n          if(!!element.children && element != null){\r\n            element.children = this.reorderByOrderIndex(element.children)\r\n          }\r\n        });\r\n        return node;\r\n      } catch (error) {\r\n        console.log(error)\r\n      }\r\n    }\r\n    \r\n    \r\n  }\r\n\r\n  //#endregion ====== Metodos ============\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from \"rxjs\";\r\nimport { OptionAutocompleteHelisa } from './autocomplete-helisa.component';\r\n\r\n@Injectable()\r\nexport class AutocompleteHelisaService<T> {\r\n\r\n  private emitChangeSource = new BehaviorSubject<Array<OptionAutocompleteHelisa<T>>>([]);\r\n  public dataSource$ = this.emitChangeSource.asObservable();\r\n\r\n  constructor() { }\r\n\r\n  setDataSource(options: Array<OptionAutocompleteHelisa<T>>) {\r\n    this.emitChangeSource.next(options);\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { Observable, of, Subject } from 'rxjs';\r\nimport { map, startWith, throttleTime,debounceTime } from 'rxjs/operators';\r\nimport { AutocompleteHelisaService } from './autocomplete-helisa.component.service';\r\n\r\nexport interface OptionAutocompleteHelisa<T> {\r\n  value: T;\r\n  displayText: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'hel-autocomplete',\r\n  templateUrl: './autocomplete-helisa.component.html',\r\n  styleUrls: ['./autocomplete-helisa.component.css'],\r\n  providers: [AutocompleteHelisaService]\r\n})\r\nexport class AutocompleteHelisaComponent<T> implements OnInit {\r\n\r\n  @Input() myControl = new FormControl();\r\n  @Input() options = new Array<OptionAutocompleteHelisa<T>>();\r\n  filteredOptions: Observable<OptionAutocompleteHelisa<T>[]>;\r\n  selectedValue: OptionAutocompleteHelisa<T>;\r\n  @Output() onSelectedValue: EventEmitter<T> = new EventEmitter<T>();\r\n  @Output() nextPage: EventEmitter<void> = new EventEmitter<void>();\r\n  @Input() isRemote = false;\r\n  isLoading = false;\r\n\r\n    \r\n  onScrollObservable:Subject<any> = new Subject<any>();\r\n\r\n  constructor(private autocompleteHelisaService: AutocompleteHelisaService<T>) {\r\n  }\r\n\r\n  ngOnInit() {  \r\n\r\n    this.onScrollObservable.asObservable()\r\n    .pipe(\r\n      debounceTime(500),\r\n      throttleTime(500)          \r\n    )\r\n    .subscribe((data)=>{\r\n      this.nextPage.emit()\r\n    })\r\n\r\n    if (this.isRemote) {\r\n      this.autocompleteHelisaService.dataSource$.subscribe(data => {\r\n        setTimeout(() => {\r\n          this.options = data;\r\n          this.filteredOptions = of<OptionAutocompleteHelisa<T>[]>(this.options);  \r\n        });        \r\n      });\r\n    }\r\n\r\n    this.filteredOptions = this.myControl.valueChanges.pipe(\r\n      startWith(''),\r\n      map(x => this._checkRegex(x)),\r\n      map(value => this._filter(value))\r\n    );\r\n\r\n  }\r\n\r\n  displayFn(option?: OptionAutocompleteHelisa<T>): string | undefined {    \r\n    return option ? option.displayText : undefined;\r\n  }\r\n\r\n  getService(): AutocompleteHelisaService<T> {\r\n    return this.autocompleteHelisaService;\r\n  }\r\n\r\n\r\n  /** Elimina caracteres extraÃ±os */\r\n  private _checkRegex(value:string): string{    \r\n    value = value.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g,'')\r\n    return value;\r\n  }\r\n\r\n  private _filter(value): OptionAutocompleteHelisa<T>[] {    \r\n    if (!(value instanceof Object)) {      \r\n      if (!this.isRemote) {\r\n        const filterValue = value.toLowerCase().split(' ');\r\n        return this.options.filter(option => {\r\n          let ws = true;\r\n          filterValue.forEach(text => ws = ws && option.displayText.toLowerCase().indexOf(text) >= 0);\r\n          return ws;\r\n        }).splice(0, 5);\r\n      } else {        \r\n        return this.options;\r\n      }\r\n    }\r\n  }\r\n\r\n  public onSelected(event) {    \r\n    this.selectedValue = event.option.value;\r\n    this.onSelectedValue.emit(this.selectedValue.value);\r\n  }\r\n\r\n  getNextPage(event){\r\n    this.onScrollObservable.next(event)        \r\n  }  \r\n}\r\n","import { Directive, EventEmitter, Input, Output} from '@angular/core';\r\nimport { MatAutocomplete} from '@angular/material';\r\nimport { takeUntil, tap} from 'rxjs/operators';\r\nimport { Subject } from 'rxjs';\r\n\r\n\r\nexport interface IAutoCompleteScrollEvent {\r\n  autoComplete: MatAutocomplete;\r\n  scrollEvent: Event;\r\n}\r\n\r\n\r\n@Directive({\r\n  selector: 'mat-autocomplete[optionsScroll]'\r\n})\r\nexport class OptionsScrollDirective  {\r\n\r\n  /**\r\n   * This value would different depends of styles\r\n   */\r\n  @Input() thresholdPercent = .9;\r\n  @Output('optionsScroll') scroll = new EventEmitter<IAutoCompleteScrollEvent>();\r\n  _onDestroy = new Subject();\r\n    \r\n\r\n  constructor(public autoComplete: MatAutocomplete) {\r\n    this.autoComplete.opened.pipe(\r\n      tap(() => {\r\n        // Note: When autocomplete raises opened, panel is not yet created (by Overlay)\r\n        // Note: The panel will be available on next tick\r\n        // Note: The panel wil NOT open if there are no options to display\r\n        setTimeout(() => {\r\n          // Note: remove listner just for safety, in case the close event is skipped.\r\n          this.removeScrollEventListener();\r\n          if(!!this.autoComplete &&\r\n            !!this.autoComplete.panel &&\r\n            !!this.autoComplete.panel.nativeElement){\r\n              this.autoComplete.panel.nativeElement\r\n                .addEventListener('scroll', this.onScroll.bind(this),false)\r\n            }\r\n        });\r\n      }),\r\n      takeUntil(this._onDestroy)).subscribe();\r\n\r\n    this.autoComplete.closed.pipe(\r\n      tap(() => this.removeScrollEventListener()),\r\n      takeUntil(this._onDestroy)).subscribe();\r\n  }\r\n\r\n  private removeScrollEventListener() {\r\n    if(!!this.autoComplete &&\r\n      !!this.autoComplete.panel &&\r\n      !!this.autoComplete.panel.nativeElement){\r\n    this.autoComplete.panel.nativeElement\r\n      .removeEventListener('scroll', this.onScroll);\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this._onDestroy.next();\r\n    this._onDestroy.complete();\r\n\r\n    this.removeScrollEventListener();\r\n  }\r\n\r\n  lastScrollTop  = 0;\r\n  onScroll(event: any) {\r\n\r\n    var st = event.target.pageYOffset || event.target.scrollTop; // Credits: how to know if it's down or up scroll \"https://github.com/qeremy/so/blob/master/so.dom.js#L426\"\r\n    if (st > this.lastScrollTop){\r\n       // downscroll code       \r\n       if (this.thresholdPercent === undefined) {\r\n        this.scroll.next({ autoComplete: this.autoComplete, scrollEvent: event });\r\n      } else {                    \r\n        \r\n        const threshold = this.thresholdPercent * 100 * event.target.scrollHeight / 100;\r\n        const current = event.target.scrollTop + event.target.clientHeight;\r\n        //console.log(`scroll ${current}, threshold: ${threshold}`)     \r\n        if (current > threshold) { \r\n          //console.log('load next page');        \r\n          this.scroll.next({ autoComplete: this.autoComplete, scrollEvent: event });\r\n        }                  \r\n      }\r\n    } else {\r\n       // upscroll code       \r\n    }\r\n    this.lastScrollTop = st <= 0 ? 0 : st;  \r\n  }\r\n  \r\n}","import { Directive, Input, HostListener, ElementRef } from '@angular/core';\r\nimport { MatTooltip } from '@angular/material';\r\n\r\n@Directive({\r\n    selector: '[helTooltip]',\r\n    providers: [MatTooltip]\r\n})\r\nexport class HelTooltipDirective { \r\n\r\n    tooltip: MatTooltip;\r\n\r\n    /**\r\n     * Mensaje a mostrar\r\n     *  */    \r\n    @Input('helTooltip') message: string;\r\n\r\n    /**\r\n     * Tiempo antes de ocultarla el mensaje\r\n     */\r\n    @Input('hideDelay') hideDelay: number = 600;\r\n\r\n    /**\r\n     * Tiempo antes de mostra el mensaje\r\n     */\r\n    @Input('showDelay') showDelay: number = 500;\r\n    \r\n\r\n  \r\n    constructor(tooltip: MatTooltip,private _elemRef: ElementRef) {\r\n      this.tooltip = tooltip;\r\n    }\r\n  \r\n    @HostListener('mouseover') mouseover() {           \r\n      let currentContent:string = this._elemRef.nativeElement.innerText;      \r\n    \r\n      if(!!currentContent && !!this.message){\r\n        if((currentContent.toUpperCase() != this.message.toString().toUpperCase()) || this.isEllipsisActive(this._elemRef.nativeElement)){\r\n          this.tooltip.message = this.message;\r\n        }\r\n      }\r\n                        \r\n      this.tooltip.showDelay =  this.showDelay;\r\n      this.tooltip.hideDelay = this.hideDelay;   \r\n    }\r\n\r\n\r\n    private isEllipsisActive(e) {\r\n      return (e.offsetWidth < e.scrollWidth);\r\n    }\r\n}","import { NgModule } from '@angular/core';\r\nimport { InputWithButtonComponent } from './components/input-with-button/input-with-button.component';\r\nimport { ToastHelisaComponent } from './components/toast-helisa/toast-helisa.component';\r\n\r\n\r\nimport {MatAutocompleteModule} from '@angular/material';\r\nimport {MatToolbarModule} from '@angular/material/toolbar';\r\nimport {MatExpansionModule} from '@angular/material/expansion';\r\nimport {MatFormFieldModule} from '@angular/material/form-field';\r\nimport {MatSelectModule} from '@angular/material/select';\r\nimport {MatListModule} from '@angular/material/list';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatCardModule} from '@angular/material/card';\r\nimport { LayoutModule } from '@angular/cdk/layout';\r\nimport { MatSidenavModule, MatGridListModule,  MatMenuModule, MatRadioModule, MatButtonModule, MatCheckboxModule, MatInputModule, MatOptionModule, MatSnackBarModule, MatTableModule, MatPaginatorModule, MatSortModule } from '@angular/material';\r\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\r\nimport {MatDialogModule} from '@angular/material/dialog';\r\nimport {MatTabsModule} from '@angular/material/tabs';\r\nimport {MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatNativeDateModule } from \"@angular/material\";\r\nimport {MatStepperModule} from '@angular/material/stepper';\r\nimport {MatChipsModule} from '@angular/material/chips';\r\nimport {DragDropModule} from '@angular/cdk/drag-drop';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { CommonModule } from '@angular/common';\r\nimport { AlertHelisaComponent } from './components/alert-helisa/alert-helisa.component';\r\nimport { DependencyTableHelisaComponent } from './components/dependency-table-helisa/dependency-table-helisa.component';\r\nimport { InputHelisaComponent } from './components/input-helisa/input-helisa.component';\r\nimport { TableHelisaComponent } from './components/table-helisa/table-helisa.component';\r\nimport {TableHelisaService} from \"./components/table-helisa/table-helisa.service\";\r\nimport {\r\n  ChangeColumnConfigurationType,\r\n  ColumnConfig,\r\n  EventColumn, TotalType\r\n} from \"./components/table-helisa/table-helisa.interface\";\r\nimport { TreeHelisaComponent } from './components/tree-helisa/tree-helisa.component';\r\nimport {MatTreeModule} from '@angular/material/tree';\r\nimport { DateHelisaComponent } from './components/date-helisa/date-helisa.component';\r\nimport {TreeHelisaService} from \"./components/tree-helisa/tree-helisa.service\";\r\nimport { AutocompleteHelisaComponent } from './components/autocomplete-helisa/autocomplete-helisa.component';\r\nimport { OptionsScrollDirective } from './directives/options-scroll.directive';\r\nimport {MatTooltipModule} from '@angular/material/tooltip';\r\nimport { HelTooltipDirective } from './directives/tooltip.directive';\r\n\r\n\r\n@NgModule({\r\n  declarations: [ \r\n    InputWithButtonComponent, \r\n    ToastHelisaComponent, \r\n    AlertHelisaComponent, \r\n    DependencyTableHelisaComponent, \r\n    InputHelisaComponent, \r\n    TableHelisaComponent,\r\n    TreeHelisaComponent,\r\n    DateHelisaComponent,\r\n    AutocompleteHelisaComponent,\r\n    OptionsScrollDirective,\r\n    HelTooltipDirective\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,    \r\n\r\n    MatAutocompleteModule,\r\n    MatButtonModule,\r\n    MatCheckboxModule,\r\n    MatToolbarModule,\r\n    MatExpansionModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatSelectModule,\r\n    MatOptionModule,\r\n    MatListModule, \r\n    MatIconModule,\r\n    MatSnackBarModule,\r\n    MatCardModule,\r\n    LayoutModule,\r\n    MatTooltipModule,\r\n    MatButtonModule,\r\n    MatSidenavModule,\r\n    MatIconModule,\r\n    MatListModule,\r\n    MatGridListModule,\r\n    MatCardModule,\r\n    MatMenuModule,\r\n    MatInputModule,\r\n    MatSelectModule,\r\n    MatRadioModule,\r\n    MatProgressSpinnerModule,    \r\n    MatTableModule,\r\n    MatPaginatorModule,\r\n    MatSortModule,\r\n    MatDialogModule,\r\n    MatTabsModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    MatStepperModule,\r\n    MatChipsModule,\r\n    DragDropModule,\r\n    MatTreeModule\r\n  ],\r\n  exports: [\r\n    InputWithButtonComponent, \r\n    ToastHelisaComponent, \r\n    AlertHelisaComponent, \r\n    DependencyTableHelisaComponent, \r\n    InputHelisaComponent, \r\n    TableHelisaComponent,\r\n    TreeHelisaComponent,\r\n    DateHelisaComponent,\r\n    AutocompleteHelisaComponent,\r\n    OptionsScrollDirective,\r\n    HelTooltipDirective,\r\n\r\n    MatButtonModule,\r\n    MatCheckboxModule,\r\n    MatToolbarModule,\r\n    MatExpansionModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatSelectModule,\r\n    MatOptionModule,\r\n    MatListModule, \r\n    MatIconModule,\r\n    MatSnackBarModule,\r\n    MatCardModule,\r\n    LayoutModule,\r\n    MatTooltipModule,\r\n    MatButtonModule,\r\n    MatSidenavModule,\r\n    MatIconModule,\r\n    MatListModule,\r\n    MatGridListModule,\r\n    MatCardModule,\r\n    MatMenuModule,\r\n    MatInputModule,\r\n    MatSelectModule,\r\n    MatRadioModule,\r\n    MatProgressSpinnerModule,    \r\n    MatTableModule,\r\n    MatPaginatorModule,\r\n    MatSortModule,\r\n    MatDialogModule,\r\n    MatTabsModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    MatStepperModule,\r\n    MatChipsModule,\r\n    DragDropModule,\r\n    MatTreeModule\r\n  ],\r\n  providers: [\r\n    TableHelisaService,\r\n    TreeHelisaService\r\n  ]\r\n})\r\nexport class HelisaLibModule { }\r\n"],"names":["_.remove","_.orderBy"],"mappings":"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"}
