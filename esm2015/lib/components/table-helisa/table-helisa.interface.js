export var ColumnType;
(function (ColumnType) {
    ColumnType[ColumnType["NORMAL"] = 0] = "NORMAL";
    ColumnType[ColumnType["URL"] = 1] = "URL";
})(ColumnType || (ColumnType = {}));
export var EventScope;
(function (EventScope) {
    EventScope[EventScope["USER"] = 0] = "USER";
    EventScope[EventScope["CODE_CALL"] = 1] = "CODE_CALL";
})(EventScope || (EventScope = {}));
export var TotalType;
(function (TotalType) {
    TotalType[TotalType["SUM"] = 0] = "SUM";
    TotalType[TotalType["AVERAGE"] = 1] = "AVERAGE";
    TotalType[TotalType["COUNT"] = 2] = "COUNT";
})(TotalType || (TotalType = {}));
export var ChangeColumnConfigurationType;
(function (ChangeColumnConfigurationType) {
    ChangeColumnConfigurationType[ChangeColumnConfigurationType["SORT"] = 0] = "SORT";
    ChangeColumnConfigurationType[ChangeColumnConfigurationType["UNKNOWN"] = 1] = "UNKNOWN";
    ChangeColumnConfigurationType[ChangeColumnConfigurationType["TOTAL"] = 2] = "TOTAL";
})(ChangeColumnConfigurationType || (ChangeColumnConfigurationType = {}));
export var TableHelisaType;
(function (TableHelisaType) {
    TableHelisaType[TableHelisaType["REMOTE"] = 0] = "REMOTE";
    TableHelisaType[TableHelisaType["LOCAL"] = 1] = "LOCAL";
})(TableHelisaType || (TableHelisaType = {}));
// @dynamic
export class ColumnConfigUtil {
    getValue(obj, column) {
        return column.name.split('.').reduce((o, field) => o && o[field], obj);
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGFibGUtaGVsaXNhLmludGVyZmFjZS5qcyIsInNvdXJjZVJvb3QiOiIuLi8uLi8uLi9wcm9qZWN0cy9oZWxpc2EtbGliL3NyYy8iLCJzb3VyY2VzIjpbImxpYi9jb21wb25lbnRzL3RhYmxlLWhlbGlzYS90YWJsZS1oZWxpc2EuaW50ZXJmYWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUdBLE1BQU0sQ0FBTixJQUFZLFVBRVg7QUFGRCxXQUFZLFVBQVU7SUFDcEIsK0NBQU0sQ0FBQTtJQUFFLHlDQUFHLENBQUE7QUFDYixDQUFDLEVBRlcsVUFBVSxLQUFWLFVBQVUsUUFFckI7QUF3QkQsTUFBTSxDQUFOLElBQVksVUFFWDtBQUZELFdBQVksVUFBVTtJQUNwQiwyQ0FBSSxDQUFBO0lBQUUscURBQVMsQ0FBQTtBQUNqQixDQUFDLEVBRlcsVUFBVSxLQUFWLFVBQVUsUUFFckI7QUFFRCxNQUFNLENBQU4sSUFBWSxTQUVYO0FBRkQsV0FBWSxTQUFTO0lBQ25CLHVDQUFHLENBQUE7SUFBRSwrQ0FBTyxDQUFBO0lBQUUsMkNBQUssQ0FBQTtBQUNyQixDQUFDLEVBRlcsU0FBUyxLQUFULFNBQVMsUUFFcEI7QUFFRCxNQUFNLENBQU4sSUFBWSw2QkFFWDtBQUZELFdBQVksNkJBQTZCO0lBQ3ZDLGlGQUFJLENBQUE7SUFBRSx1RkFBTyxDQUFBO0lBQUUsbUZBQUssQ0FBQTtBQUN0QixDQUFDLEVBRlcsNkJBQTZCLEtBQTdCLDZCQUE2QixRQUV4QztBQXNDRCxNQUFNLENBQU4sSUFBWSxlQUVYO0FBRkQsV0FBWSxlQUFlO0lBQ3pCLHlEQUFNLENBQUE7SUFBRSx1REFBSyxDQUFBO0FBQ2YsQ0FBQyxFQUZXLGVBQWUsS0FBZixlQUFlLFFBRTFCO0FBbUJELFdBQVc7QUFDWCxNQUFNLE9BQU8sZ0JBQWdCO0lBRTNCLFFBQVEsQ0FBQyxHQUFNLEVBQUUsTUFBb0I7UUFDbkMsT0FBTyxNQUFNLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFJLEVBQUUsS0FBYSxFQUFjLEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLEtBQUssQ0FBQyxFQUFFLEdBQUcsQ0FBQyxDQUFDO0lBQ2hHLENBQUM7Q0FDRiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFNvcnREaXJlY3Rpb24gfSBmcm9tICdAYW5ndWxhci9tYXRlcmlhbC9zb3J0JztcclxuaW1wb3J0IHsgUm93RGF0YSB9IGZyb20gJy4vdGFibGUtaGVsaXNhLmNvbXBvbmVudCc7XHJcblxyXG5leHBvcnQgZW51bSBDb2x1bW5UeXBlIHtcclxuICBOT1JNQUwsIFVSTFxyXG59XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIENvbHVtbkNvbmZpZyB7XHJcbiAgbmFtZTogc3RyaW5nO1xyXG4gIHRpdGxlPzogc3RyaW5nO1xyXG4gIHZpc2libGU/OiBib29sZWFuO1xyXG4gIHNvcnRhYmxlPzogYm9vbGVhbjtcclxuICBncm91cGFibGU/OiBib29sZWFuO1xyXG4gIHRvdGFsVHlwZT86IFRvdGFsVHlwZTtcclxuICBzZWFyY2hhYmxlPzogYm9vbGVhbjtcclxuICBzb3J0RGlyZWN0aW9uPzogU29ydERpcmVjdGlvbjtcclxuICBzdWJ0aXRsZT86IHN0cmluZztcclxuICBjb2xzcGFuVGl0bGU/OiBudW1iZXI7XHJcbiAgY29sc3BhblN1YnRpdGxlPzogbnVtYmVyO1xyXG4gIGNvbHVtblN0eWxlPzogc3RyaW5nO1xyXG4gIGNvbHVtblR5cGU/OiBDb2x1bW5UeXBlO1xyXG4gIGlzU2VsZWN0YWJsZT86IGJvb2xlYW47XHJcbn1cclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgQWRkUm93QnV0dG9uIHtcclxuICB0ZXh0OiBzdHJpbmc7XHJcbiAgc2hvd0J1dHRvbjogYm9vbGVhbjtcclxufVxyXG5cclxuZXhwb3J0IGVudW0gRXZlbnRTY29wZSB7XHJcbiAgVVNFUiwgQ09ERV9DQUxMXHJcbn1cclxuXHJcbmV4cG9ydCBlbnVtIFRvdGFsVHlwZSB7XHJcbiAgU1VNLCBBVkVSQUdFLCBDT1VOVFxyXG59XHJcblxyXG5leHBvcnQgZW51bSBDaGFuZ2VDb2x1bW5Db25maWd1cmF0aW9uVHlwZSB7XHJcbiAgU09SVCwgVU5LTk9XTiwgVE9UQUxcclxufVxyXG5cclxuZXhwb3J0IGludGVyZmFjZSBFdmVudENvbHVtbiB7XHJcbiAgY29sdW1uOiBDb2x1bW5Db25maWc7XHJcbiAgY29sdW1uQ29uZmlndXJhdGlvbnM6IEFycmF5PENvbHVtbkNvbmZpZz47XHJcbiAgdHlwZTogQ2hhbmdlQ29sdW1uQ29uZmlndXJhdGlvblR5cGU7XHJcbn1cclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgVG90YWxUYWJsZUhlbGlzYSB7XHJcbiAgY29sdW1uOiBDb2x1bW5Db25maWc7XHJcbiAgdmFsdWU6IG51bWJlcjtcclxufVxyXG5cclxuZXhwb3J0IGludGVyZmFjZSBUb3RhbEdyb3VwIHtcclxuICBzdW06IG51bWJlcjtcclxuICBjb3VudDogbnVtYmVyO1xyXG59XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIEV2ZW50U2VhcmNoIHtcclxuICB0ZXh0OiBzdHJpbmc7XHJcbiAgY29sdW1uQ29uZmlndXJhdGlvbnM6IEFycmF5PENvbHVtbkNvbmZpZz47XHJcbn1cclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgUmVxdWVzdFRhYmxlSGVsaXNhPFQ+IHtcclxuICBwYWdlOiBudW1iZXI7XHJcbiAgYm9keToge30gfCBUO1xyXG59XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIERyb3BFbGVtZW50PFQ+IHtcclxuIHZhbHVlOiBUO1xyXG4gb3JkZXI6IG51bWJlcjtcclxufVxyXG5cclxuZXhwb3J0IGludGVyZmFjZSBTZWxlY3RPYmplY3Q8VD4ge1xyXG4gIHZhbHVlOiBUO1xyXG4gIHNjb3BlOiBFdmVudFNjb3BlO1xyXG59XHJcblxyXG5leHBvcnQgZW51bSBUYWJsZUhlbGlzYVR5cGUge1xyXG4gIFJFTU9URSwgTE9DQUxcclxufVxyXG5cclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgQ2VsbDxUPiB7XHJcbiAgY29sdW1uOiBDb2x1bW5Db25maWc7XHJcbiAgcm93OiBSb3dEYXRhPFQ+IHwgVDtcclxuIH1cclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgQ29uZmlnQ2VsbFN0eWxlczxUPiB7XHJcbiAgIGNlbGxEYXRhOiBUO1xyXG4gICBjbGFzc0NlbGw6IHN0cmluZztcclxuIH1cclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgQ29uZmlnUm93U3R5bGVzPFQ+IHtcclxuICBjb2x1bW46IENvbHVtbkNvbmZpZztcclxuICBkYXRhOiB7fSB8IFQ7XHJcbiAgY2xhc3NSb3c6IHN0cmluZztcclxufVxyXG5cclxuLy8gQGR5bmFtaWNcclxuZXhwb3J0IGNsYXNzIENvbHVtbkNvbmZpZ1V0aWw8VD4ge1xyXG5cclxuICBnZXRWYWx1ZShvYmo6IFQsIGNvbHVtbjogQ29sdW1uQ29uZmlnKTogVCB8IG51bWJlciB8IHN0cmluZyB7XHJcbiAgICByZXR1cm4gY29sdW1uLm5hbWUuc3BsaXQoJy4nKS5yZWR1Y2UoKG86IFQsIGZpZWxkOiBzdHJpbmcpOiBUIHwgc3RyaW5nID0+IG8gJiYgb1tmaWVsZF0sIG9iaik7XHJcbiAgfVxyXG59XHJcblxyXG4iXX0=