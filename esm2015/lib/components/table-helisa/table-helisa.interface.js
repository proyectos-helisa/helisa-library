export var ColumnType;
(function (ColumnType) {
    ColumnType[ColumnType["NORMAL"] = 0] = "NORMAL";
    ColumnType[ColumnType["URL"] = 1] = "URL";
})(ColumnType || (ColumnType = {}));
export var EventScope;
(function (EventScope) {
    EventScope[EventScope["USER"] = 0] = "USER";
    EventScope[EventScope["CODE_CALL"] = 1] = "CODE_CALL";
})(EventScope || (EventScope = {}));
export var TotalType;
(function (TotalType) {
    TotalType[TotalType["SUM"] = 0] = "SUM";
    TotalType[TotalType["AVERAGE"] = 1] = "AVERAGE";
    TotalType[TotalType["COUNT"] = 2] = "COUNT";
})(TotalType || (TotalType = {}));
export var ChangeColumnConfigurationType;
(function (ChangeColumnConfigurationType) {
    ChangeColumnConfigurationType[ChangeColumnConfigurationType["SORT"] = 0] = "SORT";
    ChangeColumnConfigurationType[ChangeColumnConfigurationType["UNKNOWN"] = 1] = "UNKNOWN";
    ChangeColumnConfigurationType[ChangeColumnConfigurationType["TOTAL"] = 2] = "TOTAL";
})(ChangeColumnConfigurationType || (ChangeColumnConfigurationType = {}));
export var TableHelisaType;
(function (TableHelisaType) {
    TableHelisaType[TableHelisaType["REMOTE"] = 0] = "REMOTE";
    TableHelisaType[TableHelisaType["LOCAL"] = 1] = "LOCAL";
})(TableHelisaType || (TableHelisaType = {}));
// @dynamic
export class ColumnConfigUtil {
    getValue(obj, column) {
        return column.name.split('.').reduce((o, field) => o && o[field], obj);
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGFibGUtaGVsaXNhLmludGVyZmFjZS5qcyIsInNvdXJjZVJvb3QiOiIuLi8uLi8uLi9wcm9qZWN0cy9oZWxpc2EtbGliL3NyYy8iLCJzb3VyY2VzIjpbImxpYi9jb21wb25lbnRzL3RhYmxlLWhlbGlzYS90YWJsZS1oZWxpc2EuaW50ZXJmYWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUdBLE1BQU0sQ0FBTixJQUFZLFVBRVg7QUFGRCxXQUFZLFVBQVU7SUFDcEIsK0NBQU0sQ0FBQTtJQUFFLHlDQUFHLENBQUE7QUFDYixDQUFDLEVBRlcsVUFBVSxLQUFWLFVBQVUsUUFFckI7QUErQkQsTUFBTSxDQUFOLElBQVksVUFFWDtBQUZELFdBQVksVUFBVTtJQUNwQiwyQ0FBSSxDQUFBO0lBQUUscURBQVMsQ0FBQTtBQUNqQixDQUFDLEVBRlcsVUFBVSxLQUFWLFVBQVUsUUFFckI7QUFFRCxNQUFNLENBQU4sSUFBWSxTQUVYO0FBRkQsV0FBWSxTQUFTO0lBQ25CLHVDQUFHLENBQUE7SUFBRSwrQ0FBTyxDQUFBO0lBQUUsMkNBQUssQ0FBQTtBQUNyQixDQUFDLEVBRlcsU0FBUyxLQUFULFNBQVMsUUFFcEI7QUFFRCxNQUFNLENBQU4sSUFBWSw2QkFFWDtBQUZELFdBQVksNkJBQTZCO0lBQ3ZDLGlGQUFJLENBQUE7SUFBRSx1RkFBTyxDQUFBO0lBQUUsbUZBQUssQ0FBQTtBQUN0QixDQUFDLEVBRlcsNkJBQTZCLEtBQTdCLDZCQUE2QixRQUV4QztBQXVDRCxNQUFNLENBQU4sSUFBWSxlQUVYO0FBRkQsV0FBWSxlQUFlO0lBQ3pCLHlEQUFNLENBQUE7SUFBRSx1REFBSyxDQUFBO0FBQ2YsQ0FBQyxFQUZXLGVBQWUsS0FBZixlQUFlLFFBRTFCO0FBbUJELFdBQVc7QUFDWCxNQUFNLE9BQU8sZ0JBQWdCO0lBRTNCLFFBQVEsQ0FBQyxHQUFNLEVBQUUsTUFBb0I7UUFDbkMsT0FBTyxNQUFNLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFJLEVBQUUsS0FBYSxFQUFjLEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLEtBQUssQ0FBQyxFQUFFLEdBQUcsQ0FBQyxDQUFDO0lBQ2hHLENBQUM7Q0FDRiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFNvcnREaXJlY3Rpb24gfSBmcm9tICdAYW5ndWxhci9tYXRlcmlhbC9zb3J0JztcbmltcG9ydCB7IFJvd0RhdGEgfSBmcm9tICcuL3RhYmxlLWhlbGlzYS5jb21wb25lbnQnO1xuXG5leHBvcnQgZW51bSBDb2x1bW5UeXBlIHtcbiAgTk9STUFMLCBVUkxcbn1cblxuZXhwb3J0IGludGVyZmFjZSBDb2x1bW5Db25maWcge1xuICBuYW1lOiBzdHJpbmc7XG4gIHRpdGxlPzogc3RyaW5nO1xuICB2aXNpYmxlPzogYm9vbGVhbjtcbiAgc29ydGFibGU/OiBib29sZWFuO1xuICBncm91cGFibGU/OiBib29sZWFuO1xuICB0b3RhbFR5cGU/OiBUb3RhbFR5cGU7XG4gIHNlYXJjaGFibGU/OiBib29sZWFuO1xuICBzb3J0RGlyZWN0aW9uPzogU29ydERpcmVjdGlvbjtcbiAgc3VidGl0bGU/OiBzdHJpbmc7XG4gIGNvbHNwYW5UaXRsZT86IG51bWJlcjtcbiAgY29sc3BhblN1YnRpdGxlPzogbnVtYmVyO1xuICBjb2x1bW5TdHlsZT86IHN0cmluZztcbiAgY29sdW1uVHlwZT86IENvbHVtblR5cGU7XG4gIGlzU2VsZWN0YWJsZT86IGJvb2xlYW47XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgQWRkUm93QnV0dG9uIHtcbiAgdGV4dDogc3RyaW5nO1xuICBzaG93QnV0dG9uOiBib29sZWFuO1xuICBpc0Rpc2FibGVkPzogYm9vbGVhbjtcbiAgdG9vbFRpcFRleHQ/OiBzdHJpbmc7XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgRW1wdHlNZXNzYWdlQ29sdW1uIHtcbiAgdGV4dDogc3RyaW5nO1xuICBpc0VuYWJsZWQ6IGJvb2xlYW47XG59XG5cbmV4cG9ydCBlbnVtIEV2ZW50U2NvcGUge1xuICBVU0VSLCBDT0RFX0NBTExcbn1cblxuZXhwb3J0IGVudW0gVG90YWxUeXBlIHtcbiAgU1VNLCBBVkVSQUdFLCBDT1VOVFxufVxuXG5leHBvcnQgZW51bSBDaGFuZ2VDb2x1bW5Db25maWd1cmF0aW9uVHlwZSB7XG4gIFNPUlQsIFVOS05PV04sIFRPVEFMXG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgRXZlbnRDb2x1bW4ge1xuICBjb2x1bW46IENvbHVtbkNvbmZpZztcbiAgY29sdW1uQ29uZmlndXJhdGlvbnM6IEFycmF5PENvbHVtbkNvbmZpZz47XG4gIHR5cGU6IENoYW5nZUNvbHVtbkNvbmZpZ3VyYXRpb25UeXBlO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIFRvdGFsVGFibGVIZWxpc2Ege1xuICBjb2x1bW46IENvbHVtbkNvbmZpZztcbiAgdmFsdWU6IG51bWJlcjtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBUb3RhbEdyb3VwIHtcbiAgc3VtOiBudW1iZXI7XG4gIGNvdW50OiBudW1iZXI7XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgRXZlbnRTZWFyY2gge1xuICB0ZXh0OiBzdHJpbmc7XG4gIGNvbHVtbkNvbmZpZ3VyYXRpb25zOiBBcnJheTxDb2x1bW5Db25maWc+O1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIFJlcXVlc3RUYWJsZUhlbGlzYTxUPiB7XG4gIHBhZ2U6IG51bWJlcjtcbiAgYm9keToge30gfCBUO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIERyb3BFbGVtZW50PFQ+IHtcbiB2YWx1ZTogVDtcbiBvcmRlcjogbnVtYmVyO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIFNlbGVjdE9iamVjdDxUPiB7XG4gIHZhbHVlOiBUO1xuICBzY29wZTogRXZlbnRTY29wZTtcbiAga2V5QWN0aW9uSW1wb3J0Pzogc3RyaW5nO1xufVxuXG5leHBvcnQgZW51bSBUYWJsZUhlbGlzYVR5cGUge1xuICBSRU1PVEUsIExPQ0FMXG59XG5cblxuZXhwb3J0IGludGVyZmFjZSBDZWxsPFQ+IHtcbiAgY29sdW1uOiBDb2x1bW5Db25maWc7XG4gIHJvdzogUm93RGF0YTxUPiB8IFQ7XG4gfVxuXG5leHBvcnQgaW50ZXJmYWNlIENvbmZpZ0NlbGxTdHlsZXM8VD4ge1xuICAgY2VsbERhdGE6IFQ7XG4gICBjbGFzc0NlbGw6IHN0cmluZztcbiB9XG5cbmV4cG9ydCBpbnRlcmZhY2UgQ29uZmlnUm93U3R5bGVzPFQ+IHtcbiAgY29sdW1uOiBDb2x1bW5Db25maWc7XG4gIGRhdGE6IHt9IHwgVDtcbiAgY2xhc3NSb3c6IHN0cmluZztcbn1cblxuLy8gQGR5bmFtaWNcbmV4cG9ydCBjbGFzcyBDb2x1bW5Db25maWdVdGlsPFQ+IHtcblxuICBnZXRWYWx1ZShvYmo6IFQsIGNvbHVtbjogQ29sdW1uQ29uZmlnKTogVCB8IG51bWJlciB8IHN0cmluZyB7XG4gICAgcmV0dXJuIGNvbHVtbi5uYW1lLnNwbGl0KCcuJykucmVkdWNlKChvOiBULCBmaWVsZDogc3RyaW5nKTogVCB8IHN0cmluZyA9PiBvICYmIG9bZmllbGRdLCBvYmopO1xuICB9XG59XG5cbiJdfQ==