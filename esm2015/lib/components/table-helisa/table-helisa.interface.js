export var ColumnType;
(function (ColumnType) {
    ColumnType[ColumnType["NORMAL"] = 0] = "NORMAL";
    ColumnType[ColumnType["URL"] = 1] = "URL";
    ColumnType[ColumnType["ICON"] = 2] = "ICON";
})(ColumnType || (ColumnType = {}));
export var EventScope;
(function (EventScope) {
    EventScope[EventScope["USER"] = 0] = "USER";
    EventScope[EventScope["CODE_CALL"] = 1] = "CODE_CALL";
})(EventScope || (EventScope = {}));
export var TotalType;
(function (TotalType) {
    TotalType[TotalType["SUM"] = 0] = "SUM";
    TotalType[TotalType["AVERAGE"] = 1] = "AVERAGE";
    TotalType[TotalType["COUNT"] = 2] = "COUNT";
})(TotalType || (TotalType = {}));
export var ChangeColumnConfigurationType;
(function (ChangeColumnConfigurationType) {
    ChangeColumnConfigurationType[ChangeColumnConfigurationType["SORT"] = 0] = "SORT";
    ChangeColumnConfigurationType[ChangeColumnConfigurationType["UNKNOWN"] = 1] = "UNKNOWN";
    ChangeColumnConfigurationType[ChangeColumnConfigurationType["TOTAL"] = 2] = "TOTAL";
})(ChangeColumnConfigurationType || (ChangeColumnConfigurationType = {}));
export var TableHelisaType;
(function (TableHelisaType) {
    TableHelisaType[TableHelisaType["REMOTE"] = 0] = "REMOTE";
    TableHelisaType[TableHelisaType["LOCAL"] = 1] = "LOCAL";
})(TableHelisaType || (TableHelisaType = {}));
// @dynamic
export class ColumnConfigUtil {
    getValue(obj, column) {
        return column.name.split('.').reduce((o, field) => o && o[field], obj);
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGFibGUtaGVsaXNhLmludGVyZmFjZS5qcyIsInNvdXJjZVJvb3QiOiIuLi8uLi8uLi9wcm9qZWN0cy9oZWxpc2EtbGliL3NyYy8iLCJzb3VyY2VzIjpbImxpYi9jb21wb25lbnRzL3RhYmxlLWhlbGlzYS90YWJsZS1oZWxpc2EuaW50ZXJmYWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUdBLE1BQU0sQ0FBTixJQUFZLFVBRVg7QUFGRCxXQUFZLFVBQVU7SUFDcEIsK0NBQU0sQ0FBQTtJQUFFLHlDQUFHLENBQUE7SUFBRSwyQ0FBSSxDQUFBO0FBQ25CLENBQUMsRUFGVyxVQUFVLEtBQVYsVUFBVSxRQUVyQjtBQWdDRCxNQUFNLENBQU4sSUFBWSxVQUVYO0FBRkQsV0FBWSxVQUFVO0lBQ3BCLDJDQUFJLENBQUE7SUFBRSxxREFBUyxDQUFBO0FBQ2pCLENBQUMsRUFGVyxVQUFVLEtBQVYsVUFBVSxRQUVyQjtBQUVELE1BQU0sQ0FBTixJQUFZLFNBRVg7QUFGRCxXQUFZLFNBQVM7SUFDbkIsdUNBQUcsQ0FBQTtJQUFFLCtDQUFPLENBQUE7SUFBRSwyQ0FBSyxDQUFBO0FBQ3JCLENBQUMsRUFGVyxTQUFTLEtBQVQsU0FBUyxRQUVwQjtBQUVELE1BQU0sQ0FBTixJQUFZLDZCQUVYO0FBRkQsV0FBWSw2QkFBNkI7SUFDdkMsaUZBQUksQ0FBQTtJQUFFLHVGQUFPLENBQUE7SUFBRSxtRkFBSyxDQUFBO0FBQ3RCLENBQUMsRUFGVyw2QkFBNkIsS0FBN0IsNkJBQTZCLFFBRXhDO0FBdUNELE1BQU0sQ0FBTixJQUFZLGVBRVg7QUFGRCxXQUFZLGVBQWU7SUFDekIseURBQU0sQ0FBQTtJQUFFLHVEQUFLLENBQUE7QUFDZixDQUFDLEVBRlcsZUFBZSxLQUFmLGVBQWUsUUFFMUI7QUFtQkQsV0FBVztBQUNYLE1BQU0sT0FBTyxnQkFBZ0I7SUFFM0IsUUFBUSxDQUFDLEdBQU0sRUFBRSxNQUFvQjtRQUNuQyxPQUFPLE1BQU0sQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUksRUFBRSxLQUFhLEVBQWMsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsS0FBSyxDQUFDLEVBQUUsR0FBRyxDQUFDLENBQUM7SUFDaEcsQ0FBQztDQUNGIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgU29ydERpcmVjdGlvbiB9IGZyb20gJ0Bhbmd1bGFyL21hdGVyaWFsL3NvcnQnO1xuaW1wb3J0IHsgUm93RGF0YSB9IGZyb20gJy4vdGFibGUtaGVsaXNhLmNvbXBvbmVudCc7XG5cbmV4cG9ydCBlbnVtIENvbHVtblR5cGUge1xuICBOT1JNQUwsIFVSTCwgSUNPTlxufVxuXG5leHBvcnQgaW50ZXJmYWNlIENvbHVtbkNvbmZpZyB7XG4gIG5hbWU6IHN0cmluZztcbiAgdGl0bGU/OiBzdHJpbmc7XG4gIHZpc2libGU/OiBib29sZWFuO1xuICBzb3J0YWJsZT86IGJvb2xlYW47XG4gIGdyb3VwYWJsZT86IGJvb2xlYW47XG4gIHRvdGFsVHlwZT86IFRvdGFsVHlwZTtcbiAgc2VhcmNoYWJsZT86IGJvb2xlYW47XG4gIHNvcnREaXJlY3Rpb24/OiBTb3J0RGlyZWN0aW9uO1xuICBzdWJ0aXRsZT86IHN0cmluZztcbiAgY29sc3BhblRpdGxlPzogbnVtYmVyO1xuICBjb2xzcGFuU3VidGl0bGU/OiBudW1iZXI7XG4gIGNvbHVtblN0eWxlPzogc3RyaW5nO1xuICBjb2x1bW5UeXBlPzogQ29sdW1uVHlwZTtcbiAgaXNTZWxlY3RhYmxlPzogYm9vbGVhbjtcbiAgaGVhZGVyU3R5bGU/OiBzdHJpbmc7XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgQWRkUm93QnV0dG9uIHtcbiAgdGV4dDogc3RyaW5nO1xuICBzaG93QnV0dG9uOiBib29sZWFuO1xuICBpc0Rpc2FibGVkPzogYm9vbGVhbjtcbiAgdG9vbFRpcFRleHQ/OiBzdHJpbmc7XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgRW1wdHlNZXNzYWdlQ29sdW1uIHtcbiAgdGV4dDogc3RyaW5nO1xuICBpc0VuYWJsZWQ6IGJvb2xlYW47XG59XG5cbmV4cG9ydCBlbnVtIEV2ZW50U2NvcGUge1xuICBVU0VSLCBDT0RFX0NBTExcbn1cblxuZXhwb3J0IGVudW0gVG90YWxUeXBlIHtcbiAgU1VNLCBBVkVSQUdFLCBDT1VOVFxufVxuXG5leHBvcnQgZW51bSBDaGFuZ2VDb2x1bW5Db25maWd1cmF0aW9uVHlwZSB7XG4gIFNPUlQsIFVOS05PV04sIFRPVEFMXG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgRXZlbnRDb2x1bW4ge1xuICBjb2x1bW46IENvbHVtbkNvbmZpZztcbiAgY29sdW1uQ29uZmlndXJhdGlvbnM6IEFycmF5PENvbHVtbkNvbmZpZz47XG4gIHR5cGU6IENoYW5nZUNvbHVtbkNvbmZpZ3VyYXRpb25UeXBlO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIFRvdGFsVGFibGVIZWxpc2Ege1xuICBjb2x1bW46IENvbHVtbkNvbmZpZztcbiAgdmFsdWU6IG51bWJlcjtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBUb3RhbEdyb3VwIHtcbiAgc3VtOiBudW1iZXI7XG4gIGNvdW50OiBudW1iZXI7XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgRXZlbnRTZWFyY2gge1xuICB0ZXh0OiBzdHJpbmc7XG4gIGNvbHVtbkNvbmZpZ3VyYXRpb25zOiBBcnJheTxDb2x1bW5Db25maWc+O1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIFJlcXVlc3RUYWJsZUhlbGlzYTxUPiB7XG4gIHBhZ2U6IG51bWJlcjtcbiAgYm9keToge30gfCBUO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIERyb3BFbGVtZW50PFQ+IHtcbiB2YWx1ZTogVDtcbiBvcmRlcjogbnVtYmVyO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIFNlbGVjdE9iamVjdDxUPiB7XG4gIHZhbHVlOiBUO1xuICBzY29wZTogRXZlbnRTY29wZTtcbiAga2V5QWN0aW9uSW1wb3J0Pzogc3RyaW5nO1xufVxuXG5leHBvcnQgZW51bSBUYWJsZUhlbGlzYVR5cGUge1xuICBSRU1PVEUsIExPQ0FMXG59XG5cblxuZXhwb3J0IGludGVyZmFjZSBDZWxsPFQ+IHtcbiAgY29sdW1uOiBDb2x1bW5Db25maWc7XG4gIHJvdzogUm93RGF0YTxUPiB8IFQ7XG4gfVxuXG5leHBvcnQgaW50ZXJmYWNlIENvbmZpZ0NlbGxTdHlsZXM8VD4ge1xuICAgY2VsbERhdGE6IFQ7XG4gICBjbGFzc0NlbGw6IHN0cmluZztcbiB9XG5cbmV4cG9ydCBpbnRlcmZhY2UgQ29uZmlnUm93U3R5bGVzPFQ+IHtcbiAgY29sdW1uOiBDb2x1bW5Db25maWc7XG4gIGRhdGE6IHt9IHwgVDtcbiAgY2xhc3NSb3c6IHN0cmluZztcbn1cblxuLy8gQGR5bmFtaWNcbmV4cG9ydCBjbGFzcyBDb2x1bW5Db25maWdVdGlsPFQ+IHtcblxuICBnZXRWYWx1ZShvYmo6IFQsIGNvbHVtbjogQ29sdW1uQ29uZmlnKTogVCB8IG51bWJlciB8IHN0cmluZyB7XG4gICAgcmV0dXJuIGNvbHVtbi5uYW1lLnNwbGl0KCcuJykucmVkdWNlKChvOiBULCBmaWVsZDogc3RyaW5nKTogVCB8IHN0cmluZyA9PiBvICYmIG9bZmllbGRdLCBvYmopO1xuICB9XG59XG5cbiJdfQ==