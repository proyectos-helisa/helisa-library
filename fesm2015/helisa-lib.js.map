{"version":3,"file":"helisa-lib.js","sources":["../esm2015/projects/helisa-lib/src/lib/components/input-with-button/input-with-button.component.ts","../esm2015/projects/helisa-lib/src/lib/components/toast-helisa/toast-helisa.component.ts","../esm2015/projects/helisa-lib/src/lib/components/toast-helisa/toast-helisa.service.ts","../esm2015/projects/helisa-lib/src/lib/components/toast-helisa/toast-type.enum.ts","../esm2015/projects/helisa-lib/src/lib/components/alert-helisa/alert-helisa-type.enum.ts","../esm2015/projects/helisa-lib/src/lib/components/alert-helisa/alert-helisa.component.ts","../esm2015/projects/helisa-lib/src/lib/components/alert-helisa/alert-helisa.service.ts","../esm2015/projects/helisa-lib/src/lib/components/dependency-table-helisa/dependency-table-helisa.service.ts","../esm2015/projects/helisa-lib/src/lib/components/table-helisa/table-helisa.service.ts","../esm2015/projects/helisa-lib/src/lib/components/dependency-table-helisa/dependency-table-helisa.component.ts","../esm2015/projects/helisa-lib/src/lib/components/input-helisa/input-helisa.component.ts","../esm2015/projects/helisa-lib/src/lib/components/table-helisa/table-helisa.interface.ts","../esm2015/projects/helisa-lib/src/lib/components/table-helisa/table-helisa-connect.component.ts","../esm2015/projects/helisa-lib/src/lib/components/table-helisa/table-helisa.component.ts","../esm2015/projects/helisa-lib/src/lib/components/date-helisa/date-helisa.component.ts","../esm2015/projects/helisa-lib/src/lib/components/tree-helisa/tree-helisa.service.ts","../esm2015/projects/helisa-lib/src/lib/components/tree-helisa/tree-helisa-connect.ts","../esm2015/projects/helisa-lib/src/lib/components/tree-helisa/tree-helisa.component.ts","../esm2015/projects/helisa-lib/src/lib/components/autocomplete-helisa/autocomplete-helisa.component.service.ts","../esm2015/projects/helisa-lib/src/lib/components/autocomplete-helisa/autocomplete-helisa.component.ts","../projects/helisa-lib/src/lib/directives/options-scroll.directive.ts","../projects/helisa-lib/src/lib/directives/tooltip.directive.ts","../projects/helisa-lib/src/lib/directives/external-link.directive.ts","../projects/helisa-lib/src/lib/pipes/external-link.pipe.ts","../esm2015/projects/helisa-lib/src/lib/components/combo-box-helisa/combo-box-helisa.component.ts","../esm2015/projects/helisa-lib/src/lib/components/paging-tree-helisa/paging-tree-helisa.component.ts","../esm2015/projects/helisa-lib/src/lib/components/alert-information-data-helisa/alert-information-helisa-type.enum.ts","../esm2015/projects/helisa-lib/src/lib/components/alert-information-data-helisa/alert-information-data-helisa.component.ts","../../projects/helisa-lib/src/lib/helisa-lib.module.ts","../esm2015/projects/helisa-lib/src/lib/components/alert-information-data-helisa/alert-information-data-helisa.service.ts","../../../projects/helisa-lib/src/public-api.ts","../../../projects/helisa-lib/src/helisa-lib.ts"],"names":["_.remove","_.orderBy"],"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","sourcesContent":["import { Component, OnInit, Input, Output, EventEmitter, ViewChild, ElementRef } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'hel-input-with-button',\n  templateUrl: './input-with-button.component.html',\n  styleUrls: ['./input-with-button.component.sass']\n})\nexport class InputWithButtonComponent implements OnInit {\n\n  @Input() placeholder: string = '';\n  @Input() inputFormControl: FormControl = new FormControl('', Validators.required);\n  @Input() requiredMessage: string = 'El campo es requerido';\n  @Input() value: string = '';\n  @Input() isFocused: boolean = false;\n  @ViewChild('inputText', {static: true}) nameField: ElementRef;\n\n  @Output() done: EventEmitter<string> = new EventEmitter<string>();\n  @Output() cancel: EventEmitter<void> = new EventEmitter<void>();\n\n\n  constructor() { }\n\n  ngOnInit(): void {\n    if (this.value !== '') {\n      this.inputFormControl.setValue(this.value);\n    }\n    this.nameField.nativeElement.focus();\n  }\n\n\n  onDone(): void {\n    if (this.inputFormControl.valid) {\n      this.done.emit(this.inputFormControl.value);\n    }\n  }\n\n  onCancel(): void {\n    this.cancel.emit();\n  }\n\n}\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_SNACK_BAR_DATA } from '@angular/material/snack-bar';\nimport { ToastType } from './toast-type.enum';\n\n// @dynamic\n@Component({\n  selector: 'hel-toast',\n  templateUrl: './toast-helisa.component.html',\n  styleUrls: ['./toast-helisa.component.sass']\n})\nexport class ToastHelisaComponent implements OnInit {\n\n  constructor(@Inject(MAT_SNACK_BAR_DATA) public data: {type: ToastType, message: string, subMessages?: string[]}) { }\n\n  ngOnInit(): void {}\n\n}\n","import { Injectable } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { ToastType } from './toast-type.enum';\nimport { ToastHelisaComponent } from './toast-helisa.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ToastHelisaService {\n\n  durationInSeconds: number = 5;\n\n  constructor(private snackBar: MatSnackBar) { }\n\n  showToast(type: ToastType, message: string, subMessages?: string[]): void {\n    subMessages = subMessages ? subMessages : [];\n    this.snackBar.openFromComponent(ToastHelisaComponent, {\n      data: {message, type, subMessages},\n      duration: this.durationInSeconds * 1000\n    });\n  }\n}\n","export enum ToastType {\n    DONE = 'done',\n    ERROR = 'error',\n    INFO = 'info'\n}\n","export enum AlertHelisaType {\n    ERROR = 'ERROR',\n    CONFIRMATION = 'CONFIRMATION'\n}\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { AlertHelisaType } from './alert-helisa-type.enum';\n\ninterface AlertHelisaProperties {\n  title: string;\n  content: string;\n  type: AlertHelisaType;\n  okLabel: string;\n  cancelLabel: string;\n}\n\n@Component({\n  selector: 'hel-alert',\n  templateUrl: './alert-helisa.component.html',\n  styleUrls: ['./alert-helisa.component.sass']\n})\nexport class AlertHelisaComponent implements OnInit {\n\n  content: string;\n  title: string;\n  hasCancel: boolean;\n  okLabel: string;\n  cancelLabel: string;\n\n  constructor(\n    public dialogRef: MatDialogRef<AlertHelisaComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: AlertHelisaProperties\n  ) {\n    this.content = data.content;\n    this.title = data.title;\n    this.okLabel = data.okLabel;\n    if (this.okLabel === undefined) {\n      this.okLabel = 'aceptar';\n    }\n    this.cancelLabel = data.cancelLabel;\n    if (this.cancelLabel === undefined) {\n      this.cancelLabel = 'cancelar';\n    }\n    this.hasCancel = data.type === AlertHelisaType.CONFIRMATION;\n    dialogRef.disableClose = true;\n    dialogRef.keydownEvents().subscribe((event: KeyboardEvent): void => {\n      if (event.code === 'Escape') {\n        this.dialogRef.close(this.onCancel());\n      }\n    });\n  }\n\n  ngOnInit(): void {\n  }\n\n  onCancel(): void {\n    this.dialogRef.close();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { Observable } from 'rxjs';\nimport { AlertHelisaType } from './alert-helisa-type.enum';\nimport { AlertHelisaComponent } from './alert-helisa.component';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AlertHelisaService {\n\n  constructor(public dialog: MatDialog) { }\n\n  openDialog(type: AlertHelisaType, title: string, content: string, okLabel?: string, cancelLabel?: string): Observable<boolean> {\n    const dialogRef: MatDialogRef<AlertHelisaComponent> = this.dialog.open(AlertHelisaComponent, {\n      width: '250px',\n      data: { title, content, type, okLabel, cancelLabel }\n    });\n\n    return dialogRef.afterClosed();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, Subject, BehaviorSubject } from 'rxjs';\nimport {ColumnConfig, AddRowButton, ConfigRowStyles, TotalTableHelisa} from '../table-helisa/table-helisa.interface';\nimport { EventDependency} from './dependency-table-helisa.component';\n\nexport interface ConfigTable<T> {\n  columns: Array<ColumnConfig>;\n  isRemote: boolean;\n  dataSource?: Array<T>;\n  count?: number;\n  order?: number;\n  showTitle?: boolean;\n  indexRowSelect?: number;\n  isDragged?: boolean;\n  addRowButton?: AddRowButton;\n  configRowStylesFromColumn?: Array<ConfigRowStyles<T>>;\n  configColumnClass?: Array<string>,\n  isCellSelection?: boolean;\n  addBookButton?: boolean;\n}\n\n@Injectable()\nexport class DependencyTableHelisaService<T> {\n\n\n  tables: Subject<ConfigTable<T>[]> = new Subject();\n  infoTables: Array<ConfigTable<T>> = new Array();\n\n  private emitVisibilityButton$: Subject<EventDependency<boolean>> = new Subject<EventDependency<boolean>>();\n  emitVisibilityButton: Observable<EventDependency<boolean>> = this.emitVisibilityButton$.asObservable();\n\n  private emitVisibilityAllButtons$: Subject<boolean> = new Subject<boolean>();\n  emitVisibilityAllButtons: Observable<boolean> = this.emitVisibilityAllButtons$.asObservable();\n\n  private emitIsCellSelection$: Subject<EventDependency<boolean>> = new Subject<EventDependency<boolean>>();\n  emitIsCellSelection: Observable<EventDependency<boolean>> = this.emitIsCellSelection$.asObservable();\n\n  private emitChangeColumns$: Subject<EventDependency<ColumnConfig[]>> = new Subject<EventDependency<ColumnConfig[]>>();\n  emitChangeColumns: Observable<EventDependency<ColumnConfig[]>> = this.emitChangeColumns$.asObservable();\n\n  emitTotal: Subject<EventDependency<TotalTableHelisa>> = new Subject<EventDependency<TotalTableHelisa>>();\n  emitNextPage: Subject<EventDependency<T[]>> = new Subject<EventDependency<T[]>>();\n\n  constructor() { }\n\n  /**\n   * retorna un Observable<ConfigTable[]>\n   */\n  getTables(): Observable<ConfigTable<T>[]> {\n    return this.tables;\n  }\n\n  /**\n   * Actualiza las dependencias, agrendo la tabla que envian en el orden correspondiente o al final.\n   * También remueve las dependecias que hay apartir de la tabla segun se indique en el parametro.\n   * @param configTable Objeto que contiene la configuración para la tabla.\n   * @param withRemoveDependency boolean por defecto es false, si es 'true' indica que remueva las dependencias apartir de el.\n   */\n  updateDependency(configTable: ConfigTable<T>, withRemoveDependency: boolean = false): void {\n    if (withRemoveDependency) {\n      this.infoTables = this.infoTables.slice(0, !configTable.order ? 0 : configTable.order);\n    }\n    if (!configTable.order || configTable.order >= this.infoTables.length) {\n      configTable.order = this.infoTables.length;\n    }\n    this.infoTables[configTable.order] = configTable;\n    if (configTable.isRemote) {\n      configTable.dataSource = null;\n      if (configTable.count === null) {\n        throw new Error('hace falta el count');\n      }\n    } else {\n      if (configTable.dataSource === null) {\n        throw new Error('hace falta el dataSource');\n      }\n      configTable.count = configTable.dataSource.length;\n    }\n    this.tables.next(this.infoTables);\n  }\n\n  /**\n   * Emite un evento de total con la información para la tabla correspondiente\n   * @param event wrapper que contiene el indice de la tabla y la información de la pagina\n   */\n  setTotal(event: EventDependency<TotalTableHelisa>): void {\n    this.emitTotal.next(event);\n  }\n\n  /**\n   * Emite un evento de agregar pagina con la pagina para la tabla correspondiente\n   * @param event wrapper que contiene el indice de la tabla y la información de la pagina\n   */\n  addPage(event: EventDependency<T[]>): void {\n    this.emitNextPage.next(event);\n  }\n\n  selectIndexRow(config: ConfigTable<T>): void {\n    if (this.infoTables[config.order]) {\n      this.infoTables[config.order].indexRowSelect = config.indexRowSelect;\n      this.tables.next(this.infoTables);\n    }\n  }\n\n\n  /**\n   * Muestra o esconde el boton una tabla en especifico\n   * @param event para indicar el index de la tabla y en \"data\" true o false\n   */\n  changeVisibilityButton(event: EventDependency<boolean>): void {\n    this.emitVisibilityButton$.next(event);\n  }\n\n\n  /**\n   * Esconde los botones de todas las tablas\n   * @param show indicar si se muestran o no todos los botones de las tablas\n   */\n  changeVisibilityAllButtons(show: boolean): void {\n    this.emitVisibilityAllButtons$.next(show);\n  }\n\n  /**\n   * Para habilitar el manejo de selección de celda\n   * @param event para indicar el index de la tabla y en \"data\" true o false\n   */\n  changeisCellSelection(event: EventDependency<boolean>): void {\n    this.emitIsCellSelection$.next(event);\n  }\n\n   /**\n    * Para habilitar el cambio de columnas\n    * @param event para indicar el index de la tabla y en \"data\" columnas\n    */\n  changeColumnsByTable( event: EventDependency<ColumnConfig[]>): void {\n    this.emitChangeColumns$.next(event);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport {BehaviorSubject, Observable, Subject} from 'rxjs';\nimport {TotalTableHelisa} from './table-helisa.interface';\nimport {TableHelisaComponent} from './table-helisa.component';\n\nexport interface TableHelisaServiceInfo<T> {\n  obj: T;\n  table?: {} | TableHelisaComponent<T>;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TableHelisaService<T> {\n\n  private emitChangeSource: Subject<TableHelisaServiceInfo<TotalTableHelisa>> = new Subject<TableHelisaServiceInfo<TotalTableHelisa>>();\n  private emitNextPage: Subject<TableHelisaServiceInfo<T[]>> = new Subject<TableHelisaServiceInfo<T[]>>();\n\n  totalReturn: Observable<TableHelisaServiceInfo<TotalTableHelisa>> = this.emitChangeSource.asObservable();\n  nextPageReturn: Observable<TableHelisaServiceInfo<T[]>> = this.emitNextPage.asObservable();\n\n  private emitVisibleButton$: Subject<boolean> = new Subject<boolean>();\n  /**\n   * Observable para saber si se debe mostrar o esconder el boton de add row\n   */\n  emitVisibleButton: Observable<boolean> = this.emitVisibleButton$.asObservable();\n\n  setTotal(total: TotalTableHelisa, table?: TableHelisaComponent<TotalTableHelisa>): void {\n    this.emitChangeSource.next({obj: total, table});\n  }\n\n  addPage(page: T[], table?: TableHelisaComponent<T>): void {\n    this.emitNextPage.next({obj: page, table});\n  }\n\n  /**\n   * para modificar el valor de si se muestra o no el boton de add row de la tabla\n   * @param change indicar si se muestra o no el boton de add row de la tabla\n   */\n  changeVisibilityButton(change: boolean): void {\n    this.emitVisibleButton$.next(change);\n  }\n\n}\n","import {Component, OnInit, EventEmitter, Output, QueryList, ViewChildren, Input} from '@angular/core';\nimport {DependencyTableHelisaService, ConfigTable} from './dependency-table-helisa.service';\nimport {Cell, ColumnConfig, EventColumn, RequestTableHelisa, SelectObject, TotalTableHelisa} from '../table-helisa/table-helisa.interface';\nimport {TableHelisaService} from '../table-helisa/table-helisa.service';\nimport {TableHelisaComponent} from '../table-helisa/table-helisa.component';\n\nexport interface EventDependency<T> {\n  index: number;\n  data: T;\n}\n\n@Component({\n  selector: 'hel-dependency-table',\n  templateUrl: './dependency-table-helisa.component.html',\n  styleUrls: ['./dependency-table-helisa.component.sass'],\n  providers: [DependencyTableHelisaService]\n})\nexport class DependencyTableHelisaComponent<T> implements OnInit {\n\n  tables: Array<ConfigTable<T>> = [];\n  @ViewChildren('viewTables') viewTables: QueryList<TableHelisaComponent<T>>;\n  @Input() showToolTip: boolean = true;\n\n  /**\n   * deprecated, use selectObject\n   */\n  @Output() selected: EventEmitter<EventDependency<T>> = new EventEmitter<EventDependency<T>>();\n  @Output() selectObject: EventEmitter<EventDependency<{} | T>> = new EventEmitter<EventDependency<{} | T>>();\n  @Output() nextPage: EventEmitter<EventDependency<{} | T>> = new EventEmitter<EventDependency<{} | T>>();\n  @Output() total: EventEmitter<EventDependency<{} | T>> = new EventEmitter<EventDependency<{}>>();\n  @Output() sort: EventEmitter<EventDependency<{} | T>> = new EventEmitter<EventDependency<{}>>();\n  @Output() drop: EventEmitter<EventDependency<{} | T>> = new EventEmitter<EventDependency<{}>>();\n  @Output() addRow: EventEmitter<number> = new EventEmitter<number>();\n  @Output() selectCell: EventEmitter<EventDependency<{} | T>> = new EventEmitter<EventDependency<{} | T>>();\n  @Output() bookClicked: EventEmitter<EventDependency<{} | T>> = new EventEmitter<EventDependency<{} | T>>();\n  selectedObject: EventDependency<{}> = null;\n\n\n  /**\n   * Tiempo antes de ocultarla el mensaje del tooltip\n   */\n  @Input() hideDelay: number = 600;\n\n  /**\n   * Tiempo antes de mostra el mensaje del tooltip\n   */\n  @Input() showDelay: number = 500;\n\n\n  constructor(private dependencyTableHelisaService: DependencyTableHelisaService<T>, private tableService: TableHelisaService<T>) {\n  }\n\n  ngOnInit(): void {\n    this.getTables();\n    this.dependencyTableHelisaService.emitNextPage.subscribe(\n      (event: EventDependency<T[]>): void => {\n        this.tableService.addPage(event.data, this.viewTables.toArray()[event.index]);\n      }\n    );\n\n    this.dependencyTableHelisaService.emitTotal.subscribe(\n      (event: EventDependency<TotalTableHelisa>): void => {\n        this.tableService.setTotal(event.data, this.viewTables[event.index]);\n      }\n    );\n\n    // Observable para mostrar o esconder el boton de una tabla\n    this.dependencyTableHelisaService.emitVisibilityButton.subscribe(\n      (data: EventDependency<boolean>): void => {\n        if (!!data && data.index !== undefined) {\n          const table: ConfigTable<T> = this.tables[data.index];\n          if (!!table) {\n            table.addRowButton.showButton = data.data;\n          }\n        }\n      }\n    );\n\n    // Observable para mostrar o esconder los botones de todas las tablas\n    this.dependencyTableHelisaService.emitVisibilityAllButtons.subscribe(\n      (data: boolean): void => {\n        if (data !== undefined && data != null) {\n          this.tables.forEach((element: ConfigTable<T>): void => {\n            if (!!element.addRowButton) {\n              element.addRowButton.showButton = data;\n            }\n          });\n        }\n      }\n    );\n\n    // Observable para manejo de selección de celdas\n    this.dependencyTableHelisaService.emitIsCellSelection.subscribe(\n      (data: EventDependency<boolean>): void => {\n        if (!!data && data.index !== undefined) {\n          const table: ConfigTable<T> = this.tables[data.index];\n          if (table) {\n            table.isCellSelection = data.data;\n          }\n        }\n      });\n\n    // Observable para manejo de columnas\n    this.dependencyTableHelisaService.emitChangeColumns.subscribe(\n      (data: EventDependency<ColumnConfig[]>): void => {\n        if (!!data && data.index !== undefined) {\n          const table: ConfigTable<T> = this.tables[data.index];\n          if (table) {\n            table.columns = data.data;\n          }\n        }\n      });\n  }\n\n  /**\n   * retorna el servicio que gestiona el componente.\n   */\n  getService(): DependencyTableHelisaService<T> {\n    return this.dependencyTableHelisaService;\n  }\n\n  /**\n   * Obtiene un observable con las tablas dependientes desde el servicio.\n   */\n  getTables(): void {\n    this.dependencyTableHelisaService.getTables()\n      .subscribe((tables: ConfigTable<T>[]): void => {\n          this.tables.splice(0, this.tables.length, ...tables);\n          this.viewTables.forEach((item: TableHelisaComponent<T>): void => {\n            item.reload();\n          });\n        }\n      );\n  }\n\n  /**\n   * Evento que se dispara desde una tabla, emitiendo un nuevo evento con el inidice de la tabla que dispara el evento y el evento generado.\n   * @param index indica el indice de la tabla seleccionada\n   * @param data retorna la fila que fue seleccionada\n   */\n  onSelectedDependency(index: number, event: SelectObject<T>): void {\n    this.selectedObject = {index, data: event};\n    this.selected.emit({index, data: event.value});\n    this.selectObject.emit({index, data: event});\n  }\n\n  /**\n   * Evento que se dispara desde una tabla, emitiendo un nuevo evento con el inidice de la tabla que dispara el evento y el evento generado.\n   * @param index indica el indice de la tabla que genera el evento\n   * @param event evento generado desde la tabla\n   */\n  onNextPage(index: number, event: RequestTableHelisa<T>): void {\n    this.nextPage.emit({index, data: event});\n  }\n\n  /**\n   * Evento que se dispara desde una tabla, emitiendo un nuevo evento con el inidice de la tabla que dispara el evento y el evento generado.\n   * @param index indica el indice de la tabla que genera el evento\n   * @param event evento generado desde la tabla\n   */\n  onTotal(index: number, event: EventColumn): void {\n    this.total.emit({index, data: event});\n  }\n\n  /**\n   * Evento que se dispara desde una tabla, emitiendo un nuevo evento con el inidice de la tabla que dispara el evento y el evento generado.\n   * @param index indica el indice de la tabla que genera el evento\n   * @param event evento generado desde la tabla\n   */\n  onSort(index: number, event: EventColumn): void {\n    this.sort.emit({index, data: event});\n  }\n\n  /**\n   * Evento que se dispara desde una tabla, emitiendo un nuevo evento con el inidice de la tabla que dispara el evento y el evento generado.\n   * @param index indica el indice de la tabla que genera el evento\n   * @param event evento generado desde la tabla\n   */\n  onDrop(index: number, event: EventDependency<T>): void {\n    this.drop.emit({index, data: event});\n  }\n\n  /**\n   * Evento que se dispara desde una tabla, emite el indice de la tabla al cual se le debe añadir una nueva fila\n   * @param index indica el indice de la tabla de la cual se dispara el evento\n   */\n  onAddRow(index: number): void {\n    this.addRow.emit(index);\n  }\n\n  selectedCell(index: number, event: Cell<T>): void {\n    if (this.tables[index].isCellSelection) {\n      this.selectCell.emit({index, data: event});\n    }\n  }\n\n  onBookClicked(index: number, event: EventDependency<T>): void {\n    this.bookClicked.emit({index, data: event});\n  }\n}\n","import { Component, EventEmitter, Input, OnInit, Output, ViewChild, ElementRef, AfterViewInit } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\nexport enum InputHelisaType {\n  DEFAULT, IDENTITY, NUMERIC, DOUBLE\n}\n\n@Component({\n  selector: 'hel-input',\n  templateUrl: './input-helisa.component.html',\n  styleUrls: ['./input-helisa.component.sass']\n})\nexport class InputHelisaComponent implements OnInit, AfterViewInit {\n\n  private readonly DECIMAL_SEPARATOR: string = '.';\n  private readonly THOUSAND_SEPARATOR: string = ',';\n\n  @Input() placeholder: string = '';\n  @Input() floatLabel: 'never' | 'always' | 'auto' = 'never';\n  @Input() minlength: number;\n  @Input() maxlength: number;\n\n  /** Activar o desactivar el autocompletado\n   * (Caracteristica de los navegadores para campos comunes como\n   * Direccion , Usuario, Password ... etc)\n   */\n  @Input() autocompleteMode: boolean = false;\n\n  // Mostrar o no el icono de buscar\n  @Input() isSearch: boolean = false;\n  // @Input() inputFormControl: FormControl = new FormControl('');\n  @Input() isFocused: boolean = false;\n\n  /**\n   * Deprecated\n   */\n  @Input() disabled: boolean = false;\n  @Input() type: InputHelisaType = InputHelisaType.DEFAULT;\n\n  /**\n   * Deprecated\n   */\n  @Output() setValue: EventEmitter<string> = new EventEmitter<string>();\n\n  // tslint:disable-next-line:no-any\n  @Output() blur: EventEmitter<any> = new EventEmitter();\n\n  formControlMask: FormControl = new FormControl('');\n  private realValue: string = '';\n  private inputFormReal: FormControl = new FormControl('');\n\n  @ViewChild('inputText', {static: true}) inputText: ElementRef;\n\n  constructor() {\n  }\n\n  @Input()\n  set inputFormControl(formControl: FormControl) {\n    this.inputFormReal = formControl;\n    this.inputFormReal.registerOnDisabledChange(((isDisabled: boolean): void => {\n      if (isDisabled) {\n        this.formControlMask.disable();\n      } else {\n        this.formControlMask.enable();\n      }\n    }));\n    this.inputFormReal.valueChanges.subscribe((data: string): void => {\n      this.statusChange(this.inputFormReal.status);\n      if (this.getMaskedValue(data) !== this.formControlMask.value) {\n        this.change(data);\n        if (this.isFocused) {\n          this.onFocus(null);\n        }\n      }\n    });\n    this.formControlMask.setValidators(this.inputFormReal.validator);\n    this.change(this.inputFormReal.value);\n    // disable control\n    if (formControl.disabled) {\n      this.formControlMask.disable({ onlySelf: true });\n    }\n    this.inputFormReal.statusChanges.subscribe(\n      (data: string): void => {\n        this.statusChange(data);\n        if (this.isFocused) {\n          this.onFocus(null);\n        }\n      }\n    );\n  }\n\n\n  private statusChange(data: string): void {\n    if (data === 'INVALID') {\n      this.formControlMask.setErrors({ key: 'Error de validación.' });\n      this.formControlMask.markAsTouched();\n    } else {\n      this.formControlMask.setErrors(null);\n    }\n  }\n\n  ngOnInit(): void {\n    if (this.isFocused) {\n      this.inputText.nativeElement.focus();\n    }\n  }\n\n  ngAfterViewInit(): void {\n    // this.isParentDisabled();\n  }\n\n  /*isParentDisabled(): void {\n    setTimeout(() => {\n      if (this.nameInput.nativeElement.closest('.hw-disabled-mode')) {\n        this.disabled = true;\n      } else {\n        this.disabled = false;\n      }\n    });\n  }*/\n\n  search(): void {\n    this.setValue.emit(this.realValue);\n  }\n\n  change(event: string): void {\n    if (event != null) {\n      event = event + '';\n    }\n    let position: number = this.inputText.nativeElement.selectionStart;\n    const length: number = event ? event.length : 0;\n    this.realValue = this.getRealValue(event);\n    if (this.getMaskedValue(this.realValue) !== this.formControlMask.value) {\n      this.formControlMask.setValue(this.getMaskedValue(this.realValue));\n      position += this.inputText.nativeElement.value.length - length;\n      this.inputText.nativeElement.selectionStart = position;\n      this.inputText.nativeElement.selectionEnd = position;\n    }\n    this.inputFormReal.setValue(this.realValue);\n  }\n\n  private getMaskedValue(str: string): string {\n    if (str == null) {\n      return str;\n    }\n    str = str + '';\n    if (this.type === InputHelisaType.DEFAULT) {\n      return str;\n    }\n    let maskedStr: string = '';\n    if (this.type === InputHelisaType.IDENTITY) {\n      for (let i: number = str.length - 1, j: number = 0; i >= 0; i--, j++) {\n        if (j > 0 && j % 3 === 0) {\n          maskedStr = this.DECIMAL_SEPARATOR + maskedStr;\n        }\n        maskedStr = str[i] + maskedStr;\n      }\n    }\n    if (this.type === InputHelisaType.NUMERIC) {\n      for (let i: number = str.length - 1, j: number = 0; i >= 0; i--, j++) {\n        if (j > 0 && j % 3 === 0) {\n          maskedStr = this.THOUSAND_SEPARATOR + maskedStr;\n        }\n        maskedStr = str[i] + maskedStr;\n      }\n    }\n    if (this.type === InputHelisaType.DOUBLE) {\n      if (str.indexOf(this.DECIMAL_SEPARATOR) >= 0) {\n        for (let i: number = str.indexOf(this.DECIMAL_SEPARATOR); i < str.length; i++) {\n          maskedStr += str[i];\n        }\n      }\n      for (let i: number = (str.indexOf(this.DECIMAL_SEPARATOR) >= 0 ? str.indexOf(this.DECIMAL_SEPARATOR) : str.length) - 1,\n        j: number = 0; i >= 0; i--, j++) {\n\n        if (j > 0 && j % 3 === 0) {\n          maskedStr = this.THOUSAND_SEPARATOR + maskedStr;\n        }\n        maskedStr = str[i] + maskedStr;\n      }\n    }\n    return maskedStr;\n  }\n\n  private getRealValue(str: string): string {\n    if (str == null) {\n      return str;\n    }\n    str = str + '';\n    let realStr: string = '';\n    if (this.type === InputHelisaType.DEFAULT) {\n      return str;\n    }\n    if (this.type === InputHelisaType.IDENTITY) {\n      for (const strItem of str) {\n        if (strItem.match('[0-9]')) {\n          realStr += strItem;\n        }\n      }\n    }\n    if (this.type === InputHelisaType.NUMERIC) {\n      for (const strItem of str) {\n        if (strItem.match('[0-9]')) {\n          realStr += strItem;\n        }\n      }\n    }\n    if (this.type === InputHelisaType.DOUBLE) {\n      let haveDot: boolean = false;\n\n      for (const strItem of str) {\n        if (strItem.match('[0-9]') || ((strItem === this.DECIMAL_SEPARATOR) && !haveDot)) {\n          realStr += strItem;\n        }\n        haveDot = haveDot || (strItem === this.DECIMAL_SEPARATOR);\n      }\n    }\n    return realStr;\n  }\n\n  onFocus($event: FocusEvent): void {\n    if ((this.type === InputHelisaType.NUMERIC || this.type === InputHelisaType.DOUBLE) &&\n      Number(this.getRealValue(this.inputText.nativeElement.value)) === 0) {\n      this.inputText.nativeElement.select();\n    }\n  }\n}\n","import { SortDirection } from '@angular/material/sort';\nimport { RowData } from './table-helisa.component';\n\nexport enum ColumnType {\n  NORMAL, URL\n}\n\nexport interface ColumnConfig {\n  name: string;\n  title?: string;\n  visible?: boolean;\n  sortable?: boolean;\n  groupable?: boolean;\n  totalType?: TotalType;\n  searchable?: boolean;\n  sortDirection?: SortDirection;\n  subtitle?: string;\n  colspanTitle?: number;\n  colspanSubtitle?: number;\n  columnStyle?: string;\n  columnType?: ColumnType;\n}\n\nexport interface AddRowButton {\n  text: string;\n  showButton: boolean;\n}\n\nexport enum EventScope {\n  USER, CODE_CALL\n}\n\nexport enum TotalType {\n  SUM, AVERAGE, COUNT\n}\n\nexport enum ChangeColumnConfigurationType {\n  SORT, UNKNOWN, TOTAL\n}\n\nexport interface EventColumn {\n  column: ColumnConfig;\n  columnConfigurations: Array<ColumnConfig>;\n  type: ChangeColumnConfigurationType;\n}\n\nexport interface TotalTableHelisa {\n  column: ColumnConfig;\n  value: number;\n}\n\nexport interface TotalGroup {\n  sum: number;\n  count: number;\n}\n\nexport interface EventSearch {\n  text: string;\n  columnConfigurations: Array<ColumnConfig>;\n}\n\nexport interface RequestTableHelisa<T> {\n  page: number;\n  body: {} | T;\n}\n\nexport interface DropElement<T> {\n value: T;\n order: number;\n}\n\nexport interface SelectObject<T> {\n  value: T;\n  scope: EventScope;\n}\n\nexport enum TableHelisaType {\n  REMOTE, LOCAL\n}\n\n\nexport interface Cell<T> {\n  column: ColumnConfig;\n  row: RowData<T> | T;\n }\n\nexport interface ConfigCellStyles<T> {\n   cellData: T;\n   classCell: string;\n }\n\nexport interface ConfigRowStyles<T> {\n  column: ColumnConfig;\n  data: {} | T;\n  classRow: string;\n}\n\n// @dynamic\nexport class ColumnConfigUtil<T> {\n\n  getValue(obj: T, column: ColumnConfig): T | number | string {\n    return column.name.split('.').reduce((o: T, field: string): T | string => o && o[field], obj);\n  }\n}\n","import {ColumnConfig} from './table-helisa.interface';\nimport {Observable} from 'rxjs';\n\n\nexport class TableHelisaConnectComponent<T> {\n  page: number;\n  isLastPage: boolean;\n  isUsed: boolean;\n\n  constructor() {\n    this.page = 0;\n    this.isLastPage = false;\n    this.isUsed = false;\n  }\n\n  public getBody(columnConfig: Array<ColumnConfig>, search: string): {} {\n    return {};\n  }\n\n  nextPage(): number {\n    return this.page++;\n  }\n}\n","import {AfterViewInit, Component, EventEmitter, Input, OnInit, Output, ViewChild, ElementRef, DoCheck} from '@angular/core';\nimport {MatSort, Sort} from '@angular/material/sort';\nimport { MatTable, MatTableDataSource } from '@angular/material/table';\n\nimport {\n  AddRowButton,\n  Cell,\n  ChangeColumnConfigurationType,\n  ColumnConfig,\n  ColumnConfigUtil,\n  ConfigCellStyles,\n  ConfigRowStyles,\n  DropElement,\n  EventColumn,\n  EventScope,\n  EventSearch,\n  RequestTableHelisa,\n  SelectObject,\n  TableHelisaType,\n  TotalGroup,\n  TotalType,\n  ColumnType,\n  TotalTableHelisa\n} from './table-helisa.interface';\nimport { TableHelisaService, TableHelisaServiceInfo } from './table-helisa.service';\nimport { TableHelisaConnectComponent } from './table-helisa-connect.component';\nimport { CdkDragDrop, moveItemInArray } from '@angular/cdk/drag-drop';\nimport { of } from 'rxjs';\n\nexport interface RowData<T> {\n  data: {} | T;\n  rowType: RowType;\n}\n\nenum RowType {\n  GROUP_TITLE, GROUP_FOOTER, ROW\n}\n\n\n\n@Component({\n  selector: 'hel-table',\n  templateUrl: './table-helisa.component.html',\n  styleUrls: ['./table-helisa.component.sass']\n})\nexport class TableHelisaComponent<T> implements OnInit, AfterViewInit {\n\n  private tableHelisaConnectComponent: TableHelisaConnectComponent<T>;\n  totalData: Array<number>;\n  rawData: Array<T>;\n  data: MatTableDataSource<RowData<T>> = new MatTableDataSource<RowData<T>>([]);\n  displayedColumns: string[] = [];\n  displayedColumnsWithTitle: string[] = [];\n  displayedColumnsWithSubtitle: string[] = [];\n  displayedColumnsWithFooter: string[] = [];\n  columnConfig: Array<ColumnConfig>;\n  selectedObject: T;\n  lastSearch: string;\n  type: TableHelisaType = TableHelisaType.LOCAL;\n  indexRowSelect: number;\n  private scrollCount: number = 0;\n  hasSubtitle: boolean = false;\n  private indexRowStartDrag: number = -1;\n  private lastIndexRowDrag: number = -1;\n  private dataBeforeDrag: { data: RowData<T>[] } = null;\n  private dataSource$: Array<T> = [];\n  private scrollX: number = 0;\n  private scrollY: number = 0;\n\n  @ViewChild(MatSort, {static: true}) matSort: MatSort;\n  @ViewChild(MatTable, {static: true}) matTable: MatTable<T>;\n  @ViewChild(MatTable, { read: ElementRef, static: true }) matTableElement: ElementRef;\n  @ViewChild('containerTable', {static: true}) containerTable: ElementRef;\n\n  @Output() sort: EventEmitter<EventColumn> = new EventEmitter<EventColumn>();\n  @Output() total: EventEmitter<EventColumn> = new EventEmitter<EventColumn>();\n  @Output() search: EventEmitter<EventSearch> = new EventEmitter<EventSearch>();\n\n  /**\n   * Deprecado, cambiar por electObject\n   */\n  @Output() select: EventEmitter<T> = new EventEmitter<T>();\n  @Output() selectCell: EventEmitter<Cell<T>> = new EventEmitter<Cell<T>>();\n  @Output() selectObject: EventEmitter<SelectObject<T>> = new EventEmitter<SelectObject<T>>();\n  @Output() nextPage: EventEmitter<RequestTableHelisa<T>> = new EventEmitter<RequestTableHelisa<T>>();\n  @Input() showTitle: boolean = true;\n  @Input() isCellSelection: boolean = false;\n  @Input() count: number;\n  @Input() configCellStyles: Array<ConfigCellStyles<T>>;\n  @Input() configRowStylesFromColumn: Array<ConfigRowStyles<T>>;\n  @Input() configColumnClass: Array<string>;\n  @Input() selectedCells: Cell<T>;\n  @Output() drop: EventEmitter<DropElement<T>> = new EventEmitter<DropElement<T>>();\n  @Input() isDragged: boolean = false;\n  @Input() addRowButton: AddRowButton = { showButton: false, text: '' };\n  @Output() addRow: EventEmitter<void> = new EventEmitter<void>();\n  @Output() bookClicked: EventEmitter<T> = new EventEmitter<T>();\n  @Input() addBookButton: boolean = false;\n  @Input() showToolTip: boolean = true;\n  showFooter: boolean = false;\n  showSearch: boolean = false;\n\n\n\n  /**\n   * Tiempo antes de ocultarla el mensaje del tooltip\n   */\n  @Input() hideDelay: number = 600;\n\n  /**\n   * Tiempo antes de mostra el mensaje del tooltip\n   */\n  @Input() showDelay: number = 500;\n\n\n  constructor(private tableService: TableHelisaService<T>) { }\n\n  ngOnInit(): void {\n    this.reloadColumnConfig();\n    this.tableService.nextPageReturn.subscribe(\n      (data: TableHelisaServiceInfo<T[]>): void => {\n        if (!data.table || data.table === this) {\n          this.receivePage(data.obj);\n        }\n      }\n    );\n    this.tableService.totalReturn.subscribe((info: TableHelisaServiceInfo<TotalTableHelisa>): void => {\n      if (info) {\n        this.columnConfig.forEach((column: ColumnConfig, idx: number): void => {\n          if (column === info.obj.column) {\n            this.totalData[idx] = this.getGroupValue(column, { sum: info.obj.value, count: this.count });\n          }\n        });\n      }\n    });\n    this.matSort.sortChange.subscribe(\n      (event: Sort): void => {\n        const column: ColumnConfig = this.columnConfig.find((c: ColumnConfig): boolean => c.name === event.active);\n        column.sortDirection = event.direction;\n        this.sort.emit({ column, columnConfigurations: this.columnConfig, type: ChangeColumnConfigurationType.SORT });\n      }\n    );\n\n    this.tableService.emitVisibleButton.subscribe(\n      (data: boolean): void => {\n        if (data !== undefined && data != null) {\n          this.addRowButton.showButton = data;\n        }\n      }\n    );\n    this.reload();\n  }\n\n  ngAfterViewInit(): void {\n    if (this.isCellSelection) {\n      this.matTable.renderRows();\n    }\n  }\n\n  @Input()\n  set isRemote(w: boolean) {\n    this.type = w ? TableHelisaType.REMOTE : TableHelisaType.LOCAL;\n    this.tableHelisaConnectComponent = new TableHelisaConnectComponent<T>();\n    if (this.type === TableHelisaType.REMOTE) {\n      this.goNextPage();\n    } else {\n      this.tableHelisaConnectComponent.page++;\n    }\n  }\n\n  @Input()\n  set columnConfiguration(columnConfiguration: Array<ColumnConfig>) {\n    this.columnConfig = columnConfiguration;\n    this.reload();\n    this.reloadColumnConfig();\n  }\n\n  @Input()\n  set dataSource(dataSource: Array<T>) {\n    this.dataSource$ = dataSource;\n    this.rawData = dataSource;\n    this.reload();\n  }\n\n  get dataSource(): Array<T> {\n    return this.dataSource$;\n  }\n\n  @Input()\n  set selectedIndexRow(idRowSelected: number) {\n    this.indexRowSelect = idRowSelected;\n    if (this.rawData && this.rawData.length) {\n      if ((idRowSelected >= this.rawData.length || idRowSelected < 0)) {\n        this.indexRowSelect = 0;\n      }\n      this.selectRow({ data: this.rawData[this.indexRowSelect], rowType: RowType.ROW }, false);\n    }\n  }\n\n  private reloadColumnConfig(): void {\n    this.hasSubtitle = false;\n    this.displayedColumns.splice(0, this.displayedColumns.length);\n\n    if (this.columnConfig) {\n      if (this.addBookButton) {\n        const columnCount: number = this.columnConfig.length;\n        let countSubtitle: number = 0;\n        let showBookButton: boolean = false;\n        this.columnConfig.forEach((column: ColumnConfig): void => {\n          if (!!column.subtitle) {\n            countSubtitle = countSubtitle + 1;\n          }\n          if ((!showBookButton) && (column.name === 'bookButton')) {\n            showBookButton = true;\n          }\n        });\n        const subtitleTemp: boolean = columnCount === countSubtitle;\n        if (!showBookButton) {\n          this.columnConfig.push({\n            name: 'bookButton',\n            title: '',\n            subtitle: subtitleTemp ? '' : undefined ,\n            visible: true\n          });\n        }\n      }\n      this.columnConfig.forEach((column: ColumnConfig): void => {\n        if (column.visible) {\n          this.displayedColumns.push(column.name);\n        }\n        if (!this.hasSubtitle) {\n          this.hasSubtitle = column.subtitle !== undefined;\n        }\n      });\n      if (this.rawData) {\n        this.dataSource = this.rawData;\n      }\n    }\n    this.displayedColumnsWithTitle.splice(0, this.displayedColumnsWithTitle.length);\n    this.displayedColumnsWithSubtitle.splice(0, this.displayedColumnsWithSubtitle.length);\n    this.displayedColumnsWithFooter.splice(0, this.displayedColumnsWithFooter.length);\n    this.getColumnsWithTitle().forEach((col: string): number => this.displayedColumnsWithTitle.push(col));\n    this.getHeaderSubtitle().forEach((col: string): number => this.displayedColumnsWithSubtitle.push(col));\n    this.footerDisplayedColumns().forEach((col: string): number => this.displayedColumnsWithFooter.push(col));\n  }\n\n  public reload(): void {\n    if(this.columnConfig) {\n      const changeData: Array<RowData<T>> = Array<RowData<T>>();\n      let haveGroup: boolean = false;\n      let groupFooter: Array<TotalGroup>;\n      this.columnConfig.forEach((column: ColumnConfig): void => {\n        if (column.totalType !== undefined && (this.type === TableHelisaType.LOCAL || this.tableHelisaConnectComponent.page <= 1)) {\n          this.totalData = new Array<number>(this.columnConfig.length);\n          this.showFooter = true;\n          this.total.emit({column, columnConfigurations: this.columnConfig, type: ChangeColumnConfigurationType.TOTAL});\n        }\n        this.showSearch = this.showSearch || column.searchable;\n        haveGroup = haveGroup || column.groupable;\n      });\n      if (haveGroup) {\n        this.rawData = this.rawData.sort((a: T, b: T): number => {\n          let result: number = 0;\n          this.columnConfig.forEach((column: ColumnConfig): void => {\n            if (result === 0) {\n              result = this.compare(a, b);\n            }\n          });\n          return result;\n        });\n      }\n      if(this.rawData) {\n        this.rawData.forEach((row: T): void => {\n          if (haveGroup && (changeData.length === 0 || this.compare(changeData[changeData.length - 1].data as T, row) !== 0)) {\n            if (groupFooter) {\n              changeData.push({data: groupFooter, rowType: RowType.GROUP_FOOTER});\n            }\n            changeData.push({data: row, rowType: RowType.GROUP_TITLE});\n            groupFooter = new Array<TotalGroup>(this.columnConfig.length);\n          }\n          if (haveGroup) {\n            this.addTotalGroup(groupFooter, row);\n          }\n          changeData.push({data: row, rowType: RowType.ROW});\n        });\n        this.data = new MatTableDataSource<RowData<T>>(changeData);\n      }\n      if (this.rawData && this.rawData.length && this.indexRowSelect && !this.selectedObject) {\n        if (this.indexRowSelect >= this.rawData.length || this.indexRowSelect < 0) {\n          this.indexRowSelect = 0;\n        }\n        this.selectRow({data: this.rawData[this.indexRowSelect], rowType: RowType.ROW}, false);\n      }\n    }\n  }\n\n  private addTotalGroup(rowTotal: Array<TotalGroup>, row: T): void {\n    this.columnConfig.forEach((column: ColumnConfig, index: number): void => {\n      if (column.totalType !== undefined) {\n        if (rowTotal[index] === undefined) {\n          rowTotal[index] = { sum: (new ColumnConfigUtil().getValue(row, column) as number), count: 1 };\n        } else {\n          rowTotal[index].sum += (new ColumnConfigUtil().getValue(row, column) as number);\n          rowTotal[index].count++;\n        }\n      }\n    });\n  }\n\n  private compare(a: T, b: T): number {\n    let ws: number = 0;\n    this.columnConfig.forEach((column: ColumnConfig): void => {\n      if (ws === 0 && column.groupable) {\n        if ((new ColumnConfigUtil().getValue(a, column) as number) < (new ColumnConfigUtil().getValue(b, column) as number)) {\n          ws = -1;\n        } else if ((new ColumnConfigUtil().getValue(a, column) as number) > (new ColumnConfigUtil().getValue(b, column) as number)) {\n          ws = 1;\n        }\n      }\n    });\n    return ws;\n  }\n\n  getGroupDescription(obj: T): string {\n    let result: string = '';\n    this.columnConfig.forEach((column: ColumnConfig): void => {\n      if (column.groupable) {\n        result += (result.length ? ' - ' : '') + (new ColumnConfigUtil().getValue(obj, column));\n      }\n    });\n    return result;\n  }\n\n  isGroupTitle(index: number, item: RowData<T>): boolean {\n    return item.rowType === RowType.GROUP_TITLE;\n  }\n\n  isRow(index: number, item: RowData<T>): boolean {\n    return item.rowType === RowType.ROW;\n  }\n\n  isGroupFooter(index: number, item: RowData<T>): boolean {\n    return item.rowType === RowType.GROUP_FOOTER;\n  }\n\n  footerDisplayedColumns(): Array<string> {\n    return this.displayedColumns.map((name: string): string => 'footer-' + name);\n  }\n\n  getGroupValue(column: ColumnConfig, data: TotalGroup): number {\n    if (column.totalType === TotalType.SUM) { return data.sum; }\n    if (column.totalType === TotalType.COUNT) { return data.count; }\n    if (column.totalType === TotalType.AVERAGE) { return 1. * data.sum / data.count; }\n    return undefined;\n  }\n\n  getValue(obj: T, column: ColumnConfig): T {\n    return new ColumnConfigUtil().getValue(obj, column) as T;\n  }\n\n  getValueTooltip(obj: T, column: ColumnConfig): string {\n    if (this.showToolTip) {\n      return new ColumnConfigUtil().getValue(obj, column) as string;\n    } else {\n      return null;\n    }\n  }\n\n  searchText(text: string): void {\n    this.lastSearch = text;\n    this.search.emit({ text, columnConfigurations: this.columnConfig });\n  }\n\n  selectRow(row: RowData<T>, isUser: boolean, column?: ColumnConfig): void {\n    if (row === undefined || row === null) {\n      return;\n    }\n    if ((column === undefined || column === null) || (!!column && column.name !== 'bookButton')) {\n      this.selectedObject = row.data as T;\n      this.select.emit(this.selectedObject);\n      this.selectObject.emit({ value: this.selectedObject, scope: isUser ? EventScope.USER : EventScope.CODE_CALL });\n    } else if (!!column && column.name === 'bookButton') {\n      if (this.selectedObject !== row.data) {\n        this.selectedObject = row.data as T;\n        this.select.emit(this.selectedObject);\n        this.selectObject.emit({ value: this.selectedObject, scope: isUser ? EventScope.USER : EventScope.CODE_CALL });\n      }\n      this.bookClicked.emit(this.selectedObject);\n    }\n  }\n\n  onScroll(event: Event): void {\n    const element: HTMLDivElement = event.target as HTMLDivElement;\n    let isScrollY: boolean;\n\n    if (this.scrollY !== element.scrollTop) {\n      isScrollY = true;\n      this.scrollY = element.scrollTop;\n      this.scrollX = element.scrollLeft;\n    }\n\n    if (this.scrollX !== element.scrollLeft) {\n      isScrollY = false;\n      this.scrollY = element.scrollTop;\n      this.scrollX = element.scrollLeft;\n    }\n\n    if ((element.scrollHeight - element.scrollTop < 1000) && isScrollY) {\n      this.goNextPage();\n    }\n\n  }\n\n  private goNextPage(): void {\n    if (!this.tableHelisaConnectComponent.isLastPage && !this.tableHelisaConnectComponent.isUsed) {\n      this.tableHelisaConnectComponent.isUsed = true;\n      this.nextPage.emit({\n        page: this.tableHelisaConnectComponent.nextPage(),\n        body: this.tableHelisaConnectComponent.getBody(this.columnConfig, this.lastSearch)\n      });\n    }\n  }\n\n  private receivePage(data: T[]): void {\n    if (!this.rawData) {\n      this.rawData = new Array<T>();\n    }\n    this.rawData = this.rawData.concat(data);\n    this.dataSource = this.rawData;\n    this.tableHelisaConnectComponent.isLastPage = data.length === 0;\n    this.tableHelisaConnectComponent.isUsed = false;\n  }\n\n  dblClickCell(): void {\n    this.selectCell.emit(this.selectedCells as Cell<T>);\n  }\n\n  selectedCell(element: RowData<T>, column: ColumnConfig): void {\n    this.selectRow(element, true, column);\n\n    this.selectedCells = { column, row: element };\n    this.selectCell.emit(this.selectedCells);\n  }\n\n  isSelectedCell(row: RowData<T>, column: ColumnConfig): boolean {\n    if (this.isCellSelection) {\n      if (this.selectedCells != null) {\n        if (this.selectedCells.column.name === column.name &&\n          (this.selectedCells.row as RowData<T>).data === row.data) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  getClassToCell(row: T, column: ColumnConfig): string[] {\n    const classToCell: Array<string> = new Array<string>();\n    if (this.configCellStyles) {\n      const found: ConfigCellStyles<T> = this.configCellStyles.find((c: ConfigCellStyles<T>): boolean => {\n        return c.cellData === this.getValue(row, column);\n      });\n      if (found) {\n        classToCell.push(found.classCell);\n      }\n    }\n    if (column.columnStyle) {\n      classToCell.push(column.columnStyle);\n    }\n    return classToCell;\n  }\n\n  getClassToColumn(): string[] {\n    return this.configColumnClass;\n  }\n\n  getClassToRow(row: T): string[] {\n    const classToRow: Array<string> = new Array<string>();\n    if (row === this.selectedObject && !this.isCellSelection) {\n      classToRow.push('');\n    }\n    if (this.configRowStylesFromColumn) {\n      const found: ConfigRowStyles<T> = this.configRowStylesFromColumn.find((c: ConfigRowStyles<T>): boolean => {\n        return c.data === this.getValue(row, c.column);\n      });\n      if (found) {\n        classToRow.push(found.classRow);\n      }\n    }\n    return classToRow;\n  }\n\n  onDrop(event: MouseEvent): void {\n    if (this.isDragged && this.indexRowStartDrag >= 0) {\n      const rowIndex: number = this.getRowIndex(event.pageY);\n      const array: RowData<T>[] = this.dataBeforeDrag.data;\n      const rawData: T[] = this.rawData;\n      moveItemInArray(array, this.indexRowStartDrag, rowIndex);\n      moveItemInArray(rawData, this.indexRowStartDrag, rowIndex);\n      this.drop.emit({ value: array[rowIndex].data as T, order: rowIndex });\n      this.rawData = rawData;\n      this.data = new MatTableDataSource(array);\n      event.stopPropagation();\n    }\n  }\n\n  tableKeydown(event: KeyboardEvent): void {\n    if (!this.isCellSelection) {\n      let currentIndex: number = this.data.data.findIndex((row: RowData<T>): boolean => row.data === this.selectedObject);\n      let newSelection: number = -10;\n      if (event.key === 'ArrowDown') {\n        this.scrollCount++;\n        this.data.data.forEach((row: RowData<T>, index: number): void => {\n          if (newSelection === -10 && index > currentIndex && row.rowType === RowType.ROW) {\n            newSelection = index;\n          }\n        });\n      }\n      if (event.key === 'ArrowUp') {\n        this.scrollCount--;\n        currentIndex = this.data.data.length - currentIndex - 1;\n        this.data.data.reverse().forEach((row: RowData<T>, index: number): void => {\n          if (newSelection === -10 && index > currentIndex && row.rowType === RowType.ROW) {\n            newSelection = index;\n          }\n        });\n        this.data.data.reverse();\n        if (newSelection !== -10) {\n          newSelection = this.data.data.length - newSelection - 1;\n        }\n      }\n      if (newSelection !== -10) {\n        this.selectRow(this.data.data[newSelection], true);\n      }\n      if (Math.abs(this.scrollCount) >= 2) {\n        this.scrollCount = 0;\n      } else {\n        event.preventDefault();\n      }\n    }\n  }\n\n  /**\n   * Emite el evento cuando se da click al boton AddRow\n   */\n  onAddRow(): void {\n    this.addRow.emit();\n  }\n\n\n  getHeaderSubtitle(): string[] {\n    const x: string[] = this.columnConfig.map((column: ColumnConfig, index: number): string => {\n      if (column.visible && column.subtitle !== undefined) {\n        return 'subtitle' + index;\n      } else {\n        return null;\n      }\n    }).filter((data: string): boolean => data != null);\n    return x;\n  }\n\n  getColumnsWithTitle(): string[] {\n    return this.columnConfig.filter((column: ColumnConfig): boolean =>\n      column.visible && column.title !== undefined\n    ).map((col: ColumnConfig): string => col.name);\n  }\n\n  dragger(event: MouseEvent): boolean {\n    if (this.isDragged && this.indexRowStartDrag >= 0) {\n      const rowIndex: number = this.getRowIndex(event.pageY);\n      if (rowIndex !== this.lastIndexRowDrag) {\n        this.lastIndexRowDrag = rowIndex;\n        // This can have a memory problem with big data\n        const array: RowData<T>[] = [...this.dataBeforeDrag.data];\n        moveItemInArray(array, this.indexRowStartDrag, rowIndex);\n        this.data = new MatTableDataSource(array);\n      }\n      event.preventDefault();\n      return true;\n    }\n  }\n\n  startDrag(event: MouseEvent): void {\n    this.indexRowStartDrag = this.getRowIndex(event.pageY);\n    this.lastIndexRowDrag = this.indexRowStartDrag;\n    this.dataBeforeDrag = this.data;\n  }\n\n  private getRowIndex(pageY: number): number {\n    let offsetTop: number = 0;\n    let container: HTMLElement = this.containerTable.nativeElement;\n    while ((container !== null) && (offsetTop === 0)) {\n      offsetTop = container.offsetTop;\n      container = container.parentElement;\n    }\n    let rowIndex: number = -1;\n    const rows: HTMLCollection = this.matTableElement.nativeElement.children[1].children;\n    for (let i: number = 0; i < rows.length; i++) {\n      const row: HTMLElement = (rows[i] as HTMLElement);\n      if (pageY - offsetTop > row.offsetTop - this.containerTable.nativeElement.scrollTop) {\n        rowIndex = i;\n      }\n    }\n    if (rowIndex < 0) { rowIndex = 0; }\n    return rowIndex;\n  }\n\n  get columnType(): typeof ColumnType {\n    return ColumnType;\n  }\n\n}\n","import { Component, OnInit, Input, Output, EventEmitter, ViewChild } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\nimport * as moment_ from 'moment';\nconst moment: typeof moment_ = moment_;\n\nimport { MatDatepickerInputEvent, MatDatepicker } from '@angular/material/datepicker';\nimport { filter, tap } from 'rxjs/operators';\n\nexport enum TypeCalendarEnum {\n  NORMAL = 'norma',\n  MONTH_YEAR = 'mounth-year',\n  STRICT = 'strict'\n}\n\n\n@Component({\n  selector: 'hel-date-helisa',\n  templateUrl: './date-helisa.component.html',\n  styleUrls: ['./date-helisa.component.css'],\n})\nexport class DateHelisaComponent implements OnInit {\n\n  @ViewChild('picker', { static: true }) datePickerShow: MatDatepicker<Date>;\n  @Input() floatLabel: 'never' | 'always' | 'auto' = 'never';\n  @Input() dateFormControl: FormControl = new FormControl('');\n  private date: Date = new Date();\n\n  /**\n   * Formato de fecha.\n   * Los formatos validos son aquellos que maneja la libreria momentjs y este: 'DD [de] MMMM [de] YYYY'\n   * https://momentjs.com/docs/#/parsing/string-format/\n   */\n  @Input() dateFormat: string = 'DD/MM/YYYY';\n  @Input() locale: string = 'es';\n  @Input() errorMessage: string = 'La fecha no concuerda con el formato ';\n  @Input() placeholder: string = this.dateFormat;\n  @Input() showDatePicker: boolean = false;\n  @Input() minDate: Date;\n  @Input() maxDate: Date;\n  @Output() change: EventEmitter<Date> = new EventEmitter<Date>();\n  isClosed: boolean = false;\n  // tslint:disable-next-line:no-any\n  timeout: any;\n  isDisabled: boolean = false;\n  /**\n   * Si este valor es diferente a TypeCalendarEnum.NORMAL no\n   * será tomado en cuenta\n   */\n  @Input() typeCalendar: TypeCalendarEnum = TypeCalendarEnum.NORMAL;\n\n  dateToVisualize: FormControl;\n\n  /**\n   * Para evitar nuevos eventos miestras se realiza el parseo\n   */\n  private isFromInputEvent: boolean = false;\n\n  /**\n   * Verificar si el formato es valido\n   */\n  invalidFormat: boolean = false;\n  private inputFormReal: FormControl = new FormControl('');\n\n  constructor() { }\n\n  /*\n  * TypeCalendarEnum.MONTH_YEAR = 'MM/YYYY'\n  * TypeCalendarEnum.STRICT = 'DD [de] MMMM [de] YYYY'\n  * */\n  ngOnInit(): void {\n    moment.locale(this.locale);\n    this.dateToVisualize = new FormControl('', this.dateFormControl.validator);\n    this.formHandler();\n    this.inputFormReal = this.dateFormControl;\n    this.inputFormReal.registerOnDisabledChange((isDisabled: boolean): void => {\n      if (isDisabled) {\n        this.isDisabled = true;\n        this.dateToVisualize.disable();\n      } else {\n        this.isDisabled = false;\n        this.dateToVisualize.enable();\n      }\n    });\n\n    /**\n     * establecer valor por defecto de la fecha\n     */\n    if (this.dateFormControl.value !== '' && this.dateFormControl.value !== null) {\n      const incomingDate: string = moment(this.dateFormControl.value, this.dateFormat).format(this.dateFormat);\n      if (incomingDate !== 'Invalid date') {\n        this.dateToVisualize.setValue(incomingDate);\n        this.dateFormControl.setValue(this.dateFormControl.value);\n      }\n    }\n\n  }\n\n  get typeCalendarEnum(): typeof TypeCalendarEnum {\n    return TypeCalendarEnum;\n  }\n\n  openDatePicker(): void {\n    if (this.showDatePicker && !this.isClosed) {\n      this.isClosed = true;\n      this.timeout = setTimeout((): void => {\n        this.datePickerShow.open();\n      }, 2000);\n    }\n  }\n\n  onKey(event: KeyboardEvent): void {\n    if (event.key === ' ' && this.showDatePicker) {\n      this.onBlur();\n      this.isClosed = true;\n      this.datePickerShow.open();\n    }\n  }\n\n  onBlur(): void {\n    clearTimeout(this.timeout);\n    this.isClosed = false;\n  }\n\n  /**\n   * Determina como se debe inicializar la visualizacion del calendar\n   */\n  getStartView(): string {\n    // multi-year\n    if (this.typeCalendar === this.typeCalendarEnum.MONTH_YEAR) {\n      return 'multi-year';\n    } else if (this.typeCalendar === this.typeCalendarEnum.STRICT) {\n      return 'month';\n    } else {\n      return 'month';\n    }\n  }\n\n  private formHandler(): void {\n    if (this.typeCalendar === this.typeCalendarEnum.STRICT) {\n      this.dateToVisualize.valueChanges.subscribe((date: string): void => {\n        this.invalidFormat = false;\n        const isValid: boolean = moment(date, this.dateFormat, true).isValid();\n        const result: string = moment(date, this.dateFormat).format(this.dateFormat);\n        if (!!result && (result === 'Invalid date' || !isValid)) {\n          this.invalidFormat = true;\n          return;\n        }\n        if (!!result) {\n          if (!this.isFromInputEvent) {\n            this.isFromInputEvent = true;\n            this.dateToVisualize.setValue(moment(result, this.dateFormat).format(this.dateFormat));\n            this.dateFormControl.setValue(moment(result, this.dateFormat).toDate());\n            this.isFromInputEvent = false;\n          } else {\n            setTimeout((): void => {\n              this.isFromInputEvent = false;\n            }, 1500);\n          }\n\n        }\n      });\n    } else {\n      this.dateToVisualize.valueChanges\n        .pipe(\n          tap((date: string): void => {\n            if (date.length > this.dateFormat.length) {\n              this.invalidFormat = true;\n            } else {\n              this.invalidFormat = false;\n            }\n          }),\n          filter((date: string): boolean => date.length === this.dateFormat.length)\n        )\n        .subscribe((date: string): void => {\n          this.invalidFormat = false;\n          const isValid: boolean = moment(date, this.dateFormat, true).isValid();\n          const result: string = moment(date, this.dateFormat).format('YYYY-MM-DD');\n\n          if (!!result && (result === 'Invalid date' || !isValid)) {\n            this.invalidFormat = true;\n            return;\n          }\n\n          if (!!result) {\n            if (!this.isFromInputEvent) {\n              this.isFromInputEvent = true;\n              const subString: string[] = result.split('-');\n\n              const year: number = parseFloat(subString[0]);\n              const month: number = parseFloat(subString[1]);\n              const day: number = parseFloat(subString[2]);\n\n              this.date.setFullYear(year);\n              this.date.setDate(day);\n              this.date.setMonth(month - 1); // -1 por que los meses se toman como los indices en un array\n\n              /** cuando es de tipo MOUNTH_YEAR retorna el ultimo dia del mes seleccionado */\n              if (this.typeCalendar === TypeCalendarEnum.MONTH_YEAR) {\n                this.date = moment(this.date).endOf('month').toDate();\n              }\n\n              this.dateToVisualize.setValue(moment(this.date, 'YYYY-MM-DD').format(this.dateFormat));\n              this.dateFormControl.setValue(this.date);\n              this.isFromInputEvent = false;\n            } else {\n              setTimeout((): void => {\n                this.isFromInputEvent = false;\n              }, 1500);\n            }\n\n          }\n        });\n    }\n\n\n    this.dateFormControl.valueChanges\n      .subscribe((date: string): void => {\n        const incommingDate: string = moment(date, this.dateFormat).format(this.dateFormat);\n        if (this.dateFormControl.value !== '' && incommingDate !== 'Invalid date') {\n          this.dateToVisualize.setValue(incommingDate);\n        }\n      });\n  }\n\n\n  /**\n   * Evento que se dispara luego seleccionar un mes\n   */\n  monthSelectedHandler(chosenMonthDate: moment_.Moment, datepicker: MatDatepicker<moment_.Moment>): void {\n\n    if (this.typeCalendar === TypeCalendarEnum.MONTH_YEAR) {\n      datepicker.close();\n      const date: Date = moment(chosenMonthDate).endOf('month').toDate();\n\n      this.dateToVisualize.setValue(moment(date, 'YYYY-MM-DD').format(this.dateFormat));\n      this.dateFormControl.setValue(date);\n    }\n  }\n\n  /**\n   * Evento desde el control touch del calendar\n   */\n  dateChange(type: string, event: MatDatepickerInputEvent<Date>): void {\n    this.dateToVisualize.setValue(moment(event.value, 'YYYY-MM-DD').format(this.dateFormat));\n    this.dateFormControl.setValue(event.value);\n    this.change.emit(event.value);\n    this.isClosed = true;\n  }\n\n  getErrorMessage(): string {\n    return this.errorMessage + this.dateFormat;\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Subject, BehaviorSubject, Subscriber, Observable } from 'rxjs';\nimport { Node } from './node';\n\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class TreeHelisaService {\n\n    // Observable string sources\n    private emitNodeSelected: BehaviorSubject<number | string> = new BehaviorSubject<number | string>(1);\n    // Observable string streams\n    nodeSelected: Observable<string | number> = this.emitNodeSelected.asObservable();\n\n    // Observable string sources\n    private emitDataSource: BehaviorSubject<Node> = new BehaviorSubject<Node>(undefined);\n\n    // Observable string streams\n    dataSourceObservable: Observable<Node> = this.emitDataSource.asObservable();\n\n    // Expand node observable\n    private emitExpandAllNodes: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(null);\n    nodeExpand: Observable<boolean> = this.emitExpandAllNodes.asObservable();\n\n     // Collapse node observable\n     private emitCollapseAllNodes: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(null);\n     nodeCollapse: Observable<boolean> = this.emitCollapseAllNodes.asObservable();\n\n    private emitRefreshTree: Subject<void> = new Subject<void>();\n    refreshTreeObservable: Observable<void> = this.emitRefreshTree.asObservable();\n\n    private emitRefreshTreeWithPagination: Subject<void> = new Subject<void>();\n    refreshTreeWithPaginationObservable: Observable<void> = this.emitRefreshTreeWithPagination.asObservable();\n\n    private emitExpandOneNode: Subject<Node> = new Subject<Node>();\n    expandOneNodeObservable: Observable<Node> = this.emitExpandOneNode.asObservable();\n\n    private emitCollapseOneNode: Subject<Node> = new Subject<Node>();\n    collapseOneNodeObservable: Observable<Node> = this.emitCollapseOneNode.asObservable();\n\n    // Service message commands\n    changeNodeSelected(idResidentialArea: number | string): void {\n        this.emitNodeSelected.next(idResidentialArea);\n    }\n\n    // Service message commands\n    changeDataSource(data: Node): void {\n        this.emitDataSource.next(data);\n    }\n\n    expandAllNodes(expand: boolean): void {\n        this.emitExpandAllNodes.next(expand);\n    }\n\n    collapseAllNodes(collapse: boolean): void {\n        this.emitCollapseAllNodes.next(collapse);\n    }\n\n    refreshTree(): void {\n        this.emitRefreshTree.next();\n    }\n\n\n    refreshTreeWithPagination(): void {\n        this.emitRefreshTreeWithPagination.next();\n    }\n\n\n    expandOneNode(node: Node): void {\n    this.emitExpandOneNode.next(node);\n    }\n\n\n    collapseOneNode(node: Node): void {\n        this.emitCollapseOneNode.next(node);\n    }\n\n    constructor() {\n\n    }\n\n}\n","export class TreeHelisaConnect<T> {\n    page: number;\n    isLastPage: boolean;\n    isUsed: boolean;\n\n    constructor() {\n      this.page = 0;\n      this.isLastPage = false;\n      this.isUsed = false;\n    }\n\n    nextPage(): number {\n      return this.page = this.page + 1;\n    }\n  }\n","import { Component, OnInit, Input, Output, EventEmitter, ViewChild, AfterViewInit, ElementRef, HostListener } from '@angular/core';\nimport { NestedTreeControl, TreeControl } from '@angular/cdk/tree';\nimport { MatOptionSelectionChange } from '@angular/material/core';\nimport { MatTreeNestedDataSource, MatTree } from '@angular/material/tree';\nimport { Node } from './node';\nimport { TreeHelisaService } from './tree-helisa.service';\nimport { Router } from '@angular/router';\nimport * as _ from 'lodash';\nimport { TreeHelisaConnect } from './tree-helisa-connect';\nimport { FormControl } from '@angular/forms';\nimport { Observable } from 'rxjs';\n\nexport interface RequestTreeHelisa {\n  page: number;\n}\n\n@Component({\n  selector: 'hel-tree',\n  templateUrl: './tree-helisa.component.html',\n  styleUrls: ['./tree-helisa.component.sass']\n  // host: { '(document:keyup)': 'onKeyDown($event)' }\n})\nexport class TreeHelisaComponent implements OnInit, AfterViewInit {\n  isDisabled: boolean;\n  selectedNode: number | string | null;\n  //#endregion ====== Variables ========\n\n  constructor(private treeHelisaService: TreeHelisaService, private router: Router, private elementRef: ElementRef) {\n    // cargar datos pasados por el @Input\n    if (!!this.data) {\n      const data: Node = this.data;\n      this.data = null;\n      this.receivePage(data.children);\n    } else {\n      this.dataSource.data = [];\n      this.treeControl.dataNodes = [];\n    }\n  }\n\n  //#region  ====== Variables =============\n  private treeHelisaConnect: TreeHelisaConnect<Node>;\n  formEdit: FormControl;\n  @ViewChild('tree', {static: true}) tree: MatTree<{}>;\n  private selectedOptions: Map<\n    string | number,\n    {\n      formControl: FormControl;\n      editMode: boolean;\n    }\n  > = new Map<\n    string | number,\n    {\n      formControl: FormControl;\n      editMode: boolean;\n    }\n  >();\n  /**\n   * Datos del Arbol\n   */\n  @Input() data: Node;\n\n  /**\n   * Retorna el id del nodo removido\n   */\n  @Output() removed: EventEmitter<string | number> = new EventEmitter<number | string>();\n\n  /**\n   * Retorna un nodo editado\n   */\n  @Output() edited: EventEmitter<Node> = new EventEmitter<Node>();\n\n  /**\n   * Retorna un nodo sin id del nodo , pero si con el parent\n   * para conocer a cual fue añadido\n   */\n  @Output() added: EventEmitter<Node> = new EventEmitter<Node>();\n  @Output() collapseParent: EventEmitter<boolean> = new EventEmitter<boolean>();\n  @Output() rangeScrolled: EventEmitter<RequestTreeHelisa> = new EventEmitter<RequestTreeHelisa>();\n  @Output() nodeSelected: EventEmitter<number | string> = new EventEmitter<number | string>();\n  @Output() dobleClick: EventEmitter<number | string> = new EventEmitter<number | string>();\n  @Output() keypressDelete: EventEmitter<number | string | null> = new EventEmitter<number | string | null>();\n  @Output() keypressInsert: EventEmitter<number | string | null> = new EventEmitter<number | string | null>();\n  @Output() checkedOptionNode: EventEmitter<number | string | null> = new EventEmitter<number | string | null>();\n  @Output() uncheckedOptionNode: EventEmitter<number | string | null> = new EventEmitter<number | string | null>();\n  @Output() clickAddNode: EventEmitter<Node> = new EventEmitter<Node>();\n  @Output() clickEditNode: EventEmitter<Node> = new EventEmitter<Node>();\n  @Output() clickDeleteNode: EventEmitter<Node> = new EventEmitter<Node>();\n\n  treeControl: NestedTreeControl<Node> = new NestedTreeControl<Node>((node: Node): Node[] | Observable<Node[]> => node.children);\n  dataSource: MatTreeNestedDataSource<Node> = new MatTreeNestedDataSource<Node>();\n\n  isSingleClick: boolean = true;\n  currentNode: Node = null;\n\n  /**\n   * Obtiene la descripcion completa del nodo\n   * @example Nodo padre,nodo hijo,nodo nieto\n   * @param node Debe tener todos los parent llenos hacia arriba\n   */\n  public static getDescription(node: Node): string {\n    let result: string[] = [node.name];\n    let concat: string = '';\n\n    if (node.parent) {\n      result.push(this.getDescription(node.parent));\n    }\n\n    if (result.length === 1) {\n      return node.name;\n    }\n\n    result = result.reverse();\n\n    for (let i: number = 0; i < result.length; i++) {\n      const element: string = result[i];\n      concat = concat + element + (i === result.length - 1 ? '' : ',');\n    }\n\n    return concat;\n  }\n\n  ngOnInit(): void {\n    // si se cargan datos por medio del servicio\n    this.treeHelisaService.dataSourceObservable.subscribe((res: Node): void => {\n      if (!!res && !!res.children) {\n        this.selectedNode = res.id;\n        this.receivePage(res.children);\n      } else {\n        this.dataSource.data = [];\n        this.treeControl.dataNodes = [];\n      }\n    });\n\n    // Observable, si cambia el nodo seleccionado por medio del servicio\n    this.treeHelisaService.nodeSelected.subscribe((res: string | number): void => {\n      if (!!this.data && !!this.data.children) {\n        this.selectNode(this.data, res);\n      }\n    });\n\n    this.treeHelisaService.refreshTreeObservable.subscribe((res: void): void => {\n      this.refreshTree();\n    });\n\n    this.treeHelisaService.refreshTreeWithPaginationObservable.subscribe((res: void): void => {\n      this.refreshTreeWithPagination();\n    });\n  }\n\n  ngAfterViewInit(): void {\n    this.treeHelisaService.nodeExpand.subscribe((res: boolean): void => {\n      if (res != null) {\n        if (res) {\n          this.tree.treeControl.expandAll();\n        }\n      }\n    });\n\n    this.treeHelisaService.nodeCollapse.subscribe((res: boolean): void => {\n      if (res !== null) {\n        if (res) {\n          this.tree.treeControl.collapseAll();\n        }\n      }\n    });\n\n    this.treeHelisaService.expandOneNodeObservable.subscribe((res: Node): void => {\n      if (res !== undefined) {\n        this.treeControl.expand(res);\n      }\n    });\n\n    this.treeHelisaService.collapseOneNodeObservable.subscribe((res: Node): void => {\n      if (res !== undefined) {\n        this.treeControl.collapse(res);\n      }\n    });\n  }\n\n  //#region  ====== Events ===========\n  onRedirect(node: Node): void {\n    this.isSingleClick = true;\n    setTimeout((): void => {\n      if (this.isSingleClick) {\n        this.selectNode(node, node.id);\n\n        // if(!!node && !node.children){\n        if (!!node) {\n          this.nodeSelected.emit(node.id);\n          this.currentNode = node;\n        }\n      }\n    }, 350);\n  }\n\n  onScroll(event: Event): void {\n    const element: HTMLDivElement = event.target as HTMLDivElement;\n\n    if (element.offsetHeight + element.scrollTop >= element.scrollHeight) {\n      this.goNextPage();\n    }\n  }\n\n  onEdit(node: Node): void {\n    this.clickEditNode.emit(node);\n    /** @Deprecated\n     *  Ya no se edita el nodo ahora solo se emite el evento 'clickEditNode'\n     * retornando el nodo al cual le hicieron click en la opción delete\n     */\n    // node.isEditable = true;\n    // this.isDisabled = true;\n  }\n\n  onAdd(node: Node): void {\n    this.clickAddNode.emit(node);\n    /** @Deprecated\n     *  Ya no se crea y se agrega el nodo ahora solo se emite el evento 'clickAddNode'\n     * retornando el nodo al cual le hicieron click en la opción add\n     */\n    //   // si no tiene hijos instanciar el array\n    //   if (!node.children) {\n    //     node.children = [];\n    //   }\n    //   node.children.push({\n    //     id: Math.random(),\n    //     name: '',\n    //     isSelected: false,\n    //     parent: node,\n    //     isEditable: true\n    //   });\n    //   if (node.children) {\n    //     this.isDisabled = true;\n    //     this.treeHelisaService.expandOneNode(node);\n    //   }\n    //   this.refreshTree();\n  }\n\n  onDelete(node: Node): void {\n    this.clickDeleteNode.emit(node);\n    /** @Deprecated\n     *  Ya no se elimina el nodo ahora solo se emite el evento 'clickDeleteNode'\n     * retornando el nodo al cual le hicieron click en la opción delete\n     */\n    // // Remueve el nodo utilizando la libreria de lodash\n    // _.remove(node.parent.children, node);\n\n    // this.refreshTree();\n    // this.removed.emit(node.id);\n  }\n\n  onEdited(node: Node, value: string): void {\n    node.name = value;\n    if (node.id == null && node.name === '') {\n      _.remove(node.parent.children, node);\n      this.refreshTree();\n    } else if (node.id && node.id != null && node.name.trim() !== '') {\n      this.edited.emit(node);\n      node.isEditable = false;\n      this.selectNode(node, node.id);\n    } else if (node.id == null && node.name.trim() !== '') {\n      this.added.emit(node);\n      node.isEditable = false;\n    }\n    this.isDisabled = false;\n    this.refreshTree();\n  }\n\n  onCancel(node: Node, value: string): void {\n    this.isDisabled = false;\n    // Si no tiene id por ser un nuevo item, lo elimina\n    if (node.id == null) {\n      _.remove(node.parent.children, node);\n      this.refreshTree();\n    }\n\n    node.isEditable = false;\n  }\n\n  onDblClick(node: Node): void {\n    this.isSingleClick = false;\n    this.dobleClick.emit(node.id);\n  }\n\n  @HostListener('document:keyup', ['$event'])\n  onKeyDown(event: KeyboardEvent): void {\n    switch (event.key) {\n      case 'Delete':\n        this.keypressDelete.emit(!!this.currentNode && this.currentNode.id ? this.currentNode.id : null);\n        break;\n      case 'Insert':\n        this.keypressInsert.emit(!!this.currentNode && this.currentNode.id ? this.currentNode.id : null);\n        break;\n      case 'ArrowDown':\n        this.moveDownIntoTree();\n        break;\n      case 'ArrowUp':\n        this.moveUpIntoTree();\n        break;\n    }\n  }\n\n  //#endregion ======= Events ========\n\n  //#region  ======== Metodos =============\n\n  private moveUpIntoTree(): number {\n    if (!!this.data) {\n      // si aun no hay ningun node seleccionado selecciona el primero\n      if (this.currentNode == null) {\n        this.selectNode(this.data, this.data.children[0].id);\n        this.currentNode = this.data.children[0];\n        if (!!this.currentNode.children && this.currentNode.children.length > 0) {\n          this.treeHelisaService.expandOneNode(this.currentNode);\n        }\n      } else {\n        if (!!this.currentNode.parent && this.currentNode.id != null) {\n          // obtiene el indice del nodo seleccionado actualmente\n          const index: number = this.currentNode.parent.children.indexOf(this.currentNode);\n\n          if (this.currentNode.parent.id == null && index === 0) {\n            return 0;\n          } else {\n            // si tiene nodos al mismo nivel salta al nodo anterior\n            if (index !== undefined && index === 0) {\n              this.currentNode = this.currentNode.parent;\n              this.selectNode(this.data, this.currentNode.id);\n              if (!!this.currentNode.children && this.currentNode.children.length > 0) {\n                this.treeHelisaService.expandOneNode(this.currentNode);\n              }\n            } else {\n              // si no tiene nodos al mismo nivel salta al nodo padre\n              this.currentNode = this.currentNode.parent.children[index - 1];\n              this.selectNode(this.data, this.currentNode.id);\n              if (!!this.currentNode.children && this.currentNode.children.length > 0) {\n                this.treeHelisaService.expandOneNode(this.currentNode);\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n\n  private moveDownIntoTree(): void {\n    if (!!this.data) {\n      if (this.currentNode == null) {\n        this.selectNode(this.data, this.data.children[0].id);\n        this.currentNode = this.data.children[0];\n        if (!!this.currentNode.children && this.currentNode.children.length > 0) {\n          this.treeHelisaService.expandOneNode(this.currentNode);\n        }\n      } else {\n        if (!!this.currentNode) {\n          // obtiene el indice del nodo seleccionado actualmente\n          const index: number =\n            !!this.currentNode && !!this.currentNode.parent ? this.currentNode.parent.children.indexOf(this.currentNode) : null;\n\n          // si tiene childrens pasa al primer children\n          if (!!this.currentNode.children && this.currentNode.children.length > 0) {\n            this.currentNode = this.currentNode.children[0];\n            this.selectNode(this.data, this.currentNode.id);\n            if (!!this.currentNode.children && this.currentNode.children.length > 0) {\n              this.treeHelisaService.expandOneNode(this.currentNode);\n            }\n          } else if (\n            index !== undefined &&\n            index === this.currentNode.parent.children.length - 1 &&\n            this.currentNode.parent.parent != null &&\n            this.currentNode.parent.parent.children != null &&\n            this.currentNode.parent.parent.children.length > 0\n          ) {\n            const indexOfParent: number = this.currentNode.parent.parent.children.indexOf(this.currentNode.parent);\n            this.currentNode =\n              this.currentNode.parent.parent.children[indexOfParent + 1] === undefined\n                ? this.currentNode\n                : this.currentNode.parent.parent.children[indexOfParent + 1];\n\n            this.selectNode(this.data, this.currentNode.id);\n            if (!!this.currentNode.children && this.currentNode.children.length > 0) {\n              this.treeHelisaService.expandOneNode(this.currentNode);\n            }\n          } else {\n            // si no tiene nodos al mismo nivel salta al siguiente hacia abajo\n            this.currentNode = this.currentNode.parent.children[index + 1];\n            this.selectNode(this.data, this.currentNode.id);\n            if (!!this.currentNode.children && this.currentNode.children.length > 0) {\n              this.treeHelisaService.expandOneNode(this.currentNode);\n            }\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Verifica si el nodo tiene hijos\n   */\n  hasChild(t: number, node: Node): boolean {\n    return !!node.children && node.children.length > 0;\n  }\n\n  /**\n   * Actualiza el arbol borrando toda la data , solo cuando no se utiliza paginacion\n   */\n  private refreshTree(): void {\n    this.data = null;\n    const datasourceData: Node[] = this.dataSource.data;\n    this.dataSource.data = null;\n    this.dataSource.data = datasourceData;\n    this.treeControl.dataNodes = datasourceData;\n  }\n\n  /**\n   * Actualiza el arbol cuando se utiliza la paginacion (Cuando no , utilice el metodo refreshTree())\n   */\n  private refreshTreeWithPagination(): void {\n    const datasourceData: Node[] = this.dataSource.data;\n    this.dataSource.data = null;\n    this.dataSource.data = datasourceData;\n    this.treeControl.dataNodes = datasourceData;\n  }\n\n  private goNextPage(): void {\n    if (!this.treeHelisaConnect.isLastPage && !this.treeHelisaConnect.isUsed) {\n      this.treeHelisaConnect.isUsed = true;\n      this.rangeScrolled.emit({\n        page: this.treeHelisaConnect.nextPage()\n      });\n    }\n  }\n\n  private receivePage(data: Node[]): void {\n    if (!this.data) {\n      this.data = { id: null, name: 'root', isSelected: false };\n    }\n    if (!this.data.children) {\n      this.data.children = new Array<Node>();\n      this.treeHelisaConnect = new TreeHelisaConnect<Node>();\n    }\n    this.data.children = this.data.children.concat(data);\n    this.data.children.forEach((node: Node): void => {\n      this.fillParent(node, this.data);\n    });\n\n    this.data.children = this.reorderByOrderIndex(this.data.children);\n\n    this.dataSource.data = this.data.children;\n    this.treeControl.dataNodes = this.data.children;\n    this.treeHelisaConnect.isLastPage = data.length === 0;\n    this.treeHelisaConnect.isUsed = false;\n  }\n\n  /**\n   * Llenan el campo parent de todos los nodos hijos\n   */\n  private fillParent(node: Node, parent: Node): void {\n    node.parent = parent;\n    if (node.children && node.children.length > 0) {\n      node.children.forEach((item: Node): void => {\n        this.fillParent(item, node);\n      });\n    }\n  }\n\n  /**\n   * coloca como true del isSelected del nodo que concuerde con el id\n   */\n  private selectNode(node: Node, id: number | string): Node {\n    if (node == null) {\n      return null;\n    }\n    this.upSelectNode(node);\n    if (!!this.selectedNode) {\n      const nodeSelected: Node = this.getNodeById(this.selectedNode);\n      if (nodeSelected != null) {\n        nodeSelected.isSelected = false;\n        this.selectedNode = null;\n      }\n    }\n    if (node.id !== undefined && node.id === id) {\n      node.isSelected = true;\n      this.expandAllParents(node);\n      this.selectedNode = node.id;\n      return node;\n    } else if (node.children != null) {\n      let i: number;\n      let result: Node = null;\n      for (i = 0; result == null && i < node.children.length; i++) {\n        result = this.selectNode(node.children[i], id);\n      }\n      return result;\n    }\n    return null;\n  }\n\n  private expandAllParents(node: Node): void {\n    if (!!node && !!node.parent) {\n      this.treeHelisaService.expandOneNode(node.parent);\n      this.expandAllParents(node.parent);\n    }\n  }\n\n  /**\n   * Elimina el isSelected de todos los nodos\n   */\n  private upSelectNode(node: Node): void {\n    if (!!node && node.isSelected !== undefined) {\n      node.isSelected = false;\n      if (!!node.children) {\n        for (const childrenNode of node.children) {\n          this.upSelectNode(childrenNode);\n        }\n      }\n    }\n  }\n\n  getClassNode(node: Node): string[] {\n    const classNode: string[] = [];\n    if (node.isSelected) {\n      classNode.push('isSelected');\n    }\n    if (node.classNode) {\n      classNode.push(node.classNode);\n    }\n    return classNode;\n  }\n\n  onEditMode(node: Node, editMode: boolean): void {\n    this.getSelectedOptions(node).editMode = editMode;\n  }\n\n  onSelectOption(event: MatOptionSelectionChange, node: Node): void {\n    node.isCheckedOption = event.source.selected;\n    if (node.isCheckedOption) {\n      this.checkedOptionNode.emit(node.id);\n    } else {\n      this.uncheckedOptionNode.emit(node.id);\n    }\n  }\n\n  getSelectedOptions(\n    node: Node\n  ): {\n    formControl: FormControl;\n    editMode: boolean;\n  } {\n    if (this.selectedOptions.has(node.id)) {\n      this.reloadSelectedOptions(node, this.selectedOptions.get(node.id).editMode);\n    } else {\n      this.reloadSelectedOptions(node, false);\n    }\n    return this.selectedOptions.get(node.id);\n  }\n\n  private reloadSelectedOptions(node: Node, editMode: boolean): void {\n    const array: Array<string | number | null> = new Array<string | number | null>();\n    node.options.forEach((option: Node): void => {\n      if (option.isCheckedOption) {\n        array.push(option.id);\n      }\n    });\n    const obj: {\n      formControl: FormControl;\n      editMode: boolean;\n    } = { formControl: new FormControl(array), editMode };\n    this.selectedOptions.set(node.id, obj);\n  }\n\n  /**\n   * Retorna el primer Node que encuentre segun el id enviado o null si no hay ninguno\n   * @param id  number | string\n   * @returns Node o null si no hay un nodo con ese id\n   */\n  getNodeById(id: number | string): Node {\n    const queue: Node[] = [...this.dataSource.data];\n    while (queue.length > 0) {\n      const curr: Node = queue.shift();\n      if (curr.id === id) {\n        return curr;\n      } else {\n        if (!!curr.children) {\n          queue.push(...curr.children);\n        }\n      }\n    }\n    return null;\n  }\n\n  reorderByOrderIndex(node: Node[]): Node[] {\n    if (!!node && node.length > 0) {\n      try {\n        node = _.orderBy(node, (x: Node): number => x.orderIndex, ['asc']);\n        node.forEach((element: Node): void => {\n          if (!!element.children && element != null) {\n            element.children = this.reorderByOrderIndex(element.children);\n          }\n        });\n        return node;\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  }\n\n  //#endregion ====== Metodos ============\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { OptionAutocompleteHelisa } from './autocomplete-helisa.component';\n\n@Injectable()\nexport class AutocompleteHelisaService<T> {\n\n  private emitChangeSource: BehaviorSubject<Array<OptionAutocompleteHelisa<T>>> =\n  new BehaviorSubject<Array<OptionAutocompleteHelisa<T>>>([]);\n\n  public dataSource$: Observable<Array<OptionAutocompleteHelisa<T>>> = this.emitChangeSource.asObservable();\n\n  constructor() { }\n\n  setDataSource(options: Array<OptionAutocompleteHelisa<T>>): void {\n    this.emitChangeSource.next(options);\n  }\n\n}\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { Observable, of, Subject } from 'rxjs';\nimport { map, startWith, throttleTime, debounceTime } from 'rxjs/operators';\nimport { AutocompleteHelisaService } from './autocomplete-helisa.component.service';\n\nexport interface OptionAutocompleteHelisa<T> {\n  value: T;\n  displayText: string;\n}\n\n@Component({\n  selector: 'hel-autocomplete',\n  templateUrl: './autocomplete-helisa.component.html',\n  styleUrls: ['./autocomplete-helisa.component.css'],\n  providers: [AutocompleteHelisaService]\n})\nexport class AutocompleteHelisaComponent<T> implements OnInit {\n\n  @Input() myControl: FormControl = new FormControl();\n  @Input() options: Array<OptionAutocompleteHelisa<T>> = new Array<OptionAutocompleteHelisa<T>>();\n  filteredOptions: Observable<OptionAutocompleteHelisa<T>[]>;\n  selectedValue: OptionAutocompleteHelisa<T>;\n  @Output() selectedValueEmmiter: EventEmitter<T> = new EventEmitter<T>();\n  @Output() nextPage: EventEmitter<void> = new EventEmitter<void>();\n  @Input() isRemote: boolean = false;\n  isLoading: boolean = false;\n\n\n  onScrollObservable: Subject<void> = new Subject<void>();\n\n  constructor(private autocompleteHelisaService: AutocompleteHelisaService<T>) {\n  }\n\n  ngOnInit(): void {\n\n    this.onScrollObservable.asObservable()\n    .pipe(\n      debounceTime(500),\n      throttleTime(500)\n    )\n    .subscribe((): void => {\n      this.nextPage.emit();\n    });\n\n    if (this.isRemote) {\n      this.autocompleteHelisaService.dataSource$.subscribe((data: OptionAutocompleteHelisa<T>[]): void => {\n        setTimeout((): void => {\n          this.options = data;\n          this.filteredOptions = of<OptionAutocompleteHelisa<T>[]>(this.options);\n        });\n      });\n    }\n\n    this.filteredOptions = this.myControl.valueChanges.pipe(\n      startWith(''),\n      map((x: string): string => this._checkRegex(x)),\n      map((value: string): OptionAutocompleteHelisa<T>[] => this._filter(value))\n    );\n\n  }\n\n  displayFn(option?: OptionAutocompleteHelisa<T>): string | undefined {\n    return option ? option.displayText : undefined;\n  }\n\n  getService(): AutocompleteHelisaService<T> {\n    return this.autocompleteHelisaService;\n  }\n\n\n  /** Elimina caracteres extraños */\n  private _checkRegex(value: string): string {\n    value = value.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '');\n    return value;\n  }\n\n  private _filter(value: string): OptionAutocompleteHelisa<T>[] {\n    if (!(value)) {\n      if (!this.isRemote) {\n        const filterValue: string[] = value.toLowerCase().split(' ');\n        return this.options.filter((option: OptionAutocompleteHelisa<T>): boolean => {\n          let ws: boolean = true;\n          filterValue.forEach((text: string): boolean => ws = ws && option.displayText.toLowerCase().indexOf(text) >= 0);\n          return ws;\n        }).splice(0, 5);\n      } else {\n        return this.options;\n      }\n    }\n  }\n\n  public onSelected(event: {option: {value: OptionAutocompleteHelisa<T>}}): void {\n    this.selectedValue = event.option.value;\n    this.selectedValueEmmiter.emit(this.selectedValue.value);\n  }\n\n  getNextPage(): void {\n    this.onScrollObservable.next();\n  }\n}\n","import { Directive, EventEmitter, Input, Output, OnDestroy } from '@angular/core';\nimport { MatAutocomplete } from '@angular/material/autocomplete';\nimport { takeUntil, tap } from 'rxjs/operators';\nimport { Subject } from 'rxjs';\n\n\nexport interface IAutoCompleteScrollEvent {\n  autoComplete: MatAutocomplete;\n  scrollEvent: Event;\n}\n\n\n@Directive({\n  selector: 'mat-autocomplete[optionsScroll]'\n})\nexport class OptionsScrollDirective implements OnDestroy {\n\n  /**\n   * This value would different depends of styles\n   */\n  @Input() thresholdPercent: number = .9;\n  @Output() optionsScroll: EventEmitter<IAutoCompleteScrollEvent> = new EventEmitter<IAutoCompleteScrollEvent>();\n  destroy: Subject<void> = new Subject<void>();\n  lastScrollTop: number = 0;\n\n  constructor(public autoComplete: MatAutocomplete) {\n    this.autoComplete.opened.pipe(\n      tap((): void => {\n        // Note: When autocomplete raises opened, panel is not yet created (by Overlay)\n        // Note: The panel will be available on next tick\n        // Note: The panel wil NOT open if there are no options to display\n        setTimeout((): void => {\n          // Note: remove listner just for safety, in case the close event is skipped.\n          this.removeScrollEventListener();\n          if (!!this.autoComplete &&\n            !!this.autoComplete.panel &&\n            !!this.autoComplete.panel.nativeElement) {\n            this.autoComplete.panel.nativeElement\n              .addEventListener('scroll', this.onScroll.bind(this), false);\n          }\n        });\n      }),\n      takeUntil(this.destroy)).subscribe();\n\n    this.autoComplete.closed.pipe(\n      tap((): void => this.removeScrollEventListener()),\n      takeUntil(this.destroy)).subscribe();\n  }\n\n  private removeScrollEventListener(): void {\n    if (!!this.autoComplete &&\n      !!this.autoComplete.panel &&\n      !!this.autoComplete.panel.nativeElement) {\n      this.autoComplete.panel.nativeElement\n        .removeEventListener('scroll', this.onScroll);\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.destroy.next();\n    this.destroy.complete();\n\n    this.removeScrollEventListener();\n  }\n\n\n  onScroll(event: Event): void {\n    // Credits: how to know if it's down or up scroll \"https://github.com/qeremy/so/blob/master/so.dom.js#L426\"\n    const st: number = (event.target as Window).pageYOffset || (event.target as Element).scrollTop;\n    if (st > this.lastScrollTop) {\n      // downscroll code\n      if (this.thresholdPercent === undefined) {\n        this.optionsScroll.next({ autoComplete: this.autoComplete, scrollEvent: event });\n      } else {\n        const threshold: number = this.thresholdPercent * 100 * (event.target as Element).scrollHeight / 100;\n        const current: number = (event.target as Element).scrollTop + (event.target as Element).clientHeight;\n        // console.log(`scroll ${current}, threshold: ${threshold}`)\n        if (current > threshold) {\n          // console.log('load next page');\n          this.optionsScroll.next({ autoComplete: this.autoComplete, scrollEvent: event });\n        }\n      }\n    } else {\n      // upscroll code\n    }\n    this.lastScrollTop = st <= 0 ? 0 : st;\n  }\n\n}\n","import { Directive, Input, HostListener, ElementRef } from '@angular/core';\nimport { MatTooltip } from '@angular/material/tooltip';\n\n@Directive({\n    selector: '[helTooltip]',\n    providers: [MatTooltip]\n})\nexport class HelTooltipDirective {\n\n    tooltip: MatTooltip;\n\n    /**\n     * Mensaje a mostrar\n     */\n    @Input('helTooltip') message: string;\n\n    /**\n     * Tiempo antes de ocultarla el mensaje\n     */\n    @Input() hideDelay: number = 600;\n\n    /**\n     * Tiempo antes de mostra el mensaje\n     */\n    @Input() showDelay: number = 500;\n\n\n    constructor(tooltip: MatTooltip, private elemRef: ElementRef) {\n      this.tooltip = tooltip;\n    }\n\n    @HostListener('mouseover') mouseover(): void {\n      const currentContent: string = this.elemRef.nativeElement.innerText;\n\n      if (!!currentContent && !!this.message) {\n        if ((currentContent.toUpperCase() !== this.message.toString().toUpperCase()) || this.isEllipsisActive(this.elemRef.nativeElement)) {\n          this.tooltip.message = this.message;\n        }\n      }\n\n      this.tooltip.showDelay =  this.showDelay;\n      this.tooltip.hideDelay = this.hideDelay;\n    }\n\n\n    private isEllipsisActive(e: {offsetWidth: number , scrollWidth: number}): boolean {\n      return (e.offsetWidth < e.scrollWidth);\n    }\n}\n","import { Directive, HostBinding, PLATFORM_ID, Inject, Input, OnChanges } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\n\n@Directive({\n  selector: 'a[href]',\n})\nexport class ExternalLinkDirective implements OnChanges {\n  @HostBinding('attr.rel') relAttr: string = '';\n  @HostBinding('attr.target') targetAttr: string = '';\n  @HostBinding('attr.href') hrefAttr: string = '';\n  @Input() href: string;\n\n  constructor(@Inject(PLATFORM_ID) private platformId: string) {}\n\n  ngOnChanges(): void {\n\n    this.hrefAttr = this.href;\n\n    if (this.isLinkExternal()) {\n      this.relAttr = 'noopener';\n      this.targetAttr = '_blank';\n    }\n  }\n\n  private isLinkExternal(): boolean {\n    return isPlatformBrowser(this.platformId) && !this.href.includes(location.hostname);\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n    name: 'externalLink'\n})\nexport class ExternalLinkPipe implements PipeTransform {\n    transform(value: string, ...args: string[]): string {\n        return '//' + value;\n    }\n}\n","import {AfterViewInit, Component, EventEmitter, Input, OnInit, Output, ViewChild} from '@angular/core';\nimport {ComboBoxListable} from './interface/combo-box-listable';\nimport {ComboBoxEditable} from './interface/combo-box-editable';\n\nexport enum ComboBoxHelisaState {\n  CLOSED,\n  SELECT,\n  INSERT\n}\n\n@Component({\n  selector: 'lib-combo-box-helisa',\n  templateUrl: './combo-box-helisa.component.html',\n  styleUrls: ['./combo-box-helisa.component.css']\n})\nexport class ComboBoxHelisaComponent<TYPE> implements OnInit, AfterViewInit {\n\n  @Input() editable: ComboBoxEditable<TYPE>;\n  @Input() listable: ComboBoxListable<TYPE>;\n  @Input() placeholder: string = 'Sin seleccionar';\n  @Input() selectedItem: TYPE;\n  @Output() selectEmitter: EventEmitter<TYPE> = new EventEmitter<TYPE>();\n  @Input() enabled: boolean = true;\n\n  private page: number = 0;\n  private pageSize: number = 50;\n  private haveNextPage: boolean = true;\n  state: ComboBoxHelisaState = ComboBoxHelisaState.CLOSED;\n\n  rows: TYPE[] = [];\n\n  constructor() {\n  }\n\n  ngOnInit(): void {\n  }\n\n  ngAfterViewInit(): void {\n    this.getNextPage();\n  }\n\n  private getNextPage(): void {\n    if (this.haveNextPage) {\n      this.listable.getData(this.page++, this.pageSize).subscribe((rows: TYPE[]): void => {\n        rows.forEach((item: TYPE): number => this.rows.push(item));\n        this.haveNextPage = rows.length > 0;\n      });\n    }\n  }\n\n  get comboBoxHelisaState(): typeof ComboBoxHelisaState {\n    return ComboBoxHelisaState;\n  }\n\n  onFocus(): void {\n    if (this.enabled) {\n      this.state = ComboBoxHelisaState.SELECT;\n    }\n  }\n\n  selectItem(row: TYPE): void {\n    this.selectedItem = row;\n    this.selectEmitter.emit(row);\n    this.state = ComboBoxHelisaState.CLOSED;\n  }\n\n  changeToInsert(): void {\n    this.state = ComboBoxHelisaState.INSERT;\n  }\n\n  insert(event: string): void {\n    if (event.trim().length > 0) {\n      this.editable.insert(event).subscribe(\n        (data: TYPE): void => {\n          this.rows.push(data);\n          this.state = ComboBoxHelisaState.SELECT;\n        }\n      );\n    } else {\n      this.state = ComboBoxHelisaState.SELECT;\n    }\n  }\n\n  onScroll(event: Event): void {\n    const element: HTMLDivElement = event.target as HTMLDivElement;\n    if (element.scrollHeight - element.scrollTop < 1000) {\n      this.getNextPage();\n    }\n  }\n}\n","import { AfterViewInit, Component, ContentChild, EventEmitter, Input, OnInit, Output, TemplateRef } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nexport enum PagingTreeInitialMode {\n  COLLAPSE,\n  EXPAND\n}\n\nexport interface PagingTreeHelisaListable<T> {\n  get(lastChildOrder: number, size: number): Observable<T[]>;\n\n  getIdField(): string;\n\n  getIdParentField(): string;\n\n  compare(a: T, b: T): number;\n}\n\ninterface HelisaNode<T> {\n  object: T;\n  level: number;\n  haveChildren: boolean;\n  expanded: boolean;\n  visible: boolean;\n  preorder: number;\n}\n\nexport interface HelisaNodeData<T> {\n  readonly object: T;\n  readonly level: number;\n  readonly haveChildren: boolean;\n  readonly expanded: boolean;\n  readonly visible: boolean;\n  readonly preorder: number;\n}\n\n@Component({\n  selector: 'hel-paging-tree',\n  templateUrl: './paging-tree-helisa.component.html',\n  styleUrls: ['./paging-tree-helisa.component.css']\n})\nexport class PagingTreeHelisaComponent<T> implements OnInit, AfterViewInit {\n\n  private pageSize: number = 200000;\n  private visibleLimit: number = 0;\n  private visibleSize: number = 100;\n  private treeMode: PagingTreeInitialMode = PagingTreeInitialMode.EXPAND;\n  private visibleObjects: Array<T> = [];\n  private service: PagingTreeHelisaListable<T>;\n  private searchNode: Map<string, HelisaNode<T>>;\n  private allNode: Array<HelisaNode<T>> = [];\n\n  @Output()\n  afterLoadData: EventEmitter<void> = new EventEmitter<void>();\n\n  @ContentChild('nodeComponent')\n  nodeComponent: TemplateRef<{ data: T, node: HelisaNodeData<T> }>;\n\n  @ContentChild('nodeTitle')\n  nodeTitle: TemplateRef<any>;\n\n  constructor() {\n  }\n\n  ngOnInit(): void {\n  }\n\n  ngAfterViewInit(): void {\n  }\n\n  @Input()\n  set mode(paramMode: PagingTreeInitialMode) {\n    this.treeMode = paramMode;\n    this.reset();\n  }\n\n  @Input()\n  set pagingTreeHelisaListable(paramService: PagingTreeHelisaListable<T>) {\n    this.service = paramService;\n    this.reset();\n  }\n\n  public reset(): void {\n    if (this.service) {\n      this.service.get(0, this.pageSize).subscribe((items: T[]): void => this.loadData(items));\n    }\n  }\n\n  private loadData(items: T[]): void {\n    this.searchNode = new Map<string, HelisaNode<T>>();\n    this.visibleObjects = [];\n    this.allNode = [];\n    items = this.sortItems(items);\n    this.searchNode = new Map<string, HelisaNode<T>>();\n    items.forEach((item: T): void => {\n      const node: HelisaNode<T> = this.createNode(item);\n      this.allNode.push(node);\n    });\n    this.reSort();\n    this.loadNextVisibleObjects(null);\n    this.afterLoadData.emit();\n  }\n\n  private sortItems(items: T[]): T[] {\n    const lAdy: Map<string, T[]> = new Map<string, T[]>();\n    const stack: T[] = [];\n    items.forEach((item: T): void => {\n      const idParent: string = item[this.service.getIdParentField()];\n      if (!idParent) {\n        stack.unshift(item);\n      } else {\n        if (!lAdy.has(idParent)) {\n          lAdy.set(idParent, []);\n        }\n        lAdy.get(idParent).push(item);\n      }\n    });\n    const response: T[] = new Array<T>(items.length);\n    let index: number = 0;\n    while (stack.length > 0) {\n      const last: T = stack.pop();\n      response[index++] = last;\n      const children: T[] = lAdy.get(last[this.service.getIdField()]);\n      if (children) {\n        for (let i: number = children.length - 1; i >= 0; i--) {\n          stack.push(children[i]);\n        }\n      }\n    }\n    return response;\n  }\n\n  private createNode(item: T): HelisaNode<T> {\n    if (this.searchNode.has(item[this.service.getIdField()])) {\n      throw Error('Ya existe el nodo.');\n    }\n    const parentInformation: HelisaNode<T> = this.getNodeInformationById(item[this.service.getIdParentField()]);\n    const nodeInformation: HelisaNode<T> = {\n      object: item,\n      haveChildren: false,\n      level: parentInformation ? parentInformation.level + 1 : 0,\n      expanded: this.treeMode === PagingTreeInitialMode.EXPAND,\n      visible: false,\n      preorder: this.searchNode.size + 1,\n    };\n    this.searchNode.set(item[this.service.getIdField()], nodeInformation);\n    if (parentInformation) {\n      parentInformation.haveChildren = true;\n    }\n    return nodeInformation;\n  }\n\n  public getNodeInformationById(id: string): HelisaNode<T> {\n    return this.searchNode.get(id);\n  }\n\n  public getNodeInformation(item: T): HelisaNode<T> {\n    return this.searchNode.get(item[this.service.getIdField()]);\n  }\n\n  getLevelClass(item: T): string {\n    return 'padding-level-' + this.getNodeInformationById(item[this.service.getIdField()]).level;\n  }\n\n  private loadNextVisibleObjects(nodeFrom: T): void {\n    const visibleObjects: T[] = [];\n    this.visibleObjects.forEach((item: T): void => {\n      if (this.getNodeInformation(item)) {\n        if (nodeFrom && this.getNodeInformation(nodeFrom).preorder >= this.getNodeInformation(item).preorder) {\n          visibleObjects.push(item);\n        } else {\n          this.getNodeInformationById(item[this.service.getIdField()]).visible = false;\n        }\n      }\n    });\n    this.visibleLimit = visibleObjects.length + this.visibleSize;\n    this.allNode.forEach((item: HelisaNode<T>): void => {\n      if (visibleObjects.length < this.visibleLimit &&\n        (!nodeFrom || this.getNodeInformation(nodeFrom).preorder < item.preorder)) {\n        const idParent: string = item.object[this.service.getIdParentField()];\n        if (!idParent) {\n          visibleObjects.push(item.object);\n          item.visible = true;\n        } else {\n          const parentInformation: HelisaNode<T> = this.getNodeInformationById(idParent);\n          if (parentInformation.visible && parentInformation.expanded) {\n            visibleObjects.push(item.object);\n            item.visible = true;\n          }\n        }\n      }\n    });\n    this.visibleObjects = visibleObjects;\n  }\n\n  collapseNode(item: T): void {\n    this.getNodeInformationById(item[this.service.getIdField()]).expanded = false;\n    this.loadNextVisibleObjects(item);\n  }\n\n  expandNode(item: T): void {\n    this.getNodeInformationById(item[this.service.getIdField()]).expanded = true;\n    this.loadNextVisibleObjects(item);\n  }\n\n  showNextPage(): void {\n    if (this.visibleObjects.length > 0) {\n      this.loadNextVisibleObjects(this.visibleObjects[this.visibleObjects.length - 1]);\n    }\n  }\n\n  get visibleData(): ReadonlyArray<T> {\n    return this.visibleObjects;\n  }\n\n  removeItem(item: T): void {\n    this.removeById(item[this.service.getIdField()]);\n  }\n\n  removeById(id: string): void {\n    if (this.getNodeInformationById(id)) {\n      const idParent: string = this.getNodeInformationById(id).object[this.service.getIdParentField()];\n      const set: Set<string> = new Set<string>();\n      set.add(id);\n      const beginIndex: number = this.allNode.findIndex(\n        (itemSearch: HelisaNode<T>): boolean => itemSearch.object[this.service.getIdField()] === id\n      );\n      let lastIndex: number = this.allNode.length;\n      for (let i: number = beginIndex + 1; i < this.allNode.length; i++) {\n        const itemSearch: T = this.allNode[i].object;\n        if (set.has(itemSearch[this.service.getIdParentField()])) {\n          set.add(itemSearch[this.service.getIdField()]);\n        } else {\n          lastIndex = i;\n          break;\n        }\n      }\n      const deletedItems: HelisaNode<T>[] = this.allNode.splice(beginIndex, lastIndex - beginIndex);\n      let parentHaveChildren: boolean = false;\n      deletedItems.forEach((deletedItem: HelisaNode<T>): boolean => this.searchNode.delete(deletedItem.object[this.service.getIdField()]));\n      this.allNode.forEach((searchItem: HelisaNode<T>, index: number): void => {\n        searchItem.preorder = index + 1;\n        if (searchItem.object[this.service.getIdParentField()] === idParent) {\n          parentHaveChildren = true;\n        }\n      });\n      if (idParent) {\n        this.getNodeInformationById(idParent).haveChildren = parentHaveChildren;\n      }\n      this.loadNextVisibleObjects(beginIndex > 0 ? this.allNode[beginIndex - 1].object : null);\n    }\n  }\n\n  addItem(item: T): void {\n    const indexParent: number = this.allNode.findIndex((node: HelisaNode<T>): boolean => node.object[this.service.getIdField()] === item[this.service.getIdParentField()]);\n    if (indexParent >= 0) {\n      this.allNode.push(this.createNode(item));\n      this.allNode[indexParent].haveChildren = true;\n      this.reSort();\n      this.expandNode(this.allNode[indexParent].object);\n    } else {\n      throw Error('No existe el padre.');\n    }\n  }\n\n  updateItem(item: T): void {\n    if (this.getNodeInformation(item)) {\n      this.getNodeInformation(item).object = item;\n      this.reSort();\n      const indexParent: number = this.allNode.findIndex(\n        (node: HelisaNode<T>): boolean => node.object[this.service.getIdField()] === item[this.service.getIdParentField()]);\n      if (indexParent >= 0) {\n        this.expandNode(this.allNode[indexParent].object);\n      } else {\n        this.loadNextVisibleObjects(null);\n      }\n    }\n  }\n\n  private reSort(): void {\n    const items: T[] = this.allNode.map((node: HelisaNode<T>): T => node.object);\n    items.sort((a: T, b: T): number => this.service.compare(a, b));\n    const preorder: T[] = this.sortItems(items);\n    preorder.forEach((object: T, index: number): number => this.getNodeInformation(object).preorder = index + 1);\n    this.allNode.sort((nodeA: HelisaNode<T>, nodeB: HelisaNode<T>): number => nodeA.preorder - nodeB.preorder);\n  }\n}\n","export enum AlertInformationType {\n    AUTHORIZATION_TRANSACTION,\n    CONFIRM_DELETE_DATA,\n    DELETE_DATA,\n    INFORMATION_NOT_VALID,\n    LOST_DATA,\n    UNCOMPLETED_DATA,\n    UNCOMPLETED_SELECTED_DATA,\n    DEFINE_COMMERCIAL_STRUCTURE,\n    DEFINE_PARKING_STRUCTURE,\n    DEFINE_RESIDENCIAL_STRUCTURE,\n    NO_SEARCH_RESULTS\n  }\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { AlertInformationType } from './alert-information-helisa-type.enum';\n\ninterface AlertInformationDataHelisaProperties {\n  alertType: AlertInformationType;\n  title: string;\n  content: string;\n  okLabel: string;\n  cancelLabel: string;\n}\n\nconst TITLE_BY_ALERT_TYPE: string[] = ['!Esta transacción requiere autorización!',\n                                       '',\n                                       '¿Está seguro que debe anular esta información?',\n                                       '',\n                                       '¿Está seguro de querer perder lo ya hecho?',\n                                       'No ha suministrado la información necesaria.',\n                                       '',\n                                       '',\n                                       '',\n                                       ''\n                                      ];\nconst CONTENT_BY_ALERT_TYPE: string[] = ['',\n                                         '¿Esta seguro que desea eliminar esta información?',\n                                         'Al anular este concepto, quedará la huella de todo lo que se hizo apoyados en su información. No es una eliminación tácita, es suprimir su uso en adelante.',\n                                         'Rectifique. Hay información no válida',\n                                         'Si no está seguro, puede continuar o \"aplicar\" y posteriormente cuando tenga clara las respuestas, usando la opción de modificar podrá completar el concepto.',\n                                         'Si insite en grabar así, este concepto no será utilizable hasta su conclusión satisfactoria, que deberá completar posteriormente modificando el concepto.',\n                                         'Elemento sin información requerida. Modifíquelo para completarlo.',\n                                         'Primero defina la estructura comercial en configuración.',\n                                         'Primero defina la estructura zona de parqueaderos en configuración.',\n                                         'Primero defina la estructura física residencial en configuración.',\n                                         'No fueron encontradas coincidencias con el criterio de búsqueda.',\n                                        ];\nconst OK_LABEL_BY_ALERT_TYPE: string[] = ['Solicitarla',\n                                          'Lo asumo',\n                                          'Lo asumo',\n                                          '',\n                                          'Lo asumo',\n                                          'Lo asumo',\n                                          'Aceptar',\n                                          '',\n                                          '',\n                                          ''\n                                         ];\nconst CANCEL_LABEL_BY_ALERT_TYPE: string[] = ['Negarla',\n                                              'Me retracto',\n                                              'Me retracto',\n                                              '',\n                                              'Me retracto',\n                                              'Me retracto',\n                                              '',\n                                              '',\n                                              '',\n                                              ''\n                                             ];\n\n@Component({\n  selector: 'hel-alert-information-data-helisa',\n  templateUrl: './alert-information-data-helisa.component.html',\n  styleUrls: ['./alert-information-data-helisa.component.sass']\n})\nexport class AlertInformationDataHelisaComponent implements OnInit {\n\n  alertType: AlertInformationType;\n  title: string;\n  content: string;\n  okLabel: string;\n  cancelLabel: string;\n\n  constructor(\n    public dialogRef: MatDialogRef<AlertInformationDataHelisaComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: AlertInformationDataHelisaProperties\n  ) {\n    this.alertType = data.alertType;\n    this.title = data.title;\n    if (this.title === undefined) {\n      this.title = TITLE_BY_ALERT_TYPE[this.alertType];\n    }\n    this.content = data.content;\n    if (this.content === undefined) {\n      this.content = CONTENT_BY_ALERT_TYPE[this.alertType];\n    }\n    this.okLabel = data.okLabel;\n    if (this.okLabel === undefined) {\n      this.okLabel = OK_LABEL_BY_ALERT_TYPE[this.alertType];\n    }\n    this.cancelLabel = data.cancelLabel;\n    if (this.cancelLabel === undefined) {\n      this.cancelLabel = CANCEL_LABEL_BY_ALERT_TYPE[this.alertType];\n    }\n    dialogRef.disableClose = true;\n    dialogRef.keydownEvents().subscribe((event: KeyboardEvent): void => {\n      if (event.code === 'Escape') {\n        this.dialogRef.close(this.onCancel());\n      }\n    });\n  }\n\n  ngOnInit(): void {\n    if (this.alertType === AlertInformationType.DEFINE_COMMERCIAL_STRUCTURE || this.alertType === AlertInformationType.DEFINE_PARKING_STRUCTURE ||\n        this.alertType === AlertInformationType.DEFINE_RESIDENCIAL_STRUCTURE) {\n      setTimeout((): void => {\n        this.dialogRef.close();\n      }, 3000);\n    }\n  }\n\n  onCancel(): void {\n    this.dialogRef.close();\n  }\n\n  hasTitle(): boolean {\n    return this.alertType === AlertInformationType.AUTHORIZATION_TRANSACTION || this.alertType === AlertInformationType.DELETE_DATA ||\n           this.alertType === AlertInformationType.LOST_DATA || this.alertType === AlertInformationType.UNCOMPLETED_DATA;\n  }\n\n  hasContent(): boolean {\n    return this.alertType === AlertInformationType.CONFIRM_DELETE_DATA || this.alertType === AlertInformationType.DELETE_DATA ||\n           this.alertType === AlertInformationType.INFORMATION_NOT_VALID || this.alertType === AlertInformationType.LOST_DATA ||\n           this.alertType === AlertInformationType.UNCOMPLETED_DATA || this.alertType === AlertInformationType.UNCOMPLETED_SELECTED_DATA ||\n           this.alertType === AlertInformationType.DEFINE_COMMERCIAL_STRUCTURE || this.alertType === AlertInformationType.DEFINE_PARKING_STRUCTURE ||\n           this.alertType === AlertInformationType.DEFINE_RESIDENCIAL_STRUCTURE || this.alertType === AlertInformationType.NO_SEARCH_RESULTS;\n  }\n\n  hasButtons(): boolean {\n    return this.alertType === AlertInformationType.AUTHORIZATION_TRANSACTION || this.alertType === AlertInformationType.CONFIRM_DELETE_DATA ||\n           this.alertType === AlertInformationType.DELETE_DATA || this.alertType === AlertInformationType.LOST_DATA ||\n           this.alertType === AlertInformationType.UNCOMPLETED_DATA || this.alertType === AlertInformationType.UNCOMPLETED_SELECTED_DATA;\n  }\n\n  hasCancelButton(): boolean {\n    return this.alertType !== AlertInformationType.UNCOMPLETED_SELECTED_DATA;\n  }\n}\n","import {DragDropModule} from '@angular/cdk/drag-drop';\nimport {LayoutModule} from '@angular/cdk/layout';\nimport {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatNativeDateModule, MatOptionModule } from '@angular/material/core';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatListModule } from '@angular/material/list';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatTreeModule } from '@angular/material/tree';\nimport { AlertHelisaComponent } from './components/alert-helisa/alert-helisa.component';\nimport { AutocompleteHelisaComponent } from './components/autocomplete-helisa/autocomplete-helisa.component';\nimport { DateHelisaComponent } from './components/date-helisa/date-helisa.component';\nimport { DependencyTableHelisaComponent } from './components/dependency-table-helisa/dependency-table-helisa.component';\nimport { InputHelisaComponent } from './components/input-helisa/input-helisa.component';\nimport { InputWithButtonComponent } from './components/input-with-button/input-with-button.component';\nimport { TableHelisaComponent } from './components/table-helisa/table-helisa.component';\nimport { TableHelisaService } from './components/table-helisa/table-helisa.service';\nimport { ToastHelisaComponent } from './components/toast-helisa/toast-helisa.component';\nimport { TreeHelisaComponent } from './components/tree-helisa/tree-helisa.component';\nimport { TreeHelisaService } from './components/tree-helisa/tree-helisa.service';\nimport { ExternalLinkDirective } from './directives/external-link.directive';\nimport { OptionsScrollDirective } from './directives/options-scroll.directive';\nimport { HelTooltipDirective } from './directives/tooltip.directive';\nimport { ExternalLinkPipe } from './pipes/external-link.pipe';\nimport { ComboBoxHelisaComponent } from './components/combo-box-helisa/combo-box-helisa.component';\nimport { PagingTreeHelisaComponent } from './components/paging-tree-helisa/paging-tree-helisa.component';\nimport { AlertInformationDataHelisaComponent } from './components/alert-information-data-helisa/alert-information-data-helisa.component';\n\n@NgModule({\n  declarations: [\n    InputWithButtonComponent,\n    ToastHelisaComponent,\n    AlertHelisaComponent,\n    DependencyTableHelisaComponent,\n    InputHelisaComponent,\n    TableHelisaComponent,\n    TreeHelisaComponent,\n    DateHelisaComponent,\n    AutocompleteHelisaComponent,\n    OptionsScrollDirective,\n    HelTooltipDirective,\n    ExternalLinkDirective,\n    ExternalLinkPipe,\n    ComboBoxHelisaComponent,\n    PagingTreeHelisaComponent,\n    AlertInformationDataHelisaComponent\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n\n    MatAutocompleteModule,\n    MatButtonModule,\n    MatCheckboxModule,\n    MatToolbarModule,\n    MatExpansionModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatSelectModule,\n    MatOptionModule,\n    MatListModule,\n    MatIconModule,\n    MatSnackBarModule,\n    MatCardModule,\n    LayoutModule,\n    MatTooltipModule,\n    MatButtonModule,\n    MatSidenavModule,\n    MatIconModule,\n    MatListModule,\n    MatGridListModule,\n    MatCardModule,\n    MatMenuModule,\n    MatInputModule,\n    MatSelectModule,\n    MatRadioModule,\n    MatProgressSpinnerModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatSortModule,\n    MatDialogModule,\n    MatTabsModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatStepperModule,\n    MatChipsModule,\n    DragDropModule,\n    MatTreeModule\n  ],\n  exports: [\n    InputWithButtonComponent,\n    ToastHelisaComponent,\n    AlertHelisaComponent,\n    DependencyTableHelisaComponent,\n    InputHelisaComponent,\n    TableHelisaComponent,\n    TreeHelisaComponent,\n    DateHelisaComponent,\n    AutocompleteHelisaComponent,\n    OptionsScrollDirective,\n    HelTooltipDirective,\n    ExternalLinkDirective,\n    ExternalLinkPipe,\n    MatButtonModule,\n    MatCheckboxModule,\n    MatToolbarModule,\n    MatExpansionModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatSelectModule,\n    MatOptionModule,\n    MatListModule,\n    MatIconModule,\n    MatSnackBarModule,\n    MatCardModule,\n    LayoutModule,\n    MatTooltipModule,\n    MatButtonModule,\n    MatSidenavModule,\n    MatIconModule,\n    MatListModule,\n    MatGridListModule,\n    MatCardModule,\n    MatMenuModule,\n    MatInputModule,\n    MatSelectModule,\n    MatRadioModule,\n    MatProgressSpinnerModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatSortModule,\n    MatDialogModule,\n    MatTabsModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatStepperModule,\n    MatChipsModule,\n    DragDropModule,\n    MatTreeModule,\n    ComboBoxHelisaComponent,\n    PagingTreeHelisaComponent,\n    AlertInformationDataHelisaComponent\n  ],\n  providers: [TableHelisaService, TreeHelisaService]\n})\nexport class HelisaLibModule { }\n","import { Injectable } from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { Observable } from 'rxjs';\nimport { AlertInformationDataHelisaComponent} from './alert-information-data-helisa.component';\nimport { AlertInformationType } from './alert-information-helisa-type.enum';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AlertInformationDataHelisaService {\n\n  constructor(public dialog: MatDialog) { }\n\n  openDialog(alertType: AlertInformationType, title?: string, content?: string, okLabel?: string, cancelLabel?: string): Observable<boolean> {\n    const dialogRef: MatDialogRef<AlertInformationDataHelisaComponent> = this.dialog.open(AlertInformationDataHelisaComponent, {\n      width: '250px',\n      data: { alertType, title, content, okLabel, cancelLabel }\n    });\n\n    return dialogRef.afterClosed();\n  }\n}\n","/*\n * Public API Surface of helisa-lib\n */\n\n// InputWithButton\nexport * from './lib/components/input-with-button/input-with-button.component';\n\n// ToastHelisa\nexport * from './lib/components/toast-helisa/toast-helisa.component';\nexport * from './lib/components/toast-helisa/toast-helisa.service';\nexport * from './lib/components/toast-helisa/toast-type.enum';\n\n// AlertHelisa\nexport * from './lib/components/alert-helisa/alert-helisa-type.enum';\nexport * from './lib/components/alert-helisa/alert-helisa.component';\nexport * from './lib/components/alert-helisa/alert-helisa.service';\n\n// DependencyTableHelisa\nexport * from './lib/components/dependency-table-helisa/dependency-table-helisa.component';\nexport * from './lib/components/dependency-table-helisa/dependency-table-helisa.service';\n\n// InputHelisa\nexport * from './lib/components/input-helisa/input-helisa.component';\n\n\n// TableHelisa\nexport * from './lib/components/table-helisa/table-helisa.component';\nexport * from './lib/components/table-helisa/table-helisa.interface';\nexport * from './lib/components/table-helisa/table-helisa.service';\n\n// Date\nexport * from './lib/components/date-helisa/date-helisa.component';\n\n// Tree\nexport * from './lib/components/tree-helisa/tree-helisa.component';\nexport * from './lib/components/tree-helisa/tree-helisa-connect';\nexport * from './lib/components/tree-helisa/tree-helisa.service';\nexport * from './lib/components/tree-helisa/node';\n\n\n// Autocomplete\nexport * from './lib/components/autocomplete-helisa/autocomplete-helisa.component';\nexport * from './lib/components/autocomplete-helisa/autocomplete-helisa.component.service';\n\n// Directives\nexport * from './lib/directives/options-scroll.directive';\nexport * from './lib/directives/tooltip.directive';\n\n\n// Module\nexport * from './lib/helisa-lib.module';\n\n// ComboBoxHelisa\nexport * from './lib/components/combo-box-helisa/combo-box-helisa.component';\nexport * from './lib/components/combo-box-helisa/interface/combo-box-listable';\nexport * from './lib/components/combo-box-helisa/interface/combo-box-editable';\n\n// PagingTreeHelisa\nexport * from './lib/components/paging-tree-helisa/paging-tree-helisa.component';\n\n// AlertInformationDataHelisa\nexport * from './lib/components/alert-information-data-helisa/alert-information-data-helisa.component';\nexport * from './lib/components/alert-information-data-helisa/alert-information-data-helisa.service';\nexport * from './lib/components/alert-information-data-helisa/alert-information-helisa-type.enum';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n\nexport {ExternalLinkDirective as ɵa} from './lib/directives/external-link.directive';\nexport {ExternalLinkPipe as ɵb} from './lib/pipes/external-link.pipe';"]}