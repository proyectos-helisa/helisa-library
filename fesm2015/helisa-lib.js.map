{"version":3,"file":"helisa-lib.js.map","sources":["ng://helisa-lib/lib/components/input-with-button/input-with-button.component.ts","ng://helisa-lib/lib/components/toast-helisa/toast-helisa.component.ts","ng://helisa-lib/lib/components/toast-helisa/toast-helisa.service.ts","ng://helisa-lib/lib/components/toast-helisa/toast-type.enum.ts","ng://helisa-lib/lib/components/alert-helisa/alert-helisa-type.enum.ts","ng://helisa-lib/lib/components/alert-helisa/alert-helisa.component.ts","ng://helisa-lib/lib/components/alert-helisa/alert-helisa.service.ts","ng://helisa-lib/lib/components/dependency-table-helisa/dependency-table-helisa.service.ts","ng://helisa-lib/lib/components/table-helisa/table-helisa.service.ts","ng://helisa-lib/lib/components/dependency-table-helisa/dependency-table-helisa.component.ts","ng://helisa-lib/lib/components/input-helisa/input-helisa.component.ts","ng://helisa-lib/lib/components/table-helisa/table-helisa.interface.ts","ng://helisa-lib/lib/components/table-helisa/table-helisa-connect.component.ts","ng://helisa-lib/lib/components/table-helisa/table-helisa.component.ts","ng://helisa-lib/lib/components/date-helisa/date-helisa.component.ts","ng://helisa-lib/lib/components/tree-helisa/tree-helisa.service.ts","ng://helisa-lib/lib/components/tree-helisa/tree-helisa-connect.ts","ng://helisa-lib/lib/components/tree-helisa/tree-helisa.component.ts","ng://helisa-lib/lib/components/autocomplete-helisa/autocomplete-helisa.component.service.ts","ng://helisa-lib/lib/components/autocomplete-helisa/autocomplete-helisa.component.ts","ng://helisa-lib/lib/directives/options-scroll.directive.ts","ng://helisa-lib/lib/directives/tooltip.directive.ts","ng://helisa-lib/lib/directives/external-link.directive.ts","ng://helisa-lib/lib/pipes/external-link.pipe.ts","ng://helisa-lib/lib/components/alert-uncompleted-data-helisa/alert-uncompleted-data-helisa.component.ts","ng://helisa-lib/lib/components/alert-lost-data-helisa/alert-lost-data-helisa.component.ts","ng://helisa-lib/lib/components/alert-delete-data-helisa/alert-delete-data-helisa.component.ts","ng://helisa-lib/lib/components/alert-uncompleted-selected-data-helisa/alert-uncompleted-selected-data-helisa.component.ts","ng://helisa-lib/lib/components/alert-information-not-valid-helisa/alert-information-not-valid-helisa.component.ts","ng://helisa-lib/lib/components/combo-box-helisa/combo-box-helisa.component.ts","ng://helisa-lib/lib/components/alert-authorization-transaction-helisa/alert-authorization-transaction-helisa.component.ts","ng://helisa-lib/lib/components/paging-tree-helisa/paging-tree-helisa.component.ts","ng://helisa-lib/lib/components/alert-confirm-delete-data-helisa/alert-confirm-delete-data-helisa.component.ts","ng://helisa-lib/lib/components/alert-define-residential-physical-structure-helisa/alert-define-residential-physical-structure-helisa.component.ts","ng://helisa-lib/lib/components/alert-define-commercial-structure-helisa/alert-define-commercial-structure-helisa.component.ts","ng://helisa-lib/lib/components/alert-define-parking-structure-helisa/alert-define-parking-structure-helisa.component.ts","ng://helisa-lib/lib/helisa-lib.module.ts","ng://helisa-lib/lib/components/alert-uncompleted-data-helisa/alert-uncompleted-data-helisa.service.ts","ng://helisa-lib/lib/components/alert-lost-data-helisa/alert-lost-data-helisa.service.ts","ng://helisa-lib/lib/components/alert-delete-data-helisa/alert-delete-data-helisa.service.ts","ng://helisa-lib/lib/components/alert-uncompleted-selected-data-helisa/alert-uncompleted-selected-data-helisa.service.ts","ng://helisa-lib/lib/components/alert-information-not-valid-helisa/alert-information-not-valid-helisa.service.ts","ng://helisa-lib/lib/components/alert-authorization-transaction-helisa/alert-authorization-transaction-helisa.service.ts","ng://helisa-lib/lib/components/alert-confirm-delete-data-helisa/alert-confirm-delete-data-helisa.service.ts","ng://helisa-lib/lib/components/alert-define-residential-physical-structure-helisa/alert-define-residential-physical-structure-helisa.service.ts","ng://helisa-lib/lib/components/alert-define-commercial-structure-helisa/alert-define-commercial-structure-helisa.service.ts","ng://helisa-lib/lib/components/alert-define-parking-structure-helisa/alert-define-parking-structure-helisa.service.ts"],"sourcesContent":["import { Component, OnInit, Input, Output, EventEmitter, ViewChild, ElementRef } from '@angular/core';\r\nimport { FormControl, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'hel-input-with-button',\r\n  templateUrl: './input-with-button.component.html',\r\n  styleUrls: ['./input-with-button.component.sass']\r\n})\r\nexport class InputWithButtonComponent implements OnInit {\r\n\r\n  @Input() placeholder: string = '';\r\n  @Input() inputFormControl: FormControl = new FormControl('', Validators.required);\r\n  @Input() requiredMessage: string = 'El campo es requerido';\r\n  @Input() value: string = '';\r\n  @Input() isFocused: boolean = false;\r\n  @ViewChild('inputText') nameField: ElementRef;\r\n\r\n  @Output() done: EventEmitter<string> = new EventEmitter<string>();\r\n  @Output() cancel: EventEmitter<void> = new EventEmitter<void>();\r\n\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n    if (this.value !== '') {\r\n      this.inputFormControl.setValue(this.value);\r\n    }\r\n    this.nameField.nativeElement.focus();\r\n  }\r\n\r\n\r\n  onDone(): void {\r\n    if (this.inputFormControl.valid) {\r\n      this.done.emit(this.inputFormControl.value);\r\n    }\r\n  }\r\n\r\n  onCancel(): void {\r\n    this.cancel.emit();\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MAT_SNACK_BAR_DATA } from '@angular/material';\r\nimport { ToastType } from './toast-type.enum';\r\n\r\n// @dynamic\r\n@Component({\r\n  selector: 'hel-toast',\r\n  templateUrl: './toast-helisa.component.html',\r\n  styleUrls: ['./toast-helisa.component.sass']\r\n})\r\nexport class ToastHelisaComponent implements OnInit {\r\n\r\n  constructor(@Inject(MAT_SNACK_BAR_DATA) public data: {type: ToastType, message: string, subMessages?: string[]}) { }\r\n\r\n  ngOnInit(): void {}\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material';\r\nimport { ToastType } from './toast-type.enum';\r\nimport { ToastHelisaComponent } from './toast-helisa.component';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ToastHelisaService {\r\n\r\n  durationInSeconds: number = 5;\r\n\r\n  constructor(private snackBar: MatSnackBar) { }\r\n\r\n  showToast(type: ToastType, message: string, subMessages?: string[]): void {\r\n    subMessages = subMessages ? subMessages : [];\r\n    this.snackBar.openFromComponent(ToastHelisaComponent, {\r\n      data: {message, type, subMessages},\r\n      duration: this.durationInSeconds * 1000\r\n    });\r\n  }\r\n}\r\n","export enum ToastType {\r\n    DONE = 'done',\r\n    ERROR = 'error',\r\n    INFO = 'info'\r\n}\r\n","export enum AlertHelisaType {\r\n    ERROR = 'ERROR',\r\n    CONFIRMATION = 'CONFIRMATION'\r\n}\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\nimport { AlertHelisaType } from './alert-helisa-type.enum';\r\n\r\ninterface AlertHelisaProperties {\r\n  title: string;\r\n  content: string;\r\n  type: AlertHelisaType;\r\n  okLabel: string;\r\n  cancelLabel: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'hel-alert',\r\n  templateUrl: './alert-helisa.component.html',\r\n  styleUrls: ['./alert-helisa.component.sass']\r\n})\r\nexport class AlertHelisaComponent implements OnInit {\r\n\r\n  content: string;\r\n  title: string;\r\n  hasCancel: boolean;\r\n  okLabel: string;\r\n  cancelLabel: string;\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<AlertHelisaComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: AlertHelisaProperties\r\n  ) {\r\n    this.content = data.content;\r\n    this.title = data.title;\r\n    this.okLabel = data.okLabel;\r\n    if (this.okLabel === undefined) {\r\n      this.okLabel = 'aceptar';\r\n    }\r\n    this.cancelLabel = data.cancelLabel;\r\n    if (this.cancelLabel === undefined) {\r\n      this.cancelLabel = 'cancelar';\r\n    }\r\n    this.hasCancel = data.type === AlertHelisaType.CONFIRMATION;\r\n    dialogRef.disableClose = true;\r\n    dialogRef.keydownEvents().subscribe((event: KeyboardEvent) => {\r\n      if (event.code === 'Escape') {\r\n        this.dialogRef.close(this.onCancel());\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  onCancel(): void {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { MatDialog, MatDialogRef } from '@angular/material';\r\nimport { Observable } from 'rxjs';\r\nimport { AlertHelisaType } from './alert-helisa-type.enum';\r\nimport { AlertHelisaComponent } from './alert-helisa.component';\r\n\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AlertHelisaService {\r\n\r\n  constructor(public dialog: MatDialog) { }\r\n\r\n  openDialog(type: AlertHelisaType, title: string, content: string, okLabel?: string, cancelLabel?: string): Observable<boolean> {\r\n    const dialogRef: MatDialogRef<AlertHelisaComponent> = this.dialog.open(AlertHelisaComponent, {\r\n      width: '250px',\r\n      data: { title, content, type, okLabel, cancelLabel }\r\n    });\r\n\r\n    return dialogRef.afterClosed();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, Subject, BehaviorSubject } from 'rxjs';\r\nimport {ColumnConfig, AddRowButton, ConfigRowStyles, TotalTableHelisa} from '../table-helisa/table-helisa.interface';\r\nimport { EventDependency} from './dependency-table-helisa.component';\r\n\r\nexport interface ConfigTable<T> {\r\n  columns: Array<ColumnConfig>;\r\n  isRemote: boolean;\r\n  dataSource?: Array<T>;\r\n  count?: number;\r\n  order?: number;\r\n  showTitle?: boolean;\r\n  indexRowSelect?: number;\r\n  isDragged?: boolean;\r\n  addRowButton?: AddRowButton;\r\n  configRowStylesFromColumn?: Array<ConfigRowStyles<T>>;\r\n  isCellSelection?: boolean;\r\n  addBookButton?: boolean;\r\n}\r\n\r\n@Injectable()\r\nexport class DependencyTableHelisaService<T> {\r\n\r\n\r\n  tables: Subject<ConfigTable<T>[]> = new Subject();\r\n  infoTables: Array<ConfigTable<T>> = new Array();\r\n\r\n  private emitVisibilityButton$: Subject<EventDependency<boolean>> = new Subject<EventDependency<boolean>>();\r\n  emitVisibilityButton: Observable<EventDependency<boolean>> = this.emitVisibilityButton$.asObservable();\r\n\r\n  private emitVisibilityAllButtons$: Subject<boolean> = new Subject<boolean>();\r\n  emitVisibilityAllButtons: Observable<boolean> = this.emitVisibilityAllButtons$.asObservable();\r\n\r\n  private emitIsCellSelection$: Subject<EventDependency<boolean>> = new Subject<EventDependency<boolean>>();\r\n  emitIsCellSelection: Observable<EventDependency<boolean>> = this.emitIsCellSelection$.asObservable();\r\n\r\n  private emitChangeColumns$: Subject<EventDependency<ColumnConfig[]>> = new Subject<EventDependency<ColumnConfig[]>>();\r\n  emitChangeColumns: Observable<EventDependency<ColumnConfig[]>> = this.emitChangeColumns$.asObservable();\r\n\r\n  emitTotal: Subject<EventDependency<TotalTableHelisa>> = new Subject<EventDependency<TotalTableHelisa>>();\r\n  emitNextPage: Subject<EventDependency<T[]>> = new Subject<EventDependency<T[]>>();\r\n\r\n  constructor() { }\r\n\r\n  /**\r\n   * retorna un Observable<ConfigTable[]>\r\n   */\r\n  getTables(): Observable<ConfigTable<T>[]> {\r\n    return this.tables;\r\n  }\r\n\r\n  /**\r\n   * Actualiza las dependencias, agrendo la tabla que envian en el orden correspondiente o al final.\r\n   * TambiÃ©n remueve las dependecias que hay apartir de la tabla segun se indique en el parametro.\r\n   * @param configTable Objeto que contiene la configuraciÃ³n para la tabla.\r\n   * @param withRemoveDependency boolean por defecto es false, si es 'true' indica que remueva las dependencias apartir de el.\r\n   */\r\n  updateDependency(configTable: ConfigTable<T>, withRemoveDependency: boolean = false): void {\r\n    if (withRemoveDependency) {\r\n      this.infoTables = this.infoTables.slice(0, !configTable.order ? 0 : configTable.order);\r\n    }\r\n    if (!configTable.order || configTable.order >= this.infoTables.length) {\r\n      configTable.order = this.infoTables.length;\r\n    }\r\n    this.infoTables[configTable.order] = configTable;\r\n    if (configTable.isRemote) {\r\n      configTable.dataSource = null;\r\n      if (configTable.count === null) {\r\n        throw new Error('hace falta el count');\r\n      }\r\n    } else {\r\n      if (configTable.dataSource === null) {\r\n        throw new Error('hace falta el dataSource');\r\n      }\r\n      configTable.count = configTable.dataSource.length;\r\n    }\r\n    this.tables.next(this.infoTables);\r\n  }\r\n\r\n  /**\r\n   * Emite un evento de total con la informaciÃ³n para la tabla correspondiente\r\n   * @param event wrapper que contiene el indice de la tabla y la informaciÃ³n de la pagina\r\n   */\r\n  setTotal(event: EventDependency<TotalTableHelisa>): void {\r\n    this.emitTotal.next(event);\r\n  }\r\n\r\n  /**\r\n   * Emite un evento de agregar pagina con la pagina para la tabla correspondiente\r\n   * @param event wrapper que contiene el indice de la tabla y la informaciÃ³n de la pagina\r\n   */\r\n  addPage(event: EventDependency<T[]>): void {\r\n    this.emitNextPage.next(event);\r\n  }\r\n\r\n  selectIndexRow(config: ConfigTable<T>): void {\r\n    if (this.infoTables[config.order]) {\r\n      this.infoTables[config.order].indexRowSelect = config.indexRowSelect;\r\n      this.tables.next(this.infoTables);\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * Muestra o esconde el boton una tabla en especifico\r\n   * @param event para indicar el index de la tabla y en \"data\" true o false\r\n   */\r\n  changeVisibilityButton(event: EventDependency<boolean>): void {\r\n    this.emitVisibilityButton$.next(event);\r\n  }\r\n\r\n\r\n  /**\r\n   * Esconde los botones de todas las tablas\r\n   * @param show indicar si se muestran o no todos los botones de las tablas\r\n   */\r\n  changeVisibilityAllButtons(show: boolean): void {\r\n    this.emitVisibilityAllButtons$.next(show);\r\n  }\r\n\r\n  /**\r\n   * Para habilitar el manejo de selecciÃ³n de celda\r\n   * @param event para indicar el index de la tabla y en \"data\" true o false\r\n   */\r\n  changeisCellSelection(event: EventDependency<boolean>): void {\r\n    this.emitIsCellSelection$.next(event);\r\n  }\r\n\r\n   /**\r\n    * Para habilitar el cambio de columnas\r\n    * @param event para indicar el index de la tabla y en \"data\" columnas\r\n    */\r\n  changeColumnsByTable( event: EventDependency<ColumnConfig[]>): void {\r\n    this.emitChangeColumns$.next(event);\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {BehaviorSubject, Observable, Subject} from 'rxjs';\r\nimport {TotalTableHelisa} from './table-helisa.interface';\r\nimport {TableHelisaComponent} from './table-helisa.component';\r\n\r\nexport interface TableHelisaServiceInfo<T> {\r\n  obj: T;\r\n  table?: {} | TableHelisaComponent<T>;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TableHelisaService<T> {\r\n\r\n  private emitChangeSource: Subject<TableHelisaServiceInfo<TotalTableHelisa>> = new Subject<TableHelisaServiceInfo<TotalTableHelisa>>();\r\n  private emitNextPage: Subject<TableHelisaServiceInfo<T[]>> = new Subject<TableHelisaServiceInfo<T[]>>();\r\n\r\n  totalReturn: Observable<TableHelisaServiceInfo<TotalTableHelisa>> = this.emitChangeSource.asObservable();\r\n  nextPageReturn: Observable<TableHelisaServiceInfo<T[]>> = this.emitNextPage.asObservable();\r\n\r\n  private emitVisibleButton$: Subject<boolean> = new Subject<boolean>();\r\n  /**\r\n   * Observable para saber si se debe mostrar o esconder el boton de add row\r\n   */\r\n  emitVisibleButton: Observable<boolean> = this.emitVisibleButton$.asObservable();\r\n\r\n  setTotal(total: TotalTableHelisa, table?: TableHelisaComponent<TotalTableHelisa>): void {\r\n    this.emitChangeSource.next({obj: total, table});\r\n  }\r\n\r\n  addPage(page: T[], table?: TableHelisaComponent<T>): void {\r\n    this.emitNextPage.next({obj: page, table});\r\n  }\r\n\r\n  /**\r\n   * para modificar el valor de si se muestra o no el boton de add row de la tabla\r\n   * @param change indicar si se muestra o no el boton de add row de la tabla\r\n   */\r\n  changeVisibilityButton(change: boolean): void {\r\n    this.emitVisibleButton$.next(change);\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, EventEmitter, Output, QueryList, ViewChildren, Input } from '@angular/core';\r\nimport { DependencyTableHelisaService, ConfigTable } from './dependency-table-helisa.service';\r\nimport { ColumnConfig, RequestTableHelisa, SelectObject, TotalTableHelisa } from '../table-helisa/table-helisa.interface';\r\nimport { TableHelisaService } from '../table-helisa/table-helisa.service';\r\nimport { TableHelisaComponent } from '../table-helisa/table-helisa.component';\r\n\r\nexport interface EventDependency<T> {\r\n  index: number;\r\n  data: T;\r\n}\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'hel-dependency-table',\r\n  templateUrl: './dependency-table-helisa.component.html',\r\n  styleUrls: ['./dependency-table-helisa.component.sass'],\r\n  providers: [DependencyTableHelisaService]\r\n})\r\nexport class DependencyTableHelisaComponent<T> implements OnInit {\r\n\r\n  tables: Array<ConfigTable<T>> = [];\r\n  @ViewChildren('viewTables') viewTables: QueryList<TableHelisaComponent<T>>;\r\n  @Input() showToolTip: boolean = true;\r\n\r\n  /**\r\n   * deprecated, use selectObject\r\n   */\r\n  @Output() selected: EventEmitter<EventDependency<T>> = new EventEmitter<EventDependency<T>>();\r\n  @Output() selectObject: EventEmitter<EventDependency<{} | T>> = new EventEmitter<EventDependency<{}  | T>>();\r\n  @Output() nextPage: EventEmitter<EventDependency<{} | T>> = new EventEmitter<EventDependency<{} | T>>();\r\n  @Output() total: EventEmitter<EventDependency<{} | T>> = new EventEmitter<EventDependency<{}>>();\r\n  @Output() sort: EventEmitter<EventDependency<{} | T>> = new EventEmitter<EventDependency<{}>>();\r\n  @Output() drop: EventEmitter<EventDependency<{} | T>> = new EventEmitter<EventDependency<{}>>();\r\n  @Output() addRow: EventEmitter<number> = new EventEmitter<number>();\r\n  @Output() selectCell: EventEmitter<EventDependency<{} | T>> = new EventEmitter<EventDependency<{} | T>>();\r\n  @Output() bookClicked: EventEmitter<EventDependency<{} | T>> = new EventEmitter<EventDependency<{} | T>>();\r\n  selectedObject: EventDependency<{}> = null;\r\n\r\n\r\n  /**\r\n   * Tiempo antes de ocultarla el mensaje del tooltip\r\n   */\r\n  @Input() hideDelay: number = 600;\r\n\r\n  /**\r\n   * Tiempo antes de mostra el mensaje del tooltip\r\n   */\r\n  @Input() showDelay: number = 500;\r\n\r\n\r\n  constructor(private dependencyTableHelisaService: DependencyTableHelisaService<T>, private tableService: TableHelisaService<T>) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getTables();\r\n    this.dependencyTableHelisaService.emitNextPage.subscribe(\r\n      (event: EventDependency<T[]>) => {\r\n        this.tableService.addPage(event.data, this.viewTables.toArray()[event.index]);\r\n      }\r\n    );\r\n\r\n    this.dependencyTableHelisaService.emitTotal.subscribe(\r\n      (event: EventDependency<TotalTableHelisa>) => {\r\n        this.tableService.setTotal(event.data, this.viewTables[event.index]);\r\n      }\r\n    );\r\n\r\n    // Observable para mostrar o esconder el boton de una tabla\r\n    this.dependencyTableHelisaService.emitVisibilityButton.subscribe(\r\n      (data: EventDependency<boolean>) => {\r\n        if (!!data && data.index !== undefined) {\r\n          const table: ConfigTable<T> = this.tables[data.index];\r\n          if (!!table) {\r\n            table.addRowButton.showButton = data.data;\r\n          }\r\n        }\r\n      }\r\n    );\r\n\r\n    // Observable para mostrar o esconder los botones de todas las tablas\r\n    this.dependencyTableHelisaService.emitVisibilityAllButtons.subscribe(\r\n      (data: boolean) => {\r\n        if (data !== undefined && data != null) {\r\n          this.tables.forEach((element: ConfigTable<T>) => {\r\n            if (!!element.addRowButton) {\r\n              element.addRowButton.showButton = data;\r\n            }\r\n          });\r\n        }\r\n      }\r\n    );\r\n\r\n    // Observable para manejo de selecciÃ³n de celdas\r\n    this.dependencyTableHelisaService.emitIsCellSelection.subscribe(\r\n      (data: EventDependency<boolean>) => {\r\n        if (!!data && data.index !== undefined) {\r\n          const table: ConfigTable<T> = this.tables[data.index];\r\n          if (table) {\r\n            table.isCellSelection = data.data;\r\n          }\r\n        }\r\n      });\r\n\r\n    // Observable para manejo de columnas\r\n    this.dependencyTableHelisaService.emitChangeColumns.subscribe(\r\n      (data: EventDependency<ColumnConfig[]>) => {\r\n        if (!!data && data.index !== undefined) {\r\n          const table: ConfigTable<T> = this.tables[data.index];\r\n          if (table) {\r\n            table.columns = data.data;\r\n          }\r\n        }\r\n      });\r\n  }\r\n\r\n  /**\r\n   * retorna el servicio que gestiona el componente.\r\n   */\r\n  getService(): DependencyTableHelisaService<T> {\r\n    return this.dependencyTableHelisaService;\r\n  }\r\n\r\n  /**\r\n   * Obtiene un observable con las tablas dependientes desde el servicio.\r\n   */\r\n  getTables(): void {\r\n    this.dependencyTableHelisaService.getTables()\r\n      .subscribe((tables: ConfigTable<T>[]) => {\r\n        this.tables = tables;\r\n      }\r\n      );\r\n  }\r\n\r\n  /**\r\n   * Evento que se dispara desde una tabla, emitiendo un nuevo evento con el inidice de la tabla que dispara el evento y el evento generado.\r\n   * @param index indica el indice de la tabla seleccionada\r\n   * @param data retorna la fila que fue seleccionada\r\n   */\r\n  onSelectedDependency(index: number, event: SelectObject<T>): void {\r\n    this.selectedObject = { index, data: event };\r\n    this.selected.emit({ index, data: event.value });\r\n    this.selectObject.emit({ index, data: event });\r\n  }\r\n\r\n  /**\r\n   * Evento que se dispara desde una tabla, emitiendo un nuevo evento con el inidice de la tabla que dispara el evento y el evento generado.\r\n   * @param index indica el indice de la tabla que genera el evento\r\n   * @param event evento generado desde la tabla\r\n   */\r\n  onNextPage(index: number, event: RequestTableHelisa<T>): void {\r\n    this.nextPage.emit({ index, data: event });\r\n  }\r\n\r\n  /**\r\n   * Evento que se dispara desde una tabla, emitiendo un nuevo evento con el inidice de la tabla que dispara el evento y el evento generado.\r\n   * @param index indica el indice de la tabla que genera el evento\r\n   * @param event evento generado desde la tabla\r\n   */\r\n  onTotal(index: number, event: EventDependency<T>): void {\r\n    this.total.emit({ index, data: event });\r\n  }\r\n\r\n  /**\r\n   * Evento que se dispara desde una tabla, emitiendo un nuevo evento con el inidice de la tabla que dispara el evento y el evento generado.\r\n   * @param index indica el indice de la tabla que genera el evento\r\n   * @param event evento generado desde la tabla\r\n   */\r\n  onSort(index: number, event: EventDependency<T>): void {\r\n    this.sort.emit({ index, data: event });\r\n  }\r\n\r\n  /**\r\n   * Evento que se dispara desde una tabla, emitiendo un nuevo evento con el inidice de la tabla que dispara el evento y el evento generado.\r\n   * @param index indica el indice de la tabla que genera el evento\r\n   * @param event evento generado desde la tabla\r\n   */\r\n  onDrop(index: number, event: EventDependency<T>): void {\r\n    this.drop.emit({ index, data: event });\r\n  }\r\n\r\n  /**\r\n   * Evento que se dispara desde una tabla, emite el indice de la tabla al cual se le debe aÃ±adir una nueva fila\r\n   * @param index indica el indice de la tabla de la cual se dispara el evento\r\n   */\r\n  onAddRow(index: number): void {\r\n    this.addRow.emit(index);\r\n  }\r\n\r\n  selectedCell(index: number, event: EventDependency<T>): void {\r\n    if (this.tables[index].isCellSelection) {\r\n      this.selectCell.emit({ index, data: event });\r\n    }\r\n  }\r\n\r\n  onBookClicked(index: number, event: EventDependency<T>): void {\r\n    this.bookClicked.emit({ index, data: event });\r\n  }\r\n}\r\n","import { Component, EventEmitter, Input, OnInit, Output, ViewChild, ElementRef, AfterViewInit } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\n\r\nexport enum InputHelisaType {\r\n  DEFAULT, IDENTITY, NUMERIC, DOUBLE\r\n}\r\n\r\n@Component({\r\n  selector: 'hel-input',\r\n  templateUrl: './input-helisa.component.html',\r\n  styleUrls: ['./input-helisa.component.sass']\r\n})\r\nexport class InputHelisaComponent implements OnInit, AfterViewInit {\r\n\r\n  private readonly DECIMAL_SEPARATOR: string = '.';\r\n  private readonly THOUSAND_SEPARATOR: string = ',';\r\n\r\n  @Input() placeholder: string = '';\r\n  @Input() floatLabel: 'never' | 'always' | 'auto' = 'never';\r\n\r\n  /** Activar o desactivar el autocompletado\r\n   * (Caracteristica de los navegadores para campos comunes como\r\n   * Direccion , Usuario, Password ... etc)\r\n   */\r\n  @Input() autocompleteMode: boolean = false;\r\n\r\n  // Mostrar o no el icono de buscar\r\n  @Input() isSearch: boolean = false;\r\n  // @Input() inputFormControl: FormControl = new FormControl('');\r\n  @Input() isFocused: boolean = false;\r\n\r\n  /**\r\n   * Deprecated\r\n   */\r\n  @Input() disabled: boolean = false;\r\n  @Input() type: InputHelisaType = InputHelisaType.DEFAULT;\r\n\r\n  /**\r\n   * Deprecated\r\n   */\r\n  @Output() setValue: EventEmitter<string> = new EventEmitter<string>();\r\n\r\n  // tslint:disable-next-line:no-any\r\n  @Output() blur: EventEmitter<any> = new EventEmitter();\r\n\r\n  formControlMask: FormControl = new FormControl('');\r\n  private realValue: string = '';\r\n  private inputFormReal: FormControl = new FormControl('');\r\n\r\n  @ViewChild('inputText') nameInput: ElementRef;\r\n\r\n  constructor() {\r\n  }\r\n\r\n  @Input()\r\n  set inputFormControl(formControl: FormControl) {\r\n    this.inputFormReal = formControl;\r\n    this.inputFormReal.registerOnDisabledChange(((isDisabled: boolean) => {\r\n      if(isDisabled)\r\n        this.formControlMask.disable();\r\n      else\r\n        this.formControlMask.enable();\r\n    }))\r\n    this.inputFormReal.valueChanges.subscribe((data: string) => {\r\n      this.statusChange(this.inputFormReal.status);\r\n      if (this.getMaskedValue(data) !== this.formControlMask.value) {\r\n        this.change(data);\r\n        if (this.isFocused) {\r\n          this.onFocus(null);\r\n        }\r\n      }\r\n    });\r\n    this.formControlMask.setValidators(this.inputFormReal.validator);\r\n    this.change(this.inputFormReal.value);\r\n    // disable control\r\n    if (formControl.disabled) {\r\n      this.formControlMask.disable({ onlySelf: true });\r\n    }\r\n    this.inputFormReal.statusChanges.subscribe(\r\n      (data: string) => {\r\n        this.statusChange(data);\r\n        if (this.isFocused) {\r\n          this.onFocus(null);\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n\r\n  private statusChange(data: string): void {\r\n    if (data === 'INVALID') {\r\n      this.formControlMask.setErrors({ key: 'Error de validaciÃ³n.' });\r\n    } else {\r\n      this.formControlMask.setErrors(null);\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    if (this.isFocused) {\r\n      this.nameInput.nativeElement.focus();\r\n    }\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    // this.isParentDisabled();\r\n  }\r\n\r\n  /*isParentDisabled(): void {\r\n    setTimeout(() => {\r\n      if (this.nameInput.nativeElement.closest('.hw-disabled-mode')) {\r\n        this.disabled = true;\r\n      } else {\r\n        this.disabled = false;\r\n      }\r\n    });\r\n  }*/\r\n\r\n  search(): void {\r\n    this.setValue.emit(this.realValue);\r\n  }\r\n\r\n  change(event: string): void {\r\n    if (event != null) {\r\n      event = event + '';\r\n    }\r\n    let position: number = this.nameInput.nativeElement.selectionStart;\r\n    const length: number = event ? event.length : 0;\r\n    this.realValue = this.getRealValue(event);\r\n    if (this.getMaskedValue(this.realValue) !== this.formControlMask.value) {\r\n      this.formControlMask.setValue(this.getMaskedValue(this.realValue));\r\n      position += this.nameInput.nativeElement.value.length - length;\r\n      this.nameInput.nativeElement.selectionStart = position;\r\n      this.nameInput.nativeElement.selectionEnd = position;\r\n    }\r\n    this.inputFormReal.setValue(this.realValue);\r\n  }\r\n\r\n  private getMaskedValue(str: string): string {\r\n    if (str == null) {\r\n      return str;\r\n    }\r\n    str = str + '';\r\n    if (this.type === InputHelisaType.DEFAULT) {\r\n      return str;\r\n    }\r\n    let maskedStr: string = '';\r\n    if (this.type === InputHelisaType.IDENTITY) {\r\n      for (let i: number = str.length - 1, j: number = 0; i >= 0; i--, j++) {\r\n        if (j > 0 && j % 3 === 0) {\r\n          maskedStr = this.DECIMAL_SEPARATOR + maskedStr;\r\n        }\r\n        maskedStr = str[i] + maskedStr;\r\n      }\r\n    }\r\n    if (this.type === InputHelisaType.NUMERIC) {\r\n      for (let i: number = str.length - 1, j: number = 0; i >= 0; i--, j++) {\r\n        if (j > 0 && j % 3 === 0) {\r\n          maskedStr = this.THOUSAND_SEPARATOR + maskedStr;\r\n        }\r\n        maskedStr = str[i] + maskedStr;\r\n      }\r\n    }\r\n    if (this.type === InputHelisaType.DOUBLE) {\r\n      if (str.indexOf(this.DECIMAL_SEPARATOR) >= 0) {\r\n        for (let i: number = str.indexOf(this.DECIMAL_SEPARATOR); i < str.length; i++) {\r\n          maskedStr += str[i];\r\n        }\r\n      }\r\n      for (let i: number = (str.indexOf(this.DECIMAL_SEPARATOR) >= 0 ? str.indexOf(this.DECIMAL_SEPARATOR) : str.length) - 1,\r\n        j: number = 0; i >= 0; i--, j++) {\r\n\r\n        if (j > 0 && j % 3 === 0) {\r\n          maskedStr = this.THOUSAND_SEPARATOR + maskedStr;\r\n        }\r\n        maskedStr = str[i] + maskedStr;\r\n      }\r\n    }\r\n    return maskedStr;\r\n  }\r\n\r\n  private getRealValue(str: string): string {\r\n    if (str == null) {\r\n      return str;\r\n    }\r\n    str = str + '';\r\n    let realStr: string = '';\r\n    if (this.type === InputHelisaType.DEFAULT) {\r\n      return str;\r\n    }\r\n    if (this.type === InputHelisaType.IDENTITY) {\r\n      for (const strItem of str) {\r\n        if (strItem.match('[a-zA-Z0-9]')) {\r\n          realStr += strItem;\r\n        }\r\n      }\r\n    }\r\n    if (this.type === InputHelisaType.NUMERIC) {\r\n      for (const strItem of str) {\r\n        if (strItem.match('[0-9]')) {\r\n          realStr += strItem;\r\n        }\r\n      }\r\n    }\r\n    if (this.type === InputHelisaType.DOUBLE) {\r\n      let haveDot: boolean = false;\r\n\r\n      for (const strItem of str) {\r\n        if (strItem.match('[0-9]') || ((strItem === this.DECIMAL_SEPARATOR) && !haveDot)) {\r\n          realStr += strItem;\r\n        }\r\n        haveDot = haveDot || (strItem === this.DECIMAL_SEPARATOR);\r\n      }\r\n    }\r\n    return realStr;\r\n  }\r\n\r\n  onFocus($event: FocusEvent): void {\r\n    if ((this.type === InputHelisaType.NUMERIC || this.type === InputHelisaType.DOUBLE) &&\r\n      Number(this.getRealValue(this.nameInput.nativeElement.value)) === 0) {\r\n      this.nameInput.nativeElement.select();\r\n    }\r\n  }\r\n}\r\n","import {SortDirection} from '@angular/material';\r\nimport { RowData } from './table-helisa.component';\r\n\r\nexport enum ColumnType {\r\n  NORMAL, URL\r\n}\r\n\r\nexport interface ColumnConfig {\r\n  name: string;\r\n  title?: string;\r\n  visible?: boolean;\r\n  sortable?: boolean;\r\n  groupable?: boolean;\r\n  totalType?: TotalType;\r\n  searchable?: boolean;\r\n  sortDirection?: SortDirection;\r\n  subtitle?: string;\r\n  colspanTitle?: number;\r\n  colspanSubtitle?: number;\r\n  columnStyle?: string;\r\n  columnType?: ColumnType;\r\n}\r\n\r\nexport interface AddRowButton {\r\n  text: string;\r\n  showButton: boolean;\r\n}\r\n\r\nexport enum EventScope {\r\n  USER, CODE_CALL\r\n}\r\n\r\nexport enum TotalType {\r\n  SUM, AVERAGE, COUNT\r\n}\r\n\r\nexport enum ChangeColumnConfigurationType {\r\n  SORT, UNKNOWN, TOTAL\r\n}\r\n\r\nexport interface EventColumn {\r\n  column: ColumnConfig;\r\n  columnConfigurations: Array<ColumnConfig>;\r\n  type: ChangeColumnConfigurationType;\r\n}\r\n\r\nexport interface TotalTableHelisa {\r\n  column: ColumnConfig;\r\n  value: number;\r\n}\r\n\r\nexport interface TotalGroup {\r\n  sum: number;\r\n  count: number;\r\n}\r\n\r\nexport interface EventSearch {\r\n  text: string;\r\n  columnConfigurations: Array<ColumnConfig>;\r\n}\r\n\r\nexport interface RequestTableHelisa<T> {\r\n  page: number;\r\n  body: {} | T;\r\n}\r\n\r\nexport interface DropElement<T> {\r\n value: T;\r\n order: number;\r\n}\r\n\r\nexport interface SelectObject<T> {\r\n  value: T;\r\n  scope: EventScope;\r\n}\r\n\r\nexport enum TableHelisaType {\r\n  REMOTE, LOCAL\r\n}\r\n\r\n\r\nexport interface Cell<T> {\r\n  column: ColumnConfig;\r\n  row: RowData<T> | T;\r\n }\r\n\r\nexport interface ConfigCellStyles<T> {\r\n   cellData: T;\r\n   classCell: string;\r\n }\r\n\r\nexport interface ConfigRowStyles<T> {\r\n  column: ColumnConfig;\r\n  data: {} | T;\r\n  classRow: string;\r\n}\r\n\r\n// @dynamic\r\nexport class ColumnConfigUtil<T> {\r\n\r\n  getValue(obj: T, column: ColumnConfig): T | number | string {\r\n    return column.name.split('.').reduce((o: T, field: string) => o && o[field], obj);\r\n  }\r\n}\r\n\r\n","import {ColumnConfig} from './table-helisa.interface';\r\nimport {Observable} from 'rxjs';\r\n\r\n\r\nexport class TableHelisaConnectComponent<T> {\r\n  page: number;\r\n  isLastPage: boolean;\r\n  isUsed: boolean;\r\n\r\n  constructor() {\r\n    this.page = 0;\r\n    this.isLastPage = false;\r\n    this.isUsed = false;\r\n  }\r\n\r\n  public getBody(columnConfig: Array<ColumnConfig>, search: string): {} {\r\n    return {};\r\n  }\r\n\r\n  nextPage(): number {\r\n    return this.page++;\r\n  }\r\n}\r\n","import { AfterViewInit, Component, EventEmitter, Input, OnInit, Output, ViewChild, ElementRef } from '@angular/core';\r\nimport { MatSort, MatTable, MatTableDataSource } from '@angular/material';\r\nimport { Sort } from '@angular/material/typings/sort';\r\n\r\nimport {\r\n  AddRowButton,\r\n  Cell,\r\n  ChangeColumnConfigurationType,\r\n  ColumnConfig,\r\n  ColumnConfigUtil,\r\n  ConfigCellStyles,\r\n  ConfigRowStyles,\r\n  DropElement,\r\n  EventColumn,\r\n  EventScope,\r\n  EventSearch,\r\n  RequestTableHelisa,\r\n  SelectObject,\r\n  TableHelisaType,\r\n  TotalGroup,\r\n  TotalType,\r\n  ColumnType,\r\n  TotalTableHelisa\r\n} from './table-helisa.interface';\r\nimport { TableHelisaService, TableHelisaServiceInfo } from './table-helisa.service';\r\nimport { TableHelisaConnectComponent } from './table-helisa-connect.component';\r\nimport { CdkDragDrop, moveItemInArray } from '@angular/cdk/drag-drop';\r\nimport { of } from 'rxjs';\r\n\r\nexport interface RowData<T> {\r\n  data: {} | T;\r\n  rowType: RowType;\r\n}\r\n\r\nenum RowType {\r\n  GROUP_TITLE, GROUP_FOOTER, ROW\r\n}\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'hel-table',\r\n  templateUrl: './table-helisa.component.html',\r\n  styleUrls: ['./table-helisa.component.sass']\r\n})\r\nexport class TableHelisaComponent<T> implements OnInit, AfterViewInit {\r\n\r\n  private tableHelisaConnectComponent: TableHelisaConnectComponent<T>;\r\n  totalData: Array<number>;\r\n  rawData: Array<T>;\r\n  data: MatTableDataSource<RowData<T>>;\r\n  displayedColumns: string[] = [];\r\n  displayedColumnsWithTitle: string[] = [];\r\n  displayedColumnsWithSubtitle: string[] = [];\r\n  displayedColumnsWithFooter: string[] = [];\r\n  columnConfig: Array<ColumnConfig>;\r\n  selectedObject: T;\r\n  lastSearch: string;\r\n  type: TableHelisaType = TableHelisaType.LOCAL;\r\n  indexRowSelect: number;\r\n  private scrollCount: number = 0;\r\n  hasSubtitle: boolean = false;\r\n  private indexRowStartDrag: number = -1;\r\n  private lastIndexRowDrag: number = -1;\r\n  private dataBeforeDrag: { data: RowData<T>[] } = null;\r\n  private dataSource$: Array<T> = [];\r\n  private scrollX: number = 0;\r\n  private scrollY: number = 0;\r\n\r\n  @ViewChild(MatSort) matSort: MatSort;\r\n  @ViewChild(MatTable) matTable: MatTable<T>;\r\n  @ViewChild(MatTable, { read: ElementRef }) matTableElement: ElementRef;\r\n  @ViewChild('containerTable') containerTable: ElementRef;\r\n\r\n  @Output() sort: EventEmitter<EventColumn> = new EventEmitter<EventColumn>();\r\n  @Output() total: EventEmitter<EventColumn> = new EventEmitter<EventColumn>();\r\n  @Output() search: EventEmitter<EventSearch> = new EventEmitter<EventSearch>();\r\n\r\n  /**\r\n   * Deprecado, cambiar por electObject\r\n   */\r\n  @Output() select: EventEmitter<T> = new EventEmitter<T>();\r\n  @Output() selectCell: EventEmitter<Cell<T>> = new EventEmitter<Cell<T>>();\r\n  @Output() selectObject: EventEmitter<SelectObject<T>> = new EventEmitter<SelectObject<T>>();\r\n  @Output() nextPage: EventEmitter<RequestTableHelisa<T>> = new EventEmitter<RequestTableHelisa<T>>();\r\n  @Input() showTitle: boolean = true;\r\n  @Input() isCellSelection: boolean = false;\r\n  @Input() count: number;\r\n  @Input() configCellStyles: Array<ConfigCellStyles<T>>;\r\n  @Input() configRowStylesFromColumn: Array<ConfigRowStyles<T>>;\r\n  @Input() selectedCells: Cell<T>;\r\n  @Output() drop: EventEmitter<DropElement<T>> = new EventEmitter<DropElement<T>>();\r\n  @Input() isDragged: boolean = false;\r\n  @Input() addRowButton: AddRowButton = { showButton: false, text: '' };\r\n  @Output() addRow: EventEmitter<void> = new EventEmitter<void>();\r\n  @Output() bookClicked: EventEmitter<T> = new EventEmitter<T>();\r\n  @Input() addBookButton: boolean = false;\r\n  @Input() showToolTip: boolean = true;\r\n  showFooter: boolean = false;\r\n  showSearch: boolean = false;\r\n\r\n\r\n\r\n  /**\r\n   * Tiempo antes de ocultarla el mensaje del tooltip\r\n   */\r\n  @Input() hideDelay: number = 600;\r\n\r\n  /**\r\n   * Tiempo antes de mostra el mensaje del tooltip\r\n   */\r\n  @Input() showDelay: number = 500;\r\n\r\n\r\n  constructor(private tableService: TableHelisaService<T>) { }\r\n\r\n  ngOnInit(): void {\r\n    this.tableService.nextPageReturn.subscribe(\r\n      (data: TableHelisaServiceInfo<T[]>) => {\r\n        if (!data.table || data.table === this) {\r\n          this.receivePage(data.obj);\r\n        }\r\n      }\r\n    );\r\n    this.tableService.totalReturn.subscribe((info: TableHelisaServiceInfo<TotalTableHelisa>) => {\r\n      if (info) {\r\n        this.columnConfig.forEach((column: ColumnConfig, idx: number) => {\r\n          if (column === info.obj.column) {\r\n            this.totalData[idx] = this.getGroupValue(column, { sum: info.obj.value, count: this.count });\r\n          }\r\n        });\r\n      }\r\n    });\r\n    this.matSort.sortChange.subscribe(\r\n      (event: Sort) => {\r\n        const column: ColumnConfig = this.columnConfig.find((c: ColumnConfig) => c.name === event.active);\r\n        column.sortDirection = event.direction;\r\n        this.sort.emit({ column, columnConfigurations: this.columnConfig, type: ChangeColumnConfigurationType.SORT });\r\n      }\r\n    );\r\n\r\n    this.tableService.emitVisibleButton.subscribe(\r\n      (data: boolean) => {\r\n        if (data !== undefined && data != null) {\r\n          this.addRowButton.showButton = data;\r\n        }\r\n\r\n      }\r\n    );\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    if (this.isCellSelection) {\r\n      this.matTable.renderRows();\r\n    }\r\n  }\r\n\r\n  @Input()\r\n  set isRemote(w: boolean) {\r\n    this.type = w ? TableHelisaType.REMOTE : TableHelisaType.LOCAL;\r\n    this.tableHelisaConnectComponent = new TableHelisaConnectComponent<T>();\r\n    if (this.type === TableHelisaType.REMOTE) {\r\n      this.goNextPage();\r\n    } else {\r\n      this.tableHelisaConnectComponent.page++;\r\n    }\r\n  }\r\n\r\n  @Input()\r\n  set columnConfiguration(columnConfiguration: Array<ColumnConfig>) {\r\n    this.hasSubtitle = false;\r\n    this.columnConfig = columnConfiguration;\r\n    this.displayedColumns.splice(0, this.displayedColumns.length);\r\n\r\n    if (columnConfiguration) {\r\n      if (this.addBookButton) {\r\n        const columnCount: number = columnConfiguration.length;\r\n        let countSubtitle: number = 0;\r\n        let showBookButton: boolean = false;\r\n        columnConfiguration.forEach((column: ColumnConfig) => {\r\n          if (!!column.subtitle) {\r\n            countSubtitle = countSubtitle + 1;\r\n          }\r\n          if ((!showBookButton) && (column.name === 'bookButton')) {\r\n            showBookButton = true;\r\n          }\r\n        });\r\n        const subtitleTemp: boolean = columnCount === countSubtitle;\r\n        if (!showBookButton) {\r\n          columnConfiguration.push({\r\n            name: 'bookButton',\r\n            title: '',\r\n            subtitle: subtitleTemp ? '' : undefined ,\r\n            visible: true\r\n          });\r\n        }\r\n      }\r\n\r\n      columnConfiguration.forEach((column: ColumnConfig) => {\r\n        if (column.visible) {\r\n          this.displayedColumns.push(column.name);\r\n        }\r\n        if (!this.hasSubtitle) {\r\n          this.hasSubtitle = column.subtitle !== undefined;\r\n        }\r\n      });\r\n      if (this.rawData) {\r\n        this.dataSource = this.rawData;\r\n      }\r\n    }\r\n    this.displayedColumnsWithTitle.splice(0, this.displayedColumnsWithTitle.length);\r\n    this.displayedColumnsWithSubtitle.splice(0, this.displayedColumnsWithSubtitle.length);\r\n    this.displayedColumnsWithFooter.splice(0, this.displayedColumnsWithFooter.length);\r\n    this.getColumnsWithTitle().forEach((col: string) => this.displayedColumnsWithTitle.push(col));\r\n    this.getHeaderSubtitle().forEach((col: string) => this.displayedColumnsWithSubtitle.push(col));\r\n    this.footerDisplayedColumns().forEach((col: string) => this.displayedColumnsWithFooter.push(col));\r\n  }\r\n\r\n\r\n\r\n  @Input()\r\n  set dataSource(dataSource: Array<T>) {\r\n    this.dataSource$ = dataSource;\r\n    this.rawData = dataSource;\r\n    if (this.rawData) { this.prepareDataSource(); }\r\n  }\r\n\r\n  get dataSource(): Array<T> {\r\n    return this.dataSource$;\r\n  }\r\n\r\n  @Input()\r\n  set selectedIndexRow(idRowSelected: number) {\r\n    this.indexRowSelect = idRowSelected;\r\n    if (this.rawData && this.rawData.length) {\r\n      if ((idRowSelected >= this.rawData.length || idRowSelected < 0)) {\r\n        this.indexRowSelect = 0;\r\n      }\r\n      this.selectRow({ data: this.rawData[this.indexRowSelect], rowType: RowType.ROW }, false);\r\n    }\r\n  }\r\n\r\n  private prepareDataSource(): void {\r\n    const changeData: Array<RowData<T>> = Array<RowData<T>>();\r\n    let haveGroup: boolean = false;\r\n    let groupFooter: Array<TotalGroup>;\r\n    this.columnConfig.forEach((column: ColumnConfig) => {\r\n      if (column.totalType !== undefined && (this.type === TableHelisaType.LOCAL || this.tableHelisaConnectComponent.page <= 1)) {\r\n        this.totalData = new Array<number>(this.columnConfig.length);\r\n        this.showFooter = true;\r\n        this.total.emit({ column, columnConfigurations: this.columnConfig, type: ChangeColumnConfigurationType.TOTAL });\r\n      }\r\n      this.showSearch = this.showSearch || column.searchable;\r\n      haveGroup = haveGroup || column.groupable;\r\n    });\r\n    if (haveGroup) {\r\n      this.rawData = this.rawData.sort((a: T, b: T) => {\r\n        let result: number = 0;\r\n        this.columnConfig.forEach((column: ColumnConfig) => {\r\n          if (result === 0) {\r\n            result = this.compare(a, b);\r\n          }\r\n        });\r\n        return result;\r\n      });\r\n    }\r\n    this.rawData.forEach((row: T) => {\r\n      if (haveGroup && (changeData.length === 0 || this.compare(changeData[changeData.length - 1].data as T, row) !== 0)) {\r\n        if (groupFooter) {\r\n          changeData.push({ data: groupFooter, rowType: RowType.GROUP_FOOTER });\r\n        }\r\n        changeData.push({ data: row, rowType: RowType.GROUP_TITLE });\r\n        groupFooter = new Array<TotalGroup>(this.columnConfig.length);\r\n      }\r\n      if (haveGroup) { this.addTotalGroup(groupFooter, row); }\r\n      changeData.push({ data: row, rowType: RowType.ROW });\r\n    });\r\n    this.data = new MatTableDataSource<RowData<T>>(changeData);\r\n    if (this.rawData && this.rawData.length && this.indexRowSelect && !this.selectedObject) {\r\n      if (this.indexRowSelect >= this.rawData.length || this.indexRowSelect < 0) {\r\n        this.indexRowSelect = 0;\r\n      }\r\n      this.selectRow({ data: this.rawData[this.indexRowSelect], rowType: RowType.ROW }, false);\r\n    }\r\n  }\r\n\r\n  private addTotalGroup(rowTotal: Array<TotalGroup>, row: T): void {\r\n    this.columnConfig.forEach((column: ColumnConfig, index: number) => {\r\n      if (column.totalType !== undefined) {\r\n        if (rowTotal[index] === undefined) {\r\n          rowTotal[index] = { sum: (new ColumnConfigUtil().getValue(row, column) as number), count: 1 };\r\n        } else {\r\n          rowTotal[index].sum += (new ColumnConfigUtil().getValue(row, column) as number);\r\n          rowTotal[index].count++;\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  private compare(a: T, b: T): number {\r\n    let ws: number = 0;\r\n    this.columnConfig.forEach((column: ColumnConfig) => {\r\n      if (ws === 0 && column.groupable) {\r\n        if ((new ColumnConfigUtil().getValue(a, column) as number) < (new ColumnConfigUtil().getValue(b, column) as number)) {\r\n          ws = -1;\r\n        } else if ((new ColumnConfigUtil().getValue(a, column) as number) > (new ColumnConfigUtil().getValue(b, column) as number)) {\r\n          ws = 1;\r\n        }\r\n      }\r\n    });\r\n    return ws;\r\n  }\r\n\r\n  getGroupDescription(obj: T): string {\r\n    let result: string = '';\r\n    this.columnConfig.forEach((column: ColumnConfig) => {\r\n      if (column.groupable) {\r\n        result += (result.length ? ' - ' : '') + (new ColumnConfigUtil().getValue(obj, column));\r\n      }\r\n    });\r\n    return result;\r\n  }\r\n\r\n  isGroupTitle(index: number, item: RowData<T>): boolean {\r\n    return item.rowType === RowType.GROUP_TITLE;\r\n  }\r\n\r\n  isRow(index: number, item: RowData<T>): boolean {\r\n    return item.rowType === RowType.ROW;\r\n  }\r\n\r\n  isGroupFooter(index: number, item: RowData<T>): boolean {\r\n    return item.rowType === RowType.GROUP_FOOTER;\r\n  }\r\n\r\n  footerDisplayedColumns(): Array<string> {\r\n    return this.displayedColumns.map((name: string) => 'footer-' + name);\r\n  }\r\n\r\n  getGroupValue(column: ColumnConfig, data: TotalGroup): number {\r\n    if (column.totalType === TotalType.SUM) { return data.sum; }\r\n    if (column.totalType === TotalType.COUNT) { return data.count; }\r\n    if (column.totalType === TotalType.AVERAGE) { return 1. * data.sum / data.count; }\r\n    return undefined;\r\n  }\r\n\r\n  getValue(obj: T, column: ColumnConfig): T {\r\n    return new ColumnConfigUtil().getValue(obj, column) as T;\r\n  }\r\n\r\n  getValueTooltip(obj: T, column: ColumnConfig): string {\r\n    if (this.showToolTip) {\r\n      return new ColumnConfigUtil().getValue(obj, column) as string;\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  searchText(text: string): void {\r\n    this.lastSearch = text;\r\n    this.search.emit({ text, columnConfigurations: this.columnConfig });\r\n  }\r\n\r\n  selectRow(row: RowData<T>, isUser: boolean, column?: ColumnConfig): void {\r\n    if (row === undefined || row === null) {\r\n      return;\r\n    }\r\n    if ((column === undefined || column === null) || (!!column && column.name !== 'bookButton')) {\r\n      this.selectedObject = row.data as T;\r\n      this.select.emit(this.selectedObject);\r\n      this.selectObject.emit({ value: this.selectedObject, scope: isUser ? EventScope.USER : EventScope.CODE_CALL });\r\n    } else if (!!column && column.name === 'bookButton') {\r\n      if (this.selectedObject !== row.data) {\r\n        this.selectedObject = row.data as T;\r\n        this.select.emit(this.selectedObject);\r\n        this.selectObject.emit({ value: this.selectedObject, scope: isUser ? EventScope.USER : EventScope.CODE_CALL });\r\n      }\r\n      this.bookClicked.emit(this.selectedObject);\r\n    }\r\n  }\r\n\r\n  onScroll(event: Event): void {\r\n    const element: HTMLDivElement = event.target as HTMLDivElement;\r\n    let isScrollY: boolean;\r\n\r\n    if (this.scrollY !== element.scrollTop) {\r\n      isScrollY = true;\r\n      this.scrollY = element.scrollTop;\r\n      this.scrollX = element.scrollLeft;\r\n    }\r\n\r\n    if (this.scrollX !== element.scrollLeft) {\r\n      isScrollY = false;\r\n      this.scrollY = element.scrollTop;\r\n      this.scrollX = element.scrollLeft;\r\n    }\r\n\r\n    if ((element.scrollHeight - element.scrollTop < 1000) && isScrollY) {\r\n      this.goNextPage();\r\n    }\r\n\r\n  }\r\n\r\n  private goNextPage(): void {\r\n    if (!this.tableHelisaConnectComponent.isLastPage && !this.tableHelisaConnectComponent.isUsed) {\r\n      this.tableHelisaConnectComponent.isUsed = true;\r\n      this.nextPage.emit({\r\n        page: this.tableHelisaConnectComponent.nextPage(),\r\n        body: this.tableHelisaConnectComponent.getBody(this.columnConfig, this.lastSearch)\r\n      });\r\n    }\r\n  }\r\n\r\n  private receivePage(data: T[]): void {\r\n    if (!this.rawData) {\r\n      this.rawData = new Array<T>();\r\n    }\r\n    this.rawData = this.rawData.concat(data);\r\n    this.dataSource = this.rawData;\r\n    this.tableHelisaConnectComponent.isLastPage = data.length === 0;\r\n    this.tableHelisaConnectComponent.isUsed = false;\r\n  }\r\n\r\n  dblClickCell(): void {\r\n    this.selectCell.emit(this.selectedCells as Cell<T>);\r\n  }\r\n\r\n  selectedCell(element: RowData<T>, column: ColumnConfig): void {\r\n    this.selectRow(element, true, column);\r\n\r\n    this.selectedCells = { column, row: element };\r\n    this.selectCell.emit(this.selectedCells);\r\n  }\r\n\r\n  isSelectedCell(row: RowData<T>, column: ColumnConfig): boolean {\r\n    if (this.isCellSelection) {\r\n      if (this.selectedCells != null) {\r\n        if (this.selectedCells.column.name === column.name &&\r\n          (this.selectedCells.row as RowData<T>).data === row.data) {\r\n          return true;\r\n        }\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  getClassToCell(row: T, column: ColumnConfig): string[] {\r\n    const classToCell: Array<string> = new Array<string>();\r\n    if (this.configCellStyles) {\r\n      const found: ConfigCellStyles<T> = this.configCellStyles.find((c: ConfigCellStyles<T>) => {\r\n        return c.cellData === this.getValue(row, column);\r\n      });\r\n      if (found) {\r\n        classToCell.push(found.classCell);\r\n      }\r\n    }\r\n    if (column.columnStyle) {\r\n      classToCell.push(column.columnStyle);\r\n    }\r\n    return classToCell;\r\n  }\r\n\r\n  getClassToRow(row: T): string[] {\r\n    const classToRow: Array<string> = new Array<string>();\r\n    if (row === this.selectedObject && !this.isCellSelection) {\r\n      classToRow.push('');\r\n    }\r\n    if (this.configRowStylesFromColumn) {\r\n      const found: ConfigRowStyles<T> = this.configRowStylesFromColumn.find((c: ConfigRowStyles<T>) => {\r\n        return c.data === this.getValue(row, c.column);\r\n      });\r\n      if (found) {\r\n        classToRow.push(found.classRow);\r\n      }\r\n    }\r\n    return classToRow;\r\n  }\r\n\r\n  onDrop(event: MouseEvent): void {\r\n    if (this.isDragged && this.indexRowStartDrag >= 0) {\r\n      const rowIndex: number = this.getRowIndex(event.pageY);\r\n      const array: RowData<T>[] = this.dataBeforeDrag.data;\r\n      const rawData: T[] = this.rawData;\r\n      moveItemInArray(array, this.indexRowStartDrag, rowIndex);\r\n      moveItemInArray(rawData, this.indexRowStartDrag, rowIndex);\r\n      this.drop.emit({ value: array[rowIndex].data as T, order: rowIndex });\r\n      this.rawData = rawData;\r\n      this.data = new MatTableDataSource(array);\r\n      event.stopPropagation();\r\n    }\r\n  }\r\n\r\n  tableKeydown(event: KeyboardEvent): void {\r\n    if (!this.isCellSelection) {\r\n      let currentIndex: number = this.data.data.findIndex((row: RowData<T>) => row.data === this.selectedObject);\r\n      let newSelection: number = -10;\r\n      if (event.key === 'ArrowDown') {\r\n        this.scrollCount++;\r\n        this.data.data.forEach((row: RowData<T>, index: number) => {\r\n          if (newSelection === -10 && index > currentIndex && row.rowType === RowType.ROW) {\r\n            newSelection = index;\r\n          }\r\n        });\r\n      }\r\n      if (event.key === 'ArrowUp') {\r\n        this.scrollCount--;\r\n        currentIndex = this.data.data.length - currentIndex - 1;\r\n        this.data.data.reverse().forEach((row: RowData<T>, index: number) => {\r\n          if (newSelection === -10 && index > currentIndex && row.rowType === RowType.ROW) {\r\n            newSelection = index;\r\n          }\r\n        });\r\n        this.data.data.reverse();\r\n        if (newSelection !== -10) {\r\n          newSelection = this.data.data.length - newSelection - 1;\r\n        }\r\n      }\r\n      if (newSelection !== -10) {\r\n        this.selectRow(this.data.data[newSelection], true);\r\n      }\r\n      if (Math.abs(this.scrollCount) >= 2) {\r\n        this.scrollCount = 0;\r\n      } else {\r\n        event.preventDefault();\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Emite el evento cuando se da click al boton AddRow\r\n   */\r\n  onAddRow(): void {\r\n    this.addRow.emit();\r\n  }\r\n\r\n\r\n  getHeaderSubtitle(): string[] {\r\n    const x: string[] = this.columnConfig.map((column: ColumnConfig, index: number) => {\r\n      if (column.visible && column.subtitle !== undefined) {\r\n        return 'subtitle' + index;\r\n      } else {\r\n        return null;\r\n      }\r\n    }).filter((data: string) => data != null);\r\n    return x;\r\n  }\r\n\r\n  getColumnsWithTitle(): string[] {\r\n    return this.columnConfig.filter((column: ColumnConfig) =>\r\n      column.visible && column.title !== undefined\r\n    ).map((col: ColumnConfig) => col.name);\r\n  }\r\n\r\n  dragger(event: MouseEvent): boolean {\r\n    if (this.isDragged && this.indexRowStartDrag >= 0) {\r\n      const rowIndex: number = this.getRowIndex(event.pageY);\r\n      if (rowIndex !== this.lastIndexRowDrag) {\r\n        this.lastIndexRowDrag = rowIndex;\r\n        // This can have a memory problem with big data\r\n        const array: RowData<T>[] = [...this.dataBeforeDrag.data];\r\n        moveItemInArray(array, this.indexRowStartDrag, rowIndex);\r\n        this.data = new MatTableDataSource(array);\r\n      }\r\n      event.preventDefault();\r\n      return true;\r\n    }\r\n  }\r\n\r\n  startDrag(event: MouseEvent): void {\r\n    this.indexRowStartDrag = this.getRowIndex(event.pageY);\r\n    this.lastIndexRowDrag = this.indexRowStartDrag;\r\n    this.dataBeforeDrag = this.data;\r\n  }\r\n\r\n  private getRowIndex(pageY: number): number {\r\n    let offsetTop: number = 0;\r\n    let container: HTMLElement = this.containerTable.nativeElement;\r\n    while ((container !== null) && (offsetTop === 0)) {\r\n      offsetTop = container.offsetTop;\r\n      container = container.parentElement;\r\n    }\r\n    let rowIndex: number = -1;\r\n    const rows: HTMLCollection = this.matTableElement.nativeElement.children[1].children;\r\n    for (let i: number = 0; i < rows.length; i++) {\r\n      const row: HTMLElement = (rows[i] as HTMLElement);\r\n      if (pageY - offsetTop > row.offsetTop - this.containerTable.nativeElement.scrollTop) {\r\n        rowIndex = i;\r\n      }\r\n    }\r\n    if (rowIndex < 0) { rowIndex = 0; }\r\n    return rowIndex;\r\n  }\r\n\r\n  get columnType(): typeof ColumnType {\r\n    return ColumnType;\r\n  }\r\n\r\n}\r\n","import {Component, OnInit, Input, Output, EventEmitter, ViewChild} from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\n\r\nimport * as moment_ from 'moment';\r\nconst moment: typeof moment_ = moment_;\r\n\r\nimport { MatDatepickerInputEvent, MatDatepicker } from '@angular/material';\r\nimport { filter, tap } from 'rxjs/operators';\r\n\r\nexport enum TypeCalendarEnum {\r\n  NORMAL = 'norma',\r\n  MONTH_YEAR = 'mounth-year',\r\n  STRICT = 'strict'\r\n}\r\n\r\n\r\n@Component({\r\n  selector: 'hel-date-helisa',\r\n  templateUrl: './date-helisa.component.html',\r\n  styleUrls: ['./date-helisa.component.css'],\r\n})\r\nexport class DateHelisaComponent implements OnInit {\r\n\r\n  @ViewChild('picker') datePickerShow: MatDatepicker<Date>;\r\n  @Input() floatLabel: 'never' | 'always' | 'auto' = 'never';\r\n  @Input() dateFormControl: FormControl = new FormControl('');\r\n  private date: Date = new Date();\r\n\r\n  /**\r\n   * Formato de fecha.\r\n   * Los formatos validos son aquellos que maneja la libreria momentjs y este: 'DD [de] MMMM [de] YYYY'\r\n   * https://momentjs.com/docs/#/parsing/string-format/\r\n   */\r\n  @Input() dateFormat: string = 'DD/MM/YYYY';\r\n  @Input() locale: string = 'es';\r\n  @Input() errorMessage: string = 'La fecha no concuerda con el formato ';\r\n  @Input() placeholder: string = this.dateFormat;\r\n  @Input() showDatePicker: boolean = false;\r\n  @Output() change: EventEmitter<Date> = new EventEmitter<Date>();\r\n  isClosed: boolean = false;\r\n  // tslint:disable-next-line:no-any\r\n  timeout: any;\r\n  isDisabled: boolean = false;\r\n  /**\r\n   * Si este valor es diferente a TypeCalendarEnum.NORMAL no\r\n   * serÃ¡ tomado en cuenta\r\n   */\r\n  @Input() typeCalendar: TypeCalendarEnum = TypeCalendarEnum.NORMAL;\r\n\r\n  dateToVisualize: FormControl;\r\n\r\n  /**\r\n   * Para evitar nuevos eventos miestras se realiza el parseo\r\n   */\r\n  private isFromInputEvent: boolean = false;\r\n\r\n  /**\r\n   * Verificar si el formato es valido\r\n   */\r\n  invalidFormat: boolean = false;\r\n  private inputFormReal: FormControl = new FormControl('');\r\n\r\n  constructor() { }\r\n\r\n  /*\r\n  * TypeCalendarEnum.MONTH_YEAR = 'MM/YYYY'\r\n  * TypeCalendarEnum.STRICT = 'DD [de] MMMM [de] YYYY'\r\n  * */\r\n  ngOnInit(): void {\r\n    moment.locale(this.locale);\r\n    this.dateToVisualize = new FormControl('', this.dateFormControl.validator);\r\n    this.formHandler();\r\n    this.inputFormReal = this.dateFormControl;\r\n    this.inputFormReal.registerOnDisabledChange((isDisabled: boolean) => {\r\n      if (isDisabled) {\r\n        this.isDisabled = true;\r\n        this.dateToVisualize.disable();\r\n      } else {\r\n        this.isDisabled = false;\r\n        this.dateToVisualize.enable();\r\n      }\r\n    });\r\n\r\n    /**\r\n     * establecer valor por defecto de la fecha\r\n     */\r\n    if (this.dateFormControl.value !== '' && this.dateFormControl.value !== null) {\r\n      const incomingDate: string = moment(this.dateFormControl.value, this.dateFormat).format(this.dateFormat);\r\n      if (incomingDate !== 'Invalid date') {\r\n        this.dateToVisualize.setValue(incomingDate);\r\n        this.dateFormControl.setValue(this.dateFormControl.value);\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  get typeCalendarEnum(): typeof TypeCalendarEnum {\r\n    return TypeCalendarEnum;\r\n  }\r\n\r\n  openDatePicker(): void {\r\n    if (this.showDatePicker && !this.isClosed) {\r\n      this.isClosed = true;\r\n      this.timeout = setTimeout(() => {\r\n        this.datePickerShow.open();\r\n      }, 2000);\r\n    }\r\n  }\r\n\r\n  onKey(event: KeyboardEvent): void {\r\n    if (event.key === ' ' && this.showDatePicker) {\r\n      this.onBlur();\r\n      this.isClosed = true;\r\n      this.datePickerShow.open();\r\n    }\r\n  }\r\n\r\n  onBlur(): void {\r\n    clearTimeout(this.timeout);\r\n    this.isClosed = false;\r\n  }\r\n\r\n  /**\r\n   * Determina como se debe inicializar la visualizacion del calendar\r\n   */\r\n  getStartView(): string {\r\n    // multi-year\r\n    if (this.typeCalendar === this.typeCalendarEnum.MONTH_YEAR) {\r\n      return 'multi-year';\r\n    } else if (this.typeCalendar === this.typeCalendarEnum.STRICT) {\r\n      return 'month';\r\n    } else {\r\n      return 'month';\r\n    }\r\n  }\r\n\r\n  private formHandler(): void {\r\n    if (this.typeCalendar === this.typeCalendarEnum.STRICT) {\r\n      this.dateToVisualize.valueChanges.subscribe((date: string) => {\r\n          this.invalidFormat = false;\r\n          const isValid: boolean = moment(date, this.dateFormat, true).isValid();\r\n          const result: string = moment(date, this.dateFormat).format(this.dateFormat);\r\n          if (!!result && (result === 'Invalid date' || !isValid)) {\r\n            this.invalidFormat = true;\r\n            return;\r\n          }\r\n          if (!!result) {\r\n            if (!this.isFromInputEvent) {\r\n              this.isFromInputEvent = true;\r\n              this.dateToVisualize.setValue(moment(result, this.dateFormat).format(this.dateFormat));\r\n              this.dateFormControl.setValue(moment(result, this.dateFormat).toDate());\r\n              this.isFromInputEvent = false;\r\n            } else {\r\n              setTimeout(() => {\r\n                this.isFromInputEvent = false;\r\n              }, 1500);\r\n            }\r\n\r\n          }\r\n        });\r\n    } else {\r\n      this.dateToVisualize.valueChanges\r\n        .pipe(\r\n          tap((date: string) => {\r\n            if (date.length > this.dateFormat.length) {\r\n              this.invalidFormat = true;\r\n            } else {\r\n              this.invalidFormat = false;\r\n            }\r\n          }),\r\n          filter((date: string) => date.length === this.dateFormat.length)\r\n        )\r\n        .subscribe((date: string) => {\r\n          this.invalidFormat = false;\r\n          const isValid: boolean = moment(date, this.dateFormat, true).isValid();\r\n          const result: string = moment(date, this.dateFormat).format('YYYY-MM-DD');\r\n\r\n          if (!!result && (result === 'Invalid date' || !isValid)) {\r\n            this.invalidFormat = true;\r\n            return;\r\n          }\r\n\r\n          if (!!result) {\r\n            if (!this.isFromInputEvent) {\r\n              this.isFromInputEvent = true;\r\n              const subString: string[] = result.split('-');\r\n\r\n              const year: number = parseFloat(subString[0]);\r\n              const month: number = parseFloat(subString[1]);\r\n              const day: number = parseFloat(subString[2]);\r\n\r\n              this.date.setFullYear(year);\r\n              this.date.setDate(day);\r\n              this.date.setMonth(month - 1); // -1 por que los meses se toman como los indices en un array\r\n\r\n              /** cuando es de tipo MOUNTH_YEAR retorna el ultimo dia del mes seleccionado */\r\n              if (this.typeCalendar === TypeCalendarEnum.MONTH_YEAR) {\r\n                this.date = moment(this.date).endOf('month').toDate();\r\n              }\r\n\r\n              this.dateToVisualize.setValue(moment(this.date, 'YYYY-MM-DD').format(this.dateFormat));\r\n              this.dateFormControl.setValue(this.date);\r\n              this.isFromInputEvent = false;\r\n            } else {\r\n              setTimeout(() => {\r\n                this.isFromInputEvent = false;\r\n              }, 1500);\r\n            }\r\n\r\n          }\r\n        });\r\n    }\r\n\r\n\r\n    this.dateFormControl.valueChanges\r\n      .subscribe((date: string) => {\r\n        const incommingDate: string = moment(date, this.dateFormat).format(this.dateFormat);\r\n        if (this.dateFormControl.value !== '' && incommingDate !== 'Invalid date') {\r\n          this.dateToVisualize.setValue(incommingDate);\r\n        }\r\n      });\r\n  }\r\n\r\n\r\n  /**\r\n   * Evento que se dispara luego seleccionar un mes\r\n   */\r\n  monthSelectedHandler(chosenMonthDate: moment_.Moment, datepicker: MatDatepicker<moment_.Moment>): void {\r\n\r\n    if (this.typeCalendar === TypeCalendarEnum.MONTH_YEAR) {\r\n      datepicker.close();\r\n      const date: Date = moment(chosenMonthDate).endOf('month').toDate();\r\n\r\n      this.dateToVisualize.setValue(moment(date, 'YYYY-MM-DD').format(this.dateFormat));\r\n      this.dateFormControl.setValue(date);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Evento desde el control touch del calendar\r\n   */\r\n  dateChange(type: string, event: MatDatepickerInputEvent<Date>): void {\r\n    this.dateToVisualize.setValue(moment(event.value, 'YYYY-MM-DD').format(this.dateFormat));\r\n    this.dateFormControl.setValue(event.value);\r\n    this.change.emit(event.value);\r\n    this.isClosed = true;\r\n  }\r\n\r\n  getErrorMessage(): string {\r\n    return this.errorMessage + this.dateFormat;\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Subject, BehaviorSubject, Subscriber, Observable } from 'rxjs';\r\nimport { Node } from './node';\r\n\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class TreeHelisaService {\r\n\r\n    // Observable string sources\r\n    private emitNodeSelected: BehaviorSubject<number | string> = new BehaviorSubject<number | string>(1);\r\n    // Observable string streams\r\n    nodeSelected: Observable<string | number> = this.emitNodeSelected.asObservable();\r\n\r\n    // Observable string sources\r\n    private emitDataSource: BehaviorSubject<Node> = new BehaviorSubject<Node>(undefined);\r\n\r\n    // Observable string streams\r\n    dataSourceObservable: Observable<Node> = this.emitDataSource.asObservable();\r\n\r\n    // Expand node observable\r\n    private emitExpandAllNodes: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(null);\r\n    nodeExpand: Observable<boolean> = this.emitExpandAllNodes.asObservable();\r\n\r\n     // Collapse node observable\r\n     private emitCollapseAllNodes: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(null);\r\n     nodeCollapse: Observable<boolean> = this.emitCollapseAllNodes.asObservable();\r\n\r\n    private emitRefreshTree: Subject<void> = new Subject<void>();\r\n    refreshTreeObservable: Observable<void> = this.emitRefreshTree.asObservable();\r\n\r\n    private emitRefreshTreeWithPagination: Subject<void> = new Subject<void>();\r\n    refreshTreeWithPaginationObservable: Observable<void> = this.emitRefreshTreeWithPagination.asObservable();\r\n\r\n    private emitExpandOneNode: Subject<Node> = new Subject<Node>();\r\n    expandOneNodeObservable: Observable<Node> = this.emitExpandOneNode.asObservable();\r\n\r\n    private emitCollapseOneNode: Subject<Node> = new Subject<Node>();\r\n    collapseOneNodeObservable: Observable<Node> = this.emitCollapseOneNode.asObservable();\r\n\r\n    // Service message commands\r\n    changeNodeSelected(idResidentialArea: number | string): void {\r\n        this.emitNodeSelected.next(idResidentialArea);\r\n    }\r\n\r\n    // Service message commands\r\n    changeDataSource(data: Node): void {\r\n        this.emitDataSource.next(data);\r\n    }\r\n\r\n    expandAllNodes(expand: boolean): void {\r\n        this.emitExpandAllNodes.next(expand);\r\n    }\r\n\r\n    collapseAllNodes(collapse: boolean): void {\r\n        this.emitCollapseAllNodes.next(collapse);\r\n    }\r\n\r\n    refreshTree(): void {\r\n        this.emitRefreshTree.next();\r\n    }\r\n\r\n\r\n    refreshTreeWithPagination(): void {\r\n        this.emitRefreshTreeWithPagination.next();\r\n    }\r\n\r\n\r\n    expandOneNode(node: Node): void {\r\n    this.emitExpandOneNode.next(node);\r\n    }\r\n\r\n\r\n    collapseOneNode(node: Node): void {\r\n        this.emitCollapseOneNode.next(node);\r\n    }\r\n\r\n    constructor() {\r\n\r\n    }\r\n\r\n}\r\n","export class TreeHelisaConnect<T> {\r\n    page: number;\r\n    isLastPage: boolean;\r\n    isUsed: boolean;\r\n\r\n    constructor() {\r\n      this.page = 0;\r\n      this.isLastPage = false;\r\n      this.isUsed = false;\r\n    }\r\n\r\n    nextPage(): number {\r\n      return this.page = this.page + 1;\r\n    }\r\n  }\r\n","import { Component, OnInit, Input, Output, EventEmitter, ViewChild, AfterViewInit, ElementRef, HostListener } from '@angular/core';\r\nimport { NestedTreeControl, TreeControl } from '@angular/cdk/tree';\r\nimport { MatTreeNestedDataSource, MatTree, MatOptionSelectionChange } from '@angular/material';\r\nimport { Node } from './node';\r\nimport { TreeHelisaService } from './tree-helisa.service';\r\nimport { Router } from '@angular/router';\r\nimport * as _ from 'lodash';\r\nimport { TreeHelisaConnect } from './tree-helisa-connect';\r\nimport { FormControl } from '@angular/forms';\r\nimport { Observable } from 'rxjs';\r\n\r\nexport interface RequestTreeHelisa {\r\n  page: number;\r\n}\r\n\r\n@Component({\r\n  selector: 'hel-tree',\r\n  templateUrl: './tree-helisa.component.html',\r\n  styleUrls: ['./tree-helisa.component.sass']\r\n  // host: { '(document:keyup)': 'onKeyDown($event)' }\r\n})\r\nexport class TreeHelisaComponent implements OnInit, AfterViewInit {\r\n  isDisabled: boolean;\r\n  selectedNode: number | string | null;\r\n  //#endregion ====== Variables ========\r\n\r\n  constructor(private treeHelisaService: TreeHelisaService, private router: Router, private elementRef: ElementRef) {\r\n    // cargar datos pasados por el @Input\r\n    if (!!this.data) {\r\n      const data: Node = this.data;\r\n      this.data = null;\r\n      this.receivePage(data.children);\r\n    } else {\r\n      this.dataSource.data = [];\r\n      this.treeControl.dataNodes = [];\r\n    }\r\n  }\r\n\r\n  //#region  ====== Variables =============\r\n  private treeHelisaConnect: TreeHelisaConnect<Node>;\r\n  formEdit: FormControl;\r\n  @ViewChild('tree') tree: MatTree<{}>;\r\n  private selectedOptions: Map<\r\n    string | number,\r\n    {\r\n      formControl: FormControl;\r\n      editMode: boolean;\r\n    }\r\n  > = new Map<\r\n    string | number,\r\n    {\r\n      formControl: FormControl;\r\n      editMode: boolean;\r\n    }\r\n  >();\r\n  /**\r\n   * Datos del Arbol\r\n   */\r\n  @Input() data: Node;\r\n\r\n  /**\r\n   * Retorna el id del nodo removido\r\n   */\r\n  @Output() removed: EventEmitter<string | number> = new EventEmitter<number | string>();\r\n\r\n  /**\r\n   * Retorna un nodo editado\r\n   */\r\n  @Output() edited: EventEmitter<Node> = new EventEmitter<Node>();\r\n\r\n  /**\r\n   * Retorna un nodo sin id del nodo , pero si con el parent\r\n   * para conocer a cual fue aÃ±adido\r\n   */\r\n  @Output() added: EventEmitter<Node> = new EventEmitter<Node>();\r\n  @Output() collapseParent: EventEmitter<boolean> = new EventEmitter<boolean>();\r\n  @Output() rangeScrolled: EventEmitter<RequestTreeHelisa> = new EventEmitter<RequestTreeHelisa>();\r\n  @Output() nodeSelected: EventEmitter<number | string> = new EventEmitter<number | string>();\r\n  @Output() dobleClick: EventEmitter<number | string> = new EventEmitter<number | string>();\r\n  @Output() keypressDelete: EventEmitter<number | string | null> = new EventEmitter<number | string | null>();\r\n  @Output() keypressInsert: EventEmitter<number | string | null> = new EventEmitter<number | string | null>();\r\n  @Output() checkedOptionNode: EventEmitter<number | string | null> = new EventEmitter<number | string | null>();\r\n  @Output() uncheckedOptionNode: EventEmitter<number | string | null> = new EventEmitter<number | string | null>();\r\n  @Output() clickAddNode: EventEmitter<Node> = new EventEmitter<Node>();\r\n  @Output() clickEditNode: EventEmitter<Node> = new EventEmitter<Node>();\r\n  @Output() clickDeleteNode: EventEmitter<Node> = new EventEmitter<Node>();\r\n\r\n  treeControl: NestedTreeControl<Node> = new NestedTreeControl<Node>((node: Node): Node[] | Observable<Node[]> => node.children);\r\n  dataSource: MatTreeNestedDataSource<Node> = new MatTreeNestedDataSource<Node>();\r\n\r\n  isSingleClick: boolean = true;\r\n  currentNode: Node = null;\r\n\r\n  /**\r\n   * Obtiene la descripcion completa del nodo\r\n   * @example Nodo padre,nodo hijo,nodo nieto\r\n   * @param node Debe tener todos los parent llenos hacia arriba\r\n   */\r\n  public static getDescription(node: Node): string {\r\n    let result: string[] = [node.name];\r\n    let concat: string = '';\r\n\r\n    if (node.parent) {\r\n      result.push(this.getDescription(node.parent));\r\n    }\r\n\r\n    if (result.length === 1) {\r\n      return node.name;\r\n    }\r\n\r\n    result = result.reverse();\r\n\r\n    for (let i: number = 0; i < result.length; i++) {\r\n      const element: string = result[i];\r\n      concat = concat + element + (i === result.length - 1 ? '' : ',');\r\n    }\r\n\r\n    return concat;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    // si se cargan datos por medio del servicio\r\n    this.treeHelisaService.dataSourceObservable.subscribe((res: Node) => {\r\n      if (!!res && !!res.children) {\r\n        this.selectedNode = res.id;\r\n        this.receivePage(res.children);\r\n      } else {\r\n        this.dataSource.data = [];\r\n        this.treeControl.dataNodes = [];\r\n      }\r\n    });\r\n\r\n    // Observable, si cambia el nodo seleccionado por medio del servicio\r\n    this.treeHelisaService.nodeSelected.subscribe((res: string | number) => {\r\n      if (!!this.data && !!this.data.children) {\r\n        this.selectNode(this.data, res);\r\n      }\r\n    });\r\n\r\n    this.treeHelisaService.refreshTreeObservable.subscribe((res: void) => {\r\n      this.refreshTree();\r\n    });\r\n\r\n    this.treeHelisaService.refreshTreeWithPaginationObservable.subscribe((res: void) => {\r\n      this.refreshTreeWithPagination();\r\n    });\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.treeHelisaService.nodeExpand.subscribe((res: boolean) => {\r\n      if (res != null) {\r\n        if (res) {\r\n          this.tree.treeControl.expandAll();\r\n        }\r\n      }\r\n    });\r\n\r\n    this.treeHelisaService.nodeCollapse.subscribe((res: boolean) => {\r\n      if (res !== null) {\r\n        if (res) {\r\n          this.tree.treeControl.collapseAll();\r\n        }\r\n      }\r\n    });\r\n\r\n    this.treeHelisaService.expandOneNodeObservable.subscribe((res: Node) => {\r\n      if (res !== undefined) {\r\n        this.treeControl.expand(res);\r\n      }\r\n    });\r\n\r\n    this.treeHelisaService.collapseOneNodeObservable.subscribe((res: Node) => {\r\n      if (res !== undefined) {\r\n        this.treeControl.collapse(res);\r\n      }\r\n    });\r\n  }\r\n\r\n  //#region  ====== Events ===========\r\n  onRedirect(node: Node): void {\r\n    this.isSingleClick = true;\r\n    setTimeout(() => {\r\n      if (this.isSingleClick) {\r\n        this.selectNode(node, node.id);\r\n\r\n        // if(!!node && !node.children){\r\n        if (!!node) {\r\n          this.nodeSelected.emit(node.id);\r\n          this.currentNode = node;\r\n        }\r\n      }\r\n    }, 350);\r\n  }\r\n\r\n  onScroll(event: Event): void {\r\n    const element: HTMLDivElement = event.target as HTMLDivElement;\r\n\r\n    if (element.offsetHeight + element.scrollTop >= element.scrollHeight) {\r\n      this.goNextPage();\r\n    }\r\n  }\r\n\r\n  onEdit(node: Node): void {\r\n    this.clickEditNode.emit(node);\r\n    /** @Deprecated\r\n     *  Ya no se edita el nodo ahora solo se emite el evento 'clickEditNode'\r\n     * retornando el nodo al cual le hicieron click en la opciÃ³n delete\r\n     */\r\n    // node.isEditable = true;\r\n    // this.isDisabled = true;\r\n  }\r\n\r\n  onAdd(node: Node): void {\r\n    this.clickAddNode.emit(node);\r\n    /** @Deprecated\r\n     *  Ya no se crea y se agrega el nodo ahora solo se emite el evento 'clickAddNode'\r\n     * retornando el nodo al cual le hicieron click en la opciÃ³n add\r\n     */\r\n    //   // si no tiene hijos instanciar el array\r\n    //   if (!node.children) {\r\n    //     node.children = [];\r\n    //   }\r\n    //   node.children.push({\r\n    //     id: Math.random(),\r\n    //     name: '',\r\n    //     isSelected: false,\r\n    //     parent: node,\r\n    //     isEditable: true\r\n    //   });\r\n    //   if (node.children) {\r\n    //     this.isDisabled = true;\r\n    //     this.treeHelisaService.expandOneNode(node);\r\n    //   }\r\n    //   this.refreshTree();\r\n  }\r\n\r\n  onDelete(node: Node): void {\r\n    this.clickDeleteNode.emit(node);\r\n    /** @Deprecated\r\n     *  Ya no se elimina el nodo ahora solo se emite el evento 'clickDeleteNode'\r\n     * retornando el nodo al cual le hicieron click en la opciÃ³n delete\r\n     */\r\n    // // Remueve el nodo utilizando la libreria de lodash\r\n    // _.remove(node.parent.children, node);\r\n\r\n    // this.refreshTree();\r\n    // this.removed.emit(node.id);\r\n  }\r\n\r\n  onEdited(node: Node, value: string): void {\r\n    node.name = value;\r\n    if (node.id == null && node.name === '') {\r\n      _.remove(node.parent.children, node);\r\n      this.refreshTree();\r\n    } else if (node.id && node.id != null && node.name.trim() !== '') {\r\n      this.edited.emit(node);\r\n      node.isEditable = false;\r\n      this.selectNode(node, node.id);\r\n    } else if (node.id == null && node.name.trim() !== '') {\r\n      this.added.emit(node);\r\n      node.isEditable = false;\r\n    }\r\n    this.isDisabled = false;\r\n    this.refreshTree();\r\n  }\r\n\r\n  onCancel(node: Node, value: string): void {\r\n    this.isDisabled = false;\r\n    // Si no tiene id por ser un nuevo item, lo elimina\r\n    if (node.id == null) {\r\n      _.remove(node.parent.children, node);\r\n      this.refreshTree();\r\n    }\r\n\r\n    node.isEditable = false;\r\n  }\r\n\r\n  onDblClick(node: Node): void {\r\n    this.isSingleClick = false;\r\n    this.dobleClick.emit(node.id);\r\n  }\r\n\r\n  @HostListener('document:keyup', ['$event'])\r\n  onKeyDown(event: KeyboardEvent): void {\r\n    switch (event.key) {\r\n      case 'Delete':\r\n        this.keypressDelete.emit(!!this.currentNode && this.currentNode.id ? this.currentNode.id : null);\r\n        break;\r\n      case 'Insert':\r\n        this.keypressInsert.emit(!!this.currentNode && this.currentNode.id ? this.currentNode.id : null);\r\n        break;\r\n      case 'ArrowDown':\r\n        this.moveDownIntoTree();\r\n        break;\r\n      case 'ArrowUp':\r\n        this.moveUpIntoTree();\r\n        break;\r\n    }\r\n  }\r\n\r\n  //#endregion ======= Events ========\r\n\r\n  //#region  ======== Metodos =============\r\n\r\n  private moveUpIntoTree(): number {\r\n    if (!!this.data) {\r\n      // si aun no hay ningun node seleccionado selecciona el primero\r\n      if (this.currentNode == null) {\r\n        this.selectNode(this.data, this.data.children[0].id);\r\n        this.currentNode = this.data.children[0];\r\n        if (!!this.currentNode.children && this.currentNode.children.length > 0) {\r\n          this.treeHelisaService.expandOneNode(this.currentNode);\r\n        }\r\n      } else {\r\n        if (!!this.currentNode.parent && this.currentNode.id != null) {\r\n          // obtiene el indice del nodo seleccionado actualmente\r\n          const index: number = this.currentNode.parent.children.indexOf(this.currentNode);\r\n\r\n          if (this.currentNode.parent.id == null && index === 0) {\r\n            return 0;\r\n          } else {\r\n            // si tiene nodos al mismo nivel salta al nodo anterior\r\n            if (index !== undefined && index === 0) {\r\n              this.currentNode = this.currentNode.parent;\r\n              this.selectNode(this.data, this.currentNode.id);\r\n              if (!!this.currentNode.children && this.currentNode.children.length > 0) {\r\n                this.treeHelisaService.expandOneNode(this.currentNode);\r\n              }\r\n            } else {\r\n              // si no tiene nodos al mismo nivel salta al nodo padre\r\n              this.currentNode = this.currentNode.parent.children[index - 1];\r\n              this.selectNode(this.data, this.currentNode.id);\r\n              if (!!this.currentNode.children && this.currentNode.children.length > 0) {\r\n                this.treeHelisaService.expandOneNode(this.currentNode);\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  private moveDownIntoTree(): void {\r\n    if (!!this.data) {\r\n      if (this.currentNode == null) {\r\n        this.selectNode(this.data, this.data.children[0].id);\r\n        this.currentNode = this.data.children[0];\r\n        if (!!this.currentNode.children && this.currentNode.children.length > 0) {\r\n          this.treeHelisaService.expandOneNode(this.currentNode);\r\n        }\r\n      } else {\r\n        if (!!this.currentNode) {\r\n          // obtiene el indice del nodo seleccionado actualmente\r\n          const index: number =\r\n            !!this.currentNode && !!this.currentNode.parent ? this.currentNode.parent.children.indexOf(this.currentNode) : null;\r\n\r\n          // si tiene childrens pasa al primer children\r\n          if (!!this.currentNode.children && this.currentNode.children.length > 0) {\r\n            this.currentNode = this.currentNode.children[0];\r\n            this.selectNode(this.data, this.currentNode.id);\r\n            if (!!this.currentNode.children && this.currentNode.children.length > 0) {\r\n              this.treeHelisaService.expandOneNode(this.currentNode);\r\n            }\r\n          } else if (\r\n            index !== undefined &&\r\n            index === this.currentNode.parent.children.length - 1 &&\r\n            this.currentNode.parent.parent != null &&\r\n            this.currentNode.parent.parent.children != null &&\r\n            this.currentNode.parent.parent.children.length > 0\r\n          ) {\r\n            const indexOfParent: number = this.currentNode.parent.parent.children.indexOf(this.currentNode.parent);\r\n            this.currentNode =\r\n              this.currentNode.parent.parent.children[indexOfParent + 1] === undefined\r\n                ? this.currentNode\r\n                : this.currentNode.parent.parent.children[indexOfParent + 1];\r\n\r\n            this.selectNode(this.data, this.currentNode.id);\r\n            if (!!this.currentNode.children && this.currentNode.children.length > 0) {\r\n              this.treeHelisaService.expandOneNode(this.currentNode);\r\n            }\r\n          } else {\r\n            // si no tiene nodos al mismo nivel salta al siguiente hacia abajo\r\n            this.currentNode = this.currentNode.parent.children[index + 1];\r\n            this.selectNode(this.data, this.currentNode.id);\r\n            if (!!this.currentNode.children && this.currentNode.children.length > 0) {\r\n              this.treeHelisaService.expandOneNode(this.currentNode);\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Verifica si el nodo tiene hijos\r\n   */\r\n  hasChild(t: number, node: Node): boolean {\r\n    return !!node.children && node.children.length > 0;\r\n  }\r\n\r\n  /**\r\n   * Actualiza el arbol borrando toda la data , solo cuando no se utiliza paginacion\r\n   */\r\n  private refreshTree(): void {\r\n    this.data = null;\r\n    const datasourceData: Node[] = this.dataSource.data;\r\n    this.dataSource.data = null;\r\n    this.dataSource.data = datasourceData;\r\n    this.treeControl.dataNodes = datasourceData;\r\n  }\r\n\r\n  /**\r\n   * Actualiza el arbol cuando se utiliza la paginacion (Cuando no , utilice el metodo refreshTree())\r\n   */\r\n  private refreshTreeWithPagination(): void {\r\n    const datasourceData: Node[] = this.dataSource.data;\r\n    this.dataSource.data = null;\r\n    this.dataSource.data = datasourceData;\r\n    this.treeControl.dataNodes = datasourceData;\r\n  }\r\n\r\n  private goNextPage(): void {\r\n    if (!this.treeHelisaConnect.isLastPage && !this.treeHelisaConnect.isUsed) {\r\n      this.treeHelisaConnect.isUsed = true;\r\n      this.rangeScrolled.emit({\r\n        page: this.treeHelisaConnect.nextPage()\r\n      });\r\n    }\r\n  }\r\n\r\n  private receivePage(data: Node[]): void {\r\n    if (!this.data) {\r\n      this.data = { id: null, name: 'root', isSelected: false };\r\n    }\r\n    if (!this.data.children) {\r\n      this.data.children = new Array<Node>();\r\n      this.treeHelisaConnect = new TreeHelisaConnect<Node>();\r\n    }\r\n    this.data.children = this.data.children.concat(data);\r\n    this.data.children.forEach((node: Node) => {\r\n      this.fillParent(node, this.data);\r\n    });\r\n\r\n    this.data.children = this.reorderByOrderIndex(this.data.children);\r\n\r\n    this.dataSource.data = this.data.children;\r\n    this.treeControl.dataNodes = this.data.children;\r\n    this.treeHelisaConnect.isLastPage = data.length === 0;\r\n    this.treeHelisaConnect.isUsed = false;\r\n  }\r\n\r\n  /**\r\n   * Llenan el campo parent de todos los nodos hijos\r\n   */\r\n  private fillParent(node: Node, parent: Node): void {\r\n    node.parent = parent;\r\n    if (node.children && node.children.length > 0) {\r\n      node.children.forEach((item: Node) => {\r\n        this.fillParent(item, node);\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * coloca como true del isSelected del nodo que concuerde con el id\r\n   */\r\n  private selectNode(node: Node, id: number | string): Node {\r\n    if (node == null) {\r\n      return null;\r\n    }\r\n    this.upSelectNode(node);\r\n    if (!!this.selectedNode) {\r\n      const nodeSelected: Node = this.getNodeById(this.selectedNode);\r\n      if (nodeSelected != null) {\r\n        nodeSelected.isSelected = false;\r\n        this.selectedNode = null;\r\n      }\r\n    }\r\n    if (node.id !== undefined && node.id === id) {\r\n      node.isSelected = true;\r\n      this.expandAllParents(node);\r\n      this.selectedNode = node.id;\r\n      return node;\r\n    } else if (node.children != null) {\r\n      let i: number;\r\n      let result: Node = null;\r\n      for (i = 0; result == null && i < node.children.length; i++) {\r\n        result = this.selectNode(node.children[i], id);\r\n      }\r\n      return result;\r\n    }\r\n    return null;\r\n  }\r\n\r\n  private expandAllParents(node: Node): void {\r\n    if (!!node && !!node.parent) {\r\n      this.treeHelisaService.expandOneNode(node.parent);\r\n      this.expandAllParents(node.parent);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Elimina el isSelected de todos los nodos\r\n   */\r\n  private upSelectNode(node: Node): void {\r\n    if (!!node && node.isSelected !== undefined) {\r\n      node.isSelected = false;\r\n      if (!!node.children) {\r\n        for (const childrenNode of node.children) {\r\n          this.upSelectNode(childrenNode);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  getClassNode(node: Node): string[] {\r\n    const classNode: string[] = [];\r\n    if (node.isSelected) {\r\n      classNode.push('isSelected');\r\n    }\r\n    if (node.classNode) {\r\n      classNode.push(node.classNode);\r\n    }\r\n    return classNode;\r\n  }\r\n\r\n  onEditMode(node: Node, editMode: boolean): void {\r\n    this.getSelectedOptions(node).editMode = editMode;\r\n  }\r\n\r\n  onSelectOption(event: MatOptionSelectionChange, node: Node): void {\r\n    node.isCheckedOption = event.source.selected;\r\n    if (node.isCheckedOption) {\r\n      this.checkedOptionNode.emit(node.id);\r\n    } else {\r\n      this.uncheckedOptionNode.emit(node.id);\r\n    }\r\n  }\r\n\r\n  getSelectedOptions(\r\n    node: Node\r\n  ): {\r\n    formControl: FormControl;\r\n    editMode: boolean;\r\n  } {\r\n    if (this.selectedOptions.has(node.id)) {\r\n      this.reloadSelectedOptions(node, this.selectedOptions.get(node.id).editMode);\r\n    } else {\r\n      this.reloadSelectedOptions(node, false);\r\n    }\r\n    return this.selectedOptions.get(node.id);\r\n  }\r\n\r\n  private reloadSelectedOptions(node: Node, editMode: boolean): void {\r\n    const array: Array<string | number | null> = new Array<string | number | null>();\r\n    node.options.forEach((option: Node) => {\r\n      if (option.isCheckedOption) {\r\n        array.push(option.id);\r\n      }\r\n    });\r\n    const obj: {\r\n      formControl: FormControl;\r\n      editMode: boolean;\r\n    } = { formControl: new FormControl(array), editMode };\r\n    this.selectedOptions.set(node.id, obj);\r\n  }\r\n\r\n  /**\r\n   * Retorna el primer Node que encuentre segun el id enviado o null si no hay ninguno\r\n   * @param id  number | string\r\n   * @returns Node o null si no hay un nodo con ese id\r\n   */\r\n  getNodeById(id: number | string): Node {\r\n    const queue: Node[] = [...this.dataSource.data];\r\n    while (queue.length > 0) {\r\n      const curr: Node = queue.shift();\r\n      if (curr.id === id) {\r\n        return curr;\r\n      } else {\r\n        if (!!curr.children) {\r\n          queue.push(...curr.children);\r\n        }\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  reorderByOrderIndex(node: Node[]): Node[] {\r\n    if (!!node && node.length > 0) {\r\n      try {\r\n        node = _.orderBy(node, (x: Node) => x.orderIndex, ['asc']);\r\n        node.forEach((element: Node) => {\r\n          if (!!element.children && element != null) {\r\n            element.children = this.reorderByOrderIndex(element.children);\r\n          }\r\n        });\r\n        return node;\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n  }\r\n\r\n  //#endregion ====== Metodos ============\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { OptionAutocompleteHelisa } from './autocomplete-helisa.component';\r\n\r\n@Injectable()\r\nexport class AutocompleteHelisaService<T> {\r\n\r\n  private emitChangeSource: BehaviorSubject<Array<OptionAutocompleteHelisa<T>>> =\r\n  new BehaviorSubject<Array<OptionAutocompleteHelisa<T>>>([]);\r\n\r\n  public dataSource$: Observable<Array<OptionAutocompleteHelisa<T>>> = this.emitChangeSource.asObservable();\r\n\r\n  constructor() { }\r\n\r\n  setDataSource(options: Array<OptionAutocompleteHelisa<T>>): void {\r\n    this.emitChangeSource.next(options);\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { Observable, of, Subject } from 'rxjs';\r\nimport { map, startWith, throttleTime, debounceTime } from 'rxjs/operators';\r\nimport { AutocompleteHelisaService } from './autocomplete-helisa.component.service';\r\n\r\nexport interface OptionAutocompleteHelisa<T> {\r\n  value: T;\r\n  displayText: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'hel-autocomplete',\r\n  templateUrl: './autocomplete-helisa.component.html',\r\n  styleUrls: ['./autocomplete-helisa.component.css'],\r\n  providers: [AutocompleteHelisaService]\r\n})\r\nexport class AutocompleteHelisaComponent<T> implements OnInit {\r\n\r\n  @Input() myControl: FormControl = new FormControl();\r\n  @Input() options: Array<OptionAutocompleteHelisa<T>> = new Array<OptionAutocompleteHelisa<T>>();\r\n  filteredOptions: Observable<OptionAutocompleteHelisa<T>[]>;\r\n  selectedValue: OptionAutocompleteHelisa<T>;\r\n  @Output() selectedValueEmmiter: EventEmitter<T> = new EventEmitter<T>();\r\n  @Output() nextPage: EventEmitter<void> = new EventEmitter<void>();\r\n  @Input() isRemote: boolean = false;\r\n  isLoading: boolean = false;\r\n\r\n\r\n  onScrollObservable: Subject<void> = new Subject<void>();\r\n\r\n  constructor(private autocompleteHelisaService: AutocompleteHelisaService<T>) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.onScrollObservable.asObservable()\r\n    .pipe(\r\n      debounceTime(500),\r\n      throttleTime(500)\r\n    )\r\n    .subscribe(() => {\r\n      this.nextPage.emit();\r\n    });\r\n\r\n    if (this.isRemote) {\r\n      this.autocompleteHelisaService.dataSource$.subscribe((data: OptionAutocompleteHelisa<T>[]) => {\r\n        setTimeout(() => {\r\n          this.options = data;\r\n          this.filteredOptions = of<OptionAutocompleteHelisa<T>[]>(this.options);\r\n        });\r\n      });\r\n    }\r\n\r\n    this.filteredOptions = this.myControl.valueChanges.pipe(\r\n      startWith(''),\r\n      map((x: string) => this._checkRegex(x)),\r\n      map((value: string) => this._filter(value))\r\n    );\r\n\r\n  }\r\n\r\n  displayFn(option?: OptionAutocompleteHelisa<T>): string | undefined {\r\n    return option ? option.displayText : undefined;\r\n  }\r\n\r\n  getService(): AutocompleteHelisaService<T> {\r\n    return this.autocompleteHelisaService;\r\n  }\r\n\r\n\r\n  /** Elimina caracteres extraÃ±os */\r\n  private _checkRegex(value: string): string {\r\n    value = value.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '');\r\n    return value;\r\n  }\r\n\r\n  private _filter(value: string): OptionAutocompleteHelisa<T>[] {\r\n    if (!(value)) {\r\n      if (!this.isRemote) {\r\n        const filterValue: string[] = value.toLowerCase().split(' ');\r\n        return this.options.filter((option: OptionAutocompleteHelisa<T>) => {\r\n          let ws: boolean = true;\r\n          filterValue.forEach((text: string) => ws = ws && option.displayText.toLowerCase().indexOf(text) >= 0);\r\n          return ws;\r\n        }).splice(0, 5);\r\n      } else {\r\n        return this.options;\r\n      }\r\n    }\r\n  }\r\n\r\n  public onSelected(event: {option: {value: OptionAutocompleteHelisa<T>}}): void {\r\n    this.selectedValue = event.option.value;\r\n    this.selectedValueEmmiter.emit(this.selectedValue.value);\r\n  }\r\n\r\n  getNextPage(): void {\r\n    this.onScrollObservable.next();\r\n  }\r\n}\r\n","import { Directive, EventEmitter, Input, Output, OnDestroy} from '@angular/core';\r\nimport { MatAutocomplete} from '@angular/material';\r\nimport { takeUntil, tap} from 'rxjs/operators';\r\nimport { Subject } from 'rxjs';\r\n\r\n\r\nexport interface IAutoCompleteScrollEvent {\r\n  autoComplete: MatAutocomplete;\r\n  scrollEvent: Event;\r\n}\r\n\r\n\r\n@Directive({\r\n  selector: 'mat-autocomplete[optionsScroll]'\r\n})\r\nexport class OptionsScrollDirective implements OnDestroy  {\r\n\r\n  /**\r\n   * This value would different depends of styles\r\n   */\r\n  @Input() thresholdPercent: number = .9;\r\n  @Output() optionsScroll: EventEmitter<IAutoCompleteScrollEvent> = new EventEmitter<IAutoCompleteScrollEvent>();\r\n  destroy: Subject<void> = new Subject<void>();\r\n  lastScrollTop: number  = 0;\r\n\r\n  constructor(public autoComplete: MatAutocomplete) {\r\n    this.autoComplete.opened.pipe(\r\n      tap(() => {\r\n        // Note: When autocomplete raises opened, panel is not yet created (by Overlay)\r\n        // Note: The panel will be available on next tick\r\n        // Note: The panel wil NOT open if there are no options to display\r\n        setTimeout(() => {\r\n          // Note: remove listner just for safety, in case the close event is skipped.\r\n          this.removeScrollEventListener();\r\n          if (!!this.autoComplete &&\r\n            !!this.autoComplete.panel &&\r\n            !!this.autoComplete.panel.nativeElement) {\r\n              this.autoComplete.panel.nativeElement\r\n                .addEventListener('scroll', this.onScroll.bind(this), false);\r\n            }\r\n        });\r\n      }),\r\n      takeUntil(this.destroy)).subscribe();\r\n\r\n    this.autoComplete.closed.pipe(\r\n      tap(() => this.removeScrollEventListener()),\r\n      takeUntil(this.destroy)).subscribe();\r\n  }\r\n\r\n  private removeScrollEventListener(): void {\r\n    if (!!this.autoComplete &&\r\n      !!this.autoComplete.panel &&\r\n      !!this.autoComplete.panel.nativeElement) {\r\n    this.autoComplete.panel.nativeElement\r\n      .removeEventListener('scroll', this.onScroll);\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.destroy.next();\r\n    this.destroy.complete();\r\n\r\n    this.removeScrollEventListener();\r\n  }\r\n\r\n\r\n  onScroll(event: Event): void {\r\n    // Credits: how to know if it's down or up scroll \"https://github.com/qeremy/so/blob/master/so.dom.js#L426\"\r\n    const st: number = (event.target as Window).pageYOffset || (event.target as Element).scrollTop;\r\n    if (st > this.lastScrollTop) {\r\n       // downscroll code\r\n       if (this.thresholdPercent === undefined) {\r\n        this.optionsScroll.next({ autoComplete: this.autoComplete, scrollEvent: event });\r\n      } else {\r\n        const threshold: number = this.thresholdPercent * 100 * (event.target as Element).scrollHeight / 100;\r\n        const current: number = (event.target as Element).scrollTop + (event.target as Element).clientHeight;\r\n        // console.log(`scroll ${current}, threshold: ${threshold}`)\r\n        if (current > threshold) {\r\n          // console.log('load next page');\r\n          this.optionsScroll.next({ autoComplete: this.autoComplete, scrollEvent: event });\r\n        }\r\n      }\r\n    } else {\r\n       // upscroll code\r\n    }\r\n    this.lastScrollTop = st <= 0 ? 0 : st;\r\n  }\r\n\r\n}\r\n","import { Directive, Input, HostListener, ElementRef } from '@angular/core';\r\nimport { MatTooltip } from '@angular/material';\r\n\r\n@Directive({\r\n    selector: '[helTooltip]',\r\n    providers: [MatTooltip]\r\n})\r\nexport class HelTooltipDirective {\r\n\r\n    tooltip: MatTooltip;\r\n\r\n    /**\r\n     * Mensaje a mostrar\r\n     */\r\n    @Input('helTooltip') message: string;\r\n\r\n    /**\r\n     * Tiempo antes de ocultarla el mensaje\r\n     */\r\n    @Input() hideDelay: number = 600;\r\n\r\n    /**\r\n     * Tiempo antes de mostra el mensaje\r\n     */\r\n    @Input() showDelay: number = 500;\r\n\r\n\r\n    constructor(tooltip: MatTooltip, private elemRef: ElementRef) {\r\n      this.tooltip = tooltip;\r\n    }\r\n\r\n    @HostListener('mouseover') mouseover(): void {\r\n      const currentContent: string = this.elemRef.nativeElement.innerText;\r\n\r\n      if (!!currentContent && !!this.message) {\r\n        if ((currentContent.toUpperCase() !== this.message.toString().toUpperCase()) || this.isEllipsisActive(this.elemRef.nativeElement)) {\r\n          this.tooltip.message = this.message;\r\n        }\r\n      }\r\n\r\n      this.tooltip.showDelay =  this.showDelay;\r\n      this.tooltip.hideDelay = this.hideDelay;\r\n    }\r\n\r\n\r\n    private isEllipsisActive(e: {offsetWidth: number , scrollWidth: number}): boolean {\r\n      return (e.offsetWidth < e.scrollWidth);\r\n    }\r\n}\r\n","import { Directive, HostBinding, PLATFORM_ID, Inject, Input, OnChanges } from '@angular/core';\r\nimport { isPlatformBrowser } from '@angular/common';\r\n\r\n@Directive({\r\n  selector: 'a[href]',\r\n})\r\nexport class ExternalLinkDirective implements OnChanges {\r\n  @HostBinding('attr.rel') relAttr: string = '';\r\n  @HostBinding('attr.target') targetAttr: string = '';\r\n  @HostBinding('attr.href') hrefAttr: string = '';\r\n  @Input() href: string;\r\n\r\n  constructor(@Inject(PLATFORM_ID) private platformId: string) {}\r\n\r\n  ngOnChanges(): void {\r\n\r\n    this.hrefAttr = this.href;\r\n\r\n    if (this.isLinkExternal()) {\r\n      this.relAttr = 'noopener';\r\n      this.targetAttr = '_blank';\r\n    }\r\n  }\r\n\r\n  private isLinkExternal(): boolean {\r\n    return isPlatformBrowser(this.platformId) && !this.href.includes(location.hostname);\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n    name: 'externalLink'\r\n})\r\nexport class ExternalLinkPipe implements PipeTransform {\r\n    transform(value: string, ...args: string[]): string {\r\n        return '//' + value;\r\n    }\r\n}\r\n","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\n\r\ninterface AlertUncompletedDataHelisaProperties {\r\n  title: string;\r\n  content: string;\r\n  okLabel: string;\r\n  cancelLabel: string;\r\n}\r\n\r\nconst DEFAULT_TITLE: string = 'No ha suministrado la informaciÃ³n necesaria.';\r\nconst DEFAULT_CONTENT: string = 'Si insite en grabar asÃ­, este concepto no serÃ¡ utilizable hasta su conclusiÃ³n satisfactoria, que deberÃ¡ completar posteriormente modificando en concepto.';\r\n\r\n@Component({\r\n  selector: 'hel-alert-uncompleted-data-helisa',\r\n  templateUrl: './alert-uncompleted-data-helisa.component.html',\r\n  styleUrls: ['./alert-uncompleted-data-helisa.component.sass']\r\n})\r\nexport class AlertUncompletedDataHelisaComponent implements OnInit {\r\n\r\n  title: string;\r\n  content: string;\r\n  okLabel: string;\r\n  cancelLabel: string;\r\n\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<AlertUncompletedDataHelisaComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: AlertUncompletedDataHelisaProperties\r\n  ) {\r\n    this.title = data.title;\r\n    if (this.title === undefined) {\r\n      this.title = DEFAULT_TITLE;\r\n    }\r\n    this.content = data.content;\r\n    if (this.content === undefined) {\r\n      this.content = DEFAULT_CONTENT;\r\n    }\r\n    this.okLabel = data.okLabel;\r\n    if (this.okLabel === undefined) {\r\n      this.okLabel = 'Lo asumo';\r\n    }\r\n    this.cancelLabel = data.cancelLabel;\r\n    if (this.cancelLabel === undefined) {\r\n      this.cancelLabel = 'Me retracto';\r\n    }\r\n    dialogRef.disableClose = true;\r\n    dialogRef.keydownEvents().subscribe((event: KeyboardEvent) => {\r\n      if (event.code === 'Escape') {\r\n        this.dialogRef.close(this.onCancel());\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  onCancel(): void {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\n\r\ninterface AlertLostDataHelisaProperties {\r\n  title: string;\r\n  content: string;\r\n  okLabel: string;\r\n  cancelLabel: string;\r\n}\r\n\r\nconst DEFAULT_TITLE: string = 'Â¿EstÃ¡ seguro de querer perder lo ya hecho?';\r\nconst DEFAULT_CONTENT: string = 'Si no estÃ¡ seguro, puede continuar o \"aplicar\" y posteriormente cuando tenga clara las respuestas, usando la opciÃ³n de modificar podrÃ¡ completar el concepto.';\r\n\r\n@Component({\r\n  selector: 'hel-alert-lost-data-helisa',\r\n  templateUrl: './alert-lost-data-helisa.component.html',\r\n  styleUrls: ['./alert-lost-data-helisa.component.sass']\r\n})\r\nexport class AlertLostDataHelisaComponent implements OnInit {\r\n\r\n  title: string;\r\n  content: string;\r\n  okLabel: string;\r\n  cancelLabel: string;\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<AlertLostDataHelisaComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: AlertLostDataHelisaProperties\r\n  ) {\r\n    this.title = data.title;\r\n    if (this.title === undefined) {\r\n      this.title = DEFAULT_TITLE;\r\n    }\r\n    this.content = data.content;\r\n    if (this.content === undefined) {\r\n      this.content = DEFAULT_CONTENT;\r\n    }\r\n    this.okLabel = data.okLabel;\r\n    if (this.okLabel === undefined) {\r\n      this.okLabel = 'Lo asumo';\r\n    }\r\n    this.cancelLabel = data.cancelLabel;\r\n    if (this.cancelLabel === undefined) {\r\n      this.cancelLabel = 'Me retracto';\r\n    }\r\n    dialogRef.disableClose = true;\r\n    dialogRef.keydownEvents().subscribe((event: KeyboardEvent) => {\r\n      if (event.code === 'Escape') {\r\n        this.dialogRef.close(this.onCancel());\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  onCancel(): void {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\n\r\nconst DEFAULT_TITLE: string = 'Â¿EstÃ¡ seguro que debe anular esta informaciÃ³n?';\r\nconst DEFAULT_CONTENT: string = 'Al anular este concepto, quedarÃ¡ la huella de todo lo que se hizo apoyados en su informaciÃ³n. No es una eliminaciÃ³n tÃ¡cita, es suprimir su uso en adelante.';\r\n\r\n@Component({\r\n  selector: 'hel-alert-delete-data-helisa',\r\n  templateUrl: './alert-delete-data-helisa.component.html',\r\n  styleUrls: ['./alert-delete-data-helisa.component.sass']\r\n})\r\nexport class AlertDeleteDataHelisaComponent implements OnInit {\r\n\r\n  title: string;\r\n  content: string;\r\n  okLabel: string;\r\n  cancelLabel: string;\r\n  constructor(\r\n    public dialogRef: MatDialogRef<AlertDeleteDataHelisaComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: AlertDeleteDataHelisaComponent\r\n  ) {\r\n    this.title = data.title;\r\n    if (this.title === undefined) {\r\n      this.title = DEFAULT_TITLE;\r\n    }\r\n    this.content = data.content;\r\n    if (this.content === undefined) {\r\n      this.content = DEFAULT_CONTENT;\r\n    }\r\n    this.okLabel = data.okLabel;\r\n    if (this.okLabel === undefined) {\r\n      this.okLabel = 'Lo asumo';\r\n    }\r\n    this.cancelLabel = data.cancelLabel;\r\n    if (this.cancelLabel === undefined) {\r\n      this.cancelLabel = 'Me retracto';\r\n    }\r\n    dialogRef.disableClose = true;\r\n    dialogRef.keydownEvents().subscribe((event: KeyboardEvent) => {\r\n      if (event.code === 'Escape') {\r\n        this.dialogRef.close(this.onCancel());\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  onCancel(): void {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","import {Component, OnInit, Inject, Input} from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\n\r\ninterface AlertUncompletedSelectedDataHelisaProperties {\r\n  title: string;\r\n  content: string;\r\n  okLabel: string;\r\n  cancelLabel: string;\r\n}\r\n\r\nconst DEFAULT_CONTENT: string = 'Elemento sin informaciÃ³n requerida. ModifÃ­quelo para completarlo.';\r\n\r\n@Component({\r\n  selector: 'hel-alert-uncompleted-selected-data-helisa',\r\n  templateUrl: './alert-uncompleted-selected-data-helisa.component.html',\r\n  styleUrls: ['./alert-uncompleted-selected-data-helisa.component.sass']\r\n})\r\nexport class AlertUncompletedSelectedDataHelisaComponent implements OnInit {\r\n\r\n  content: string;\r\n  okLabel: string;\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<AlertUncompletedSelectedDataHelisaComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: AlertUncompletedSelectedDataHelisaProperties\r\n  ) {\r\n    this.content = data.content;\r\n    if (this.content === undefined) {\r\n      this.content = DEFAULT_CONTENT;\r\n    }\r\n    this.okLabel = data.okLabel;\r\n    if (this.okLabel === undefined) {\r\n      this.okLabel = 'Aceptar';\r\n    }\r\n    dialogRef.disableClose = true;\r\n    dialogRef.keydownEvents().subscribe((event: KeyboardEvent) => {\r\n      if (event.code === 'Escape') {\r\n        this.dialogRef.close(this.onCancel());\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  onCancel(): void {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\n\r\n\r\ninterface AlertInformationNotValidProperties {\r\n    title: string;\r\n    content: string;\r\n}\r\n\r\nconst DEFAULT_CONTENT: string = 'Rectifique. Hay informaciÃ³n no vÃ¡lida';\r\n\r\n@Component({\r\n    selector: 'hel-alert-information-not-valid-helisa',\r\n    templateUrl: './alert-information-not-valid-helisa.component.html',\r\n    styleUrls: ['./alert-information-not-valid-helisa.component.sass']\r\n})\r\nexport class AlertInformationNotValidHelisaComponent implements OnInit {\r\n\r\n    content: string;\r\n\r\n    constructor(\r\n        public dialogRef: MatDialogRef<AlertInformationNotValidHelisaComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: AlertInformationNotValidProperties\r\n    ) {\r\n        this.content = data.content;\r\n        if (this.content === undefined) {\r\n            this.content = DEFAULT_CONTENT;\r\n        }\r\n        dialogRef.disableClose = true;\r\n        dialogRef.keydownEvents().subscribe((event: KeyboardEvent) => {\r\n            if (event.code === 'Escape') {\r\n                this.dialogRef.close(this.onCancel());\r\n            }\r\n        });\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        setTimeout(() => {\r\n            this.dialogRef.close();\r\n        }, 3000);\r\n    }\r\n\r\n    onCancel(): void {\r\n        this.dialogRef.close();\r\n    }\r\n}\r\n","import {AfterViewInit, Component, EventEmitter, Input, OnInit, Output, ViewChild} from '@angular/core';\r\nimport {ComboBoxListable} from './interface/combo-box-listable';\r\nimport {ComboBoxEditable} from './interface/combo-box-editable';\r\n\r\nexport enum ComboBoxHelisaState {\r\n  CLOSED,\r\n  SELECT,\r\n  INSERT\r\n}\r\n\r\n@Component({\r\n  selector: 'lib-combo-box-helisa',\r\n  templateUrl: './combo-box-helisa.component.html',\r\n  styleUrls: ['./combo-box-helisa.component.css']\r\n})\r\nexport class ComboBoxHelisaComponent<TYPE> implements OnInit, AfterViewInit {\r\n\r\n  @Input() editable: ComboBoxEditable<TYPE>;\r\n  @Input() listable: ComboBoxListable<TYPE>;\r\n  @Input() placeholder: string = 'Sin seleccionar';\r\n  @Input() selectedItem: TYPE;\r\n  @Output() selectEmitter: EventEmitter<TYPE> = new EventEmitter<TYPE>();\r\n  @Input() enabled: boolean = true;\r\n\r\n  private page: number = 0;\r\n  private pageSize: number = 50;\r\n  private haveNextPage: boolean = true;\r\n  state: ComboBoxHelisaState = ComboBoxHelisaState.CLOSED;\r\n\r\n  rows: TYPE[] = [];\r\n\r\n  constructor() {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.getNextPage();\r\n  }\r\n\r\n  private getNextPage(): void {\r\n    if (this.haveNextPage) {\r\n      this.listable.getData(this.page++, this.pageSize).subscribe((rows: TYPE[]) => {\r\n        rows.forEach((item: TYPE) => this.rows.push(item));\r\n        this.haveNextPage = rows.length > 0;\r\n      });\r\n    }\r\n  }\r\n\r\n  get comboBoxHelisaState(): typeof ComboBoxHelisaState {\r\n    return ComboBoxHelisaState;\r\n  }\r\n\r\n  onFocus(): void {\r\n    if (this.enabled) {\r\n      this.state = ComboBoxHelisaState.SELECT;\r\n    }\r\n  }\r\n\r\n  selectItem(row: TYPE): void {\r\n    this.selectedItem = row;\r\n    this.selectEmitter.emit(row);\r\n    this.state = ComboBoxHelisaState.CLOSED;\r\n  }\r\n\r\n  changeToInsert(): void {\r\n    this.state = ComboBoxHelisaState.INSERT;\r\n  }\r\n\r\n  insert(event: string): void {\r\n    if (event.trim().length > 0) {\r\n      this.editable.insert(event).subscribe(\r\n        (data: TYPE) => {\r\n          this.rows.push(data);\r\n          this.state = ComboBoxHelisaState.SELECT;\r\n        }\r\n      );\r\n    } else {\r\n      this.state = ComboBoxHelisaState.SELECT;\r\n    }\r\n  }\r\n\r\n  onScroll(event: Event): void {\r\n    const element: HTMLDivElement = event.target as HTMLDivElement;\r\n    if (element.scrollHeight - element.scrollTop < 1000) {\r\n      this.getNextPage();\r\n    }\r\n  }\r\n}\r\n","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material';\r\n\r\ninterface AlertAuthorizationTransactionHelisaProperties {\r\n  title: string;\r\n  okLabel: string;\r\n  cancelLabel: string;\r\n}\r\n\r\nconst DEFAULT_TITLE: string = '!Esta transacciÃ³n requiere autorizaciÃ³n!';\r\n\r\n@Component({\r\n  selector: 'hel-alert-authorization-transaction-helisa',\r\n  templateUrl: './alert-authorization-transaction-helisa.component.html',\r\n  styleUrls: ['./alert-authorization-transaction-helisa.component.sass']\r\n})\r\nexport class AlertAuthorizationTransactionHelisaComponent implements OnInit {\r\n\r\n  title: string;\r\n  okLabel: string;\r\n  cancelLabel: string;\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<AlertAuthorizationTransactionHelisaComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: AlertAuthorizationTransactionHelisaProperties\r\n  ) {\r\n    this.title = data.title;\r\n    if (this.title === undefined) {\r\n      this.title = DEFAULT_TITLE;\r\n    }\r\n    this.okLabel = data.okLabel;\r\n    if (this.okLabel === undefined) {\r\n      this.okLabel = 'Solicitarla';\r\n    }\r\n    this.cancelLabel = data.cancelLabel;\r\n    if (this.cancelLabel === undefined) {\r\n      this.cancelLabel = 'Negarla';\r\n    }\r\n    dialogRef.disableClose = true;\r\n    dialogRef.keydownEvents().subscribe((event: KeyboardEvent) => {\r\n      if (event.code === 'Escape') {\r\n        this.dialogRef.close(this.onCancel());\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void  {\r\n  }\r\n\r\n  onCancel(): void {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","import {AfterViewInit, Component, ContentChild, EventEmitter, Input, OnInit, Output, TemplateRef} from '@angular/core';\r\nimport {Observable} from 'rxjs';\r\n\r\nexport enum PagingTreeInitialMode {\r\n  COLLAPSE,\r\n  EXPAND\r\n}\r\n\r\nexport interface PagingTreeHelisaListable<T> {\r\n  get(lastChildOrder: number, size: number): Observable<T[]>;\r\n\r\n  getIdField(): string;\r\n\r\n  getIdParentField(): string;\r\n\r\n  compare(a: T, b: T): number;\r\n}\r\n\r\ninterface HelisaNode<T> {\r\n  object: T;\r\n  level: number;\r\n  haveChildren: boolean;\r\n  expanded: boolean;\r\n  visible: boolean;\r\n  preorder: number;\r\n}\r\n\r\nexport interface HelisaNodeData<T> {\r\n  readonly object: T;\r\n  readonly level: number;\r\n  readonly haveChildren: boolean;\r\n  readonly expanded: boolean;\r\n  readonly visible: boolean;\r\n  readonly preorder: number;\r\n}\r\n\r\n@Component({\r\n  selector: 'hel-paging-tree',\r\n  templateUrl: './paging-tree-helisa.component.html',\r\n  styleUrls: ['./paging-tree-helisa.component.css']\r\n})\r\nexport class PagingTreeHelisaComponent<T> implements OnInit, AfterViewInit {\r\n\r\n  private pageSize: number = 200000;\r\n  private visibleLimit: number = 0;\r\n  private visibleSize: number = 100;\r\n  private treeMode: PagingTreeInitialMode = PagingTreeInitialMode.EXPAND;\r\n  private visibleObjects: Array<T> = [];\r\n  private service: PagingTreeHelisaListable<T>;\r\n  private searchNode: Map<string, HelisaNode<T>>;\r\n  private allNode: Array<HelisaNode<T>> = [];\r\n\r\n  @Output()\r\n  afterLoadData: EventEmitter<void> = new EventEmitter<void>();\r\n\r\n  @ContentChild('nodeComponent')\r\n  nodeComponent: TemplateRef<{ data: T, node: HelisaNodeData<T> }>;\r\n\r\n  constructor() {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n  }\r\n\r\n  @Input()\r\n  set mode(paramMode: PagingTreeInitialMode) {\r\n    this.treeMode = paramMode;\r\n    this.reset();\r\n  }\r\n\r\n  @Input()\r\n  set pagingTreeHelisaListable(paramService: PagingTreeHelisaListable<T>) {\r\n    this.service = paramService;\r\n    this.reset();\r\n  }\r\n\r\n  public reset(): void {\r\n    if (this.service) {\r\n      this.service.get(0, this.pageSize).subscribe((items: T[]) => this.loadData(items));\r\n    }\r\n  }\r\n\r\n  private loadData(items: T[]): void {\r\n    this.searchNode = new Map<string, HelisaNode<T>>();\r\n    this.visibleObjects = [];\r\n    this.allNode = [];\r\n    items = this.sortItems(items);\r\n    this.searchNode = new Map<string, HelisaNode<T>>();\r\n    items.forEach((item: T) => {\r\n      const node: HelisaNode<T> = this.createNode(item);\r\n      this.allNode.push(node);\r\n    });\r\n    this.loadNextVisibleObjects(null);\r\n    this.afterLoadData.emit();\r\n  }\r\n\r\n  private sortItems(items: T[]): T[] {\r\n    const lAdy: Map<string, T[]> = new Map<string, T[]>();\r\n    const stack: T[] = [];\r\n    items.forEach((item: T) => {\r\n      const idParent: string = item[this.service.getIdParentField()];\r\n      if (!idParent) {\r\n        stack.unshift(item);\r\n      } else {\r\n        if (!lAdy.has(idParent)) {\r\n          lAdy.set(idParent, []);\r\n        }\r\n        lAdy.get(idParent).push(item);\r\n      }\r\n    });\r\n    const response: T[] = new Array<T>(items.length);\r\n    let index: number = 0;\r\n    while (stack.length > 0) {\r\n      const last: T = stack.pop();\r\n      response[index++] = last;\r\n      const children: T[] = lAdy.get(last[this.service.getIdField()]);\r\n      if (children) {\r\n        for (let i: number = children.length - 1; i >= 0; i--) {\r\n          stack.push(children[i]);\r\n        }\r\n      }\r\n    }\r\n    return response;\r\n  }\r\n\r\n  private createNode(item: T): HelisaNode<T> {\r\n    if (this.searchNode.has(item[this.service.getIdField()])) {\r\n      throw Error('Ya existe el nodo.');\r\n    }\r\n    const parentInformation: HelisaNode<T> = this.getNodeInformationById(item[this.service.getIdParentField()]);\r\n    const nodeInformation: HelisaNode<T> = {\r\n      object: item,\r\n      haveChildren: false,\r\n      level: parentInformation ? parentInformation.level + 1 : 0,\r\n      expanded: this.treeMode === PagingTreeInitialMode.EXPAND,\r\n      visible: false,\r\n      preorder: this.searchNode.size + 1,\r\n    };\r\n    this.searchNode.set(item[this.service.getIdField()], nodeInformation);\r\n    if (parentInformation) {\r\n      parentInformation.haveChildren = true;\r\n    }\r\n    return nodeInformation;\r\n  }\r\n\r\n  public getNodeInformationById(id: string): HelisaNode<T> {\r\n    return this.searchNode.get(id);\r\n  }\r\n\r\n  public getNodeInformation(item: T): HelisaNode<T> {\r\n    return this.searchNode.get(item[this.service.getIdField()]);\r\n  }\r\n\r\n  getLevelClass(item: T): string {\r\n    return 'padding-level-' + this.getNodeInformationById(item[this.service.getIdField()]).level;\r\n  }\r\n\r\n  private loadNextVisibleObjects(nodeFrom: T): void {\r\n    const visibleObjects: T[] = [];\r\n    this.visibleObjects.forEach((item: T) => {\r\n      if (this.getNodeInformation(item)) {\r\n        if (nodeFrom && this.getNodeInformation(nodeFrom).preorder >= this.getNodeInformation(item).preorder) {\r\n          visibleObjects.push(item);\r\n        } else {\r\n          this.getNodeInformationById(item[this.service.getIdField()]).visible = false;\r\n        }\r\n      }\r\n    });\r\n    this.visibleLimit = visibleObjects.length + this.visibleSize;\r\n    this.allNode.forEach((item: HelisaNode<T>) => {\r\n      if (visibleObjects.length < this.visibleLimit &&\r\n        (!nodeFrom || this.getNodeInformation(nodeFrom).preorder < item.preorder)) {\r\n        const idParent: string = item.object[this.service.getIdParentField()];\r\n        if (!idParent) {\r\n          visibleObjects.push(item.object);\r\n          item.visible = true;\r\n        } else {\r\n          const parentInformation: HelisaNode<T> = this.getNodeInformationById(idParent);\r\n          if (parentInformation.visible && parentInformation.expanded) {\r\n            visibleObjects.push(item.object);\r\n            item.visible = true;\r\n          }\r\n        }\r\n      }\r\n    });\r\n    this.visibleObjects = visibleObjects;\r\n  }\r\n\r\n  collapseNode(item: T): void {\r\n    this.getNodeInformationById(item[this.service.getIdField()]).expanded = false;\r\n    this.loadNextVisibleObjects(item);\r\n  }\r\n\r\n  expandNode(item: T): void {\r\n    this.getNodeInformationById(item[this.service.getIdField()]).expanded = true;\r\n    this.loadNextVisibleObjects(item);\r\n  }\r\n\r\n  showNextPage(): void {\r\n    if (this.visibleObjects.length > 0) {\r\n      this.loadNextVisibleObjects(this.visibleObjects[this.visibleObjects.length - 1]);\r\n    }\r\n  }\r\n\r\n  get visibleData(): ReadonlyArray<T> {\r\n    return this.visibleObjects;\r\n  }\r\n\r\n  removeItem(item: T): void {\r\n    this.removeById(item[this.service.getIdField()]);\r\n  }\r\n\r\n  removeById(id: string): void {\r\n    if(this.getNodeInformationById(id)) {\r\n      const idParent: string = this.getNodeInformationById(id).object[this.service.getIdParentField()];\r\n      const set: Set<string> = new Set<string>();\r\n      set.add(id);\r\n      const beginIndex: number = this.allNode.findIndex(\r\n        (itemSearch: HelisaNode<T>) => itemSearch.object[this.service.getIdField()] === id\r\n      );\r\n      let lastIndex: number = this.allNode.length;\r\n      for (let i: number = beginIndex + 1; i < this.allNode.length; i++) {\r\n        const itemSearch: T = this.allNode[i].object;\r\n        if (set.has(itemSearch[this.service.getIdParentField()])) {\r\n          set.add(itemSearch[this.service.getIdField()]);\r\n        } else {\r\n          lastIndex = i;\r\n          break;\r\n        }\r\n      }\r\n      const deletedItems: HelisaNode<T>[] = this.allNode.splice(beginIndex, lastIndex - beginIndex);\r\n      let parentHaveChildren: boolean = false;\r\n      deletedItems.forEach((deletedItem: HelisaNode<T>) => this.searchNode.delete(deletedItem.object[this.service.getIdField()]));\r\n      this.allNode.forEach((searchItem: HelisaNode<T>, index: number) => {\r\n        searchItem.preorder = index + 1\r\n        if(searchItem.object[this.service.getIdParentField()] === idParent) {\r\n          parentHaveChildren = true;\r\n        }\r\n      });\r\n      if(idParent) {\r\n        this.getNodeInformationById(idParent).haveChildren = parentHaveChildren;\r\n      }\r\n      this.loadNextVisibleObjects(beginIndex > 0 ? this.allNode[beginIndex - 1].object : null);\r\n    }\r\n  }\r\n\r\n  addItem(item: T): void {\r\n    const indexParent: number = this.allNode.findIndex((node: HelisaNode<T>) => node.object[this.service.getIdField()] === item[this.service.getIdParentField()]);\r\n    if (indexParent >= 0) {\r\n      this.allNode.push(this.createNode(item));\r\n      this.allNode[indexParent].haveChildren = true;\r\n      this.reSort();\r\n      this.expandNode(this.allNode[indexParent].object);\r\n    } else {\r\n      throw Error('No existe el padre.');\r\n    }\r\n  }\r\n\r\n  updateItem(item: T): void {\r\n    if (this.getNodeInformation(item)) {\r\n      this.getNodeInformation(item).object = item;\r\n      this.reSort();\r\n      const indexParent: number = this.allNode.findIndex(\r\n        (node: HelisaNode<T>) => node.object[this.service.getIdField()] === item[this.service.getIdParentField()]);\r\n      if (indexParent >= 0) {\r\n        this.expandNode(this.allNode[indexParent].object);\r\n      } else {\r\n        this.loadNextVisibleObjects(null);\r\n      }\r\n    }\r\n  }\r\n\r\n  private reSort(): void {\r\n    const items: T[] = this.allNode.map((node: HelisaNode<T>) => node.object);\r\n    items.sort((a: T, b: T) => this.service.compare(a, b));\r\n    const preorder: T[] = this.sortItems(items);\r\n    preorder.forEach((object: T, index: number) => this.getNodeInformation(object).preorder = index + 1);\r\n    this.allNode.sort((nodeA: HelisaNode<T>, nodeB: HelisaNode<T>) => nodeA.preorder - nodeB.preorder);\r\n  }\r\n}\r\n","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\n\r\nconst DEFAULT_CONTENT: string = 'Â¿Esta seguro que desea eliminar esta informaciÃ³n?';\r\n\r\n@Component({\r\n  selector: 'hel-alert-confirm-delete-data-helisa',\r\n  templateUrl: './alert-confirm-delete-data-helisa.component.html',\r\n  styleUrls: ['./alert-confirm-delete-data-helisa.component.sass']\r\n})\r\nexport class AlertConfirmDeleteDataHelisaComponent implements OnInit {\r\n\r\n  title: string;\r\n  content: string;\r\n  okLabel: string;\r\n  cancelLabel: string;\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<AlertConfirmDeleteDataHelisaComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: AlertConfirmDeleteDataHelisaComponent\r\n  ) {\r\n    this.content = data.content;\r\n    if (this.content === undefined) {\r\n      this.content = DEFAULT_CONTENT;\r\n    }\r\n    this.okLabel = data.okLabel;\r\n    if (this.okLabel === undefined) {\r\n      this.okLabel = 'Lo asumo';\r\n    }\r\n    this.cancelLabel = data.cancelLabel;\r\n    if (this.cancelLabel === undefined) {\r\n      this.cancelLabel = 'Me retracto';\r\n    }\r\n    dialogRef.disableClose = true;\r\n    dialogRef.keydownEvents().subscribe((event: KeyboardEvent) => {\r\n      if (event.code === 'Escape') {\r\n        this.dialogRef.close(this.onCancel());\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  onCancel(): void {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\n\r\n\r\ninterface AlertDefineResidentialPhysicalStructureProperties {\r\n    title: string;\r\n    content: string;\r\n}\r\n\r\nconst DEFAULT_CONTENT: string = 'Primero defina la estructura fÃ­sica residencial en configuraciÃ³n.';\r\n\r\n@Component({\r\n    selector: 'hel-alert-define-residential-physical-structure-helisa',\r\n    templateUrl: './alert-define-residential-physical-structure-helisa.component.html',\r\n    styleUrls: ['./alert-define-residential-physical-structure-helisa.component.sass']\r\n})\r\nexport class AlertDefineResidentialPhysicalStructureHelisaComponent implements OnInit {\r\n\r\n    content: string;\r\n\r\n    constructor(\r\n        public dialogRef: MatDialogRef<AlertDefineResidentialPhysicalStructureHelisaComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: AlertDefineResidentialPhysicalStructureProperties\r\n    ) {\r\n        this.content = data.content;\r\n        if (this.content === undefined) {\r\n            this.content = DEFAULT_CONTENT;\r\n        }\r\n        dialogRef.disableClose = true;\r\n        dialogRef.keydownEvents().subscribe((event: KeyboardEvent) => {\r\n            if (event.code === 'Escape') {\r\n                this.dialogRef.close(this.onCancel());\r\n            }\r\n        });\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        setTimeout(() => {\r\n            this.dialogRef.close();\r\n        }, 3000);\r\n    }\r\n\r\n    onCancel(): void {\r\n        this.dialogRef.close();\r\n    }\r\n}\r\n","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\n\r\n\r\ninterface AlertDefineCommercialStructureProperties {\r\n    title: string;\r\n    content: string;\r\n}\r\n\r\nconst DEFAULT_CONTENT: string = 'Primero defina la estructura comercial en configuraciÃ³n.';\r\n\r\n@Component({\r\n    selector: 'hel-alert-define-commercial-structure-helisa',\r\n    templateUrl: './alert-define-commercial-structure-helisa.component.html',\r\n    styleUrls: ['./alert-define-commercial-structure-helisa.component.sass']\r\n})\r\nexport class AlertDefineCommercialStructureHelisaComponent implements OnInit {\r\n\r\n    content: string;\r\n\r\n    constructor(\r\n        public dialogRef: MatDialogRef<AlertDefineCommercialStructureHelisaComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: AlertDefineCommercialStructureProperties\r\n    ) {\r\n        this.content = data.content;\r\n        if (this.content === undefined) {\r\n            this.content = DEFAULT_CONTENT;\r\n        }\r\n        dialogRef.disableClose = true;\r\n        dialogRef.keydownEvents().subscribe((event: KeyboardEvent) => {\r\n            if (event.code === 'Escape') {\r\n                this.dialogRef.close(this.onCancel());\r\n            }\r\n        });\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        setTimeout(() => {\r\n            this.dialogRef.close();\r\n        }, 3000);\r\n    }\r\n\r\n    onCancel(): void {\r\n        this.dialogRef.close();\r\n    }\r\n}\r\n","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\n\r\n\r\ninterface AlertDefineParkingStructureProperties {\r\n    title: string;\r\n    content: string;\r\n}\r\n\r\nconst DEFAULT_CONTENT: string = 'Primero defina la estructura zona de parqueaderos en configuraciÃ³n.';\r\n\r\n@Component({\r\n    selector: 'hel-alert-define-parking-structure-helisa',\r\n    templateUrl: './alert-define-parking-structure-helisa.component.html',\r\n    styleUrls: ['./alert-define-parking-structure-helisa.component.sass']\r\n})\r\nexport class AlertDefineParkingStructureHelisaComponent implements OnInit {\r\n\r\n    content: string;\r\n\r\n    constructor(\r\n        public dialogRef: MatDialogRef<AlertDefineParkingStructureHelisaComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: AlertDefineParkingStructureProperties\r\n    ) {\r\n        this.content = data.content;\r\n        if (this.content === undefined) {\r\n            this.content = DEFAULT_CONTENT;\r\n        }\r\n        dialogRef.disableClose = true;\r\n        dialogRef.keydownEvents().subscribe((event: KeyboardEvent) => {\r\n            if (event.code === 'Escape') {\r\n                this.dialogRef.close(this.onCancel());\r\n            }\r\n        });\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        setTimeout(() => {\r\n            this.dialogRef.close();\r\n        }, 3000);\r\n    }\r\n\r\n    onCancel(): void {\r\n        this.dialogRef.close();\r\n    }\r\n}\r\n","import {DragDropModule} from '@angular/cdk/drag-drop';\r\nimport {LayoutModule} from '@angular/cdk/layout';\r\nimport {CommonModule} from '@angular/common';\r\nimport {NgModule} from '@angular/core';\r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\r\nimport {\r\n  MatAutocompleteModule,\r\n  MatButtonModule,\r\n  MatCheckboxModule,\r\n  MatGridListModule,\r\n  MatInputModule,\r\n  MatMenuModule,\r\n  MatNativeDateModule,\r\n  MatOptionModule,\r\n  MatPaginatorModule,\r\n  MatRadioModule,\r\n  MatSidenavModule,\r\n  MatSnackBarModule,\r\n  MatSortModule,\r\n  MatTableModule\r\n} from '@angular/material';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatChipsModule } from '@angular/material/chips';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatStepperModule } from '@angular/material/stepper';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { MatTreeModule } from '@angular/material/tree';\r\nimport { AlertHelisaComponent } from './components/alert-helisa/alert-helisa.component';\r\nimport { AutocompleteHelisaComponent } from './components/autocomplete-helisa/autocomplete-helisa.component';\r\nimport { DateHelisaComponent } from './components/date-helisa/date-helisa.component';\r\nimport { DependencyTableHelisaComponent } from './components/dependency-table-helisa/dependency-table-helisa.component';\r\nimport { InputHelisaComponent } from './components/input-helisa/input-helisa.component';\r\nimport { InputWithButtonComponent } from './components/input-with-button/input-with-button.component';\r\nimport { TableHelisaComponent } from './components/table-helisa/table-helisa.component';\r\nimport { TableHelisaService } from './components/table-helisa/table-helisa.service';\r\nimport { ToastHelisaComponent } from './components/toast-helisa/toast-helisa.component';\r\nimport { TreeHelisaComponent } from './components/tree-helisa/tree-helisa.component';\r\nimport { TreeHelisaService } from './components/tree-helisa/tree-helisa.service';\r\nimport { ExternalLinkDirective } from './directives/external-link.directive';\r\nimport { OptionsScrollDirective } from './directives/options-scroll.directive';\r\nimport { HelTooltipDirective } from './directives/tooltip.directive';\r\nimport { ExternalLinkPipe } from './pipes/external-link.pipe';\r\nimport { AlertUncompletedDataHelisaComponent } from './components/alert-uncompleted-data-helisa/alert-uncompleted-data-helisa.component';\r\nimport { AlertLostDataHelisaComponent } from './components/alert-lost-data-helisa/alert-lost-data-helisa.component';\r\nimport { AlertDeleteDataHelisaComponent } from './components/alert-delete-data-helisa/alert-delete-data-helisa.component';\r\nimport {\r\n  AlertUncompletedSelectedDataHelisaComponent\r\n} from './components/alert-uncompleted-selected-data-helisa/alert-uncompleted-selected-data-helisa.component';\r\nimport {\r\n  AlertInformationNotValidHelisaComponent\r\n } from './components/alert-information-not-valid-helisa/alert-information-not-valid-helisa.component';\r\nimport { ComboBoxHelisaComponent } from './components/combo-box-helisa/combo-box-helisa.component';\r\nimport {AlertAuthorizationTransactionHelisaComponent} from './components/alert-authorization-transaction-helisa/alert-authorization-transaction-helisa.component';\r\nimport { PagingTreeHelisaComponent } from './components/paging-tree-helisa/paging-tree-helisa.component';\r\nimport { AlertConfirmDeleteDataHelisaComponent } from './components/alert-confirm-delete-data-helisa/alert-confirm-delete-data-helisa.component';\r\nimport { AlertDefineResidentialPhysicalStructureHelisaComponent } from './components/alert-define-residential-physical-structure-helisa/alert-define-residential-physical-structure-helisa.component';\r\nimport { AlertDefineCommercialStructureHelisaComponent } from './components/alert-define-commercial-structure-helisa/alert-define-commercial-structure-helisa.component';\r\nimport { AlertDefineParkingStructureHelisaComponent } from './components/alert-define-parking-structure-helisa/alert-define-parking-structure-helisa.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    InputWithButtonComponent,\r\n    ToastHelisaComponent,\r\n    AlertHelisaComponent,\r\n    DependencyTableHelisaComponent,\r\n    InputHelisaComponent,\r\n    TableHelisaComponent,\r\n    TreeHelisaComponent,\r\n    DateHelisaComponent,\r\n    AutocompleteHelisaComponent,\r\n    OptionsScrollDirective,\r\n    HelTooltipDirective,\r\n    ExternalLinkDirective,\r\n    ExternalLinkPipe,\r\n    AlertUncompletedDataHelisaComponent,\r\n    AlertLostDataHelisaComponent,\r\n    AlertDeleteDataHelisaComponent,\r\n    AlertUncompletedSelectedDataHelisaComponent,\r\n    AlertInformationNotValidHelisaComponent,\r\n    ComboBoxHelisaComponent,\r\n    AlertAuthorizationTransactionHelisaComponent,\r\n    PagingTreeHelisaComponent,\r\n    AlertConfirmDeleteDataHelisaComponent,\r\n    AlertDefineResidentialPhysicalStructureHelisaComponent,\r\n    AlertDefineCommercialStructureHelisaComponent,\r\n    AlertDefineParkingStructureHelisaComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n\r\n    MatAutocompleteModule,\r\n    MatButtonModule,\r\n    MatCheckboxModule,\r\n    MatToolbarModule,\r\n    MatExpansionModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatSelectModule,\r\n    MatOptionModule,\r\n    MatListModule,\r\n    MatIconModule,\r\n    MatSnackBarModule,\r\n    MatCardModule,\r\n    LayoutModule,\r\n    MatTooltipModule,\r\n    MatButtonModule,\r\n    MatSidenavModule,\r\n    MatIconModule,\r\n    MatListModule,\r\n    MatGridListModule,\r\n    MatCardModule,\r\n    MatMenuModule,\r\n    MatInputModule,\r\n    MatSelectModule,\r\n    MatRadioModule,\r\n    MatProgressSpinnerModule,\r\n    MatTableModule,\r\n    MatPaginatorModule,\r\n    MatSortModule,\r\n    MatDialogModule,\r\n    MatTabsModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    MatStepperModule,\r\n    MatChipsModule,\r\n    DragDropModule,\r\n    MatTreeModule\r\n  ],\r\n  exports: [\r\n    InputWithButtonComponent,\r\n    ToastHelisaComponent,\r\n    AlertHelisaComponent,\r\n    DependencyTableHelisaComponent,\r\n    InputHelisaComponent,\r\n    TableHelisaComponent,\r\n    TreeHelisaComponent,\r\n    DateHelisaComponent,\r\n    AutocompleteHelisaComponent,\r\n    OptionsScrollDirective,\r\n    HelTooltipDirective,\r\n    ExternalLinkDirective,\r\n    ExternalLinkPipe,\r\n    MatButtonModule,\r\n    MatCheckboxModule,\r\n    MatToolbarModule,\r\n    MatExpansionModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatSelectModule,\r\n    MatOptionModule,\r\n    MatListModule,\r\n    MatIconModule,\r\n    MatSnackBarModule,\r\n    MatCardModule,\r\n    LayoutModule,\r\n    MatTooltipModule,\r\n    MatButtonModule,\r\n    MatSidenavModule,\r\n    MatIconModule,\r\n    MatListModule,\r\n    MatGridListModule,\r\n    MatCardModule,\r\n    MatMenuModule,\r\n    MatInputModule,\r\n    MatSelectModule,\r\n    MatRadioModule,\r\n    MatProgressSpinnerModule,\r\n    MatTableModule,\r\n    MatPaginatorModule,\r\n    MatSortModule,\r\n    MatDialogModule,\r\n    MatTabsModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    MatStepperModule,\r\n    MatChipsModule,\r\n    DragDropModule,\r\n    MatTreeModule,\r\n    AlertUncompletedDataHelisaComponent,\r\n    AlertLostDataHelisaComponent,\r\n    AlertDeleteDataHelisaComponent,\r\n    AlertUncompletedSelectedDataHelisaComponent,\r\n    AlertInformationNotValidHelisaComponent,\r\n    ComboBoxHelisaComponent,\r\n    AlertAuthorizationTransactionHelisaComponent,\r\n    PagingTreeHelisaComponent,\r\n    AlertConfirmDeleteDataHelisaComponent,\r\n    AlertDefineResidentialPhysicalStructureHelisaComponent,\r\n    AlertDefineCommercialStructureHelisaComponent,\r\n    AlertDefineParkingStructureHelisaComponent\r\n  ],\r\n  providers: [TableHelisaService, TreeHelisaService]\r\n})\r\nexport class HelisaLibModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { MatDialog, MatDialogRef } from '@angular/material';\r\nimport { Observable } from 'rxjs';\r\nimport { AlertUncompletedDataHelisaComponent } from './alert-uncompleted-data-helisa.component';\r\n\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AlertUncompletedDataHelisaService {\r\n\r\n  constructor(public dialog: MatDialog) { }\r\n\r\n  openDialog(title?: string, content?: string, okLabel?: string, cancelLabel?: string): Observable<boolean> {\r\n    const dialogRef: MatDialogRef<AlertUncompletedDataHelisaComponent> = this.dialog.open(AlertUncompletedDataHelisaComponent, {\r\n      width: '250px',\r\n      data: { title, content, okLabel, cancelLabel }\r\n    });\r\n\r\n    return dialogRef.afterClosed();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { MatDialog, MatDialogRef } from '@angular/material';\r\nimport { Observable } from 'rxjs';\r\nimport { AlertLostDataHelisaComponent } from './alert-lost-data-helisa.component';\r\n\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AlertLostDataHelisaService {\r\n\r\n  constructor(public dialog: MatDialog) { }\r\n\r\n  openDialog(title?: string, content?: string, okLabel?: string, cancelLabel?: string): Observable<boolean> {\r\n    const dialogRef: MatDialogRef<AlertLostDataHelisaComponent> = this.dialog.open(AlertLostDataHelisaComponent, {\r\n      width: '250px',\r\n      data: { title, content, okLabel, cancelLabel }\r\n    });\r\n\r\n    return dialogRef.afterClosed();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { MatDialog, MatDialogRef } from '@angular/material';\r\nimport { Observable } from 'rxjs';\r\nimport { AlertDeleteDataHelisaComponent } from './alert-delete-data-helisa.component';\r\n\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AlertDeleteDataHelisaService {\r\n\r\n  constructor(public dialog: MatDialog) { }\r\n\r\n  openDialog(title?: string, content?: string, okLabel?: string, cancelLabel?: string): Observable<boolean> {\r\n    const dialogRef: MatDialogRef<AlertDeleteDataHelisaComponent> = this.dialog.open(AlertDeleteDataHelisaComponent, {\r\n      width: '250px',\r\n      data: { title, content, okLabel, cancelLabel }\r\n    });\r\n\r\n    return dialogRef.afterClosed();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { MatDialog, MatDialogRef } from '@angular/material';\r\nimport { Observable } from 'rxjs';\r\nimport {AlertUncompletedSelectedDataHelisaComponent} from './alert-uncompleted-selected-data-helisa.component';\r\n\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AlertUncompletedSelectedDataHelisaService {\r\n\r\n  constructor(public dialog: MatDialog) { }\r\n\r\n  openDialog(title?: string, content?: string, okLabel?: string, cancelLabel?: string): Observable<boolean> {\r\n    const dialogRef: MatDialogRef<AlertUncompletedSelectedDataHelisaComponent> = this.dialog.open(AlertUncompletedSelectedDataHelisaComponent, {\r\n      width: '250px',\r\n      data: { title, content, okLabel, cancelLabel }\r\n    });\r\n\r\n    return dialogRef.afterClosed();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { MatDialog, MatDialogRef } from '@angular/material';\r\nimport { Observable } from 'rxjs';\r\nimport { AlertInformationNotValidHelisaComponent } from './alert-information-not-valid-helisa.component';\r\n\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AlertInformationNotValidHelisaService {\r\n\r\n  constructor(public dialog: MatDialog) { }\r\n\r\n  openDialog(title?: string, content?: string): Observable<boolean> {\r\n    const dialogRef: MatDialogRef<AlertInformationNotValidHelisaComponent> = this.dialog.open(AlertInformationNotValidHelisaComponent, {\r\n      width: '250px',\r\n      data: { title, content}\r\n    });\r\n\r\n    return dialogRef.afterClosed();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { MatDialog, MatDialogRef } from '@angular/material';\r\nimport { Observable } from 'rxjs';\r\nimport {AlertAuthorizationTransactionHelisaComponent} from './alert-authorization-transaction-helisa.component';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AlertAuthorizationTransactionHelisaService {\r\n\r\n  constructor(public dialog: MatDialog) { }\r\n\r\n  openDialog(title?: string, content?: string, okLabel?: string, cancelLabel?: string): Observable<boolean> {\r\n    const dialogRef: MatDialogRef<AlertAuthorizationTransactionHelisaComponent> = this.dialog.open(AlertAuthorizationTransactionHelisaComponent, {\r\n      width: '250px',\r\n      data: { title, content, okLabel, cancelLabel }\r\n    });\r\n\r\n    return dialogRef.afterClosed();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { MatDialog, MatDialogRef } from '@angular/material';\r\nimport { Observable } from 'rxjs';\r\nimport { AlertConfirmDeleteDataHelisaComponent } from './alert-confirm-delete-data-helisa.component';\r\n\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AlertConfirmDeleteDataHelisaService {\r\n\r\n  constructor(public dialog: MatDialog) { }\r\n\r\n  openDialog(title?: string, content?: string, okLabel?: string, cancelLabel?: string): Observable<boolean> {\r\n    const dialogRef: MatDialogRef<AlertConfirmDeleteDataHelisaComponent> = this.dialog.open(AlertConfirmDeleteDataHelisaComponent, {\r\n      width: '250px',\r\n      data: { title, content, okLabel, cancelLabel }\r\n    });\r\n\r\n    return dialogRef.afterClosed();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { MatDialog, MatDialogRef } from '@angular/material';\r\nimport { Observable } from 'rxjs';\r\nimport { AlertDefineResidentialPhysicalStructureHelisaComponent } from './alert-define-residential-physical-structure-helisa.component';\r\n\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AlertDefineResidentialPhysicalStructureHelisaService {\r\n\r\n  constructor(public dialog: MatDialog) { }\r\n\r\n  openDialog(title?: string, content?: string): Observable<boolean> {\r\n    const dialogRef: MatDialogRef<AlertDefineResidentialPhysicalStructureHelisaComponent> = this.dialog.open(AlertDefineResidentialPhysicalStructureHelisaComponent, {\r\n      width: '250px',\r\n      data: { title, content}\r\n    });\r\n\r\n    return dialogRef.afterClosed();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { MatDialog, MatDialogRef } from '@angular/material';\r\nimport { Observable } from 'rxjs';\r\nimport { AlertDefineCommercialStructureHelisaComponent } from './alert-define-commercial-structure-helisa.component';\r\n\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AlertDefineCommercialStructureHelisaService {\r\n\r\n  constructor(public dialog: MatDialog) { }\r\n\r\n  openDialog(title?: string, content?: string): Observable<boolean> {\r\n    const dialogRef: MatDialogRef<AlertDefineCommercialStructureHelisaComponent> = this.dialog.open(AlertDefineCommercialStructureHelisaComponent, {\r\n      width: '250px',\r\n      data: { title, content}\r\n    });\r\n\r\n    return dialogRef.afterClosed();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { MatDialog, MatDialogRef } from '@angular/material';\r\nimport { Observable } from 'rxjs';\r\nimport { AlertDefineParkingStructureHelisaComponent } from './alert-define-parking-structure-helisa.component';\r\n\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AlertDefineParkingStructureHelisaService {\r\n\r\n  constructor(public dialog: MatDialog) { }\r\n\r\n  openDialog(title?: string, content?: string): Observable<boolean> {\r\n    const dialogRef: MatDialogRef<AlertDefineParkingStructureHelisaComponent> = this.dialog.open(AlertDefineParkingStructureHelisaComponent, {\r\n      width: '250px',\r\n      data: { title, content}\r\n    });\r\n\r\n    return dialogRef.afterClosed();\r\n  }\r\n}\r\n"],"names":["_.remove","_.orderBy","DEFAULT_TITLE","DEFAULT_CONTENT"],"mappings":"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"}
