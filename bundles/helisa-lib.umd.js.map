{"version":3,"file":"helisa-lib.umd.js.map","sources":["ng://helisa-lib/lib/components/input-with-button/input-with-button.component.ts","ng://helisa-lib/lib/components/toast-helisa/toast-helisa.component.ts","ng://helisa-lib/lib/components/toast-helisa/toast-helisa.service.ts","ng://helisa-lib/lib/components/toast-helisa/toast-type.enum.ts","ng://helisa-lib/lib/components/alert-helisa/alert-helisa-type.enum.ts","ng://helisa-lib/lib/components/alert-helisa/alert-helisa.component.ts","ng://helisa-lib/lib/components/alert-helisa/alert-helisa.service.ts","ng://helisa-lib/lib/components/dependency-table-helisa/dependency-table-helisa.service.ts","ng://helisa-lib/lib/components/table-helisa/table-helisa.service.ts","ng://helisa-lib/lib/components/dependency-table-helisa/dependency-table-helisa.component.ts","node_modules/tslib/tslib.es6.js","ng://helisa-lib/lib/components/input-helisa/input-helisa.component.ts","ng://helisa-lib/lib/components/table-helisa/table-helisa.interface.ts","ng://helisa-lib/lib/components/table-helisa/table-helisa-connect.component.ts","ng://helisa-lib/lib/components/table-helisa/table-helisa.component.ts","ng://helisa-lib/lib/components/date-helisa/date-helisa.component.ts","ng://helisa-lib/lib/components/tree-helisa/tree-helisa.service.ts","ng://helisa-lib/lib/components/tree-helisa/tree-helisa-connect.ts","ng://helisa-lib/lib/components/tree-helisa/tree-helisa.component.ts","ng://helisa-lib/lib/components/autocomplete-helisa/autocomplete-helisa.component.service.ts","ng://helisa-lib/lib/components/autocomplete-helisa/autocomplete-helisa.component.ts","ng://helisa-lib/lib/directives/options-scroll.directive.ts","ng://helisa-lib/lib/directives/tooltip.directive.ts","ng://helisa-lib/lib/directives/external-link.directive.ts","ng://helisa-lib/lib/pipes/external-link.pipe.ts","ng://helisa-lib/lib/components/alert-uncompleted-data-helisa/alert-uncompleted-data-helisa.component.ts","ng://helisa-lib/lib/components/alert-lost-data-helisa/alert-lost-data-helisa.component.ts","ng://helisa-lib/lib/components/alert-delete-data-helisa/alert-delete-data-helisa.component.ts","ng://helisa-lib/lib/components/alert-uncompleted-selected-data-helisa/alert-uncompleted-selected-data-helisa.component.ts","ng://helisa-lib/lib/components/alert-information-not-valid-helisa/alert-information-not-valid-helisa.component.ts","ng://helisa-lib/lib/helisa-lib.module.ts","ng://helisa-lib/lib/components/alert-uncompleted-data-helisa/alert-uncompleted-data-helisa.service.ts","ng://helisa-lib/lib/components/alert-lost-data-helisa/alert-lost-data-helisa.service.ts","ng://helisa-lib/lib/components/alert-delete-data-helisa/alert-delete-data-helisa.service.ts","ng://helisa-lib/lib/components/alert-uncompleted-selected-data-helisa/alert-uncompleted-selected-data-helisa.service.ts","ng://helisa-lib/lib/components/alert-information-not-valid-helisa/alert-information-not-valid-helisa.service.ts"],"sourcesContent":["import { Component, OnInit, Input, Output, EventEmitter, ViewChild, ElementRef } from '@angular/core';\r\nimport { FormControl, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'hel-input-with-button',\r\n  templateUrl: './input-with-button.component.html',\r\n  styleUrls: ['./input-with-button.component.sass']\r\n})\r\nexport class InputWithButtonComponent implements OnInit {\r\n\r\n  @Input() placeholder: string = '';\r\n  @Input() inputFormControl: FormControl = new FormControl('', Validators.required);\r\n  @Input() requiredMessage: string = 'El campo es requerido';\r\n  @Input() value: string = '';\r\n  @Input() isFocused: boolean = false;\r\n  @ViewChild('inputText') nameField: ElementRef;\r\n\r\n  @Output() done: EventEmitter<string> = new EventEmitter<string>();\r\n  @Output() cancel: EventEmitter<void> = new EventEmitter<void>();\r\n\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n    if (this.value !== '') {\r\n      this.inputFormControl.setValue(this.value);\r\n    }\r\n    this.nameField.nativeElement.focus();\r\n  }\r\n\r\n\r\n  onDone(): void {\r\n    if (this.inputFormControl.valid) {\r\n      this.done.emit(this.inputFormControl.value);\r\n    }\r\n  }\r\n\r\n  onCancel(): void {\r\n    this.cancel.emit();\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MAT_SNACK_BAR_DATA } from '@angular/material';\r\nimport { ToastType } from './toast-type.enum';\r\n\r\n// @dynamic\r\n@Component({\r\n  selector: 'hel-toast',\r\n  templateUrl: './toast-helisa.component.html',\r\n  styleUrls: ['./toast-helisa.component.sass']\r\n})\r\nexport class ToastHelisaComponent implements OnInit {\r\n\r\n  constructor(@Inject(MAT_SNACK_BAR_DATA) public data: {type: ToastType, message: string, subMessages?: string[]}) { }\r\n\r\n  ngOnInit(): void {}\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material';\r\nimport { ToastType } from './toast-type.enum';\r\nimport { ToastHelisaComponent } from './toast-helisa.component';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ToastHelisaService {\r\n\r\n  durationInSeconds: number = 5;\r\n\r\n  constructor(private snackBar: MatSnackBar) { }\r\n\r\n  showToast(type: ToastType, message: string, subMessages?: string[]): void {\r\n    subMessages = subMessages ? subMessages : [];\r\n    this.snackBar.openFromComponent(ToastHelisaComponent, {\r\n      data: {message, type, subMessages},\r\n      duration: this.durationInSeconds * 1000\r\n    });\r\n  }\r\n}\r\n","export enum ToastType {\r\n    DONE = 'done',\r\n    ERROR = 'error',\r\n    INFO = 'info'\r\n}\r\n","export enum AlertHelisaType {\r\n    ERROR = 'ERROR',\r\n    CONFIRMATION = 'CONFIRMATION'\r\n}\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\nimport { AlertHelisaType } from './alert-helisa-type.enum';\r\n\r\ninterface AlertHelisaProperties {\r\n  title: string;\r\n  content: string;\r\n  type: AlertHelisaType;\r\n  okLabel: string;\r\n  cancelLabel: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'hel-alert',\r\n  templateUrl: './alert-helisa.component.html',\r\n  styleUrls: ['./alert-helisa.component.sass']\r\n})\r\nexport class AlertHelisaComponent implements OnInit {\r\n\r\n  content: string;\r\n  title: string;\r\n  hasCancel: boolean;\r\n  okLabel: string;\r\n  cancelLabel: string;\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<AlertHelisaComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: AlertHelisaProperties\r\n  ) {\r\n    this.content = data.content;\r\n    this.title = data.title;\r\n    this.okLabel = data.okLabel;\r\n    if (this.okLabel === undefined) {\r\n      this.okLabel = 'aceptar';\r\n    }\r\n    this.cancelLabel = data.cancelLabel;\r\n    if (this.cancelLabel === undefined) {\r\n      this.cancelLabel = 'cancelar';\r\n    }\r\n    this.hasCancel = data.type === AlertHelisaType.CONFIRMATION;\r\n    dialogRef.disableClose = true;\r\n    dialogRef.keydownEvents().subscribe((event: KeyboardEvent) => {\r\n      if (event.code === 'Escape') {\r\n        this.dialogRef.close(this.onCancel());\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  onCancel(): void {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { MatDialog, MatDialogRef } from '@angular/material';\r\nimport { Observable } from 'rxjs';\r\nimport { AlertHelisaType } from './alert-helisa-type.enum';\r\nimport { AlertHelisaComponent } from './alert-helisa.component';\r\n\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AlertHelisaService {\r\n\r\n  constructor(public dialog: MatDialog) { }\r\n\r\n  openDialog(type: AlertHelisaType, title: string, content: string, okLabel?: string, cancelLabel?: string): Observable<boolean> {\r\n    const dialogRef: MatDialogRef<AlertHelisaComponent> = this.dialog.open(AlertHelisaComponent, {\r\n      width: '250px',\r\n      data: { title, content, type, okLabel, cancelLabel }\r\n    });\r\n\r\n    return dialogRef.afterClosed();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, Subject, BehaviorSubject } from 'rxjs';\r\nimport {ColumnConfig, AddRowButton, ConfigRowStyles, TotalTableHelisa} from '../table-helisa/table-helisa.interface';\r\nimport { EventDependency} from './dependency-table-helisa.component';\r\n\r\nexport interface ConfigTable<T> {\r\n  columns: Array<ColumnConfig>;\r\n  isRemote: boolean;\r\n  dataSource?: Array<T>;\r\n  count?: number;\r\n  order?: number;\r\n  showTitle?: boolean;\r\n  indexRowSelect?: number;\r\n  isDragged?: boolean;\r\n  addRowButton?: AddRowButton;\r\n  configRowStylesFromColumn?: Array<ConfigRowStyles<T>>;\r\n  isCellSelection?: boolean;\r\n  addBookButton?: boolean;\r\n}\r\n\r\n@Injectable()\r\nexport class DependencyTableHelisaService<T> {\r\n\r\n\r\n  tables: Subject<ConfigTable<T>[]> = new Subject();\r\n  infoTables: Array<ConfigTable<T>> = new Array();\r\n\r\n  private emitVisibilityButton$: Subject<EventDependency<boolean>> = new Subject<EventDependency<boolean>>();\r\n  emitVisibilityButton: Observable<EventDependency<boolean>> = this.emitVisibilityButton$.asObservable();\r\n\r\n  private emitVisibilityAllButtons$: Subject<boolean> = new Subject<boolean>();\r\n  emitVisibilityAllButtons: Observable<boolean> = this.emitVisibilityAllButtons$.asObservable();\r\n\r\n  private emitIsCellSelection$: Subject<EventDependency<boolean>> = new Subject<EventDependency<boolean>>();\r\n  emitIsCellSelection: Observable<EventDependency<boolean>> = this.emitIsCellSelection$.asObservable();\r\n\r\n  private emitChangeColumns$: Subject<EventDependency<ColumnConfig[]>> = new Subject<EventDependency<ColumnConfig[]>>();\r\n  emitChangeColumns: Observable<EventDependency<ColumnConfig[]>> = this.emitChangeColumns$.asObservable();\r\n\r\n  emitTotal: Subject<EventDependency<TotalTableHelisa>> = new Subject<EventDependency<TotalTableHelisa>>();\r\n  emitNextPage: Subject<EventDependency<T[]>> = new Subject<EventDependency<T[]>>();\r\n\r\n  constructor() { }\r\n\r\n  /**\r\n   * retorna un Observable<ConfigTable[]>\r\n   */\r\n  getTables(): Observable<ConfigTable<T>[]> {\r\n    return this.tables;\r\n  }\r\n\r\n  /**\r\n   * Actualiza las dependencias, agrendo la tabla que envian en el orden correspondiente o al final.\r\n   * TambiÃ©n remueve las dependecias que hay apartir de la tabla segun se indique en el parametro.\r\n   * @param configTable Objeto que contiene la configuraciÃ³n para la tabla.\r\n   * @param withRemoveDependency boolean por defecto es false, si es 'true' indica que remueva las dependencias apartir de el.\r\n   */\r\n  updateDependency(configTable: ConfigTable<T>, withRemoveDependency: boolean = false): void {\r\n    if (withRemoveDependency) {\r\n      this.infoTables = this.infoTables.slice(0, !configTable.order ? 0 : configTable.order);\r\n    }\r\n    if (!configTable.order || configTable.order >= this.infoTables.length) {\r\n      configTable.order = this.infoTables.length;\r\n    }\r\n    this.infoTables[configTable.order] = configTable;\r\n    if (configTable.isRemote) {\r\n      configTable.dataSource = null;\r\n      if (configTable.count === null) {\r\n        throw new Error('hace falta el count');\r\n      }\r\n    } else {\r\n      if (configTable.dataSource === null) {\r\n        throw new Error('hace falta el dataSource');\r\n      }\r\n      configTable.count = configTable.dataSource.length;\r\n    }\r\n    this.tables.next(this.infoTables);\r\n  }\r\n\r\n  /**\r\n   * Emite un evento de total con la informaciÃ³n para la tabla correspondiente\r\n   * @param event wrapper que contiene el indice de la tabla y la informaciÃ³n de la pagina\r\n   */\r\n  setTotal(event: EventDependency<TotalTableHelisa>): void {\r\n    this.emitTotal.next(event);\r\n  }\r\n\r\n  /**\r\n   * Emite un evento de agregar pagina con la pagina para la tabla correspondiente\r\n   * @param event wrapper que contiene el indice de la tabla y la informaciÃ³n de la pagina\r\n   */\r\n  addPage(event: EventDependency<T[]>): void {\r\n    this.emitNextPage.next(event);\r\n  }\r\n\r\n  selectIndexRow(config: ConfigTable<T>): void {\r\n    if (this.infoTables[config.order]) {\r\n      this.infoTables[config.order].indexRowSelect = config.indexRowSelect;\r\n      this.tables.next(this.infoTables);\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * Muestra o esconde el boton una tabla en especifico\r\n   * @param event para indicar el index de la tabla y en \"data\" true o false\r\n   */\r\n  changeVisibilityButton(event: EventDependency<boolean>): void {\r\n    this.emitVisibilityButton$.next(event);\r\n  }\r\n\r\n\r\n  /**\r\n   * Esconde los botones de todas las tablas\r\n   * @param show indicar si se muestran o no todos los botones de las tablas\r\n   */\r\n  changeVisibilityAllButtons(show: boolean): void {\r\n    this.emitVisibilityAllButtons$.next(show);\r\n  }\r\n\r\n  /**\r\n   * Para habilitar el manejo de selecciÃ³n de celda\r\n   * @param event para indicar el index de la tabla y en \"data\" true o false\r\n   */\r\n  changeisCellSelection(event: EventDependency<boolean>): void {\r\n    this.emitIsCellSelection$.next(event);\r\n  }\r\n\r\n   /**\r\n    * Para habilitar el cambio de columnas\r\n    * @param event para indicar el index de la tabla y en \"data\" columnas\r\n    */\r\n  changeColumnsByTable( event: EventDependency<ColumnConfig[]>): void {\r\n    this.emitChangeColumns$.next(event);\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {BehaviorSubject, Observable, Subject} from 'rxjs';\r\nimport {TotalTableHelisa} from './table-helisa.interface';\r\nimport {TableHelisaComponent} from './table-helisa.component';\r\n\r\nexport interface TableHelisaServiceInfo<T> {\r\n  obj: T;\r\n  table?: {} | TableHelisaComponent<T>;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TableHelisaService<T> {\r\n\r\n  private emitChangeSource: Subject<TableHelisaServiceInfo<TotalTableHelisa>> = new Subject<TableHelisaServiceInfo<TotalTableHelisa>>();\r\n  private emitNextPage: Subject<TableHelisaServiceInfo<T[]>> = new Subject<TableHelisaServiceInfo<T[]>>();\r\n\r\n  totalReturn: Observable<TableHelisaServiceInfo<TotalTableHelisa>> = this.emitChangeSource.asObservable();\r\n  nextPageReturn: Observable<TableHelisaServiceInfo<T[]>> = this.emitNextPage.asObservable();\r\n\r\n  private emitVisibleButton$: Subject<boolean> = new Subject<boolean>();\r\n  /**\r\n   * Observable para saber si se debe mostrar o esconder el boton de add row\r\n   */\r\n  emitVisibleButton: Observable<boolean> = this.emitVisibleButton$.asObservable();\r\n\r\n  setTotal(total: TotalTableHelisa, table?: TableHelisaComponent<TotalTableHelisa>): void {\r\n    this.emitChangeSource.next({obj: total, table});\r\n  }\r\n\r\n  addPage(page: T[], table?: TableHelisaComponent<T>): void {\r\n    this.emitNextPage.next({obj: page, table});\r\n  }\r\n\r\n  /**\r\n   * para modificar el valor de si se muestra o no el boton de add row de la tabla\r\n   * @param change indicar si se muestra o no el boton de add row de la tabla\r\n   */\r\n  changeVisibilityButton(change: boolean): void {\r\n    this.emitVisibleButton$.next(change);\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, EventEmitter, Output, QueryList, ViewChildren, Input } from '@angular/core';\r\nimport { DependencyTableHelisaService, ConfigTable } from './dependency-table-helisa.service';\r\nimport { ColumnConfig, RequestTableHelisa, SelectObject, TotalTableHelisa } from '../table-helisa/table-helisa.interface';\r\nimport { TableHelisaService } from '../table-helisa/table-helisa.service';\r\nimport { TableHelisaComponent } from '../table-helisa/table-helisa.component';\r\n\r\nexport interface EventDependency<T> {\r\n  index: number;\r\n  data: T;\r\n}\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'hel-dependency-table',\r\n  templateUrl: './dependency-table-helisa.component.html',\r\n  styleUrls: ['./dependency-table-helisa.component.sass'],\r\n  providers: [DependencyTableHelisaService]\r\n})\r\nexport class DependencyTableHelisaComponent<T> implements OnInit {\r\n\r\n  tables: Array<ConfigTable<T>> = [];\r\n  @ViewChildren('viewTables') viewTables: QueryList<TableHelisaComponent<T>>;\r\n  @Input() showToolTip: boolean = true;\r\n\r\n  /**\r\n   * deprecated, use selectObject\r\n   */\r\n  @Output() selected: EventEmitter<EventDependency<T>> = new EventEmitter<EventDependency<T>>();\r\n  @Output() selectObject: EventEmitter<EventDependency<{} | T>> = new EventEmitter<EventDependency<{}  | T>>();\r\n  @Output() nextPage: EventEmitter<EventDependency<{} | T>> = new EventEmitter<EventDependency<{} | T>>();\r\n  @Output() total: EventEmitter<EventDependency<{} | T>> = new EventEmitter<EventDependency<{}>>();\r\n  @Output() sort: EventEmitter<EventDependency<{} | T>> = new EventEmitter<EventDependency<{}>>();\r\n  @Output() drop: EventEmitter<EventDependency<{} | T>> = new EventEmitter<EventDependency<{}>>();\r\n  @Output() addRow: EventEmitter<number> = new EventEmitter<number>();\r\n  @Output() selectCell: EventEmitter<EventDependency<{} | T>> = new EventEmitter<EventDependency<{} | T>>();\r\n  @Output() bookClicked: EventEmitter<EventDependency<{} | T>> = new EventEmitter<EventDependency<{} | T>>();\r\n  selectedObject: EventDependency<{}> = null;\r\n\r\n\r\n  /**\r\n   * Tiempo antes de ocultarla el mensaje del tooltip\r\n   */\r\n  @Input() hideDelay: number = 600;\r\n\r\n  /**\r\n   * Tiempo antes de mostra el mensaje del tooltip\r\n   */\r\n  @Input() showDelay: number = 500;\r\n\r\n\r\n  constructor(private dependencyTableHelisaService: DependencyTableHelisaService<T>, private tableService: TableHelisaService<T>) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getTables();\r\n    this.dependencyTableHelisaService.emitNextPage.subscribe(\r\n      (event: EventDependency<T[]>) => {\r\n        this.tableService.addPage(event.data, this.viewTables.toArray()[event.index]);\r\n      }\r\n    );\r\n\r\n    this.dependencyTableHelisaService.emitTotal.subscribe(\r\n      (event: EventDependency<TotalTableHelisa>) => {\r\n        this.tableService.setTotal(event.data, this.viewTables[event.index]);\r\n      }\r\n    );\r\n\r\n    // Observable para mostrar o esconder el boton de una tabla\r\n    this.dependencyTableHelisaService.emitVisibilityButton.subscribe(\r\n      (data: EventDependency<boolean>) => {\r\n        if (!!data && data.index !== undefined) {\r\n          const table: ConfigTable<T> = this.tables[data.index];\r\n          if (!!table) {\r\n            table.addRowButton.showButton = data.data;\r\n          }\r\n        }\r\n      }\r\n    );\r\n\r\n    // Observable para mostrar o esconder los botones de todas las tablas\r\n    this.dependencyTableHelisaService.emitVisibilityAllButtons.subscribe(\r\n      (data: boolean) => {\r\n        if (data !== undefined && data != null) {\r\n          this.tables.forEach((element: ConfigTable<T>) => {\r\n            if (!!element.addRowButton) {\r\n              element.addRowButton.showButton = data;\r\n            }\r\n          });\r\n        }\r\n      }\r\n    );\r\n\r\n    // Observable para manejo de selecciÃ³n de celdas\r\n    this.dependencyTableHelisaService.emitIsCellSelection.subscribe(\r\n      (data: EventDependency<boolean>) => {\r\n        if (!!data && data.index !== undefined) {\r\n          const table: ConfigTable<T> = this.tables[data.index];\r\n          if (table) {\r\n            table.isCellSelection = data.data;\r\n          }\r\n        }\r\n      });\r\n\r\n    // Observable para manejo de columnas\r\n    this.dependencyTableHelisaService.emitChangeColumns.subscribe(\r\n      (data: EventDependency<ColumnConfig[]>) => {\r\n        if (!!data && data.index !== undefined) {\r\n          const table: ConfigTable<T> = this.tables[data.index];\r\n          if (table) {\r\n            table.columns = data.data;\r\n          }\r\n        }\r\n      });\r\n  }\r\n\r\n  /**\r\n   * retorna el servicio que gestiona el componente.\r\n   */\r\n  getService(): DependencyTableHelisaService<T> {\r\n    return this.dependencyTableHelisaService;\r\n  }\r\n\r\n  /**\r\n   * Obtiene un observable con las tablas dependientes desde el servicio.\r\n   */\r\n  getTables(): void {\r\n    this.dependencyTableHelisaService.getTables()\r\n      .subscribe((tables: ConfigTable<T>[]) => {\r\n        this.tables = tables;\r\n      }\r\n      );\r\n  }\r\n\r\n  /**\r\n   * Evento que se dispara desde una tabla, emitiendo un nuevo evento con el inidice de la tabla que dispara el evento y el evento generado.\r\n   * @param index indica el indice de la tabla seleccionada\r\n   * @param data retorna la fila que fue seleccionada\r\n   */\r\n  onSelectedDependency(index: number, event: SelectObject<T>): void {\r\n    this.selectedObject = { index, data: event };\r\n    this.selected.emit({ index, data: event.value });\r\n    this.selectObject.emit({ index, data: event });\r\n  }\r\n\r\n  /**\r\n   * Evento que se dispara desde una tabla, emitiendo un nuevo evento con el inidice de la tabla que dispara el evento y el evento generado.\r\n   * @param index indica el indice de la tabla que genera el evento\r\n   * @param event evento generado desde la tabla\r\n   */\r\n  onNextPage(index: number, event: RequestTableHelisa<T>): void {\r\n    this.nextPage.emit({ index, data: event });\r\n  }\r\n\r\n  /**\r\n   * Evento que se dispara desde una tabla, emitiendo un nuevo evento con el inidice de la tabla que dispara el evento y el evento generado.\r\n   * @param index indica el indice de la tabla que genera el evento\r\n   * @param event evento generado desde la tabla\r\n   */\r\n  onTotal(index: number, event: EventDependency<T>): void {\r\n    this.total.emit({ index, data: event });\r\n  }\r\n\r\n  /**\r\n   * Evento que se dispara desde una tabla, emitiendo un nuevo evento con el inidice de la tabla que dispara el evento y el evento generado.\r\n   * @param index indica el indice de la tabla que genera el evento\r\n   * @param event evento generado desde la tabla\r\n   */\r\n  onSort(index: number, event: EventDependency<T>): void {\r\n    this.sort.emit({ index, data: event });\r\n  }\r\n\r\n  /**\r\n   * Evento que se dispara desde una tabla, emitiendo un nuevo evento con el inidice de la tabla que dispara el evento y el evento generado.\r\n   * @param index indica el indice de la tabla que genera el evento\r\n   * @param event evento generado desde la tabla\r\n   */\r\n  onDrop(index: number, event: EventDependency<T>): void {\r\n    this.drop.emit({ index, data: event });\r\n  }\r\n\r\n  /**\r\n   * Evento que se dispara desde una tabla, emite el indice de la tabla al cual se le debe aÃ±adir una nueva fila\r\n   * @param index indica el indice de la tabla de la cual se dispara el evento\r\n   */\r\n  onAddRow(index: number): void {\r\n    this.addRow.emit(index);\r\n  }\r\n\r\n  selectedCell(index: number, event: EventDependency<T>): void {\r\n    if (this.tables[index].isCellSelection) {\r\n      this.selectCell.emit({ index, data: event });\r\n    }\r\n  }\r\n\r\n  onBookClicked(index: number, event: EventDependency<T>): void {\r\n    this.bookClicked.emit({ index, data: event });\r\n  }\r\n}\r\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import {Component, EventEmitter, Input, OnInit, Output, ViewChild, ElementRef} from '@angular/core';\r\nimport {FormControl} from '@angular/forms';\r\n\r\nexport enum InputHelisaType {\r\n  DEFAULT, IDENTITY, NUMERIC, DOUBLE\r\n}\r\n\r\n@Component({\r\n  selector: 'hel-input',\r\n  templateUrl: './input-helisa.component.html',\r\n  styleUrls: ['./input-helisa.component.sass']\r\n})\r\nexport class InputHelisaComponent implements OnInit {\r\n\r\n  private readonly DECIMAL_SEPARATOR: string = '.';\r\n  private readonly THOUSAND_SEPARATOR: string = ',';\r\n\r\n  @Input() placeholder: string = '';\r\n  @Input() floatLabel: 'never' | 'always' | 'auto' = 'never';\r\n\r\n  /** Activar o desactivar el autocompletado\r\n   * (Caracteristica de los navegadores para campos comunes como\r\n   * Direccion , Usuario, Password ... etc)\r\n   */\r\n  @Input() autocompleteMode: boolean = false;\r\n\r\n  // Mostrar o no el icono de buscar\r\n  @Input() isSearch: boolean = false;\r\n  // @Input() inputFormControl: FormControl = new FormControl('');\r\n  @Input() isFocused: boolean = false;\r\n\r\n  /**\r\n   * Deprecated\r\n   */\r\n  @Input() disabled: boolean = false;\r\n  @Input() type: InputHelisaType = InputHelisaType.DEFAULT;\r\n\r\n  /**\r\n   * Deprecated\r\n   */\r\n  @Output() setValue: EventEmitter<string> = new EventEmitter<string>();\r\n\r\n  @Output() blur: EventEmitter<any> = new EventEmitter();\r\n\r\n  formControlMask: FormControl = new FormControl('');\r\n  private realValue: string = '';\r\n  private inputFormReal: FormControl = new FormControl('');\r\n\r\n  @ViewChild('inputText') nameInput: ElementRef;\r\n\r\n  constructor() {\r\n  }\r\n\r\n  @Input()\r\n  set inputFormControl(formControl: FormControl) {\r\n    this.inputFormReal = formControl;\r\n    this.inputFormReal.valueChanges.subscribe((data: string) => {\r\n      this.statusChange(this.inputFormReal.status);\r\n      if (this.getMaskedValue(data) !== this.formControlMask.value) {\r\n        this.change(data);\r\n      }\r\n    });\r\n    this.formControlMask.setValidators(this.inputFormReal.validator);\r\n    this.change(this.inputFormReal.value);\r\n    // disable control\r\n    if (formControl.disabled) {\r\n      this.formControlMask.disable({onlySelf: true});\r\n    }\r\n    this.inputFormReal.statusChanges.subscribe(\r\n      (data: string) => {\r\n        this.statusChange(data);\r\n      }\r\n    );\r\n    if (this.isFocused) {\r\n      this.onFocus(null);\r\n    }\r\n  }\r\n\r\n\r\n  private statusChange(data: string): void {\r\n    if (data === 'INVALID') {\r\n      this.formControlMask.setErrors({key: 'Error de validaciÃ³n.'});\r\n    } else {\r\n      this.formControlMask.setErrors(null);\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    if (this.isFocused) {\r\n      this.nameInput.nativeElement.focus();\r\n    }\r\n  }\r\n\r\n  search(): void {\r\n    this.setValue.emit(this.realValue);\r\n  }\r\n\r\n  change(event: string): void {\r\n    if (event != null) {\r\n      event = event + '';\r\n    }\r\n    let position: number = this.nameInput.nativeElement.selectionStart;\r\n    const length: number = event ? event.length : 0;\r\n    this.realValue = this.getRealValue(event);\r\n    if (this.getMaskedValue(this.realValue) !== this.formControlMask.value) {\r\n      this.formControlMask.setValue(this.getMaskedValue(this.realValue));\r\n      position += this.nameInput.nativeElement.value.length - length;\r\n      this.nameInput.nativeElement.selectionStart = position;\r\n      this.nameInput.nativeElement.selectionEnd = position;\r\n    }\r\n    this.inputFormReal.setValue(this.realValue);\r\n  }\r\n\r\n  private getMaskedValue(str: string): string {\r\n    if (str == null) {\r\n      return str;\r\n    }\r\n    str = str + '';\r\n    if (this.type === InputHelisaType.DEFAULT) {\r\n      return str;\r\n    }\r\n    let maskedStr: string = '';\r\n    if (this.type === InputHelisaType.IDENTITY) {\r\n      for (let i: number = str.length - 1, j: number = 0; i >= 0; i-- , j++) {\r\n        if (j > 0 && j % 3 === 0) {\r\n          maskedStr = this.DECIMAL_SEPARATOR + maskedStr;\r\n        }\r\n        maskedStr = str[i] + maskedStr;\r\n      }\r\n    }\r\n    if (this.type === InputHelisaType.NUMERIC) {\r\n      for (let i: number = str.length - 1, j: number = 0; i >= 0; i-- , j++) {\r\n        if (j > 0 && j % 3 === 0) {\r\n          maskedStr = this.THOUSAND_SEPARATOR + maskedStr;\r\n        }\r\n        maskedStr = str[i] + maskedStr;\r\n      }\r\n    }\r\n    if (this.type === InputHelisaType.DOUBLE) {\r\n      if (str.indexOf(this.DECIMAL_SEPARATOR) >= 0) {\r\n        for (let i: number = str.indexOf(this.DECIMAL_SEPARATOR); i < str.length; i++) {\r\n          maskedStr += str[i];\r\n        }\r\n      }\r\n      for (let i: number = (str.indexOf(this.DECIMAL_SEPARATOR) >= 0 ? str.indexOf(this.DECIMAL_SEPARATOR) : str.length) - 1,\r\n             j: number = 0; i >= 0; i-- , j++) {\r\n\r\n        if (j > 0 && j % 3 === 0) {\r\n          maskedStr = this.THOUSAND_SEPARATOR + maskedStr;\r\n        }\r\n        maskedStr = str[i] + maskedStr;\r\n      }\r\n    }\r\n    return maskedStr;\r\n  }\r\n\r\n  private getRealValue(str: string): string {\r\n    if (str == null) {\r\n      return str;\r\n    }\r\n    str = str + '';\r\n    let realStr: string = '';\r\n    if (this.type === InputHelisaType.DEFAULT) {\r\n      return str;\r\n    }\r\n    if (this.type === InputHelisaType.IDENTITY) {\r\n      for (const strItem of str) {\r\n        if (strItem.match('[a-zA-Z0-9]')) {\r\n          realStr += strItem;\r\n        }\r\n      }\r\n    }\r\n    if (this.type === InputHelisaType.NUMERIC) {\r\n      for (const strItem of str) {\r\n        if (strItem.match('[0-9]')) {\r\n          realStr += strItem;\r\n        }\r\n      }\r\n    }\r\n    if (this.type === InputHelisaType.DOUBLE) {\r\n      let haveDot: boolean = false;\r\n\r\n      for (const strItem of str) {\r\n        if (strItem.match('[0-9]') || ((strItem === this.DECIMAL_SEPARATOR) && !haveDot)) {\r\n          realStr += strItem;\r\n        }\r\n        haveDot = haveDot || (strItem === this.DECIMAL_SEPARATOR);\r\n      }\r\n    }\r\n    return realStr;\r\n  }\r\n\r\n  onFocus($event: FocusEvent): void {\r\n    if ((this.type === InputHelisaType.NUMERIC || this.type === InputHelisaType.DOUBLE) &&\r\n      Number(this.getRealValue(this.nameInput.nativeElement.value)) === 0) {\r\n      this.nameInput.nativeElement.select();\r\n    }\r\n  }\r\n}\r\n","import {SortDirection} from '@angular/material';\r\nimport { RowData } from './table-helisa.component';\r\n\r\nexport enum ColumnType {\r\n  NORMAL, URL\r\n}\r\n\r\nexport interface ColumnConfig {\r\n  name: string;\r\n  title?: string;\r\n  visible?: boolean;\r\n  sortable?: boolean;\r\n  groupable?: boolean;\r\n  totalType?: TotalType;\r\n  searchable?: boolean;\r\n  sortDirection?: SortDirection;\r\n  subtitle?: string;\r\n  colspanTitle?: number;\r\n  colspanSubtitle?: number;\r\n  columnStyle?: string;\r\n  columnType?: ColumnType;\r\n}\r\n\r\nexport interface AddRowButton {\r\n  text: string;\r\n  showButton: boolean;\r\n}\r\n\r\nexport enum EventScope {\r\n  USER, CODE_CALL\r\n}\r\n\r\nexport enum TotalType {\r\n  SUM, AVERAGE, COUNT\r\n}\r\n\r\nexport enum ChangeColumnConfigurationType {\r\n  SORT, UNKNOWN, TOTAL\r\n}\r\n\r\nexport interface EventColumn {\r\n  column: ColumnConfig;\r\n  columnConfigurations: Array<ColumnConfig>;\r\n  type: ChangeColumnConfigurationType;\r\n}\r\n\r\nexport interface TotalTableHelisa {\r\n  column: ColumnConfig;\r\n  value: number;\r\n}\r\n\r\nexport interface TotalGroup {\r\n  sum: number;\r\n  count: number;\r\n}\r\n\r\nexport interface EventSearch {\r\n  text: string;\r\n  columnConfigurations: Array<ColumnConfig>;\r\n}\r\n\r\nexport interface RequestTableHelisa<T> {\r\n  page: number;\r\n  body: {} | T;\r\n}\r\n\r\nexport interface DropElement<T> {\r\n value: T;\r\n order: number;\r\n}\r\n\r\nexport interface SelectObject<T> {\r\n  value: T;\r\n  scope: EventScope;\r\n}\r\n\r\nexport enum TableHelisaType {\r\n  REMOTE, LOCAL\r\n}\r\n\r\n\r\nexport interface Cell<T> {\r\n  column: ColumnConfig;\r\n  row: RowData<T> | T;\r\n }\r\n\r\nexport interface ConfigCellStyles<T> {\r\n   cellData: T;\r\n   classCell: string;\r\n }\r\n\r\nexport interface ConfigRowStyles<T> {\r\n  column: ColumnConfig;\r\n  data: {} | T;\r\n  classRow: string;\r\n}\r\n\r\n// @dynamic\r\nexport class ColumnConfigUtil<T> {\r\n\r\n  getValue(obj: T, column: ColumnConfig): T | number | string {\r\n    return column.name.split('.').reduce((o: T, field: string) => o && o[field], obj);\r\n  }\r\n}\r\n\r\n","import {ColumnConfig} from './table-helisa.interface';\r\nimport {Observable} from 'rxjs';\r\n\r\n\r\nexport class TableHelisaConnectComponent<T> {\r\n  page: number;\r\n  isLastPage: boolean;\r\n  isUsed: boolean;\r\n\r\n  constructor() {\r\n    this.page = 0;\r\n    this.isLastPage = false;\r\n    this.isUsed = false;\r\n  }\r\n\r\n  public getBody(columnConfig: Array<ColumnConfig>, search: string): {} {\r\n    return {};\r\n  }\r\n\r\n  nextPage(): number {\r\n    return this.page++;\r\n  }\r\n}\r\n","import { AfterViewInit, Component, EventEmitter, Input, OnInit, Output, ViewChild, ElementRef } from '@angular/core';\r\nimport { MatSort, MatTable, MatTableDataSource } from '@angular/material';\r\nimport { Sort } from '@angular/material/typings/sort';\r\n\r\nimport {\r\n  AddRowButton,\r\n  Cell,\r\n  ChangeColumnConfigurationType,\r\n  ColumnConfig,\r\n  ColumnConfigUtil,\r\n  ConfigCellStyles,\r\n  ConfigRowStyles,\r\n  DropElement,\r\n  EventColumn,\r\n  EventScope,\r\n  EventSearch,\r\n  RequestTableHelisa,\r\n  SelectObject,\r\n  TableHelisaType,\r\n  TotalGroup,\r\n  TotalType,\r\n  ColumnType,\r\n  TotalTableHelisa\r\n} from './table-helisa.interface';\r\nimport { TableHelisaService, TableHelisaServiceInfo } from './table-helisa.service';\r\nimport { TableHelisaConnectComponent } from './table-helisa-connect.component';\r\nimport { CdkDragDrop, moveItemInArray } from '@angular/cdk/drag-drop';\r\nimport { of } from 'rxjs';\r\n\r\nexport interface RowData<T> {\r\n  data: {} | T;\r\n  rowType: RowType;\r\n}\r\n\r\nenum RowType {\r\n  GROUP_TITLE, GROUP_FOOTER, ROW\r\n}\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'hel-table',\r\n  templateUrl: './table-helisa.component.html',\r\n  styleUrls: ['./table-helisa.component.sass']\r\n})\r\nexport class TableHelisaComponent<T> implements OnInit, AfterViewInit {\r\n\r\n  private tableHelisaConnectComponent: TableHelisaConnectComponent<T>;\r\n  totalData: Array<number>;\r\n  rawData: Array<T>;\r\n  data: MatTableDataSource<RowData<T>>;\r\n  displayedColumns: string[] = [];\r\n  displayedColumnsWithTitle: string[] = [];\r\n  displayedColumnsWithSubtitle: string[] = [];\r\n  displayedColumnsWithFooter: string[] = [];\r\n  columnConfig: Array<ColumnConfig>;\r\n  selectedObject: T;\r\n  lastSearch: string;\r\n  type: TableHelisaType = TableHelisaType.LOCAL;\r\n  indexRowSelect: number;\r\n  private scrollCount: number = 0;\r\n  hasSubtitle: boolean = false;\r\n  private indexRowStartDrag: number = -1;\r\n  private lastIndexRowDrag: number = -1;\r\n  private dataBeforeDrag: { data: RowData<T>[] } = null;\r\n  private dataSource$: Array<T> = [];\r\n  private scrollX: number = 0;\r\n  private scrollY: number = 0;\r\n\r\n  @ViewChild(MatSort) matSort: MatSort;\r\n  @ViewChild(MatTable) matTable: MatTable<T>;\r\n  @ViewChild(MatTable, { read: ElementRef }) matTableElement: ElementRef;\r\n  @ViewChild('containerTable') containerTable: ElementRef;\r\n\r\n  @Output() sort: EventEmitter<EventColumn> = new EventEmitter<EventColumn>();\r\n  @Output() total: EventEmitter<EventColumn> = new EventEmitter<EventColumn>();\r\n  @Output() search: EventEmitter<EventSearch> = new EventEmitter<EventSearch>();\r\n\r\n  /**\r\n   * Deprecado, cambiar por electObject\r\n   */\r\n  @Output() select: EventEmitter<T> = new EventEmitter<T>();\r\n  @Output() selectCell: EventEmitter<Cell<T>> = new EventEmitter<Cell<T>>();\r\n  @Output() selectObject: EventEmitter<SelectObject<T>> = new EventEmitter<SelectObject<T>>();\r\n  @Output() nextPage: EventEmitter<RequestTableHelisa<T>> = new EventEmitter<RequestTableHelisa<T>>();\r\n  @Input() showTitle: boolean = true;\r\n  @Input() isCellSelection: boolean = false;\r\n  @Input() count: number;\r\n  @Input() configCellStyles: Array<ConfigCellStyles<T>>;\r\n  @Input() configRowStylesFromColumn: Array<ConfigRowStyles<T>>;\r\n  @Input() selectedCells: Cell<T>;\r\n  @Output() drop: EventEmitter<DropElement<T>> = new EventEmitter<DropElement<T>>();\r\n  @Input() isDragged: boolean = false;\r\n  @Input() addRowButton: AddRowButton = { showButton: false, text: '' };\r\n  @Output() addRow: EventEmitter<void> = new EventEmitter<void>();\r\n  @Output() bookClicked: EventEmitter<T> = new EventEmitter<T>();\r\n  @Input() addBookButton: boolean = false;\r\n  @Input() showToolTip: boolean = true;\r\n  showFooter: boolean = false;\r\n  showSearch: boolean = false;\r\n\r\n\r\n\r\n  /**\r\n   * Tiempo antes de ocultarla el mensaje del tooltip\r\n   */\r\n  @Input() hideDelay: number = 600;\r\n\r\n  /**\r\n   * Tiempo antes de mostra el mensaje del tooltip\r\n   */\r\n  @Input() showDelay: number = 500;\r\n\r\n\r\n  constructor(private tableService: TableHelisaService<T>) { }\r\n\r\n  ngOnInit(): void {\r\n    this.tableService.nextPageReturn.subscribe(\r\n      (data: TableHelisaServiceInfo<T[]>) => {\r\n        if (!data.table || data.table === this) {\r\n          this.receivePage(data.obj);\r\n        }\r\n      }\r\n    );\r\n    this.tableService.totalReturn.subscribe((info: TableHelisaServiceInfo<TotalTableHelisa>) => {\r\n      if (info) {\r\n        this.columnConfig.forEach((column: ColumnConfig, idx: number) => {\r\n          if (column === info.obj.column) {\r\n            this.totalData[idx] = this.getGroupValue(column, { sum: info.obj.value, count: this.count });\r\n          }\r\n        });\r\n      }\r\n    });\r\n    this.matSort.sortChange.subscribe(\r\n      (event: Sort) => {\r\n        const column: ColumnConfig = this.columnConfig.find((c: ColumnConfig) => c.name === event.active);\r\n        column.sortDirection = event.direction;\r\n        this.sort.emit({ column, columnConfigurations: this.columnConfig, type: ChangeColumnConfigurationType.SORT });\r\n      }\r\n    );\r\n\r\n    this.tableService.emitVisibleButton.subscribe(\r\n      (data: boolean) => {\r\n        if (data !== undefined && data != null) {\r\n          this.addRowButton.showButton = data;\r\n        }\r\n\r\n      }\r\n    );\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    if (this.isCellSelection) {\r\n      this.matTable.renderRows();\r\n    }\r\n  }\r\n\r\n  @Input()\r\n  set isRemote(w: boolean) {\r\n    this.type = w ? TableHelisaType.REMOTE : TableHelisaType.LOCAL;\r\n    this.tableHelisaConnectComponent = new TableHelisaConnectComponent<T>();\r\n    if (this.type === TableHelisaType.REMOTE) {\r\n      this.goNextPage();\r\n    } else {\r\n      this.tableHelisaConnectComponent.page++;\r\n    }\r\n  }\r\n\r\n  @Input()\r\n  set columnConfiguration(columnConfiguration: Array<ColumnConfig>) {\r\n    this.hasSubtitle = false;\r\n    this.columnConfig = columnConfiguration;\r\n    this.displayedColumns.splice(0, this.displayedColumns.length);\r\n\r\n    if (columnConfiguration) {\r\n      if (this.addBookButton) {\r\n        const columnCount: number = columnConfiguration.length;\r\n        let countSubtitle: number = 0;\r\n        let showBookButton: boolean = false;\r\n        columnConfiguration.forEach((column: ColumnConfig) => {\r\n          if (!!column.subtitle) {\r\n            countSubtitle = countSubtitle + 1;\r\n          }\r\n          if ((!showBookButton) && (column.name === 'bookButton')) {\r\n            showBookButton = true;\r\n          }\r\n        });\r\n        const subtitleTemp: boolean = columnCount === countSubtitle;\r\n        if (!showBookButton) {\r\n          columnConfiguration.push({\r\n            name: 'bookButton',\r\n            title: '',\r\n            subtitle: subtitleTemp ? '' : undefined ,\r\n            visible: true\r\n          });\r\n        }\r\n      }\r\n\r\n      columnConfiguration.forEach((column: ColumnConfig) => {\r\n        if (column.visible) {\r\n          this.displayedColumns.push(column.name);\r\n        }\r\n        if (!this.hasSubtitle) {\r\n          this.hasSubtitle = column.subtitle !== undefined;\r\n        }\r\n      });\r\n      if (this.rawData) {\r\n        this.dataSource = this.rawData;\r\n      }\r\n    }\r\n    this.displayedColumnsWithTitle.splice(0, this.displayedColumnsWithTitle.length);\r\n    this.displayedColumnsWithSubtitle.splice(0, this.displayedColumnsWithSubtitle.length);\r\n    this.displayedColumnsWithFooter.splice(0, this.displayedColumnsWithFooter.length);\r\n    this.getColumnsWithTitle().forEach((col: string) => this.displayedColumnsWithTitle.push(col));\r\n    this.getHeaderSubtitle().forEach((col: string) => this.displayedColumnsWithSubtitle.push(col));\r\n    this.footerDisplayedColumns().forEach((col: string) => this.displayedColumnsWithFooter.push(col));\r\n  }\r\n\r\n\r\n\r\n  @Input()\r\n  set dataSource(dataSource: Array<T>) {\r\n    this.dataSource$ = dataSource;\r\n    this.rawData = dataSource;\r\n    if (this.rawData) { this.prepareDataSource(); }\r\n  }\r\n\r\n  get dataSource(): Array<T> {\r\n    return this.dataSource$;\r\n  }\r\n\r\n  @Input()\r\n  set selectedIndexRow(idRowSelected: number) {\r\n    this.indexRowSelect = idRowSelected;\r\n    if (this.rawData && this.rawData.length) {\r\n      if ((idRowSelected >= this.rawData.length || idRowSelected < 0)) {\r\n        this.indexRowSelect = 0;\r\n      }\r\n      this.selectRow({ data: this.rawData[this.indexRowSelect], rowType: RowType.ROW }, false);\r\n    }\r\n  }\r\n\r\n  private prepareDataSource(): void {\r\n    const changeData: Array<RowData<T>> = Array<RowData<T>>();\r\n    let haveGroup: boolean = false;\r\n    let groupFooter: Array<TotalGroup>;\r\n    this.columnConfig.forEach((column: ColumnConfig) => {\r\n      if (column.totalType !== undefined && (this.type === TableHelisaType.LOCAL || this.tableHelisaConnectComponent.page <= 1)) {\r\n        this.totalData = new Array<number>(this.columnConfig.length);\r\n        this.showFooter = true;\r\n        this.total.emit({ column, columnConfigurations: this.columnConfig, type: ChangeColumnConfigurationType.TOTAL });\r\n      }\r\n      this.showSearch = this.showSearch || column.searchable;\r\n      haveGroup = haveGroup || column.groupable;\r\n    });\r\n    if (haveGroup) {\r\n      this.rawData = this.rawData.sort((a: T, b: T) => {\r\n        let result: number = 0;\r\n        this.columnConfig.forEach((column: ColumnConfig) => {\r\n          if (result === 0) {\r\n            result = this.compare(a, b);\r\n          }\r\n        });\r\n        return result;\r\n      });\r\n    }\r\n    this.rawData.forEach((row: T) => {\r\n      if (haveGroup && (changeData.length === 0 || this.compare(changeData[changeData.length - 1].data as T, row) !== 0)) {\r\n        if (groupFooter) {\r\n          changeData.push({ data: groupFooter, rowType: RowType.GROUP_FOOTER });\r\n        }\r\n        changeData.push({ data: row, rowType: RowType.GROUP_TITLE });\r\n        groupFooter = new Array<TotalGroup>(this.columnConfig.length);\r\n      }\r\n      if (haveGroup) { this.addTotalGroup(groupFooter, row); }\r\n      changeData.push({ data: row, rowType: RowType.ROW });\r\n    });\r\n    this.data = new MatTableDataSource<RowData<T>>(changeData);\r\n    if (this.rawData && this.rawData.length && this.indexRowSelect && !this.selectedObject) {\r\n      if (this.indexRowSelect >= this.rawData.length || this.indexRowSelect < 0) {\r\n        this.indexRowSelect = 0;\r\n      }\r\n      this.selectRow({ data: this.rawData[this.indexRowSelect], rowType: RowType.ROW }, false);\r\n    }\r\n  }\r\n\r\n  private addTotalGroup(rowTotal: Array<TotalGroup>, row: T): void {\r\n    this.columnConfig.forEach((column: ColumnConfig, index: number) => {\r\n      if (column.totalType !== undefined) {\r\n        if (rowTotal[index] === undefined) {\r\n          rowTotal[index] = { sum: (new ColumnConfigUtil().getValue(row, column) as number), count: 1 };\r\n        } else {\r\n          rowTotal[index].sum += (new ColumnConfigUtil().getValue(row, column) as number);\r\n          rowTotal[index].count++;\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  private compare(a: T, b: T): number {\r\n    let ws: number = 0;\r\n    this.columnConfig.forEach((column: ColumnConfig) => {\r\n      if (ws === 0 && column.groupable) {\r\n        if ((new ColumnConfigUtil().getValue(a, column) as number) < (new ColumnConfigUtil().getValue(b, column) as number)) {\r\n          ws = -1;\r\n        } else if ((new ColumnConfigUtil().getValue(a, column) as number) > (new ColumnConfigUtil().getValue(b, column) as number)) {\r\n          ws = 1;\r\n        }\r\n      }\r\n    });\r\n    return ws;\r\n  }\r\n\r\n  getGroupDescription(obj: T): string {\r\n    let result: string = '';\r\n    this.columnConfig.forEach((column: ColumnConfig) => {\r\n      if (column.groupable) {\r\n        result += (result.length ? ' - ' : '') + (new ColumnConfigUtil().getValue(obj, column));\r\n      }\r\n    });\r\n    return result;\r\n  }\r\n\r\n  isGroupTitle(index: number, item: RowData<T>): boolean {\r\n    return item.rowType === RowType.GROUP_TITLE;\r\n  }\r\n\r\n  isRow(index: number, item: RowData<T>): boolean {\r\n    return item.rowType === RowType.ROW;\r\n  }\r\n\r\n  isGroupFooter(index: number, item: RowData<T>): boolean {\r\n    return item.rowType === RowType.GROUP_FOOTER;\r\n  }\r\n\r\n  footerDisplayedColumns(): Array<string> {\r\n    return this.displayedColumns.map((name: string) => 'footer-' + name);\r\n  }\r\n\r\n  getGroupValue(column: ColumnConfig, data: TotalGroup): number {\r\n    if (column.totalType === TotalType.SUM) { return data.sum; }\r\n    if (column.totalType === TotalType.COUNT) { return data.count; }\r\n    if (column.totalType === TotalType.AVERAGE) { return 1. * data.sum / data.count; }\r\n    return undefined;\r\n  }\r\n\r\n  getValue(obj: T, column: ColumnConfig): T {\r\n    return new ColumnConfigUtil().getValue(obj, column) as T;\r\n  }\r\n\r\n  getValueTooltip(obj: T, column: ColumnConfig): string {\r\n    if (this.showToolTip) {\r\n      return new ColumnConfigUtil().getValue(obj, column) as string;\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  searchText(text: string): void {\r\n    this.lastSearch = text;\r\n    this.search.emit({ text, columnConfigurations: this.columnConfig });\r\n  }\r\n\r\n  selectRow(row: RowData<T>, isUser: boolean, column?: ColumnConfig): void {\r\n    if (row === undefined || row === null) {\r\n      return;\r\n    }\r\n    if ((column === undefined || column === null) || (!!column && column.name !== 'bookButton')) {\r\n      this.selectedObject = row.data as T;\r\n      this.select.emit(this.selectedObject);\r\n      this.selectObject.emit({ value: this.selectedObject, scope: isUser ? EventScope.USER : EventScope.CODE_CALL });\r\n    } else if (!!column && column.name === 'bookButton') {\r\n      if (this.selectedObject !== row.data) {\r\n        this.selectedObject = row.data as T;\r\n        this.select.emit(this.selectedObject);\r\n        this.selectObject.emit({ value: this.selectedObject, scope: isUser ? EventScope.USER : EventScope.CODE_CALL });\r\n      }\r\n      this.bookClicked.emit(this.selectedObject);\r\n    }\r\n  }\r\n\r\n  onScroll(event: Event): void {\r\n    const element: HTMLDivElement = event.target as HTMLDivElement;\r\n    let isScrollY: boolean;\r\n\r\n    if (this.scrollY !== element.scrollTop) {\r\n      isScrollY = true;\r\n      this.scrollY = element.scrollTop;\r\n      this.scrollX = element.scrollLeft;\r\n    }\r\n\r\n    if (this.scrollX !== element.scrollLeft) {\r\n      isScrollY = false;\r\n      this.scrollY = element.scrollTop;\r\n      this.scrollX = element.scrollLeft;\r\n    }\r\n\r\n    if ((element.scrollHeight - element.scrollTop < 1000) && isScrollY) {\r\n      this.goNextPage();\r\n    }\r\n\r\n  }\r\n\r\n  private goNextPage(): void {\r\n    if (!this.tableHelisaConnectComponent.isLastPage && !this.tableHelisaConnectComponent.isUsed) {\r\n      this.tableHelisaConnectComponent.isUsed = true;\r\n      this.nextPage.emit({\r\n        page: this.tableHelisaConnectComponent.nextPage(),\r\n        body: this.tableHelisaConnectComponent.getBody(this.columnConfig, this.lastSearch)\r\n      });\r\n    }\r\n  }\r\n\r\n  private receivePage(data: T[]): void {\r\n    if (!this.rawData) {\r\n      this.rawData = new Array<T>();\r\n    }\r\n    this.rawData = this.rawData.concat(data);\r\n    this.dataSource = this.rawData;\r\n    this.tableHelisaConnectComponent.isLastPage = data.length === 0;\r\n    this.tableHelisaConnectComponent.isUsed = false;\r\n  }\r\n\r\n  dblClickCell(): void {\r\n    this.selectCell.emit(this.selectedCells as Cell<T>);\r\n  }\r\n\r\n  selectedCell(element: RowData<T>, column: ColumnConfig): void {\r\n    this.selectRow(element, true, column);\r\n\r\n    this.selectedCells = { column, row: element };\r\n    this.selectCell.emit(this.selectedCells);\r\n  }\r\n\r\n  isSelectedCell(row: RowData<T>, column: ColumnConfig): boolean {\r\n    if (this.isCellSelection) {\r\n      if (this.selectedCells != null) {\r\n        if (this.selectedCells.column.name === column.name &&\r\n          (this.selectedCells.row as RowData<T>).data === row.data) {\r\n          return true;\r\n        }\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  getClassToCell(row: T, column: ColumnConfig): string[] {\r\n    const classToCell: Array<string> = new Array<string>();\r\n    if (this.configCellStyles) {\r\n      const found: ConfigCellStyles<T> = this.configCellStyles.find((c: ConfigCellStyles<T>) => {\r\n        return c.cellData === this.getValue(row, column);\r\n      });\r\n      if (found) {\r\n        classToCell.push(found.classCell);\r\n      }\r\n    }\r\n    if (column.columnStyle) {\r\n      classToCell.push(column.columnStyle);\r\n    }\r\n    return classToCell;\r\n  }\r\n\r\n  getClassToRow(row: T): string[] {\r\n    const classToRow: Array<string> = new Array<string>();\r\n    if (row === this.selectedObject && !this.isCellSelection) {\r\n      classToRow.push('');\r\n    }\r\n    if (this.configRowStylesFromColumn) {\r\n      const found: ConfigRowStyles<T> = this.configRowStylesFromColumn.find((c: ConfigRowStyles<T>) => {\r\n        return c.data === this.getValue(row, c.column);\r\n      });\r\n      if (found) {\r\n        classToRow.push(found.classRow);\r\n      }\r\n    }\r\n    return classToRow;\r\n  }\r\n\r\n  onDrop(event: MouseEvent): void {\r\n    if (this.isDragged && this.indexRowStartDrag >= 0) {\r\n      const rowIndex: number = this.getRowIndex(event.pageY);\r\n      const array: RowData<T>[] = this.dataBeforeDrag.data;\r\n      const rawData: T[] = this.rawData;\r\n      moveItemInArray(array, this.indexRowStartDrag, rowIndex);\r\n      moveItemInArray(rawData, this.indexRowStartDrag, rowIndex);\r\n      this.drop.emit({ value: array[rowIndex].data as T, order: rowIndex });\r\n      this.rawData = rawData;\r\n      this.data = new MatTableDataSource(array);\r\n      event.stopPropagation();\r\n    }\r\n  }\r\n\r\n  tableKeydown(event: KeyboardEvent): void {\r\n    if (!this.isCellSelection) {\r\n      let currentIndex: number = this.data.data.findIndex((row: RowData<T>) => row.data === this.selectedObject);\r\n      let newSelection: number = -10;\r\n      if (event.key === 'ArrowDown') {\r\n        this.scrollCount++;\r\n        this.data.data.forEach((row: RowData<T>, index: number) => {\r\n          if (newSelection === -10 && index > currentIndex && row.rowType === RowType.ROW) {\r\n            newSelection = index;\r\n          }\r\n        });\r\n      }\r\n      if (event.key === 'ArrowUp') {\r\n        this.scrollCount--;\r\n        currentIndex = this.data.data.length - currentIndex - 1;\r\n        this.data.data.reverse().forEach((row: RowData<T>, index: number) => {\r\n          if (newSelection === -10 && index > currentIndex && row.rowType === RowType.ROW) {\r\n            newSelection = index;\r\n          }\r\n        });\r\n        this.data.data.reverse();\r\n        if (newSelection !== -10) {\r\n          newSelection = this.data.data.length - newSelection - 1;\r\n        }\r\n      }\r\n      if (newSelection !== -10) {\r\n        this.selectRow(this.data.data[newSelection], true);\r\n      }\r\n      if (Math.abs(this.scrollCount) >= 2) {\r\n        this.scrollCount = 0;\r\n      } else {\r\n        event.preventDefault();\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Emite el evento cuando se da click al boton AddRow\r\n   */\r\n  onAddRow(): void {\r\n    this.addRow.emit();\r\n  }\r\n\r\n\r\n  getHeaderSubtitle(): string[] {\r\n    const x: string[] = this.columnConfig.map((column: ColumnConfig, index: number) => {\r\n      if (column.visible && column.subtitle !== undefined) {\r\n        return 'subtitle' + index;\r\n      } else {\r\n        return null;\r\n      }\r\n    }).filter((data: string) => data != null);\r\n    return x;\r\n  }\r\n\r\n  getColumnsWithTitle(): string[] {\r\n    return this.columnConfig.filter((column: ColumnConfig) =>\r\n      column.visible && column.title !== undefined\r\n    ).map((col: ColumnConfig) => col.name);\r\n  }\r\n\r\n  dragger(event: MouseEvent): boolean {\r\n    if (this.isDragged && this.indexRowStartDrag >= 0) {\r\n      const rowIndex: number = this.getRowIndex(event.pageY);\r\n      if (rowIndex !== this.lastIndexRowDrag) {\r\n        this.lastIndexRowDrag = rowIndex;\r\n        // This can have a memory problem with big data\r\n        const array: RowData<T>[] = [...this.dataBeforeDrag.data];\r\n        moveItemInArray(array, this.indexRowStartDrag, rowIndex);\r\n        this.data = new MatTableDataSource(array);\r\n      }\r\n      event.preventDefault();\r\n      return true;\r\n    }\r\n  }\r\n\r\n  startDrag(event: MouseEvent): void {\r\n    this.indexRowStartDrag = this.getRowIndex(event.pageY);\r\n    this.lastIndexRowDrag = this.indexRowStartDrag;\r\n    this.dataBeforeDrag = this.data;\r\n  }\r\n\r\n  private getRowIndex(pageY: number): number {\r\n    let offsetTop: number = 0;\r\n    let container: HTMLElement = this.containerTable.nativeElement;\r\n    while ((container !== null) && (offsetTop === 0)) {\r\n      offsetTop = container.offsetTop;\r\n      container = container.parentElement;\r\n    }\r\n    let rowIndex: number = -1;\r\n    const rows: HTMLCollection = this.matTableElement.nativeElement.children[1].children;\r\n    for (let i: number = 0; i < rows.length; i++) {\r\n      const row: HTMLElement = (rows[i] as HTMLElement);\r\n      if (pageY - offsetTop > row.offsetTop - this.containerTable.nativeElement.scrollTop) {\r\n        rowIndex = i;\r\n      }\r\n    }\r\n    if (rowIndex < 0) { rowIndex = 0; }\r\n    return rowIndex;\r\n  }\r\n\r\n  get columnType(): typeof ColumnType {\r\n    return ColumnType;\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\n\r\nimport * as moment_ from 'moment';\r\nconst moment: typeof moment_ = moment_;\r\n\r\nimport { MatDatepickerInputEvent, MatDatepicker } from '@angular/material';\r\nimport { filter, tap } from 'rxjs/operators';\r\n\r\n\r\nexport enum TypeCalendarEnum {\r\n  NORMAL = 'norma',\r\n  MONTH_YEAR = 'mounth-year'\r\n}\r\n\r\n\r\n@Component({\r\n  selector: 'hel-date-helisa',\r\n  templateUrl: './date-helisa.component.html',\r\n  styleUrls: ['./date-helisa.component.css'],\r\n})\r\nexport class DateHelisaComponent implements OnInit {\r\n\r\n\r\n  @Input() floatLabel: 'never' | 'always' | 'auto' = 'never';\r\n  @Input() dateFormControl: FormControl = new FormControl('');\r\n  private date: Date = new Date();\r\n\r\n  /**\r\n   * Formato de fecha.\r\n   * Los formatos validos son aquellos que maneja la libreria momentjs\r\n   * https://momentjs.com/docs/#/parsing/string-format/\r\n   */\r\n  @Input() dateFormat: string = 'DD/MM/YYYY';\r\n  @Input() errorMessage: string = 'La fecha no concuerda con el formato ';\r\n  @Input() placeholder: string = this.dateFormat;\r\n\r\n  /**\r\n   * Si este valor es diferente a TypeCalendarEnum.NORMAL no\r\n   * serÃ¡ tomado en cuenta\r\n   */\r\n  @Input() typeCalendar: TypeCalendarEnum = TypeCalendarEnum.NORMAL;\r\n\r\n\r\n  dateToVisualize: FormControl;\r\n\r\n  /**\r\n   * Para evitar nuevos eventos miestras se realiza el parseo\r\n   */\r\n  private isFromInputEvent: boolean = false;\r\n\r\n  /**\r\n   * Verificar si el formato es valido\r\n   */\r\n  invalidFormat: boolean = false;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n    this.dateToVisualize = new FormControl('', this.dateFormControl.validator);\r\n    this.formHandler();\r\n\r\n    if (this.typeCalendar === TypeCalendarEnum.MONTH_YEAR) {\r\n      this.dateFormat = 'MM/YYYY';\r\n      this.placeholder = this.dateFormat;\r\n    }\r\n\r\n    /**\r\n     * establecer valor por defecto de la fecha\r\n     */\r\n    const incommingDate: string = moment(this.dateFormControl.value, this.dateFormat).format(this.dateFormat);\r\n    if (this.dateFormControl.value !== '' && incommingDate !== 'Invalid date') {\r\n      this.dateToVisualize.setValue(incommingDate);\r\n    }\r\n\r\n  }\r\n\r\n  get typeCalendarEnum(): typeof TypeCalendarEnum {\r\n    return TypeCalendarEnum;\r\n  }\r\n\r\n  /**\r\n   * Determina como se debe inicializar la visualizacion del calendar\r\n   */\r\n  getStartView(): string {\r\n    // multi-year\r\n    if (this.typeCalendar === this.typeCalendarEnum.MONTH_YEAR) {\r\n      return 'multi-year';\r\n    } else {\r\n      return 'month';\r\n    }\r\n  }\r\n\r\n  private formHandler(): void {\r\n    this.dateToVisualize.valueChanges\r\n      .pipe(\r\n        tap((date: string) => {\r\n          if (date.length > this.dateFormat.length) {\r\n            this.invalidFormat = true;\r\n          } else {\r\n            this.invalidFormat = false;\r\n          }\r\n        }),\r\n        filter((date: string) => date.length === this.dateFormat.length)\r\n      )\r\n      .subscribe((date: string) => {\r\n        this.invalidFormat = false;\r\n        const isValid: boolean = moment(date, this.dateFormat, true).isValid();\r\n        const result: string = moment(date, this.dateFormat).format('YYYY-MM-DD');\r\n\r\n        if (!!result && (result === 'Invalid date' || !isValid)) {\r\n          this.invalidFormat = true;\r\n          return;\r\n        }\r\n\r\n        if (!!result) {\r\n          if (!this.isFromInputEvent) {\r\n            this.isFromInputEvent = true;\r\n            const subString: string[] = result.split('-');\r\n\r\n            const year: number = parseFloat(subString[0]);\r\n            const month: number = parseFloat(subString[1]);\r\n            const day: number = parseFloat(subString[2]);\r\n\r\n            this.date.setFullYear(year);\r\n            this.date.setDate(day);\r\n            this.date.setMonth(month - 1); // -1 por que los meses se toman como los indices en un array\r\n\r\n            /** cuando es de tipo MOUNTH_YEAR retorna el ultimo dia del mes seleccionado */\r\n            if (this.typeCalendar === TypeCalendarEnum.MONTH_YEAR) {\r\n              this.date = moment(this.date).endOf('month').toDate();\r\n            }\r\n\r\n            this.dateToVisualize.setValue(moment(this.date, 'YYYY-MM-DD').format(this.dateFormat));\r\n            this.dateFormControl.setValue(this.date);\r\n\r\n            this.isFromInputEvent = false;\r\n          } else {\r\n            setTimeout(() => {\r\n              this.isFromInputEvent = false;\r\n            }, 1500);\r\n          }\r\n\r\n        }\r\n      });\r\n\r\n\r\n    this.dateFormControl.valueChanges\r\n      .subscribe((date: string) => {\r\n        const incommingDate: string = moment(date, this.dateFormat).format(this.dateFormat);\r\n        if (this.dateFormControl.value !== '' && incommingDate !== 'Invalid date') {\r\n          this.dateToVisualize.setValue(incommingDate);\r\n        }\r\n      });\r\n  }\r\n\r\n\r\n  /**\r\n   * Evento que se dispara luego seleccionar un mes\r\n   */\r\n  monthSelectedHandler(chosenMonthDate: moment_.Moment, datepicker: MatDatepicker<moment_.Moment>): void {\r\n\r\n    if (this.typeCalendar === TypeCalendarEnum.MONTH_YEAR) {\r\n      datepicker.close();\r\n      const date: Date = moment(chosenMonthDate).endOf('month').toDate();\r\n\r\n      this.dateToVisualize.setValue(moment(date, 'YYYY-MM-DD').format(this.dateFormat));\r\n      this.dateFormControl.setValue(date);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Evento desde el control touch del calendar\r\n   */\r\n  dateChange(type: string, event: MatDatepickerInputEvent<Date>): void {\r\n\r\n    this.dateToVisualize.setValue(moment(event.value, 'YYYY-MM-DD').format(this.dateFormat));\r\n    this.dateFormControl.setValue(event.value);\r\n  }\r\n\r\n  getErrorMessage(): string {\r\n    return this.errorMessage + this.dateFormat;\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Subject, BehaviorSubject, Subscriber, Observable } from 'rxjs';\r\nimport { Node } from './node';\r\n\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class TreeHelisaService {\r\n\r\n    // Observable string sources\r\n    private emitNodeSelected: BehaviorSubject<number | string> = new BehaviorSubject<number | string>(1);\r\n    // Observable string streams\r\n    nodeSelected: Observable<string | number> = this.emitNodeSelected.asObservable();\r\n\r\n    // Observable string sources\r\n    private emitDataSource: BehaviorSubject<Node> = new BehaviorSubject<Node>(undefined);\r\n\r\n    // Observable string streams\r\n    dataSourceObservable: Observable<Node> = this.emitDataSource.asObservable();\r\n\r\n    // Expand node observable\r\n    private emitExpandAllNodes: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(null);\r\n    nodeExpand: Observable<boolean> = this.emitExpandAllNodes.asObservable();\r\n\r\n     // Collapse node observable\r\n     private emitCollapseAllNodes: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(null);\r\n     nodeCollapse: Observable<boolean> = this.emitCollapseAllNodes.asObservable();\r\n\r\n    private emitRefreshTree: Subject<void> = new Subject<void>();\r\n    refreshTreeObservable: Observable<void> = this.emitRefreshTree.asObservable();\r\n\r\n    private emitRefreshTreeWithPagination: Subject<void> = new Subject<void>();\r\n    refreshTreeWithPaginationObservable: Observable<void> = this.emitRefreshTreeWithPagination.asObservable();\r\n\r\n    private emitExpandOneNode: Subject<Node> = new Subject<Node>();\r\n    expandOneNodeObservable: Observable<Node> = this.emitExpandOneNode.asObservable();\r\n\r\n    private emitCollapseOneNode: Subject<Node> = new Subject<Node>();\r\n    collapseOneNodeObservable: Observable<Node> = this.emitCollapseOneNode.asObservable();\r\n\r\n    // Service message commands\r\n    changeNodeSelected(idResidentialArea: number | string): void {\r\n        this.emitNodeSelected.next(idResidentialArea);\r\n    }\r\n\r\n    // Service message commands\r\n    changeDataSource(data: Node): void {\r\n        this.emitDataSource.next(data);\r\n    }\r\n\r\n    expandAllNodes(expand: boolean): void {\r\n        this.emitExpandAllNodes.next(expand);\r\n    }\r\n\r\n    collapseAllNodes(collapse: boolean): void {\r\n        this.emitCollapseAllNodes.next(collapse);\r\n    }\r\n\r\n    refreshTree(): void {\r\n        this.emitRefreshTree.next();\r\n    }\r\n\r\n\r\n    refreshTreeWithPagination(): void {\r\n        this.emitRefreshTreeWithPagination.next();\r\n    }\r\n\r\n\r\n    expandOneNode(node: Node): void {\r\n    this.emitExpandOneNode.next(node);\r\n    }\r\n\r\n\r\n    collapseOneNode(node: Node): void {\r\n        this.emitCollapseOneNode.next(node);\r\n    }\r\n\r\n    constructor() {\r\n\r\n    }\r\n\r\n}\r\n","export class TreeHelisaConnect<T> {\r\n    page: number;\r\n    isLastPage: boolean;\r\n    isUsed: boolean;\r\n\r\n    constructor() {\r\n      this.page = 0;\r\n      this.isLastPage = false;\r\n      this.isUsed = false;\r\n    }\r\n\r\n    nextPage(): number {\r\n      return this.page = this.page + 1;\r\n    }\r\n  }\r\n","import { Component, OnInit, Input, Output, EventEmitter, ViewChild, AfterViewInit, ElementRef, HostListener } from '@angular/core';\r\nimport { NestedTreeControl, TreeControl } from '@angular/cdk/tree';\r\nimport { MatTreeNestedDataSource, MatTree, MatOptionSelectionChange } from '@angular/material';\r\nimport { Node } from './node';\r\nimport { TreeHelisaService } from './tree-helisa.service';\r\nimport { Router } from '@angular/router';\r\nimport * as _ from 'lodash';\r\nimport { TreeHelisaConnect } from './tree-helisa-connect';\r\nimport { FormControl } from '@angular/forms';\r\nimport { Observable } from 'rxjs';\r\n\r\nexport interface RequestTreeHelisa {\r\n  page: number;\r\n}\r\n\r\n@Component({\r\n  selector: 'hel-tree',\r\n  templateUrl: './tree-helisa.component.html',\r\n  styleUrls: ['./tree-helisa.component.sass']\r\n  // host: { '(document:keyup)': 'onKeyDown($event)' }\r\n})\r\nexport class TreeHelisaComponent implements OnInit, AfterViewInit {\r\n  isDisabled: boolean;\r\n  selectedNode: number | string | null;\r\n  //#endregion ====== Variables ========\r\n\r\n  constructor(private treeHelisaService: TreeHelisaService, private router: Router, private elementRef: ElementRef) {\r\n    // cargar datos pasados por el @Input\r\n    if (!!this.data) {\r\n      const data: Node = this.data;\r\n      this.data = null;\r\n      this.receivePage(data.children);\r\n    } else {\r\n      this.dataSource.data = [];\r\n      this.treeControl.dataNodes = [];\r\n    }\r\n  }\r\n\r\n  //#region  ====== Variables =============\r\n  private treeHelisaConnect: TreeHelisaConnect<Node>;\r\n  formEdit: FormControl;\r\n  @ViewChild('tree') tree: MatTree<{}>;\r\n  private selectedOptions: Map<\r\n    string | number,\r\n    {\r\n      formControl: FormControl;\r\n      editMode: boolean;\r\n    }\r\n  > = new Map<\r\n    string | number,\r\n    {\r\n      formControl: FormControl;\r\n      editMode: boolean;\r\n    }\r\n  >();\r\n  /**\r\n   * Datos del Arbol\r\n   */\r\n  @Input() data: Node;\r\n\r\n  /**\r\n   * Retorna el id del nodo removido\r\n   */\r\n  @Output() removed: EventEmitter<string | number> = new EventEmitter<number | string>();\r\n\r\n  /**\r\n   * Retorna un nodo editado\r\n   */\r\n  @Output() edited: EventEmitter<Node> = new EventEmitter<Node>();\r\n\r\n  /**\r\n   * Retorna un nodo sin id del nodo , pero si con el parent\r\n   * para conocer a cual fue aÃ±adido\r\n   */\r\n  @Output() added: EventEmitter<Node> = new EventEmitter<Node>();\r\n  @Output() collapseParent: EventEmitter<boolean> = new EventEmitter<boolean>();\r\n  @Output() rangeScrolled: EventEmitter<RequestTreeHelisa> = new EventEmitter<RequestTreeHelisa>();\r\n  @Output() nodeSelected: EventEmitter<number | string> = new EventEmitter<number | string>();\r\n  @Output() dobleClick: EventEmitter<number | string> = new EventEmitter<number | string>();\r\n  @Output() keypressDelete: EventEmitter<number | string | null> = new EventEmitter<number | string | null>();\r\n  @Output() keypressInsert: EventEmitter<number | string | null> = new EventEmitter<number | string | null>();\r\n  @Output() checkedOptionNode: EventEmitter<number | string | null> = new EventEmitter<number | string | null>();\r\n  @Output() uncheckedOptionNode: EventEmitter<number | string | null> = new EventEmitter<number | string | null>();\r\n  @Output() clickAddNode: EventEmitter<Node> = new EventEmitter<Node>();\r\n  @Output() clickEditNode: EventEmitter<Node> = new EventEmitter<Node>();\r\n  @Output() clickDeleteNode: EventEmitter<Node> = new EventEmitter<Node>();\r\n\r\n  treeControl: NestedTreeControl<Node> = new NestedTreeControl<Node>((node: Node): Node[] | Observable<Node[]> => node.children);\r\n  dataSource: MatTreeNestedDataSource<Node> = new MatTreeNestedDataSource<Node>();\r\n\r\n  isSingleClick: boolean = true;\r\n  currentNode: Node = null;\r\n\r\n  /**\r\n   * Obtiene la descripcion completa del nodo\r\n   * @example Nodo padre,nodo hijo,nodo nieto\r\n   * @param node Debe tener todos los parent llenos hacia arriba\r\n   */\r\n  public static getDescription(node: Node): string {\r\n    let result: string[] = [node.name];\r\n    let concat: string = '';\r\n\r\n    if (node.parent) {\r\n      result.push(this.getDescription(node.parent));\r\n    }\r\n\r\n    if (result.length === 1) {\r\n      return node.name;\r\n    }\r\n\r\n    result = result.reverse();\r\n\r\n    for (let i: number = 0; i < result.length; i++) {\r\n      const element: string = result[i];\r\n      concat = concat + element + (i === result.length - 1 ? '' : ',');\r\n    }\r\n\r\n    return concat;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    // si se cargan datos por medio del servicio\r\n    this.treeHelisaService.dataSourceObservable.subscribe((res: Node) => {\r\n      if (!!res && !!res.children) {\r\n        this.selectedNode = res.id;\r\n        this.receivePage(res.children);\r\n      } else {\r\n        this.dataSource.data = [];\r\n        this.treeControl.dataNodes = [];\r\n      }\r\n    });\r\n\r\n    // Observable, si cambia el nodo seleccionado por medio del servicio\r\n    this.treeHelisaService.nodeSelected.subscribe((res: string | number) => {\r\n      if (!!this.data && !!this.data.children) {\r\n        this.selectNode(this.data, res);\r\n      }\r\n    });\r\n\r\n    this.treeHelisaService.refreshTreeObservable.subscribe((res: void) => {\r\n      this.refreshTree();\r\n    });\r\n\r\n    this.treeHelisaService.refreshTreeWithPaginationObservable.subscribe((res: void) => {\r\n      this.refreshTreeWithPagination();\r\n    });\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.treeHelisaService.nodeExpand.subscribe((res: boolean) => {\r\n      if (res != null) {\r\n        if (res) {\r\n          this.tree.treeControl.expandAll();\r\n        }\r\n      }\r\n    });\r\n\r\n    this.treeHelisaService.nodeCollapse.subscribe((res: boolean) => {\r\n      if (res !== null) {\r\n        if (res) {\r\n          this.tree.treeControl.collapseAll();\r\n        }\r\n      }\r\n    });\r\n\r\n    this.treeHelisaService.expandOneNodeObservable.subscribe((res: Node) => {\r\n      if (res !== undefined) {\r\n        this.treeControl.expand(res);\r\n      }\r\n    });\r\n\r\n    this.treeHelisaService.collapseOneNodeObservable.subscribe((res: Node) => {\r\n      if (res !== undefined) {\r\n        this.treeControl.collapse(res);\r\n      }\r\n    });\r\n  }\r\n\r\n  //#region  ====== Events ===========\r\n  onRedirect(node: Node): void {\r\n    this.isSingleClick = true;\r\n    setTimeout(() => {\r\n      if (this.isSingleClick) {\r\n        this.selectNode(node, node.id);\r\n\r\n        // if(!!node && !node.children){\r\n        if (!!node) {\r\n          this.nodeSelected.emit(node.id);\r\n          this.currentNode = node;\r\n        }\r\n      }\r\n    }, 350);\r\n  }\r\n\r\n  onScroll(event: Event): void {\r\n    const element: HTMLDivElement = event.target as HTMLDivElement;\r\n\r\n    if (element.offsetHeight + element.scrollTop >= element.scrollHeight) {\r\n      this.goNextPage();\r\n    }\r\n  }\r\n\r\n  onEdit(node: Node): void {\r\n    this.clickEditNode.emit(node);\r\n    /** @Deprecated\r\n     *  Ya no se edita el nodo ahora solo se emite el evento 'clickEditNode'\r\n     * retornando el nodo al cual le hicieron click en la opciÃ³n delete\r\n     */\r\n    // node.isEditable = true;\r\n    // this.isDisabled = true;\r\n  }\r\n\r\n  onAdd(node: Node): void {\r\n    this.clickAddNode.emit(node);\r\n    /** @Deprecated\r\n     *  Ya no se crea y se agrega el nodo ahora solo se emite el evento 'clickAddNode'\r\n     * retornando el nodo al cual le hicieron click en la opciÃ³n add\r\n     */\r\n    //   // si no tiene hijos instanciar el array\r\n    //   if (!node.children) {\r\n    //     node.children = [];\r\n    //   }\r\n    //   node.children.push({\r\n    //     id: Math.random(),\r\n    //     name: '',\r\n    //     isSelected: false,\r\n    //     parent: node,\r\n    //     isEditable: true\r\n    //   });\r\n    //   if (node.children) {\r\n    //     this.isDisabled = true;\r\n    //     this.treeHelisaService.expandOneNode(node);\r\n    //   }\r\n    //   this.refreshTree();\r\n  }\r\n\r\n  onDelete(node: Node): void {\r\n    this.clickDeleteNode.emit(node);\r\n    /** @Deprecated\r\n     *  Ya no se elimina el nodo ahora solo se emite el evento 'clickDeleteNode'\r\n     * retornando el nodo al cual le hicieron click en la opciÃ³n delete\r\n     */\r\n    // // Remueve el nodo utilizando la libreria de lodash\r\n    // _.remove(node.parent.children, node);\r\n\r\n    // this.refreshTree();\r\n    // this.removed.emit(node.id);\r\n  }\r\n\r\n  onEdited(node: Node, value: string): void {\r\n    node.name = value;\r\n    if (node.id == null && node.name === '') {\r\n      _.remove(node.parent.children, node);\r\n      this.refreshTree();\r\n    } else if (node.id && node.id != null && node.name.trim() !== '') {\r\n      this.edited.emit(node);\r\n      node.isEditable = false;\r\n      this.selectNode(node, node.id);\r\n    } else if (node.id == null && node.name.trim() !== '') {\r\n      this.added.emit(node);\r\n      node.isEditable = false;\r\n    }\r\n    this.isDisabled = false;\r\n    this.refreshTree();\r\n  }\r\n\r\n  onCancel(node: Node, value: string): void {\r\n    this.isDisabled = false;\r\n    // Si no tiene id por ser un nuevo item, lo elimina\r\n    if (node.id == null) {\r\n      _.remove(node.parent.children, node);\r\n      this.refreshTree();\r\n    }\r\n\r\n    node.isEditable = false;\r\n  }\r\n\r\n  onDblClick(node: Node): void {\r\n    this.isSingleClick = false;\r\n    this.dobleClick.emit(node.id);\r\n  }\r\n\r\n  @HostListener('document:keyup', ['$event'])\r\n  onKeyDown(event: KeyboardEvent): void {\r\n    switch (event.key) {\r\n      case 'Delete':\r\n        this.keypressDelete.emit(!!this.currentNode && this.currentNode.id ? this.currentNode.id : null);\r\n        break;\r\n      case 'Insert':\r\n        this.keypressInsert.emit(!!this.currentNode && this.currentNode.id ? this.currentNode.id : null);\r\n        break;\r\n      case 'ArrowDown':\r\n        this.moveDownIntoTree();\r\n        break;\r\n      case 'ArrowUp':\r\n        this.moveUpIntoTree();\r\n        break;\r\n    }\r\n  }\r\n\r\n  //#endregion ======= Events ========\r\n\r\n  //#region  ======== Metodos =============\r\n\r\n  private moveUpIntoTree(): number {\r\n    if (!!this.data) {\r\n      // si aun no hay ningun node seleccionado selecciona el primero\r\n      if (this.currentNode == null) {\r\n        this.selectNode(this.data, this.data.children[0].id);\r\n        this.currentNode = this.data.children[0];\r\n        if (!!this.currentNode.children && this.currentNode.children.length > 0) {\r\n          this.treeHelisaService.expandOneNode(this.currentNode);\r\n        }\r\n      } else {\r\n        if (!!this.currentNode.parent && this.currentNode.id != null) {\r\n          // obtiene el indice del nodo seleccionado actualmente\r\n          const index: number = this.currentNode.parent.children.indexOf(this.currentNode);\r\n\r\n          if (this.currentNode.parent.id == null && index === 0) {\r\n            return 0;\r\n          } else {\r\n            // si tiene nodos al mismo nivel salta al nodo anterior\r\n            if (index !== undefined && index === 0) {\r\n              this.currentNode = this.currentNode.parent;\r\n              this.selectNode(this.data, this.currentNode.id);\r\n              if (!!this.currentNode.children && this.currentNode.children.length > 0) {\r\n                this.treeHelisaService.expandOneNode(this.currentNode);\r\n              }\r\n            } else {\r\n              // si no tiene nodos al mismo nivel salta al nodo padre\r\n              this.currentNode = this.currentNode.parent.children[index - 1];\r\n              this.selectNode(this.data, this.currentNode.id);\r\n              if (!!this.currentNode.children && this.currentNode.children.length > 0) {\r\n                this.treeHelisaService.expandOneNode(this.currentNode);\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  private moveDownIntoTree(): void {\r\n    if (!!this.data) {\r\n      if (this.currentNode == null) {\r\n        this.selectNode(this.data, this.data.children[0].id);\r\n        this.currentNode = this.data.children[0];\r\n        if (!!this.currentNode.children && this.currentNode.children.length > 0) {\r\n          this.treeHelisaService.expandOneNode(this.currentNode);\r\n        }\r\n      } else {\r\n        if (!!this.currentNode) {\r\n          // obtiene el indice del nodo seleccionado actualmente\r\n          const index: number =\r\n            !!this.currentNode && !!this.currentNode.parent ? this.currentNode.parent.children.indexOf(this.currentNode) : null;\r\n\r\n          // si tiene childrens pasa al primer children\r\n          if (!!this.currentNode.children && this.currentNode.children.length > 0) {\r\n            this.currentNode = this.currentNode.children[0];\r\n            this.selectNode(this.data, this.currentNode.id);\r\n            if (!!this.currentNode.children && this.currentNode.children.length > 0) {\r\n              this.treeHelisaService.expandOneNode(this.currentNode);\r\n            }\r\n          } else if (\r\n            index !== undefined &&\r\n            index === this.currentNode.parent.children.length - 1 &&\r\n            this.currentNode.parent.parent != null &&\r\n            this.currentNode.parent.parent.children != null &&\r\n            this.currentNode.parent.parent.children.length > 0\r\n          ) {\r\n            const indexOfParent: number = this.currentNode.parent.parent.children.indexOf(this.currentNode.parent);\r\n            this.currentNode =\r\n              this.currentNode.parent.parent.children[indexOfParent + 1] === undefined\r\n                ? this.currentNode\r\n                : this.currentNode.parent.parent.children[indexOfParent + 1];\r\n\r\n            this.selectNode(this.data, this.currentNode.id);\r\n            if (!!this.currentNode.children && this.currentNode.children.length > 0) {\r\n              this.treeHelisaService.expandOneNode(this.currentNode);\r\n            }\r\n          } else {\r\n            // si no tiene nodos al mismo nivel salta al siguiente hacia abajo\r\n            this.currentNode = this.currentNode.parent.children[index + 1];\r\n            this.selectNode(this.data, this.currentNode.id);\r\n            if (!!this.currentNode.children && this.currentNode.children.length > 0) {\r\n              this.treeHelisaService.expandOneNode(this.currentNode);\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Verifica si el nodo tiene hijos\r\n   */\r\n  hasChild(t: number, node: Node): boolean {\r\n    return !!node.children && node.children.length > 0;\r\n  }\r\n\r\n  /**\r\n   * Actualiza el arbol borrando toda la data , solo cuando no se utiliza paginacion\r\n   */\r\n  private refreshTree(): void {\r\n    this.data = null;\r\n    const datasourceData: Node[] = this.dataSource.data;\r\n    this.dataSource.data = null;\r\n    this.dataSource.data = datasourceData;\r\n    this.treeControl.dataNodes = datasourceData;\r\n  }\r\n\r\n  /**\r\n   * Actualiza el arbol cuando se utiliza la paginacion (Cuando no , utilice el metodo refreshTree())\r\n   */\r\n  private refreshTreeWithPagination(): void {\r\n    const datasourceData: Node[] = this.dataSource.data;\r\n    this.dataSource.data = null;\r\n    this.dataSource.data = datasourceData;\r\n    this.treeControl.dataNodes = datasourceData;\r\n  }\r\n\r\n  private goNextPage(): void {\r\n    if (!this.treeHelisaConnect.isLastPage && !this.treeHelisaConnect.isUsed) {\r\n      this.treeHelisaConnect.isUsed = true;\r\n      this.rangeScrolled.emit({\r\n        page: this.treeHelisaConnect.nextPage()\r\n      });\r\n    }\r\n  }\r\n\r\n  private receivePage(data: Node[]): void {\r\n    if (!this.data) {\r\n      this.data = { id: null, name: 'root', isSelected: false };\r\n    }\r\n    if (!this.data.children) {\r\n      this.data.children = new Array<Node>();\r\n      this.treeHelisaConnect = new TreeHelisaConnect<Node>();\r\n    }\r\n    this.data.children = this.data.children.concat(data);\r\n    this.data.children.forEach((node: Node) => {\r\n      this.fillParent(node, this.data);\r\n    });\r\n\r\n    this.data.children = this.reorderByOrderIndex(this.data.children);\r\n\r\n    this.dataSource.data = this.data.children;\r\n    this.treeControl.dataNodes = this.data.children;\r\n    this.treeHelisaConnect.isLastPage = data.length === 0;\r\n    this.treeHelisaConnect.isUsed = false;\r\n  }\r\n\r\n  /**\r\n   * Llenan el campo parent de todos los nodos hijos\r\n   */\r\n  private fillParent(node: Node, parent: Node): void {\r\n    node.parent = parent;\r\n    if (node.children && node.children.length > 0) {\r\n      node.children.forEach((item: Node) => {\r\n        this.fillParent(item, node);\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * coloca como true del isSelected del nodo que concuerde con el id\r\n   */\r\n  private selectNode(node: Node, id: number | string): Node {\r\n    if (node == null) {\r\n      return null;\r\n    }\r\n    this.upSelectNode(node);\r\n    if (!!this.selectedNode) {\r\n      const nodeSelected: Node = this.getNodeById(this.selectedNode);\r\n      if (nodeSelected != null) {\r\n        nodeSelected.isSelected = false;\r\n        this.selectedNode = null;\r\n      }\r\n    }\r\n    if (node.id !== undefined && node.id === id) {\r\n      node.isSelected = true;\r\n      this.expandAllParents(node);\r\n      this.selectedNode = node.id;\r\n      return node;\r\n    } else if (node.children != null) {\r\n      let i: number;\r\n      let result: Node = null;\r\n      for (i = 0; result == null && i < node.children.length; i++) {\r\n        result = this.selectNode(node.children[i], id);\r\n      }\r\n      return result;\r\n    }\r\n    return null;\r\n  }\r\n\r\n  private expandAllParents(node: Node): void {\r\n    if (!!node && !!node.parent) {\r\n      this.treeHelisaService.expandOneNode(node.parent);\r\n      this.expandAllParents(node.parent);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Elimina el isSelected de todos los nodos\r\n   */\r\n  private upSelectNode(node: Node): void {\r\n    if (!!node && node.isSelected !== undefined) {\r\n      node.isSelected = false;\r\n      if (!!node.children) {\r\n        for (const childrenNode of node.children) {\r\n          this.upSelectNode(childrenNode);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  getClassNode(node: Node): string[] {\r\n    const classNode: string[] = [];\r\n    if (node.isSelected) {\r\n      classNode.push('isSelected');\r\n    }\r\n    if (node.classNode) {\r\n      classNode.push(node.classNode);\r\n    }\r\n    return classNode;\r\n  }\r\n\r\n  onEditMode(node: Node, editMode: boolean): void {\r\n    this.getSelectedOptions(node).editMode = editMode;\r\n  }\r\n\r\n  onSelectOption(event: MatOptionSelectionChange, node: Node): void {\r\n    node.isCheckedOption = event.source.selected;\r\n    if (node.isCheckedOption) {\r\n      this.checkedOptionNode.emit(node.id);\r\n    } else {\r\n      this.uncheckedOptionNode.emit(node.id);\r\n    }\r\n  }\r\n\r\n  getSelectedOptions(\r\n    node: Node\r\n  ): {\r\n    formControl: FormControl;\r\n    editMode: boolean;\r\n  } {\r\n    if (this.selectedOptions.has(node.id)) {\r\n      this.reloadSelectedOptions(node, this.selectedOptions.get(node.id).editMode);\r\n    } else {\r\n      this.reloadSelectedOptions(node, false);\r\n    }\r\n    return this.selectedOptions.get(node.id);\r\n  }\r\n\r\n  private reloadSelectedOptions(node: Node, editMode: boolean): void {\r\n    const array: Array<string | number | null> = new Array<string | number | null>();\r\n    node.options.forEach((option: Node) => {\r\n      if (option.isCheckedOption) {\r\n        array.push(option.id);\r\n      }\r\n    });\r\n    const obj: {\r\n      formControl: FormControl;\r\n      editMode: boolean;\r\n    } = { formControl: new FormControl(array), editMode };\r\n    this.selectedOptions.set(node.id, obj);\r\n  }\r\n\r\n  /**\r\n   * Retorna el primer Node que encuentre segun el id enviado o null si no hay ninguno\r\n   * @param id  number | string\r\n   * @returns Node o null si no hay un nodo con ese id\r\n   */\r\n  getNodeById(id: number | string): Node {\r\n    const queue: Node[] = [...this.dataSource.data];\r\n    while (queue.length > 0) {\r\n      const curr: Node = queue.shift();\r\n      if (curr.id === id) {\r\n        return curr;\r\n      } else {\r\n        if (!!curr.children) {\r\n          queue.push(...curr.children);\r\n        }\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  reorderByOrderIndex(node: Node[]): Node[] {\r\n    if (!!node && node.length > 0) {\r\n      try {\r\n        node = _.orderBy(node, (x: Node) => x.orderIndex, ['asc']);\r\n        node.forEach((element: Node) => {\r\n          if (!!element.children && element != null) {\r\n            element.children = this.reorderByOrderIndex(element.children);\r\n          }\r\n        });\r\n        return node;\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n  }\r\n\r\n  //#endregion ====== Metodos ============\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { OptionAutocompleteHelisa } from './autocomplete-helisa.component';\r\n\r\n@Injectable()\r\nexport class AutocompleteHelisaService<T> {\r\n\r\n  private emitChangeSource: BehaviorSubject<Array<OptionAutocompleteHelisa<T>>> =\r\n  new BehaviorSubject<Array<OptionAutocompleteHelisa<T>>>([]);\r\n\r\n  public dataSource$: Observable<Array<OptionAutocompleteHelisa<T>>> = this.emitChangeSource.asObservable();\r\n\r\n  constructor() { }\r\n\r\n  setDataSource(options: Array<OptionAutocompleteHelisa<T>>): void {\r\n    this.emitChangeSource.next(options);\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { Observable, of, Subject } from 'rxjs';\r\nimport { map, startWith, throttleTime, debounceTime } from 'rxjs/operators';\r\nimport { AutocompleteHelisaService } from './autocomplete-helisa.component.service';\r\n\r\nexport interface OptionAutocompleteHelisa<T> {\r\n  value: T;\r\n  displayText: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'hel-autocomplete',\r\n  templateUrl: './autocomplete-helisa.component.html',\r\n  styleUrls: ['./autocomplete-helisa.component.css'],\r\n  providers: [AutocompleteHelisaService]\r\n})\r\nexport class AutocompleteHelisaComponent<T> implements OnInit {\r\n\r\n  @Input() myControl: FormControl = new FormControl();\r\n  @Input() options: Array<OptionAutocompleteHelisa<T>> = new Array<OptionAutocompleteHelisa<T>>();\r\n  filteredOptions: Observable<OptionAutocompleteHelisa<T>[]>;\r\n  selectedValue: OptionAutocompleteHelisa<T>;\r\n  @Output() selectedValueEmmiter: EventEmitter<T> = new EventEmitter<T>();\r\n  @Output() nextPage: EventEmitter<void> = new EventEmitter<void>();\r\n  @Input() isRemote: boolean = false;\r\n  isLoading: boolean = false;\r\n\r\n\r\n  onScrollObservable: Subject<void> = new Subject<void>();\r\n\r\n  constructor(private autocompleteHelisaService: AutocompleteHelisaService<T>) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.onScrollObservable.asObservable()\r\n    .pipe(\r\n      debounceTime(500),\r\n      throttleTime(500)\r\n    )\r\n    .subscribe(() => {\r\n      this.nextPage.emit();\r\n    });\r\n\r\n    if (this.isRemote) {\r\n      this.autocompleteHelisaService.dataSource$.subscribe((data: OptionAutocompleteHelisa<T>[]) => {\r\n        setTimeout(() => {\r\n          this.options = data;\r\n          this.filteredOptions = of<OptionAutocompleteHelisa<T>[]>(this.options);\r\n        });\r\n      });\r\n    }\r\n\r\n    this.filteredOptions = this.myControl.valueChanges.pipe(\r\n      startWith(''),\r\n      map((x: string) => this._checkRegex(x)),\r\n      map((value: string) => this._filter(value))\r\n    );\r\n\r\n  }\r\n\r\n  displayFn(option?: OptionAutocompleteHelisa<T>): string | undefined {\r\n    return option ? option.displayText : undefined;\r\n  }\r\n\r\n  getService(): AutocompleteHelisaService<T> {\r\n    return this.autocompleteHelisaService;\r\n  }\r\n\r\n\r\n  /** Elimina caracteres extraÃ±os */\r\n  private _checkRegex(value: string): string {\r\n    value = value.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '');\r\n    return value;\r\n  }\r\n\r\n  private _filter(value: string): OptionAutocompleteHelisa<T>[] {\r\n    if (!(value)) {\r\n      if (!this.isRemote) {\r\n        const filterValue: string[] = value.toLowerCase().split(' ');\r\n        return this.options.filter((option: OptionAutocompleteHelisa<T>) => {\r\n          let ws: boolean = true;\r\n          filterValue.forEach((text: string) => ws = ws && option.displayText.toLowerCase().indexOf(text) >= 0);\r\n          return ws;\r\n        }).splice(0, 5);\r\n      } else {\r\n        return this.options;\r\n      }\r\n    }\r\n  }\r\n\r\n  public onSelected(event: {option: {value: OptionAutocompleteHelisa<T>}}): void {\r\n    this.selectedValue = event.option.value;\r\n    this.selectedValueEmmiter.emit(this.selectedValue.value);\r\n  }\r\n\r\n  getNextPage(): void {\r\n    this.onScrollObservable.next();\r\n  }\r\n}\r\n","import { Directive, EventEmitter, Input, Output, OnDestroy} from '@angular/core';\r\nimport { MatAutocomplete} from '@angular/material';\r\nimport { takeUntil, tap} from 'rxjs/operators';\r\nimport { Subject } from 'rxjs';\r\n\r\n\r\nexport interface IAutoCompleteScrollEvent {\r\n  autoComplete: MatAutocomplete;\r\n  scrollEvent: Event;\r\n}\r\n\r\n\r\n@Directive({\r\n  selector: 'mat-autocomplete[optionsScroll]'\r\n})\r\nexport class OptionsScrollDirective implements OnDestroy  {\r\n\r\n  /**\r\n   * This value would different depends of styles\r\n   */\r\n  @Input() thresholdPercent: number = .9;\r\n  @Output() optionsScroll: EventEmitter<IAutoCompleteScrollEvent> = new EventEmitter<IAutoCompleteScrollEvent>();\r\n  destroy: Subject<void> = new Subject<void>();\r\n  lastScrollTop: number  = 0;\r\n\r\n  constructor(public autoComplete: MatAutocomplete) {\r\n    this.autoComplete.opened.pipe(\r\n      tap(() => {\r\n        // Note: When autocomplete raises opened, panel is not yet created (by Overlay)\r\n        // Note: The panel will be available on next tick\r\n        // Note: The panel wil NOT open if there are no options to display\r\n        setTimeout(() => {\r\n          // Note: remove listner just for safety, in case the close event is skipped.\r\n          this.removeScrollEventListener();\r\n          if (!!this.autoComplete &&\r\n            !!this.autoComplete.panel &&\r\n            !!this.autoComplete.panel.nativeElement) {\r\n              this.autoComplete.panel.nativeElement\r\n                .addEventListener('scroll', this.onScroll.bind(this), false);\r\n            }\r\n        });\r\n      }),\r\n      takeUntil(this.destroy)).subscribe();\r\n\r\n    this.autoComplete.closed.pipe(\r\n      tap(() => this.removeScrollEventListener()),\r\n      takeUntil(this.destroy)).subscribe();\r\n  }\r\n\r\n  private removeScrollEventListener(): void {\r\n    if (!!this.autoComplete &&\r\n      !!this.autoComplete.panel &&\r\n      !!this.autoComplete.panel.nativeElement) {\r\n    this.autoComplete.panel.nativeElement\r\n      .removeEventListener('scroll', this.onScroll);\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.destroy.next();\r\n    this.destroy.complete();\r\n\r\n    this.removeScrollEventListener();\r\n  }\r\n\r\n\r\n  onScroll(event: Event): void {\r\n    // Credits: how to know if it's down or up scroll \"https://github.com/qeremy/so/blob/master/so.dom.js#L426\"\r\n    const st: number = (event.target as Window).pageYOffset || (event.target as Element).scrollTop;\r\n    if (st > this.lastScrollTop) {\r\n       // downscroll code\r\n       if (this.thresholdPercent === undefined) {\r\n        this.optionsScroll.next({ autoComplete: this.autoComplete, scrollEvent: event });\r\n      } else {\r\n        const threshold: number = this.thresholdPercent * 100 * (event.target as Element).scrollHeight / 100;\r\n        const current: number = (event.target as Element).scrollTop + (event.target as Element).clientHeight;\r\n        // console.log(`scroll ${current}, threshold: ${threshold}`)\r\n        if (current > threshold) {\r\n          // console.log('load next page');\r\n          this.optionsScroll.next({ autoComplete: this.autoComplete, scrollEvent: event });\r\n        }\r\n      }\r\n    } else {\r\n       // upscroll code\r\n    }\r\n    this.lastScrollTop = st <= 0 ? 0 : st;\r\n  }\r\n\r\n}\r\n","import { Directive, Input, HostListener, ElementRef } from '@angular/core';\r\nimport { MatTooltip } from '@angular/material';\r\n\r\n@Directive({\r\n    selector: '[helTooltip]',\r\n    providers: [MatTooltip]\r\n})\r\nexport class HelTooltipDirective {\r\n\r\n    tooltip: MatTooltip;\r\n\r\n    /**\r\n     * Mensaje a mostrar\r\n     */\r\n    @Input('helTooltip') message: string;\r\n\r\n    /**\r\n     * Tiempo antes de ocultarla el mensaje\r\n     */\r\n    @Input() hideDelay: number = 600;\r\n\r\n    /**\r\n     * Tiempo antes de mostra el mensaje\r\n     */\r\n    @Input() showDelay: number = 500;\r\n\r\n\r\n    constructor(tooltip: MatTooltip, private elemRef: ElementRef) {\r\n      this.tooltip = tooltip;\r\n    }\r\n\r\n    @HostListener('mouseover') mouseover(): void {\r\n      const currentContent: string = this.elemRef.nativeElement.innerText;\r\n\r\n      if (!!currentContent && !!this.message) {\r\n        if ((currentContent.toUpperCase() !== this.message.toString().toUpperCase()) || this.isEllipsisActive(this.elemRef.nativeElement)) {\r\n          this.tooltip.message = this.message;\r\n        }\r\n      }\r\n\r\n      this.tooltip.showDelay =  this.showDelay;\r\n      this.tooltip.hideDelay = this.hideDelay;\r\n    }\r\n\r\n\r\n    private isEllipsisActive(e: {offsetWidth: number , scrollWidth: number}): boolean {\r\n      return (e.offsetWidth < e.scrollWidth);\r\n    }\r\n}\r\n","import { Directive, HostBinding, PLATFORM_ID, Inject, Input, OnChanges } from '@angular/core';\r\nimport { isPlatformBrowser } from '@angular/common';\r\n\r\n@Directive({\r\n  selector: 'a[href]',\r\n})\r\nexport class ExternalLinkDirective implements OnChanges {\r\n  @HostBinding('attr.rel') relAttr: string = '';\r\n  @HostBinding('attr.target') targetAttr: string = '';\r\n  @HostBinding('attr.href') hrefAttr: string = '';\r\n  @Input() href: string;\r\n\r\n  constructor(@Inject(PLATFORM_ID) private platformId: string) {}\r\n\r\n  ngOnChanges(): void {\r\n\r\n    this.hrefAttr = this.href;\r\n\r\n    if (this.isLinkExternal()) {\r\n      this.relAttr = 'noopener';\r\n      this.targetAttr = '_blank';\r\n    }\r\n  }\r\n\r\n  private isLinkExternal(): boolean {\r\n    return isPlatformBrowser(this.platformId) && !this.href.includes(location.hostname);\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n    name: 'externalLink'\r\n})\r\nexport class ExternalLinkPipe implements PipeTransform {\r\n    transform(value: string, ...args: string[]): string {\r\n        return '//' + value;\r\n    }\r\n}\r\n","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\n\r\ninterface AlertUncompletedDataHelisaProperties {\r\n  title: string;\r\n  content: string;\r\n  okLabel: string;\r\n  cancelLabel: string;\r\n}\r\n\r\nconst DEFAULT_TITLE: string = 'No ha suministrado la informaciÃ³n necesaria.';\r\nconst DEFAULT_CONTENT: string = 'Si insite en grabar asÃ­, este concepto no serÃ¡ utilizable hasta su conclusiÃ³n satisfactoria, que deberÃ¡ completar posteriormente modificando en concepto.';\r\n\r\n@Component({\r\n  selector: 'hel-alert-uncompleted-data-helisa',\r\n  templateUrl: './alert-uncompleted-data-helisa.component.html',\r\n  styleUrls: ['./alert-uncompleted-data-helisa.component.sass']\r\n})\r\nexport class AlertUncompletedDataHelisaComponent implements OnInit {\r\n\r\n  title: string;\r\n  content: string;\r\n  okLabel: string;\r\n  cancelLabel: string;\r\n\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<AlertUncompletedDataHelisaComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: AlertUncompletedDataHelisaProperties\r\n  ) { \r\n    this.title = data.title;\r\n    if (this.title === undefined) {\r\n      this.title = DEFAULT_TITLE;\r\n    }\r\n    this.content = data.content;\r\n    if (this.content === undefined) {\r\n      this.content = DEFAULT_CONTENT;\r\n    }\r\n    this.okLabel = data.okLabel;\r\n    if (this.okLabel === undefined) {\r\n      this.okLabel = 'Lo asumo';\r\n    }\r\n    this.cancelLabel = data.cancelLabel;\r\n    if (this.cancelLabel === undefined) {\r\n      this.cancelLabel = 'Me retracto';\r\n    }\r\n    dialogRef.disableClose = true;\r\n    dialogRef.keydownEvents().subscribe((event: KeyboardEvent) => {\r\n      if (event.code === 'Escape') {\r\n        this.dialogRef.close(this.onCancel());\r\n      }\r\n    });    \r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  onCancel(): void {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\n\r\ninterface AlertLostDataHelisaProperties {\r\n  title: string;\r\n  content: string;\r\n  okLabel: string;\r\n  cancelLabel: string;\r\n}\r\n\r\nconst DEFAULT_TITLE: string = 'Â¿EstÃ¡ seguro de querer perder lo ya hecho?';\r\nconst DEFAULT_CONTENT: string = 'Si no estÃ¡ seguro, puede continuar o \"aplicar\" y posteriormente cuando tenga clara las respuestas, usando la opciÃ³n de modificar podrÃ¡ completar el concepto.';\r\n\r\n@Component({\r\n  selector: 'hel-alert-lost-data-helisa',\r\n  templateUrl: './alert-lost-data-helisa.component.html',\r\n  styleUrls: ['./alert-lost-data-helisa.component.sass']\r\n})\r\nexport class AlertLostDataHelisaComponent implements OnInit {\r\n\r\n  title: string;\r\n  content: string;\r\n  okLabel: string;\r\n  cancelLabel: string;\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<AlertLostDataHelisaComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: AlertLostDataHelisaProperties\r\n  ) { \r\n    this.title = data.title;\r\n    if (this.title === undefined) {\r\n      this.title = DEFAULT_TITLE;\r\n    }\r\n    this.content = data.content;\r\n    if (this.content === undefined) {\r\n      this.content = DEFAULT_CONTENT;\r\n    }\r\n    this.okLabel = data.okLabel;\r\n    if (this.okLabel === undefined) {\r\n      this.okLabel = 'Lo asumo';\r\n    }\r\n    this.cancelLabel = data.cancelLabel;\r\n    if (this.cancelLabel === undefined) {\r\n      this.cancelLabel = 'Me retracto';\r\n    }\r\n    dialogRef.disableClose = true;\r\n    dialogRef.keydownEvents().subscribe((event: KeyboardEvent) => {\r\n      if (event.code === 'Escape') {\r\n        this.dialogRef.close(this.onCancel());\r\n      }\r\n    });    \r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  onCancel(): void {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\n\r\nconst DEFAULT_TITLE: string = 'Â¿EstÃ¡ seguro que debe anular esta informaciÃ³n?';\r\nconst DEFAULT_CONTENT: string = 'Al anular este concepto, quedarÃ¡ la huella de todo lo que se hizo apoyados en su informaciÃ³n. No es una eliminaciÃ³n tÃ¡cita, es suprimir su uso en adelante.';\r\n\r\n@Component({\r\n  selector: 'hel-alert-delete-data-helisa',\r\n  templateUrl: './alert-delete-data-helisa.component.html',\r\n  styleUrls: ['./alert-delete-data-helisa.component.sass']\r\n})\r\nexport class AlertDeleteDataHelisaComponent implements OnInit {\r\n\r\n  title: string;\r\n  content: string;\r\n  okLabel: string;\r\n  cancelLabel: string;\r\nz\r\n  constructor(\r\n    public dialogRef: MatDialogRef<AlertDeleteDataHelisaComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: AlertDeleteDataHelisaComponent\r\n  ) { \r\n    this.title = data.title;\r\n    if (this.title === undefined) {\r\n      this.title = DEFAULT_TITLE;\r\n    }\r\n    this.content = data.content;\r\n    if (this.content === undefined) {\r\n      this.content = DEFAULT_CONTENT;\r\n    }\r\n    this.okLabel = data.okLabel;\r\n    if (this.okLabel === undefined) {\r\n      this.okLabel = 'Lo asumo';\r\n    }\r\n    this.cancelLabel = data.cancelLabel;\r\n    if (this.cancelLabel === undefined) {\r\n      this.cancelLabel = 'Me retracto';\r\n    }\r\n    dialogRef.disableClose = true;\r\n    dialogRef.keydownEvents().subscribe((event: KeyboardEvent) => {\r\n      if (event.code === 'Escape') {\r\n        this.dialogRef.close(this.onCancel());\r\n      }\r\n    });    \r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  onCancel(): void {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\n\r\ninterface AlertUncompletedSelectedDataHelisaProperties {\r\n  title: string;\r\n  content: string;\r\n  okLabel: string;\r\n  cancelLabel: string;\r\n}\r\n\r\nconst DEFAULT_CONTENT: string = 'Este registro no esta completo. ModifÃ­quelo para poderlo utilizar.';\r\n\r\n@Component({\r\n  selector: 'hel-alert-uncompleted-selected-data-helisa',\r\n  templateUrl: './alert-uncompleted-selected-data-helisa.component.html',\r\n  styleUrls: ['./alert-uncompleted-selected-data-helisa.component.sass']\r\n})\r\nexport class AlertUncompletedSelectedDataHelisaComponent implements OnInit {\r\n\r\n  content: string;\r\n  okLabel: string;\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<AlertUncompletedSelectedDataHelisaComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: AlertUncompletedSelectedDataHelisaProperties\r\n  ) { \r\n    this.content = data.content;\r\n    if (this.content === undefined) {\r\n      this.content = DEFAULT_CONTENT;\r\n    }\r\n    this.okLabel = data.okLabel;\r\n    if (this.okLabel === undefined) {\r\n      this.okLabel = 'Aceptar';\r\n    }\r\n    dialogRef.disableClose = true;\r\n    dialogRef.keydownEvents().subscribe((event: KeyboardEvent) => {\r\n      if (event.code === 'Escape') {\r\n        this.dialogRef.close(this.onCancel());\r\n      }\r\n    });    \r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  onCancel(): void {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\n\r\n\r\ninterface AlertInformationNotValidProperties {\r\n    title: string;\r\n    content: string;\r\n}\r\n\r\nconst DEFAULT_CONTENT: string = 'Rectifique. Hay informaciÃ³n no vÃ¡lida';\r\n\r\n@Component({\r\n    selector: 'hel-alert-information-not-valid-helisa',\r\n    templateUrl: './alert-information-not-valid-helisa.component.html',\r\n    styleUrls: ['./alert-information-not-valid-helisa.component.sass']\r\n})\r\nexport class AlertInformationNotValidHelisaComponent implements OnInit {\r\n\r\n    content: string;\r\n\r\n    constructor(\r\n        public dialogRef: MatDialogRef<AlertInformationNotValidHelisaComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: AlertInformationNotValidProperties\r\n    ) {\r\n        this.content = data.content;\r\n        if (this.content === undefined) {\r\n            this.content = DEFAULT_CONTENT;\r\n        }\r\n        dialogRef.disableClose = true;\r\n        dialogRef.keydownEvents().subscribe((event: KeyboardEvent) => {\r\n            if (event.code === 'Escape') {\r\n                this.dialogRef.close(this.onCancel());\r\n            }\r\n        });\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        setTimeout(() => {\r\n            this.dialogRef.close();\r\n        }, 3000);\r\n    }\r\n\r\n    onCancel(): void {\r\n        this.dialogRef.close();\r\n    }\r\n}\r\n","import { DragDropModule } from '@angular/cdk/drag-drop';\r\nimport { LayoutModule } from '@angular/cdk/layout';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport {\r\n  MatAutocompleteModule,\r\n  MatButtonModule,\r\n  MatCheckboxModule,\r\n  MatGridListModule,\r\n  MatInputModule,\r\n  MatMenuModule,\r\n  MatNativeDateModule,\r\n  MatOptionModule,\r\n  MatPaginatorModule,\r\n  MatRadioModule,\r\n  MatSidenavModule,\r\n  MatSnackBarModule,\r\n  MatSortModule,\r\n  MatTableModule\r\n} from '@angular/material';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatChipsModule } from '@angular/material/chips';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatStepperModule } from '@angular/material/stepper';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { MatTreeModule } from '@angular/material/tree';\r\nimport { AlertHelisaComponent } from './components/alert-helisa/alert-helisa.component';\r\nimport { AutocompleteHelisaComponent } from './components/autocomplete-helisa/autocomplete-helisa.component';\r\nimport { DateHelisaComponent } from './components/date-helisa/date-helisa.component';\r\nimport { DependencyTableHelisaComponent } from './components/dependency-table-helisa/dependency-table-helisa.component';\r\nimport { InputHelisaComponent } from './components/input-helisa/input-helisa.component';\r\nimport { InputWithButtonComponent } from './components/input-with-button/input-with-button.component';\r\nimport { TableHelisaComponent } from './components/table-helisa/table-helisa.component';\r\nimport { TableHelisaService } from './components/table-helisa/table-helisa.service';\r\nimport { ToastHelisaComponent } from './components/toast-helisa/toast-helisa.component';\r\nimport { TreeHelisaComponent } from './components/tree-helisa/tree-helisa.component';\r\nimport { TreeHelisaService } from './components/tree-helisa/tree-helisa.service';\r\nimport { ExternalLinkDirective } from './directives/external-link.directive';\r\nimport { OptionsScrollDirective } from './directives/options-scroll.directive';\r\nimport { HelTooltipDirective } from './directives/tooltip.directive';\r\nimport { ExternalLinkPipe } from './pipes/external-link.pipe';\r\nimport { AlertUncompletedDataHelisaComponent } from './components/alert-uncompleted-data-helisa/alert-uncompleted-data-helisa.component';\r\nimport { AlertLostDataHelisaComponent } from './components/alert-lost-data-helisa/alert-lost-data-helisa.component';\r\nimport { AlertDeleteDataHelisaComponent } from './components/alert-delete-data-helisa/alert-delete-data-helisa.component';\r\nimport {\r\n  AlertUncompletedSelectedDataHelisaComponent\r\n} from './components/alert-uncompleted-selected-data-helisa/alert-uncompleted-selected-data-helisa.component';\r\nimport { \r\n  AlertInformationNotValidHelisaComponent\r\n } from './components/alert-information-not-valid-helisa/alert-information-not-valid-helisa.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    InputWithButtonComponent,\r\n    ToastHelisaComponent,\r\n    AlertHelisaComponent,\r\n    DependencyTableHelisaComponent,\r\n    InputHelisaComponent,\r\n    TableHelisaComponent,\r\n    TreeHelisaComponent,\r\n    DateHelisaComponent,\r\n    AutocompleteHelisaComponent,\r\n    OptionsScrollDirective,\r\n    HelTooltipDirective,\r\n    ExternalLinkDirective,\r\n    ExternalLinkPipe,\r\n    AlertUncompletedDataHelisaComponent,\r\n    AlertLostDataHelisaComponent,\r\n    AlertDeleteDataHelisaComponent,\r\n    AlertUncompletedSelectedDataHelisaComponent,\r\n    AlertInformationNotValidHelisaComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n\r\n    MatAutocompleteModule,\r\n    MatButtonModule,\r\n    MatCheckboxModule,\r\n    MatToolbarModule,\r\n    MatExpansionModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatSelectModule,\r\n    MatOptionModule,\r\n    MatListModule,\r\n    MatIconModule,\r\n    MatSnackBarModule,\r\n    MatCardModule,\r\n    LayoutModule,\r\n    MatTooltipModule,\r\n    MatButtonModule,\r\n    MatSidenavModule,\r\n    MatIconModule,\r\n    MatListModule,\r\n    MatGridListModule,\r\n    MatCardModule,\r\n    MatMenuModule,\r\n    MatInputModule,\r\n    MatSelectModule,\r\n    MatRadioModule,\r\n    MatProgressSpinnerModule,\r\n    MatTableModule,\r\n    MatPaginatorModule,\r\n    MatSortModule,\r\n    MatDialogModule,\r\n    MatTabsModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    MatStepperModule,\r\n    MatChipsModule,\r\n    DragDropModule,\r\n    MatTreeModule\r\n  ],\r\n  exports: [\r\n    InputWithButtonComponent,\r\n    ToastHelisaComponent,\r\n    AlertHelisaComponent,\r\n    DependencyTableHelisaComponent,\r\n    InputHelisaComponent,\r\n    TableHelisaComponent,\r\n    TreeHelisaComponent,\r\n    DateHelisaComponent,\r\n    AutocompleteHelisaComponent,\r\n    OptionsScrollDirective,\r\n    HelTooltipDirective,\r\n    ExternalLinkDirective,\r\n    ExternalLinkPipe,\r\n    MatButtonModule,\r\n    MatCheckboxModule,\r\n    MatToolbarModule,\r\n    MatExpansionModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatSelectModule,\r\n    MatOptionModule,\r\n    MatListModule,\r\n    MatIconModule,\r\n    MatSnackBarModule,\r\n    MatCardModule,\r\n    LayoutModule,\r\n    MatTooltipModule,\r\n    MatButtonModule,\r\n    MatSidenavModule,\r\n    MatIconModule,\r\n    MatListModule,\r\n    MatGridListModule,\r\n    MatCardModule,\r\n    MatMenuModule,\r\n    MatInputModule,\r\n    MatSelectModule,\r\n    MatRadioModule,\r\n    MatProgressSpinnerModule,\r\n    MatTableModule,\r\n    MatPaginatorModule,\r\n    MatSortModule,\r\n    MatDialogModule,\r\n    MatTabsModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    MatStepperModule,\r\n    MatChipsModule,\r\n    DragDropModule,\r\n    MatTreeModule,\r\n    AlertUncompletedDataHelisaComponent,\r\n    AlertLostDataHelisaComponent,\r\n    AlertDeleteDataHelisaComponent,\r\n    AlertUncompletedSelectedDataHelisaComponent,\r\n    AlertInformationNotValidHelisaComponent\r\n  ],\r\n  providers: [TableHelisaService, TreeHelisaService]\r\n})\r\nexport class HelisaLibModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { MatDialog, MatDialogRef } from '@angular/material';\r\nimport { Observable } from 'rxjs';\r\nimport { AlertUncompletedDataHelisaComponent } from './alert-uncompleted-data-helisa.component';\r\n\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AlertUncompletedDataHelisaService {\r\n\r\n  constructor(public dialog: MatDialog) { }\r\n\r\n  openDialog(title?: string, content?: string, okLabel?: string, cancelLabel?: string): Observable<boolean> {\r\n    const dialogRef: MatDialogRef<AlertUncompletedDataHelisaComponent> = this.dialog.open(AlertUncompletedDataHelisaComponent, {\r\n      width: '250px',\r\n      data: { title, content, okLabel, cancelLabel }\r\n    });\r\n\r\n    return dialogRef.afterClosed();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { MatDialog, MatDialogRef } from '@angular/material';\r\nimport { Observable } from 'rxjs';\r\nimport { AlertLostDataHelisaComponent } from './alert-lost-data-helisa.component';\r\n\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AlertLostDataHelisaService {\r\n\r\n  constructor(public dialog: MatDialog) { }\r\n\r\n  openDialog(title?: string, content?: string, okLabel?: string, cancelLabel?: string): Observable<boolean> {\r\n    const dialogRef: MatDialogRef<AlertLostDataHelisaComponent> = this.dialog.open(AlertLostDataHelisaComponent, {\r\n      width: '250px',\r\n      data: { title, content, okLabel, cancelLabel }\r\n    });\r\n\r\n    return dialogRef.afterClosed();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { MatDialog, MatDialogRef } from '@angular/material';\r\nimport { Observable } from 'rxjs';\r\nimport { AlertDeleteDataHelisaComponent } from './alert-delete-data-helisa.component';\r\n\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AlertDeleteDataHelisaService {\r\n\r\n  constructor(public dialog: MatDialog) { }\r\n\r\n  openDialog(title?: string, content?: string, okLabel?: string, cancelLabel?: string): Observable<boolean> {\r\n    const dialogRef: MatDialogRef<AlertDeleteDataHelisaComponent> = this.dialog.open(AlertDeleteDataHelisaComponent, {\r\n      width: '250px',\r\n      data: { title, content, okLabel, cancelLabel }\r\n    });\r\n\r\n    return dialogRef.afterClosed();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { MatDialog, MatDialogRef } from '@angular/material';\r\nimport { Observable } from 'rxjs';\r\nimport {AlertUncompletedSelectedDataHelisaComponent} from './alert-uncompleted-selected-data-helisa.component';\r\n\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AlertUncompletedSelectedDataHelisaService {\r\n\r\n  constructor(public dialog: MatDialog) { }\r\n\r\n  openDialog(title?: string, content?: string, okLabel?: string, cancelLabel?: string): Observable<boolean> {\r\n    const dialogRef: MatDialogRef<AlertUncompletedSelectedDataHelisaComponent> = this.dialog.open(AlertUncompletedSelectedDataHelisaComponent, {\r\n      width: '250px',\r\n      data: { title, content, okLabel, cancelLabel }\r\n    });\r\n\r\n    return dialogRef.afterClosed();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { MatDialog, MatDialogRef } from '@angular/material';\r\nimport { Observable } from 'rxjs';\r\nimport { AlertInformationNotValidHelisaComponent } from './alert-information-not-valid-helisa.component';\r\n\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AlertInformationNotValidHelisaService {\r\n\r\n  constructor(public dialog: MatDialog) { }\r\n\r\n  openDialog(title?: string, content?: string): Observable<boolean> {\r\n    const dialogRef: MatDialogRef<AlertInformationNotValidHelisaComponent> = this.dialog.open(AlertInformationNotValidHelisaComponent, {\r\n      width: '250px',\r\n      data: { title, content}\r\n    });\r\n\r\n    return dialogRef.afterClosed();\r\n  }\r\n}\r\n"],"names":["FormControl","Validators","EventEmitter","Component","Input","ViewChild","Output","Inject","MAT_SNACK_BAR_DATA","Injectable","MatSnackBar","MatDialogRef","MAT_DIALOG_DATA","MatDialog","Subject","ViewChildren","tslib_1.__values","MatTableDataSource","moveItemInArray","MatSort","MatTable","ElementRef","tap","filter","datepicker","BehaviorSubject","router","NestedTreeControl","MatTreeNestedDataSource","_.remove","_.orderBy","Router","HostListener","debounceTime","throttleTime","of","startWith","map","takeUntil","Directive","MatAutocomplete","tooltip","MatTooltip","isPlatformBrowser","PLATFORM_ID","HostBinding","Pipe","DEFAULT_TITLE","DEFAULT_CONTENT","NgModule","CommonModule","FormsModule","ReactiveFormsModule","MatAutocompleteModule","MatButtonModule","MatCheckboxModule","MatToolbarModule","MatExpansionModule","MatFormFieldModule","MatInputModule","MatSelectModule","MatOptionModule","MatListModule","MatIconModule","MatSnackBarModule","MatCardModule","LayoutModule","MatTooltipModule","MatSidenavModule","MatGridListModule","MatMenuModule","MatRadioModule","MatProgressSpinnerModule","MatTableModule","MatPaginatorModule","MatSortModule","MatDialogModule","MatTabsModule","MatDatepickerModule","MatNativeDateModule","MatStepperModule","MatChipsModule","DragDropModule","MatTreeModule"],"mappings":"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"}
