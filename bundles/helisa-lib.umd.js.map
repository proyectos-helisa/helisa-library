{"version":3,"file":"helisa-lib.umd.js","sources":["../esm2015/projects/helisa-lib/src/lib/components/input-with-button/input-with-button.component.ts","../esm2015/projects/helisa-lib/src/lib/components/toast-helisa/toast-helisa.component.ts","../esm2015/projects/helisa-lib/src/lib/components/toast-helisa/toast-helisa.service.ts","../esm2015/projects/helisa-lib/src/lib/components/toast-helisa/toast-type.enum.ts","../esm2015/projects/helisa-lib/src/lib/components/alert-helisa/alert-helisa-type.enum.ts","../esm2015/projects/helisa-lib/src/lib/components/alert-helisa/alert-helisa.component.ts","../esm2015/projects/helisa-lib/src/lib/components/alert-helisa/alert-helisa.service.ts","../../../node_modules/tslib/tslib.es6.js","../esm2015/projects/helisa-lib/src/lib/components/dependency-table-helisa/dependency-table-helisa.service.ts","../esm2015/projects/helisa-lib/src/lib/components/table-helisa/table-helisa.service.ts","../esm2015/projects/helisa-lib/src/lib/components/dependency-table-helisa/dependency-table-helisa.component.ts","../esm2015/projects/helisa-lib/src/lib/components/input-helisa/input-helisa.component.ts","../esm2015/projects/helisa-lib/src/lib/components/table-helisa/table-helisa.interface.ts","../esm2015/projects/helisa-lib/src/lib/components/table-helisa/table-helisa-connect.component.ts","../esm2015/projects/helisa-lib/src/lib/components/table-helisa/table-helisa.component.ts","../esm2015/projects/helisa-lib/src/lib/components/date-helisa/date-helisa.component.ts","../esm2015/projects/helisa-lib/src/lib/components/tree-helisa/tree-helisa.service.ts","../esm2015/projects/helisa-lib/src/lib/components/tree-helisa/tree-helisa-connect.ts","../esm2015/projects/helisa-lib/src/lib/components/tree-helisa/tree-helisa.component.ts","../esm2015/projects/helisa-lib/src/lib/components/autocomplete-helisa/autocomplete-helisa.component.service.ts","../esm2015/projects/helisa-lib/src/lib/components/autocomplete-helisa/autocomplete-helisa.component.ts","../projects/helisa-lib/src/lib/directives/options-scroll.directive.ts","../projects/helisa-lib/src/lib/directives/tooltip.directive.ts","../projects/helisa-lib/src/lib/directives/external-link.directive.ts","../projects/helisa-lib/src/lib/pipes/external-link.pipe.ts","../esm2015/projects/helisa-lib/src/lib/components/combo-box-helisa/combo-box-helisa.component.ts","../esm2015/projects/helisa-lib/src/lib/components/paging-tree-helisa/paging-tree-helisa.component.ts","../esm2015/projects/helisa-lib/src/lib/components/alert-information-data-helisa/alert-information-helisa-type.enum.ts","../esm2015/projects/helisa-lib/src/lib/components/alert-information-data-helisa/alert-information-data-helisa.component.ts","../../projects/helisa-lib/src/lib/helisa-lib.module.ts","../esm2015/projects/helisa-lib/src/lib/components/alert-information-data-helisa/alert-information-data-helisa.service.ts","../../../projects/helisa-lib/src/public-api.ts","../../../projects/helisa-lib/src/helisa-lib.ts"],"names":["FormControl","Validators","EventEmitter","Component","Input","ViewChild","Output","Inject","MAT_SNACK_BAR_DATA","Injectable","MatSnackBar","ToastType","AlertHelisaType","MatDialogRef","MAT_DIALOG_DATA","MatDialog","Subject","ViewChildren","InputHelisaType","ColumnType","EventScope","TotalType","ChangeColumnConfigurationType","TableHelisaType","MatTableDataSource","moveItemInArray","MatSort","MatTable","ElementRef","moment_","TypeCalendarEnum","tap","filter","BehaviorSubject","NestedTreeControl","MatTreeNestedDataSource","_.remove","_.orderBy","Router","HostListener","debounceTime","throttleTime","of","startWith","map","takeUntil","Directive","MatAutocomplete","MatTooltip","isPlatformBrowser","PLATFORM_ID","HostBinding","Pipe","ComboBoxHelisaState","PagingTreeInitialMode","ContentChild","AlertInformationType","NgModule","CommonModule","FormsModule","ReactiveFormsModule","MatAutocompleteModule","MatButtonModule","MatCheckboxModule","MatToolbarModule","MatExpansionModule","MatFormFieldModule","MatInputModule","MatSelectModule","MatOptionModule","MatListModule","MatIconModule","MatSnackBarModule","MatCardModule","LayoutModule","MatTooltipModule","MatSidenavModule","MatGridListModule","MatMenuModule","MatRadioModule","MatProgressSpinnerModule","MatTableModule","MatPaginatorModule","MatSortModule","MatDialogModule","MatTabsModule","MatDatepickerModule","MatNativeDateModule","MatStepperModule","MatChipsModule","DragDropModule","MatTreeModule"],"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","sourcesContent":["import { Component, OnInit, Input, Output, EventEmitter, ViewChild, ElementRef } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'hel-input-with-button',\n  templateUrl: './input-with-button.component.html',\n  styleUrls: ['./input-with-button.component.sass']\n})\nexport class InputWithButtonComponent implements OnInit {\n\n  @Input() placeholder: string = '';\n  @Input() inputFormControl: FormControl = new FormControl('', Validators.required);\n  @Input() requiredMessage: string = 'El campo es requerido';\n  @Input() value: string = '';\n  @Input() isFocused: boolean = false;\n  @ViewChild('inputText', {static: true}) nameField: ElementRef;\n\n  @Output() done: EventEmitter<string> = new EventEmitter<string>();\n  @Output() cancel: EventEmitter<void> = new EventEmitter<void>();\n\n\n  constructor() { }\n\n  ngOnInit(): void {\n    if (this.value !== '') {\n      this.inputFormControl.setValue(this.value);\n    }\n    this.nameField.nativeElement.focus();\n  }\n\n\n  onDone(): void {\n    if (this.inputFormControl.valid) {\n      this.done.emit(this.inputFormControl.value);\n    }\n  }\n\n  onCancel(): void {\n    this.cancel.emit();\n  }\n\n}\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_SNACK_BAR_DATA } from '@angular/material/snack-bar';\nimport { ToastType } from './toast-type.enum';\n\n// @dynamic\n@Component({\n  selector: 'hel-toast',\n  templateUrl: './toast-helisa.component.html',\n  styleUrls: ['./toast-helisa.component.sass']\n})\nexport class ToastHelisaComponent implements OnInit {\n\n  constructor(@Inject(MAT_SNACK_BAR_DATA) public data: {type: ToastType, message: string, subMessages?: string[]}) { }\n\n  ngOnInit(): void {}\n\n}\n","import { Injectable } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { ToastType } from './toast-type.enum';\nimport { ToastHelisaComponent } from './toast-helisa.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ToastHelisaService {\n\n  durationInSeconds: number = 5;\n\n  constructor(private snackBar: MatSnackBar) { }\n\n  showToast(type: ToastType, message: string, subMessages?: string[]): void {\n    subMessages = subMessages ? subMessages : [];\n    this.snackBar.openFromComponent(ToastHelisaComponent, {\n      data: {message, type, subMessages},\n      duration: this.durationInSeconds * 1000\n    });\n  }\n}\n","export enum ToastType {\n    DONE = 'done',\n    ERROR = 'error',\n    INFO = 'info'\n}\n","export enum AlertHelisaType {\n    ERROR = 'ERROR',\n    CONFIRMATION = 'CONFIRMATION'\n}\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { AlertHelisaType } from './alert-helisa-type.enum';\n\ninterface AlertHelisaProperties {\n  title: string;\n  content: string;\n  type: AlertHelisaType;\n  okLabel: string;\n  cancelLabel: string;\n}\n\n@Component({\n  selector: 'hel-alert',\n  templateUrl: './alert-helisa.component.html',\n  styleUrls: ['./alert-helisa.component.sass']\n})\nexport class AlertHelisaComponent implements OnInit {\n\n  content: string;\n  title: string;\n  hasCancel: boolean;\n  okLabel: string;\n  cancelLabel: string;\n\n  constructor(\n    public dialogRef: MatDialogRef<AlertHelisaComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: AlertHelisaProperties\n  ) {\n    this.content = data.content;\n    this.title = data.title;\n    this.okLabel = data.okLabel;\n    if (this.okLabel === undefined) {\n      this.okLabel = 'aceptar';\n    }\n    this.cancelLabel = data.cancelLabel;\n    if (this.cancelLabel === undefined) {\n      this.cancelLabel = 'cancelar';\n    }\n    this.hasCancel = data.type === AlertHelisaType.CONFIRMATION;\n    dialogRef.disableClose = true;\n    dialogRef.keydownEvents().subscribe((event: KeyboardEvent): void => {\n      if (event.code === 'Escape') {\n        this.dialogRef.close(this.onCancel());\n      }\n    });\n  }\n\n  ngOnInit(): void {\n  }\n\n  onCancel(): void {\n    this.dialogRef.close();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { Observable } from 'rxjs';\nimport { AlertHelisaType } from './alert-helisa-type.enum';\nimport { AlertHelisaComponent } from './alert-helisa.component';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AlertHelisaService {\n\n  constructor(public dialog: MatDialog) { }\n\n  openDialog(type: AlertHelisaType, title: string, content: string, okLabel?: string, cancelLabel?: string): Observable<boolean> {\n    const dialogRef: MatDialogRef<AlertHelisaComponent> = this.dialog.open(AlertHelisaComponent, {\n      width: '250px',\n      data: { title, content, type, okLabel, cancelLabel }\n    });\n\n    return dialogRef.afterClosed();\n  }\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { Observable, Subject, BehaviorSubject } from 'rxjs';\nimport {ColumnConfig, AddRowButton, ConfigRowStyles, TotalTableHelisa} from '../table-helisa/table-helisa.interface';\nimport { EventDependency} from './dependency-table-helisa.component';\n\nexport interface ConfigTable<T> {\n  columns: Array<ColumnConfig>;\n  isRemote: boolean;\n  dataSource?: Array<T>;\n  count?: number;\n  order?: number;\n  showTitle?: boolean;\n  indexRowSelect?: number;\n  isDragged?: boolean;\n  addRowButton?: AddRowButton;\n  configRowStylesFromColumn?: Array<ConfigRowStyles<T>>;\n  configColumnClass?: Array<string>,\n  isCellSelection?: boolean;\n  addBookButton?: boolean;\n}\n\n@Injectable()\nexport class DependencyTableHelisaService<T> {\n\n\n  tables: Subject<ConfigTable<T>[]> = new Subject();\n  infoTables: Array<ConfigTable<T>> = new Array();\n\n  private emitVisibilityButton$: Subject<EventDependency<boolean>> = new Subject<EventDependency<boolean>>();\n  emitVisibilityButton: Observable<EventDependency<boolean>> = this.emitVisibilityButton$.asObservable();\n\n  private emitVisibilityAllButtons$: Subject<boolean> = new Subject<boolean>();\n  emitVisibilityAllButtons: Observable<boolean> = this.emitVisibilityAllButtons$.asObservable();\n\n  private emitIsCellSelection$: Subject<EventDependency<boolean>> = new Subject<EventDependency<boolean>>();\n  emitIsCellSelection: Observable<EventDependency<boolean>> = this.emitIsCellSelection$.asObservable();\n\n  private emitChangeColumns$: Subject<EventDependency<ColumnConfig[]>> = new Subject<EventDependency<ColumnConfig[]>>();\n  emitChangeColumns: Observable<EventDependency<ColumnConfig[]>> = this.emitChangeColumns$.asObservable();\n\n  emitTotal: Subject<EventDependency<TotalTableHelisa>> = new Subject<EventDependency<TotalTableHelisa>>();\n  emitNextPage: Subject<EventDependency<T[]>> = new Subject<EventDependency<T[]>>();\n\n  constructor() { }\n\n  /**\n   * retorna un Observable<ConfigTable[]>\n   */\n  getTables(): Observable<ConfigTable<T>[]> {\n    return this.tables;\n  }\n\n  /**\n   * Actualiza las dependencias, agrendo la tabla que envian en el orden correspondiente o al final.\n   * También remueve las dependecias que hay apartir de la tabla segun se indique en el parametro.\n   * @param configTable Objeto que contiene la configuración para la tabla.\n   * @param withRemoveDependency boolean por defecto es false, si es 'true' indica que remueva las dependencias apartir de el.\n   */\n  updateDependency(configTable: ConfigTable<T>, withRemoveDependency: boolean = false): void {\n    if (withRemoveDependency) {\n      this.infoTables = this.infoTables.slice(0, !configTable.order ? 0 : configTable.order);\n    }\n    if (!configTable.order || configTable.order >= this.infoTables.length) {\n      configTable.order = this.infoTables.length;\n    }\n    this.infoTables[configTable.order] = configTable;\n    if (configTable.isRemote) {\n      configTable.dataSource = null;\n      if (configTable.count === null) {\n        throw new Error('hace falta el count');\n      }\n    } else {\n      if (configTable.dataSource === null) {\n        throw new Error('hace falta el dataSource');\n      }\n      configTable.count = configTable.dataSource.length;\n    }\n    this.tables.next(this.infoTables);\n  }\n\n  /**\n   * Emite un evento de total con la información para la tabla correspondiente\n   * @param event wrapper que contiene el indice de la tabla y la información de la pagina\n   */\n  setTotal(event: EventDependency<TotalTableHelisa>): void {\n    this.emitTotal.next(event);\n  }\n\n  /**\n   * Emite un evento de agregar pagina con la pagina para la tabla correspondiente\n   * @param event wrapper que contiene el indice de la tabla y la información de la pagina\n   */\n  addPage(event: EventDependency<T[]>): void {\n    this.emitNextPage.next(event);\n  }\n\n  selectIndexRow(config: ConfigTable<T>): void {\n    if (this.infoTables[config.order]) {\n      this.infoTables[config.order].indexRowSelect = config.indexRowSelect;\n      this.tables.next(this.infoTables);\n    }\n  }\n\n\n  /**\n   * Muestra o esconde el boton una tabla en especifico\n   * @param event para indicar el index de la tabla y en \"data\" true o false\n   */\n  changeVisibilityButton(event: EventDependency<boolean>): void {\n    this.emitVisibilityButton$.next(event);\n  }\n\n\n  /**\n   * Esconde los botones de todas las tablas\n   * @param show indicar si se muestran o no todos los botones de las tablas\n   */\n  changeVisibilityAllButtons(show: boolean): void {\n    this.emitVisibilityAllButtons$.next(show);\n  }\n\n  /**\n   * Para habilitar el manejo de selección de celda\n   * @param event para indicar el index de la tabla y en \"data\" true o false\n   */\n  changeisCellSelection(event: EventDependency<boolean>): void {\n    this.emitIsCellSelection$.next(event);\n  }\n\n   /**\n    * Para habilitar el cambio de columnas\n    * @param event para indicar el index de la tabla y en \"data\" columnas\n    */\n  changeColumnsByTable( event: EventDependency<ColumnConfig[]>): void {\n    this.emitChangeColumns$.next(event);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport {BehaviorSubject, Observable, Subject} from 'rxjs';\nimport {TotalTableHelisa} from './table-helisa.interface';\nimport {TableHelisaComponent} from './table-helisa.component';\n\nexport interface TableHelisaServiceInfo<T> {\n  obj: T;\n  table?: {} | TableHelisaComponent<T>;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TableHelisaService<T> {\n\n  private emitChangeSource: Subject<TableHelisaServiceInfo<TotalTableHelisa>> = new Subject<TableHelisaServiceInfo<TotalTableHelisa>>();\n  private emitNextPage: Subject<TableHelisaServiceInfo<T[]>> = new Subject<TableHelisaServiceInfo<T[]>>();\n\n  totalReturn: Observable<TableHelisaServiceInfo<TotalTableHelisa>> = this.emitChangeSource.asObservable();\n  nextPageReturn: Observable<TableHelisaServiceInfo<T[]>> = this.emitNextPage.asObservable();\n\n  private emitVisibleButton$: Subject<boolean> = new Subject<boolean>();\n  /**\n   * Observable para saber si se debe mostrar o esconder el boton de add row\n   */\n  emitVisibleButton: Observable<boolean> = this.emitVisibleButton$.asObservable();\n\n  setTotal(total: TotalTableHelisa, table?: TableHelisaComponent<TotalTableHelisa>): void {\n    this.emitChangeSource.next({obj: total, table});\n  }\n\n  addPage(page: T[], table?: TableHelisaComponent<T>): void {\n    this.emitNextPage.next({obj: page, table});\n  }\n\n  /**\n   * para modificar el valor de si se muestra o no el boton de add row de la tabla\n   * @param change indicar si se muestra o no el boton de add row de la tabla\n   */\n  changeVisibilityButton(change: boolean): void {\n    this.emitVisibleButton$.next(change);\n  }\n\n}\n","import {Component, OnInit, EventEmitter, Output, QueryList, ViewChildren, Input} from '@angular/core';\nimport {DependencyTableHelisaService, ConfigTable} from './dependency-table-helisa.service';\nimport {Cell, ColumnConfig, EventColumn, RequestTableHelisa, SelectObject, TotalTableHelisa} from '../table-helisa/table-helisa.interface';\nimport {TableHelisaService} from '../table-helisa/table-helisa.service';\nimport {TableHelisaComponent} from '../table-helisa/table-helisa.component';\n\nexport interface EventDependency<T> {\n  index: number;\n  data: T;\n}\n\n@Component({\n  selector: 'hel-dependency-table',\n  templateUrl: './dependency-table-helisa.component.html',\n  styleUrls: ['./dependency-table-helisa.component.sass'],\n  providers: [DependencyTableHelisaService]\n})\nexport class DependencyTableHelisaComponent<T> implements OnInit {\n\n  tables: Array<ConfigTable<T>> = [];\n  @ViewChildren('viewTables') viewTables: QueryList<TableHelisaComponent<T>>;\n  @Input() showToolTip: boolean = true;\n\n  /**\n   * deprecated, use selectObject\n   */\n  @Output() selected: EventEmitter<EventDependency<T>> = new EventEmitter<EventDependency<T>>();\n  @Output() selectObject: EventEmitter<EventDependency<{} | T>> = new EventEmitter<EventDependency<{} | T>>();\n  @Output() nextPage: EventEmitter<EventDependency<{} | T>> = new EventEmitter<EventDependency<{} | T>>();\n  @Output() total: EventEmitter<EventDependency<{} | T>> = new EventEmitter<EventDependency<{}>>();\n  @Output() sort: EventEmitter<EventDependency<{} | T>> = new EventEmitter<EventDependency<{}>>();\n  @Output() drop: EventEmitter<EventDependency<{} | T>> = new EventEmitter<EventDependency<{}>>();\n  @Output() addRow: EventEmitter<number> = new EventEmitter<number>();\n  @Output() selectCell: EventEmitter<EventDependency<{} | T>> = new EventEmitter<EventDependency<{} | T>>();\n  @Output() bookClicked: EventEmitter<EventDependency<{} | T>> = new EventEmitter<EventDependency<{} | T>>();\n  selectedObject: EventDependency<{}> = null;\n\n\n  /**\n   * Tiempo antes de ocultarla el mensaje del tooltip\n   */\n  @Input() hideDelay: number = 600;\n\n  /**\n   * Tiempo antes de mostra el mensaje del tooltip\n   */\n  @Input() showDelay: number = 500;\n\n\n  constructor(private dependencyTableHelisaService: DependencyTableHelisaService<T>, private tableService: TableHelisaService<T>) {\n  }\n\n  ngOnInit(): void {\n    this.getTables();\n    this.dependencyTableHelisaService.emitNextPage.subscribe(\n      (event: EventDependency<T[]>): void => {\n        this.tableService.addPage(event.data, this.viewTables.toArray()[event.index]);\n      }\n    );\n\n    this.dependencyTableHelisaService.emitTotal.subscribe(\n      (event: EventDependency<TotalTableHelisa>): void => {\n        this.tableService.setTotal(event.data, this.viewTables[event.index]);\n      }\n    );\n\n    // Observable para mostrar o esconder el boton de una tabla\n    this.dependencyTableHelisaService.emitVisibilityButton.subscribe(\n      (data: EventDependency<boolean>): void => {\n        if (!!data && data.index !== undefined) {\n          const table: ConfigTable<T> = this.tables[data.index];\n          if (!!table) {\n            table.addRowButton.showButton = data.data;\n          }\n        }\n      }\n    );\n\n    // Observable para mostrar o esconder los botones de todas las tablas\n    this.dependencyTableHelisaService.emitVisibilityAllButtons.subscribe(\n      (data: boolean): void => {\n        if (data !== undefined && data != null) {\n          this.tables.forEach((element: ConfigTable<T>): void => {\n            if (!!element.addRowButton) {\n              element.addRowButton.showButton = data;\n            }\n          });\n        }\n      }\n    );\n\n    // Observable para manejo de selección de celdas\n    this.dependencyTableHelisaService.emitIsCellSelection.subscribe(\n      (data: EventDependency<boolean>): void => {\n        if (!!data && data.index !== undefined) {\n          const table: ConfigTable<T> = this.tables[data.index];\n          if (table) {\n            table.isCellSelection = data.data;\n          }\n        }\n      });\n\n    // Observable para manejo de columnas\n    this.dependencyTableHelisaService.emitChangeColumns.subscribe(\n      (data: EventDependency<ColumnConfig[]>): void => {\n        if (!!data && data.index !== undefined) {\n          const table: ConfigTable<T> = this.tables[data.index];\n          if (table) {\n            table.columns = data.data;\n          }\n        }\n      });\n  }\n\n  /**\n   * retorna el servicio que gestiona el componente.\n   */\n  getService(): DependencyTableHelisaService<T> {\n    return this.dependencyTableHelisaService;\n  }\n\n  /**\n   * Obtiene un observable con las tablas dependientes desde el servicio.\n   */\n  getTables(): void {\n    this.dependencyTableHelisaService.getTables()\n      .subscribe((tables: ConfigTable<T>[]): void => {\n          this.tables.splice(0, this.tables.length, ...tables);\n          this.viewTables.forEach((item: TableHelisaComponent<T>): void => {\n            item.reload();\n          });\n        }\n      );\n  }\n\n  /**\n   * Evento que se dispara desde una tabla, emitiendo un nuevo evento con el inidice de la tabla que dispara el evento y el evento generado.\n   * @param index indica el indice de la tabla seleccionada\n   * @param data retorna la fila que fue seleccionada\n   */\n  onSelectedDependency(index: number, event: SelectObject<T>): void {\n    this.selectedObject = {index, data: event};\n    this.selected.emit({index, data: event.value});\n    this.selectObject.emit({index, data: event});\n  }\n\n  /**\n   * Evento que se dispara desde una tabla, emitiendo un nuevo evento con el inidice de la tabla que dispara el evento y el evento generado.\n   * @param index indica el indice de la tabla que genera el evento\n   * @param event evento generado desde la tabla\n   */\n  onNextPage(index: number, event: RequestTableHelisa<T>): void {\n    this.nextPage.emit({index, data: event});\n  }\n\n  /**\n   * Evento que se dispara desde una tabla, emitiendo un nuevo evento con el inidice de la tabla que dispara el evento y el evento generado.\n   * @param index indica el indice de la tabla que genera el evento\n   * @param event evento generado desde la tabla\n   */\n  onTotal(index: number, event: EventColumn): void {\n    this.total.emit({index, data: event});\n  }\n\n  /**\n   * Evento que se dispara desde una tabla, emitiendo un nuevo evento con el inidice de la tabla que dispara el evento y el evento generado.\n   * @param index indica el indice de la tabla que genera el evento\n   * @param event evento generado desde la tabla\n   */\n  onSort(index: number, event: EventColumn): void {\n    this.sort.emit({index, data: event});\n  }\n\n  /**\n   * Evento que se dispara desde una tabla, emitiendo un nuevo evento con el inidice de la tabla que dispara el evento y el evento generado.\n   * @param index indica el indice de la tabla que genera el evento\n   * @param event evento generado desde la tabla\n   */\n  onDrop(index: number, event: EventDependency<T>): void {\n    this.drop.emit({index, data: event});\n  }\n\n  /**\n   * Evento que se dispara desde una tabla, emite el indice de la tabla al cual se le debe añadir una nueva fila\n   * @param index indica el indice de la tabla de la cual se dispara el evento\n   */\n  onAddRow(index: number): void {\n    this.addRow.emit(index);\n  }\n\n  selectedCell(index: number, event: Cell<T>): void {\n    if (this.tables[index].isCellSelection) {\n      this.selectCell.emit({index, data: event});\n    }\n  }\n\n  onBookClicked(index: number, event: EventDependency<T>): void {\n    this.bookClicked.emit({index, data: event});\n  }\n}\n","import { Component, EventEmitter, Input, OnInit, Output, ViewChild, ElementRef, AfterViewInit } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\nexport enum InputHelisaType {\n  DEFAULT, IDENTITY, NUMERIC, DOUBLE\n}\n\n@Component({\n  selector: 'hel-input',\n  templateUrl: './input-helisa.component.html',\n  styleUrls: ['./input-helisa.component.sass']\n})\nexport class InputHelisaComponent implements OnInit, AfterViewInit {\n\n  private readonly DECIMAL_SEPARATOR: string = '.';\n  private readonly THOUSAND_SEPARATOR: string = ',';\n\n  @Input() placeholder: string = '';\n  @Input() floatLabel: 'never' | 'always' | 'auto' = 'never';\n  @Input() minlength: number;\n  @Input() maxlength: number;\n\n  /** Activar o desactivar el autocompletado\n   * (Caracteristica de los navegadores para campos comunes como\n   * Direccion , Usuario, Password ... etc)\n   */\n  @Input() autocompleteMode: boolean = false;\n\n  // Mostrar o no el icono de buscar\n  @Input() isSearch: boolean = false;\n  // @Input() inputFormControl: FormControl = new FormControl('');\n  @Input() isFocused: boolean = false;\n\n  /**\n   * Deprecated\n   */\n  @Input() disabled: boolean = false;\n  @Input() type: InputHelisaType = InputHelisaType.DEFAULT;\n\n  /**\n   * Deprecated\n   */\n  @Output() setValue: EventEmitter<string> = new EventEmitter<string>();\n\n  // tslint:disable-next-line:no-any\n  @Output() blur: EventEmitter<any> = new EventEmitter();\n\n  formControlMask: FormControl = new FormControl('');\n  private realValue: string = '';\n  private inputFormReal: FormControl = new FormControl('');\n\n  @ViewChild('inputText', {static: true}) inputText: ElementRef;\n\n  constructor() {\n  }\n\n  @Input()\n  set inputFormControl(formControl: FormControl) {\n    this.inputFormReal = formControl;\n    this.inputFormReal.registerOnDisabledChange(((isDisabled: boolean): void => {\n      if (isDisabled) {\n        this.formControlMask.disable();\n      } else {\n        this.formControlMask.enable();\n      }\n    }));\n    this.inputFormReal.valueChanges.subscribe((data: string): void => {\n      this.statusChange(this.inputFormReal.status);\n      if (this.getMaskedValue(data) !== this.formControlMask.value) {\n        this.change(data);\n        if (this.isFocused) {\n          this.onFocus(null);\n        }\n      }\n    });\n    this.formControlMask.setValidators(this.inputFormReal.validator);\n    this.change(this.inputFormReal.value);\n    // disable control\n    if (formControl.disabled) {\n      this.formControlMask.disable({ onlySelf: true });\n    }\n    this.inputFormReal.statusChanges.subscribe(\n      (data: string): void => {\n        this.statusChange(data);\n        if (this.isFocused) {\n          this.onFocus(null);\n        }\n      }\n    );\n  }\n\n\n  private statusChange(data: string): void {\n    if (data === 'INVALID') {\n      this.formControlMask.setErrors({ key: 'Error de validación.' });\n      this.formControlMask.markAsTouched();\n    } else {\n      this.formControlMask.setErrors(null);\n    }\n  }\n\n  ngOnInit(): void {\n    if (this.isFocused) {\n      this.inputText.nativeElement.focus();\n    }\n  }\n\n  ngAfterViewInit(): void {\n    // this.isParentDisabled();\n  }\n\n  /*isParentDisabled(): void {\n    setTimeout(() => {\n      if (this.nameInput.nativeElement.closest('.hw-disabled-mode')) {\n        this.disabled = true;\n      } else {\n        this.disabled = false;\n      }\n    });\n  }*/\n\n  search(): void {\n    this.setValue.emit(this.realValue);\n  }\n\n  change(event: string): void {\n    if (event != null) {\n      event = event + '';\n    }\n    let position: number = this.inputText.nativeElement.selectionStart;\n    const length: number = event ? event.length : 0;\n    this.realValue = this.getRealValue(event);\n    if (this.getMaskedValue(this.realValue) !== this.formControlMask.value) {\n      this.formControlMask.setValue(this.getMaskedValue(this.realValue));\n      position += this.inputText.nativeElement.value.length - length;\n      this.inputText.nativeElement.selectionStart = position;\n      this.inputText.nativeElement.selectionEnd = position;\n    }\n    this.inputFormReal.setValue(this.realValue);\n  }\n\n  private getMaskedValue(str: string): string {\n    if (str == null) {\n      return str;\n    }\n    str = str + '';\n    if (this.type === InputHelisaType.DEFAULT) {\n      return str;\n    }\n    let maskedStr: string = '';\n    if (this.type === InputHelisaType.IDENTITY) {\n      for (let i: number = str.length - 1, j: number = 0; i >= 0; i--, j++) {\n        if (j > 0 && j % 3 === 0) {\n          maskedStr = this.DECIMAL_SEPARATOR + maskedStr;\n        }\n        maskedStr = str[i] + maskedStr;\n      }\n    }\n    if (this.type === InputHelisaType.NUMERIC) {\n      for (let i: number = str.length - 1, j: number = 0; i >= 0; i--, j++) {\n        if (j > 0 && j % 3 === 0) {\n          maskedStr = this.THOUSAND_SEPARATOR + maskedStr;\n        }\n        maskedStr = str[i] + maskedStr;\n      }\n    }\n    if (this.type === InputHelisaType.DOUBLE) {\n      if (str.indexOf(this.DECIMAL_SEPARATOR) >= 0) {\n        for (let i: number = str.indexOf(this.DECIMAL_SEPARATOR); i < str.length; i++) {\n          maskedStr += str[i];\n        }\n      }\n      for (let i: number = (str.indexOf(this.DECIMAL_SEPARATOR) >= 0 ? str.indexOf(this.DECIMAL_SEPARATOR) : str.length) - 1,\n        j: number = 0; i >= 0; i--, j++) {\n\n        if (j > 0 && j % 3 === 0) {\n          maskedStr = this.THOUSAND_SEPARATOR + maskedStr;\n        }\n        maskedStr = str[i] + maskedStr;\n      }\n    }\n    return maskedStr;\n  }\n\n  private getRealValue(str: string): string {\n    if (str == null) {\n      return str;\n    }\n    str = str + '';\n    let realStr: string = '';\n    if (this.type === InputHelisaType.DEFAULT) {\n      return str;\n    }\n    if (this.type === InputHelisaType.IDENTITY) {\n      for (const strItem of str) {\n        if (strItem.match('[0-9]')) {\n          realStr += strItem;\n        }\n      }\n    }\n    if (this.type === InputHelisaType.NUMERIC) {\n      for (const strItem of str) {\n        if (strItem.match('[0-9]')) {\n          realStr += strItem;\n        }\n      }\n    }\n    if (this.type === InputHelisaType.DOUBLE) {\n      let haveDot: boolean = false;\n\n      for (const strItem of str) {\n        if (strItem.match('[0-9]') || ((strItem === this.DECIMAL_SEPARATOR) && !haveDot)) {\n          realStr += strItem;\n        }\n        haveDot = haveDot || (strItem === this.DECIMAL_SEPARATOR);\n      }\n    }\n    return realStr;\n  }\n\n  onFocus($event: FocusEvent): void {\n    if ((this.type === InputHelisaType.NUMERIC || this.type === InputHelisaType.DOUBLE) &&\n      Number(this.getRealValue(this.inputText.nativeElement.value)) === 0) {\n      this.inputText.nativeElement.select();\n    }\n  }\n}\n","import { SortDirection } from '@angular/material/sort';\nimport { RowData } from './table-helisa.component';\n\nexport enum ColumnType {\n  NORMAL, URL\n}\n\nexport interface ColumnConfig {\n  name: string;\n  title?: string;\n  visible?: boolean;\n  sortable?: boolean;\n  groupable?: boolean;\n  totalType?: TotalType;\n  searchable?: boolean;\n  sortDirection?: SortDirection;\n  subtitle?: string;\n  colspanTitle?: number;\n  colspanSubtitle?: number;\n  columnStyle?: string;\n  columnType?: ColumnType;\n}\n\nexport interface AddRowButton {\n  text: string;\n  showButton: boolean;\n}\n\nexport enum EventScope {\n  USER, CODE_CALL\n}\n\nexport enum TotalType {\n  SUM, AVERAGE, COUNT\n}\n\nexport enum ChangeColumnConfigurationType {\n  SORT, UNKNOWN, TOTAL\n}\n\nexport interface EventColumn {\n  column: ColumnConfig;\n  columnConfigurations: Array<ColumnConfig>;\n  type: ChangeColumnConfigurationType;\n}\n\nexport interface TotalTableHelisa {\n  column: ColumnConfig;\n  value: number;\n}\n\nexport interface TotalGroup {\n  sum: number;\n  count: number;\n}\n\nexport interface EventSearch {\n  text: string;\n  columnConfigurations: Array<ColumnConfig>;\n}\n\nexport interface RequestTableHelisa<T> {\n  page: number;\n  body: {} | T;\n}\n\nexport interface DropElement<T> {\n value: T;\n order: number;\n}\n\nexport interface SelectObject<T> {\n  value: T;\n  scope: EventScope;\n}\n\nexport enum TableHelisaType {\n  REMOTE, LOCAL\n}\n\n\nexport interface Cell<T> {\n  column: ColumnConfig;\n  row: RowData<T> | T;\n }\n\nexport interface ConfigCellStyles<T> {\n   cellData: T;\n   classCell: string;\n }\n\nexport interface ConfigRowStyles<T> {\n  column: ColumnConfig;\n  data: {} | T;\n  classRow: string;\n}\n\n// @dynamic\nexport class ColumnConfigUtil<T> {\n\n  getValue(obj: T, column: ColumnConfig): T | number | string {\n    return column.name.split('.').reduce((o: T, field: string): T | string => o && o[field], obj);\n  }\n}\n","import {ColumnConfig} from './table-helisa.interface';\nimport {Observable} from 'rxjs';\n\n\nexport class TableHelisaConnectComponent<T> {\n  page: number;\n  isLastPage: boolean;\n  isUsed: boolean;\n\n  constructor() {\n    this.page = 0;\n    this.isLastPage = false;\n    this.isUsed = false;\n  }\n\n  public getBody(columnConfig: Array<ColumnConfig>, search: string): {} {\n    return {};\n  }\n\n  nextPage(): number {\n    return this.page++;\n  }\n}\n","import {AfterViewInit, Component, EventEmitter, Input, OnInit, Output, ViewChild, ElementRef, DoCheck} from '@angular/core';\nimport {MatSort, Sort} from '@angular/material/sort';\nimport { MatTable, MatTableDataSource } from '@angular/material/table';\n\nimport {\n  AddRowButton,\n  Cell,\n  ChangeColumnConfigurationType,\n  ColumnConfig,\n  ColumnConfigUtil,\n  ConfigCellStyles,\n  ConfigRowStyles,\n  DropElement,\n  EventColumn,\n  EventScope,\n  EventSearch,\n  RequestTableHelisa,\n  SelectObject,\n  TableHelisaType,\n  TotalGroup,\n  TotalType,\n  ColumnType,\n  TotalTableHelisa\n} from './table-helisa.interface';\nimport { TableHelisaService, TableHelisaServiceInfo } from './table-helisa.service';\nimport { TableHelisaConnectComponent } from './table-helisa-connect.component';\nimport { CdkDragDrop, moveItemInArray } from '@angular/cdk/drag-drop';\nimport { of } from 'rxjs';\n\nexport interface RowData<T> {\n  data: {} | T;\n  rowType: RowType;\n}\n\nenum RowType {\n  GROUP_TITLE, GROUP_FOOTER, ROW\n}\n\n\n\n@Component({\n  selector: 'hel-table',\n  templateUrl: './table-helisa.component.html',\n  styleUrls: ['./table-helisa.component.sass']\n})\nexport class TableHelisaComponent<T> implements OnInit, AfterViewInit {\n\n  private tableHelisaConnectComponent: TableHelisaConnectComponent<T>;\n  totalData: Array<number>;\n  rawData: Array<T>;\n  data: MatTableDataSource<RowData<T>> = new MatTableDataSource<RowData<T>>([]);\n  displayedColumns: string[] = [];\n  displayedColumnsWithTitle: string[] = [];\n  displayedColumnsWithSubtitle: string[] = [];\n  displayedColumnsWithFooter: string[] = [];\n  columnConfig: Array<ColumnConfig>;\n  selectedObject: T;\n  lastSearch: string;\n  type: TableHelisaType = TableHelisaType.LOCAL;\n  indexRowSelect: number;\n  private scrollCount: number = 0;\n  hasSubtitle: boolean = false;\n  private indexRowStartDrag: number = -1;\n  private lastIndexRowDrag: number = -1;\n  private dataBeforeDrag: { data: RowData<T>[] } = null;\n  private dataSource$: Array<T> = [];\n  private scrollX: number = 0;\n  private scrollY: number = 0;\n\n  @ViewChild(MatSort, {static: true}) matSort: MatSort;\n  @ViewChild(MatTable, {static: true}) matTable: MatTable<T>;\n  @ViewChild(MatTable, { read: ElementRef, static: true }) matTableElement: ElementRef;\n  @ViewChild('containerTable', {static: true}) containerTable: ElementRef;\n\n  @Output() sort: EventEmitter<EventColumn> = new EventEmitter<EventColumn>();\n  @Output() total: EventEmitter<EventColumn> = new EventEmitter<EventColumn>();\n  @Output() search: EventEmitter<EventSearch> = new EventEmitter<EventSearch>();\n\n  /**\n   * Deprecado, cambiar por electObject\n   */\n  @Output() select: EventEmitter<T> = new EventEmitter<T>();\n  @Output() selectCell: EventEmitter<Cell<T>> = new EventEmitter<Cell<T>>();\n  @Output() selectObject: EventEmitter<SelectObject<T>> = new EventEmitter<SelectObject<T>>();\n  @Output() nextPage: EventEmitter<RequestTableHelisa<T>> = new EventEmitter<RequestTableHelisa<T>>();\n  @Input() showTitle: boolean = true;\n  @Input() isCellSelection: boolean = false;\n  @Input() count: number;\n  @Input() configCellStyles: Array<ConfigCellStyles<T>>;\n  @Input() configRowStylesFromColumn: Array<ConfigRowStyles<T>>;\n  @Input() configColumnClass: Array<string>;\n  @Input() selectedCells: Cell<T>;\n  @Output() drop: EventEmitter<DropElement<T>> = new EventEmitter<DropElement<T>>();\n  @Input() isDragged: boolean = false;\n  @Input() addRowButton: AddRowButton = { showButton: false, text: '' };\n  @Output() addRow: EventEmitter<void> = new EventEmitter<void>();\n  @Output() bookClicked: EventEmitter<T> = new EventEmitter<T>();\n  @Input() addBookButton: boolean = false;\n  @Input() showToolTip: boolean = true;\n  showFooter: boolean = false;\n  showSearch: boolean = false;\n\n\n\n  /**\n   * Tiempo antes de ocultarla el mensaje del tooltip\n   */\n  @Input() hideDelay: number = 600;\n\n  /**\n   * Tiempo antes de mostra el mensaje del tooltip\n   */\n  @Input() showDelay: number = 500;\n\n\n  constructor(private tableService: TableHelisaService<T>) { }\n\n  ngOnInit(): void {\n    this.reloadColumnConfig();\n    this.tableService.nextPageReturn.subscribe(\n      (data: TableHelisaServiceInfo<T[]>): void => {\n        if (!data.table || data.table === this) {\n          this.receivePage(data.obj);\n        }\n      }\n    );\n    this.tableService.totalReturn.subscribe((info: TableHelisaServiceInfo<TotalTableHelisa>): void => {\n      if (info) {\n        this.columnConfig.forEach((column: ColumnConfig, idx: number): void => {\n          if (column === info.obj.column) {\n            this.totalData[idx] = this.getGroupValue(column, { sum: info.obj.value, count: this.count });\n          }\n        });\n      }\n    });\n    this.matSort.sortChange.subscribe(\n      (event: Sort): void => {\n        const column: ColumnConfig = this.columnConfig.find((c: ColumnConfig): boolean => c.name === event.active);\n        column.sortDirection = event.direction;\n        this.sort.emit({ column, columnConfigurations: this.columnConfig, type: ChangeColumnConfigurationType.SORT });\n      }\n    );\n\n    this.tableService.emitVisibleButton.subscribe(\n      (data: boolean): void => {\n        if (data !== undefined && data != null) {\n          this.addRowButton.showButton = data;\n        }\n      }\n    );\n    this.reload();\n  }\n\n  ngAfterViewInit(): void {\n    if (this.isCellSelection) {\n      this.matTable.renderRows();\n    }\n  }\n\n  @Input()\n  set isRemote(w: boolean) {\n    this.type = w ? TableHelisaType.REMOTE : TableHelisaType.LOCAL;\n    this.tableHelisaConnectComponent = new TableHelisaConnectComponent<T>();\n    if (this.type === TableHelisaType.REMOTE) {\n      this.goNextPage();\n    } else {\n      this.tableHelisaConnectComponent.page++;\n    }\n  }\n\n  @Input()\n  set columnConfiguration(columnConfiguration: Array<ColumnConfig>) {\n    this.columnConfig = columnConfiguration;\n    this.reload();\n    this.reloadColumnConfig();\n  }\n\n  @Input()\n  set dataSource(dataSource: Array<T>) {\n    this.dataSource$ = dataSource;\n    this.rawData = dataSource;\n    this.reload();\n  }\n\n  get dataSource(): Array<T> {\n    return this.dataSource$;\n  }\n\n  @Input()\n  set selectedIndexRow(idRowSelected: number) {\n    this.indexRowSelect = idRowSelected;\n    if (this.rawData && this.rawData.length) {\n      if ((idRowSelected >= this.rawData.length || idRowSelected < 0)) {\n        this.indexRowSelect = 0;\n      }\n      this.selectRow({ data: this.rawData[this.indexRowSelect], rowType: RowType.ROW }, false);\n    }\n  }\n\n  private reloadColumnConfig(): void {\n    this.hasSubtitle = false;\n    this.displayedColumns.splice(0, this.displayedColumns.length);\n\n    if (this.columnConfig) {\n      if (this.addBookButton) {\n        const columnCount: number = this.columnConfig.length;\n        let countSubtitle: number = 0;\n        let showBookButton: boolean = false;\n        this.columnConfig.forEach((column: ColumnConfig): void => {\n          if (!!column.subtitle) {\n            countSubtitle = countSubtitle + 1;\n          }\n          if ((!showBookButton) && (column.name === 'bookButton')) {\n            showBookButton = true;\n          }\n        });\n        const subtitleTemp: boolean = columnCount === countSubtitle;\n        if (!showBookButton) {\n          this.columnConfig.push({\n            name: 'bookButton',\n            title: '',\n            subtitle: subtitleTemp ? '' : undefined ,\n            visible: true\n          });\n        }\n      }\n      this.columnConfig.forEach((column: ColumnConfig): void => {\n        if (column.visible) {\n          this.displayedColumns.push(column.name);\n        }\n        if (!this.hasSubtitle) {\n          this.hasSubtitle = column.subtitle !== undefined;\n        }\n      });\n      if (this.rawData) {\n        this.dataSource = this.rawData;\n      }\n    }\n    this.displayedColumnsWithTitle.splice(0, this.displayedColumnsWithTitle.length);\n    this.displayedColumnsWithSubtitle.splice(0, this.displayedColumnsWithSubtitle.length);\n    this.displayedColumnsWithFooter.splice(0, this.displayedColumnsWithFooter.length);\n    this.getColumnsWithTitle().forEach((col: string): number => this.displayedColumnsWithTitle.push(col));\n    this.getHeaderSubtitle().forEach((col: string): number => this.displayedColumnsWithSubtitle.push(col));\n    this.footerDisplayedColumns().forEach((col: string): number => this.displayedColumnsWithFooter.push(col));\n  }\n\n  public reload(): void {\n    if(this.columnConfig) {\n      const changeData: Array<RowData<T>> = Array<RowData<T>>();\n      let haveGroup: boolean = false;\n      let groupFooter: Array<TotalGroup>;\n      this.columnConfig.forEach((column: ColumnConfig): void => {\n        if (column.totalType !== undefined && (this.type === TableHelisaType.LOCAL || this.tableHelisaConnectComponent.page <= 1)) {\n          this.totalData = new Array<number>(this.columnConfig.length);\n          this.showFooter = true;\n          this.total.emit({column, columnConfigurations: this.columnConfig, type: ChangeColumnConfigurationType.TOTAL});\n        }\n        this.showSearch = this.showSearch || column.searchable;\n        haveGroup = haveGroup || column.groupable;\n      });\n      if (haveGroup) {\n        this.rawData = this.rawData.sort((a: T, b: T): number => {\n          let result: number = 0;\n          this.columnConfig.forEach((column: ColumnConfig): void => {\n            if (result === 0) {\n              result = this.compare(a, b);\n            }\n          });\n          return result;\n        });\n      }\n      if(this.rawData) {\n        this.rawData.forEach((row: T): void => {\n          if (haveGroup && (changeData.length === 0 || this.compare(changeData[changeData.length - 1].data as T, row) !== 0)) {\n            if (groupFooter) {\n              changeData.push({data: groupFooter, rowType: RowType.GROUP_FOOTER});\n            }\n            changeData.push({data: row, rowType: RowType.GROUP_TITLE});\n            groupFooter = new Array<TotalGroup>(this.columnConfig.length);\n          }\n          if (haveGroup) {\n            this.addTotalGroup(groupFooter, row);\n          }\n          changeData.push({data: row, rowType: RowType.ROW});\n        });\n        this.data = new MatTableDataSource<RowData<T>>(changeData);\n      }\n      if (this.rawData && this.rawData.length && this.indexRowSelect && !this.selectedObject) {\n        if (this.indexRowSelect >= this.rawData.length || this.indexRowSelect < 0) {\n          this.indexRowSelect = 0;\n        }\n        this.selectRow({data: this.rawData[this.indexRowSelect], rowType: RowType.ROW}, false);\n      }\n    }\n  }\n\n  private addTotalGroup(rowTotal: Array<TotalGroup>, row: T): void {\n    this.columnConfig.forEach((column: ColumnConfig, index: number): void => {\n      if (column.totalType !== undefined) {\n        if (rowTotal[index] === undefined) {\n          rowTotal[index] = { sum: (new ColumnConfigUtil().getValue(row, column) as number), count: 1 };\n        } else {\n          rowTotal[index].sum += (new ColumnConfigUtil().getValue(row, column) as number);\n          rowTotal[index].count++;\n        }\n      }\n    });\n  }\n\n  private compare(a: T, b: T): number {\n    let ws: number = 0;\n    this.columnConfig.forEach((column: ColumnConfig): void => {\n      if (ws === 0 && column.groupable) {\n        if ((new ColumnConfigUtil().getValue(a, column) as number) < (new ColumnConfigUtil().getValue(b, column) as number)) {\n          ws = -1;\n        } else if ((new ColumnConfigUtil().getValue(a, column) as number) > (new ColumnConfigUtil().getValue(b, column) as number)) {\n          ws = 1;\n        }\n      }\n    });\n    return ws;\n  }\n\n  getGroupDescription(obj: T): string {\n    let result: string = '';\n    this.columnConfig.forEach((column: ColumnConfig): void => {\n      if (column.groupable) {\n        result += (result.length ? ' - ' : '') + (new ColumnConfigUtil().getValue(obj, column));\n      }\n    });\n    return result;\n  }\n\n  isGroupTitle(index: number, item: RowData<T>): boolean {\n    return item.rowType === RowType.GROUP_TITLE;\n  }\n\n  isRow(index: number, item: RowData<T>): boolean {\n    return item.rowType === RowType.ROW;\n  }\n\n  isGroupFooter(index: number, item: RowData<T>): boolean {\n    return item.rowType === RowType.GROUP_FOOTER;\n  }\n\n  footerDisplayedColumns(): Array<string> {\n    return this.displayedColumns.map((name: string): string => 'footer-' + name);\n  }\n\n  getGroupValue(column: ColumnConfig, data: TotalGroup): number {\n    if (column.totalType === TotalType.SUM) { return data.sum; }\n    if (column.totalType === TotalType.COUNT) { return data.count; }\n    if (column.totalType === TotalType.AVERAGE) { return 1. * data.sum / data.count; }\n    return undefined;\n  }\n\n  getValue(obj: T, column: ColumnConfig): T {\n    return new ColumnConfigUtil().getValue(obj, column) as T;\n  }\n\n  getValueTooltip(obj: T, column: ColumnConfig): string {\n    if (this.showToolTip) {\n      return new ColumnConfigUtil().getValue(obj, column) as string;\n    } else {\n      return null;\n    }\n  }\n\n  searchText(text: string): void {\n    this.lastSearch = text;\n    this.search.emit({ text, columnConfigurations: this.columnConfig });\n  }\n\n  selectRow(row: RowData<T>, isUser: boolean, column?: ColumnConfig): void {\n    if (row === undefined || row === null) {\n      return;\n    }\n    if ((column === undefined || column === null) || (!!column && column.name !== 'bookButton')) {\n      this.selectedObject = row.data as T;\n      this.select.emit(this.selectedObject);\n      this.selectObject.emit({ value: this.selectedObject, scope: isUser ? EventScope.USER : EventScope.CODE_CALL });\n    } else if (!!column && column.name === 'bookButton') {\n      if (this.selectedObject !== row.data) {\n        this.selectedObject = row.data as T;\n        this.select.emit(this.selectedObject);\n        this.selectObject.emit({ value: this.selectedObject, scope: isUser ? EventScope.USER : EventScope.CODE_CALL });\n      }\n      this.bookClicked.emit(this.selectedObject);\n    }\n  }\n\n  onScroll(event: Event): void {\n    const element: HTMLDivElement = event.target as HTMLDivElement;\n    let isScrollY: boolean;\n\n    if (this.scrollY !== element.scrollTop) {\n      isScrollY = true;\n      this.scrollY = element.scrollTop;\n      this.scrollX = element.scrollLeft;\n    }\n\n    if (this.scrollX !== element.scrollLeft) {\n      isScrollY = false;\n      this.scrollY = element.scrollTop;\n      this.scrollX = element.scrollLeft;\n    }\n\n    if ((element.scrollHeight - element.scrollTop < 1000) && isScrollY) {\n      this.goNextPage();\n    }\n\n  }\n\n  private goNextPage(): void {\n    if (!this.tableHelisaConnectComponent.isLastPage && !this.tableHelisaConnectComponent.isUsed) {\n      this.tableHelisaConnectComponent.isUsed = true;\n      this.nextPage.emit({\n        page: this.tableHelisaConnectComponent.nextPage(),\n        body: this.tableHelisaConnectComponent.getBody(this.columnConfig, this.lastSearch)\n      });\n    }\n  }\n\n  private receivePage(data: T[]): void {\n    if (!this.rawData) {\n      this.rawData = new Array<T>();\n    }\n    this.rawData = this.rawData.concat(data);\n    this.dataSource = this.rawData;\n    this.tableHelisaConnectComponent.isLastPage = data.length === 0;\n    this.tableHelisaConnectComponent.isUsed = false;\n  }\n\n  dblClickCell(): void {\n    this.selectCell.emit(this.selectedCells as Cell<T>);\n  }\n\n  selectedCell(element: RowData<T>, column: ColumnConfig): void {\n    this.selectRow(element, true, column);\n\n    this.selectedCells = { column, row: element };\n    this.selectCell.emit(this.selectedCells);\n  }\n\n  isSelectedCell(row: RowData<T>, column: ColumnConfig): boolean {\n    if (this.isCellSelection) {\n      if (this.selectedCells != null) {\n        if (this.selectedCells.column.name === column.name &&\n          (this.selectedCells.row as RowData<T>).data === row.data) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  getClassToCell(row: T, column: ColumnConfig): string[] {\n    const classToCell: Array<string> = new Array<string>();\n    if (this.configCellStyles) {\n      const found: ConfigCellStyles<T> = this.configCellStyles.find((c: ConfigCellStyles<T>): boolean => {\n        return c.cellData === this.getValue(row, column);\n      });\n      if (found) {\n        classToCell.push(found.classCell);\n      }\n    }\n    if (column.columnStyle) {\n      classToCell.push(column.columnStyle);\n    }\n    return classToCell;\n  }\n\n  getClassToColumn(): string[] {\n    return this.configColumnClass;\n  }\n\n  getClassToRow(row: T): string[] {\n    const classToRow: Array<string> = new Array<string>();\n    if (row === this.selectedObject && !this.isCellSelection) {\n      classToRow.push('');\n    }\n    if (this.configRowStylesFromColumn) {\n      const found: ConfigRowStyles<T> = this.configRowStylesFromColumn.find((c: ConfigRowStyles<T>): boolean => {\n        return c.data === this.getValue(row, c.column);\n      });\n      if (found) {\n        classToRow.push(found.classRow);\n      }\n    }\n    return classToRow;\n  }\n\n  onDrop(event: MouseEvent): void {\n    if (this.isDragged && this.indexRowStartDrag >= 0) {\n      const rowIndex: number = this.getRowIndex(event.pageY);\n      const array: RowData<T>[] = this.dataBeforeDrag.data;\n      const rawData: T[] = this.rawData;\n      moveItemInArray(array, this.indexRowStartDrag, rowIndex);\n      moveItemInArray(rawData, this.indexRowStartDrag, rowIndex);\n      this.drop.emit({ value: array[rowIndex].data as T, order: rowIndex });\n      this.rawData = rawData;\n      this.data = new MatTableDataSource(array);\n      event.stopPropagation();\n    }\n  }\n\n  tableKeydown(event: KeyboardEvent): void {\n    if (!this.isCellSelection) {\n      let currentIndex: number = this.data.data.findIndex((row: RowData<T>): boolean => row.data === this.selectedObject);\n      let newSelection: number = -10;\n      if (event.key === 'ArrowDown') {\n        this.scrollCount++;\n        this.data.data.forEach((row: RowData<T>, index: number): void => {\n          if (newSelection === -10 && index > currentIndex && row.rowType === RowType.ROW) {\n            newSelection = index;\n          }\n        });\n      }\n      if (event.key === 'ArrowUp') {\n        this.scrollCount--;\n        currentIndex = this.data.data.length - currentIndex - 1;\n        this.data.data.reverse().forEach((row: RowData<T>, index: number): void => {\n          if (newSelection === -10 && index > currentIndex && row.rowType === RowType.ROW) {\n            newSelection = index;\n          }\n        });\n        this.data.data.reverse();\n        if (newSelection !== -10) {\n          newSelection = this.data.data.length - newSelection - 1;\n        }\n      }\n      if (newSelection !== -10) {\n        this.selectRow(this.data.data[newSelection], true);\n      }\n      if (Math.abs(this.scrollCount) >= 2) {\n        this.scrollCount = 0;\n      } else {\n        event.preventDefault();\n      }\n    }\n  }\n\n  /**\n   * Emite el evento cuando se da click al boton AddRow\n   */\n  onAddRow(): void {\n    this.addRow.emit();\n  }\n\n\n  getHeaderSubtitle(): string[] {\n    const x: string[] = this.columnConfig.map((column: ColumnConfig, index: number): string => {\n      if (column.visible && column.subtitle !== undefined) {\n        return 'subtitle' + index;\n      } else {\n        return null;\n      }\n    }).filter((data: string): boolean => data != null);\n    return x;\n  }\n\n  getColumnsWithTitle(): string[] {\n    return this.columnConfig.filter((column: ColumnConfig): boolean =>\n      column.visible && column.title !== undefined\n    ).map((col: ColumnConfig): string => col.name);\n  }\n\n  dragger(event: MouseEvent): boolean {\n    if (this.isDragged && this.indexRowStartDrag >= 0) {\n      const rowIndex: number = this.getRowIndex(event.pageY);\n      if (rowIndex !== this.lastIndexRowDrag) {\n        this.lastIndexRowDrag = rowIndex;\n        // This can have a memory problem with big data\n        const array: RowData<T>[] = [...this.dataBeforeDrag.data];\n        moveItemInArray(array, this.indexRowStartDrag, rowIndex);\n        this.data = new MatTableDataSource(array);\n      }\n      event.preventDefault();\n      return true;\n    }\n  }\n\n  startDrag(event: MouseEvent): void {\n    this.indexRowStartDrag = this.getRowIndex(event.pageY);\n    this.lastIndexRowDrag = this.indexRowStartDrag;\n    this.dataBeforeDrag = this.data;\n  }\n\n  private getRowIndex(pageY: number): number {\n    let offsetTop: number = 0;\n    let container: HTMLElement = this.containerTable.nativeElement;\n    while ((container !== null) && (offsetTop === 0)) {\n      offsetTop = container.offsetTop;\n      container = container.parentElement;\n    }\n    let rowIndex: number = -1;\n    const rows: HTMLCollection = this.matTableElement.nativeElement.children[1].children;\n    for (let i: number = 0; i < rows.length; i++) {\n      const row: HTMLElement = (rows[i] as HTMLElement);\n      if (pageY - offsetTop > row.offsetTop - this.containerTable.nativeElement.scrollTop) {\n        rowIndex = i;\n      }\n    }\n    if (rowIndex < 0) { rowIndex = 0; }\n    return rowIndex;\n  }\n\n  get columnType(): typeof ColumnType {\n    return ColumnType;\n  }\n\n}\n","import { Component, OnInit, Input, Output, EventEmitter, ViewChild } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\nimport * as moment_ from 'moment';\nconst moment: typeof moment_ = moment_;\n\nimport { MatDatepickerInputEvent, MatDatepicker } from '@angular/material/datepicker';\nimport { filter, tap } from 'rxjs/operators';\n\nexport enum TypeCalendarEnum {\n  NORMAL = 'norma',\n  MONTH_YEAR = 'mounth-year',\n  STRICT = 'strict'\n}\n\n\n@Component({\n  selector: 'hel-date-helisa',\n  templateUrl: './date-helisa.component.html',\n  styleUrls: ['./date-helisa.component.css'],\n})\nexport class DateHelisaComponent implements OnInit {\n\n  @ViewChild('picker', { static: true }) datePickerShow: MatDatepicker<Date>;\n  @Input() floatLabel: 'never' | 'always' | 'auto' = 'never';\n  @Input() dateFormControl: FormControl = new FormControl('');\n  private date: Date = new Date();\n\n  /**\n   * Formato de fecha.\n   * Los formatos validos son aquellos que maneja la libreria momentjs y este: 'DD [de] MMMM [de] YYYY'\n   * https://momentjs.com/docs/#/parsing/string-format/\n   */\n  @Input() dateFormat: string = 'DD/MM/YYYY';\n  @Input() locale: string = 'es';\n  @Input() errorMessage: string = 'La fecha no concuerda con el formato ';\n  @Input() placeholder: string = this.dateFormat;\n  @Input() showDatePicker: boolean = false;\n  @Input() minDate: Date;\n  @Input() maxDate: Date;\n  @Output() change: EventEmitter<Date> = new EventEmitter<Date>();\n  isClosed: boolean = false;\n  // tslint:disable-next-line:no-any\n  timeout: any;\n  isDisabled: boolean = false;\n  /**\n   * Si este valor es diferente a TypeCalendarEnum.NORMAL no\n   * será tomado en cuenta\n   */\n  @Input() typeCalendar: TypeCalendarEnum = TypeCalendarEnum.NORMAL;\n\n  dateToVisualize: FormControl;\n\n  /**\n   * Para evitar nuevos eventos miestras se realiza el parseo\n   */\n  private isFromInputEvent: boolean = false;\n\n  /**\n   * Verificar si el formato es valido\n   */\n  invalidFormat: boolean = false;\n  private inputFormReal: FormControl = new FormControl('');\n\n  constructor() { }\n\n  /*\n  * TypeCalendarEnum.MONTH_YEAR = 'MM/YYYY'\n  * TypeCalendarEnum.STRICT = 'DD [de] MMMM [de] YYYY'\n  * */\n  ngOnInit(): void {\n    moment.locale(this.locale);\n    this.dateToVisualize = new FormControl('', this.dateFormControl.validator);\n    this.formHandler();\n    this.inputFormReal = this.dateFormControl;\n    this.inputFormReal.registerOnDisabledChange((isDisabled: boolean): void => {\n      if (isDisabled) {\n        this.isDisabled = true;\n        this.dateToVisualize.disable();\n      } else {\n        this.isDisabled = false;\n        this.dateToVisualize.enable();\n      }\n    });\n\n    /**\n     * establecer valor por defecto de la fecha\n     */\n    if (this.dateFormControl.value !== '' && this.dateFormControl.value !== null) {\n      const incomingDate: string = moment(this.dateFormControl.value, this.dateFormat).format(this.dateFormat);\n      if (incomingDate !== 'Invalid date') {\n        this.dateToVisualize.setValue(incomingDate);\n        this.dateFormControl.setValue(this.dateFormControl.value);\n      }\n    }\n\n  }\n\n  get typeCalendarEnum(): typeof TypeCalendarEnum {\n    return TypeCalendarEnum;\n  }\n\n  openDatePicker(): void {\n    if (this.showDatePicker && !this.isClosed) {\n      this.isClosed = true;\n      this.timeout = setTimeout((): void => {\n        this.datePickerShow.open();\n      }, 2000);\n    }\n  }\n\n  onKey(event: KeyboardEvent): void {\n    if (event.key === ' ' && this.showDatePicker) {\n      this.onBlur();\n      this.isClosed = true;\n      this.datePickerShow.open();\n    }\n  }\n\n  onBlur(): void {\n    clearTimeout(this.timeout);\n    this.isClosed = false;\n  }\n\n  /**\n   * Determina como se debe inicializar la visualizacion del calendar\n   */\n  getStartView(): string {\n    // multi-year\n    if (this.typeCalendar === this.typeCalendarEnum.MONTH_YEAR) {\n      return 'multi-year';\n    } else if (this.typeCalendar === this.typeCalendarEnum.STRICT) {\n      return 'month';\n    } else {\n      return 'month';\n    }\n  }\n\n  private formHandler(): void {\n    if (this.typeCalendar === this.typeCalendarEnum.STRICT) {\n      this.dateToVisualize.valueChanges.subscribe((date: string): void => {\n        this.invalidFormat = false;\n        const isValid: boolean = moment(date, this.dateFormat, true).isValid();\n        const result: string = moment(date, this.dateFormat).format(this.dateFormat);\n        if (!!result && (result === 'Invalid date' || !isValid)) {\n          this.invalidFormat = true;\n          return;\n        }\n        if (!!result) {\n          if (!this.isFromInputEvent) {\n            this.isFromInputEvent = true;\n            this.dateToVisualize.setValue(moment(result, this.dateFormat).format(this.dateFormat));\n            this.dateFormControl.setValue(moment(result, this.dateFormat).toDate());\n            this.isFromInputEvent = false;\n          } else {\n            setTimeout((): void => {\n              this.isFromInputEvent = false;\n            }, 1500);\n          }\n\n        }\n      });\n    } else {\n      this.dateToVisualize.valueChanges\n        .pipe(\n          tap((date: string): void => {\n            if (date.length > this.dateFormat.length) {\n              this.invalidFormat = true;\n            } else {\n              this.invalidFormat = false;\n            }\n          }),\n          filter((date: string): boolean => date.length === this.dateFormat.length)\n        )\n        .subscribe((date: string): void => {\n          this.invalidFormat = false;\n          const isValid: boolean = moment(date, this.dateFormat, true).isValid();\n          const result: string = moment(date, this.dateFormat).format('YYYY-MM-DD');\n\n          if (!!result && (result === 'Invalid date' || !isValid)) {\n            this.invalidFormat = true;\n            return;\n          }\n\n          if (!!result) {\n            if (!this.isFromInputEvent) {\n              this.isFromInputEvent = true;\n              const subString: string[] = result.split('-');\n\n              const year: number = parseFloat(subString[0]);\n              const month: number = parseFloat(subString[1]);\n              const day: number = parseFloat(subString[2]);\n\n              this.date.setFullYear(year);\n              this.date.setDate(day);\n              this.date.setMonth(month - 1); // -1 por que los meses se toman como los indices en un array\n\n              /** cuando es de tipo MOUNTH_YEAR retorna el ultimo dia del mes seleccionado */\n              if (this.typeCalendar === TypeCalendarEnum.MONTH_YEAR) {\n                this.date = moment(this.date).endOf('month').toDate();\n              }\n\n              this.dateToVisualize.setValue(moment(this.date, 'YYYY-MM-DD').format(this.dateFormat));\n              this.dateFormControl.setValue(this.date);\n              this.isFromInputEvent = false;\n            } else {\n              setTimeout((): void => {\n                this.isFromInputEvent = false;\n              }, 1500);\n            }\n\n          }\n        });\n    }\n\n\n    this.dateFormControl.valueChanges\n      .subscribe((date: string): void => {\n        const incommingDate: string = moment(date, this.dateFormat).format(this.dateFormat);\n        if (this.dateFormControl.value !== '' && incommingDate !== 'Invalid date') {\n          this.dateToVisualize.setValue(incommingDate);\n        }\n      });\n  }\n\n\n  /**\n   * Evento que se dispara luego seleccionar un mes\n   */\n  monthSelectedHandler(chosenMonthDate: moment_.Moment, datepicker: MatDatepicker<moment_.Moment>): void {\n\n    if (this.typeCalendar === TypeCalendarEnum.MONTH_YEAR) {\n      datepicker.close();\n      const date: Date = moment(chosenMonthDate).endOf('month').toDate();\n\n      this.dateToVisualize.setValue(moment(date, 'YYYY-MM-DD').format(this.dateFormat));\n      this.dateFormControl.setValue(date);\n    }\n  }\n\n  /**\n   * Evento desde el control touch del calendar\n   */\n  dateChange(type: string, event: MatDatepickerInputEvent<Date>): void {\n    this.dateToVisualize.setValue(moment(event.value, 'YYYY-MM-DD').format(this.dateFormat));\n    this.dateFormControl.setValue(event.value);\n    this.change.emit(event.value);\n    this.isClosed = true;\n  }\n\n  getErrorMessage(): string {\n    return this.errorMessage + this.dateFormat;\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Subject, BehaviorSubject, Subscriber, Observable } from 'rxjs';\nimport { Node } from './node';\n\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class TreeHelisaService {\n\n    // Observable string sources\n    private emitNodeSelected: BehaviorSubject<number | string> = new BehaviorSubject<number | string>(1);\n    // Observable string streams\n    nodeSelected: Observable<string | number> = this.emitNodeSelected.asObservable();\n\n    // Observable string sources\n    private emitDataSource: BehaviorSubject<Node> = new BehaviorSubject<Node>(undefined);\n\n    // Observable string streams\n    dataSourceObservable: Observable<Node> = this.emitDataSource.asObservable();\n\n    // Expand node observable\n    private emitExpandAllNodes: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(null);\n    nodeExpand: Observable<boolean> = this.emitExpandAllNodes.asObservable();\n\n     // Collapse node observable\n     private emitCollapseAllNodes: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(null);\n     nodeCollapse: Observable<boolean> = this.emitCollapseAllNodes.asObservable();\n\n    private emitRefreshTree: Subject<void> = new Subject<void>();\n    refreshTreeObservable: Observable<void> = this.emitRefreshTree.asObservable();\n\n    private emitRefreshTreeWithPagination: Subject<void> = new Subject<void>();\n    refreshTreeWithPaginationObservable: Observable<void> = this.emitRefreshTreeWithPagination.asObservable();\n\n    private emitExpandOneNode: Subject<Node> = new Subject<Node>();\n    expandOneNodeObservable: Observable<Node> = this.emitExpandOneNode.asObservable();\n\n    private emitCollapseOneNode: Subject<Node> = new Subject<Node>();\n    collapseOneNodeObservable: Observable<Node> = this.emitCollapseOneNode.asObservable();\n\n    // Service message commands\n    changeNodeSelected(idResidentialArea: number | string): void {\n        this.emitNodeSelected.next(idResidentialArea);\n    }\n\n    // Service message commands\n    changeDataSource(data: Node): void {\n        this.emitDataSource.next(data);\n    }\n\n    expandAllNodes(expand: boolean): void {\n        this.emitExpandAllNodes.next(expand);\n    }\n\n    collapseAllNodes(collapse: boolean): void {\n        this.emitCollapseAllNodes.next(collapse);\n    }\n\n    refreshTree(): void {\n        this.emitRefreshTree.next();\n    }\n\n\n    refreshTreeWithPagination(): void {\n        this.emitRefreshTreeWithPagination.next();\n    }\n\n\n    expandOneNode(node: Node): void {\n    this.emitExpandOneNode.next(node);\n    }\n\n\n    collapseOneNode(node: Node): void {\n        this.emitCollapseOneNode.next(node);\n    }\n\n    constructor() {\n\n    }\n\n}\n","export class TreeHelisaConnect<T> {\n    page: number;\n    isLastPage: boolean;\n    isUsed: boolean;\n\n    constructor() {\n      this.page = 0;\n      this.isLastPage = false;\n      this.isUsed = false;\n    }\n\n    nextPage(): number {\n      return this.page = this.page + 1;\n    }\n  }\n","import { Component, OnInit, Input, Output, EventEmitter, ViewChild, AfterViewInit, ElementRef, HostListener } from '@angular/core';\nimport { NestedTreeControl, TreeControl } from '@angular/cdk/tree';\nimport { MatOptionSelectionChange } from '@angular/material/core';\nimport { MatTreeNestedDataSource, MatTree } from '@angular/material/tree';\nimport { Node } from './node';\nimport { TreeHelisaService } from './tree-helisa.service';\nimport { Router } from '@angular/router';\nimport * as _ from 'lodash';\nimport { TreeHelisaConnect } from './tree-helisa-connect';\nimport { FormControl } from '@angular/forms';\nimport { Observable } from 'rxjs';\n\nexport interface RequestTreeHelisa {\n  page: number;\n}\n\n@Component({\n  selector: 'hel-tree',\n  templateUrl: './tree-helisa.component.html',\n  styleUrls: ['./tree-helisa.component.sass']\n  // host: { '(document:keyup)': 'onKeyDown($event)' }\n})\nexport class TreeHelisaComponent implements OnInit, AfterViewInit {\n  isDisabled: boolean;\n  selectedNode: number | string | null;\n  //#endregion ====== Variables ========\n\n  constructor(private treeHelisaService: TreeHelisaService, private router: Router, private elementRef: ElementRef) {\n    // cargar datos pasados por el @Input\n    if (!!this.data) {\n      const data: Node = this.data;\n      this.data = null;\n      this.receivePage(data.children);\n    } else {\n      this.dataSource.data = [];\n      this.treeControl.dataNodes = [];\n    }\n  }\n\n  //#region  ====== Variables =============\n  private treeHelisaConnect: TreeHelisaConnect<Node>;\n  formEdit: FormControl;\n  @ViewChild('tree', {static: true}) tree: MatTree<{}>;\n  private selectedOptions: Map<\n    string | number,\n    {\n      formControl: FormControl;\n      editMode: boolean;\n    }\n  > = new Map<\n    string | number,\n    {\n      formControl: FormControl;\n      editMode: boolean;\n    }\n  >();\n  /**\n   * Datos del Arbol\n   */\n  @Input() data: Node;\n\n  /**\n   * Retorna el id del nodo removido\n   */\n  @Output() removed: EventEmitter<string | number> = new EventEmitter<number | string>();\n\n  /**\n   * Retorna un nodo editado\n   */\n  @Output() edited: EventEmitter<Node> = new EventEmitter<Node>();\n\n  /**\n   * Retorna un nodo sin id del nodo , pero si con el parent\n   * para conocer a cual fue añadido\n   */\n  @Output() added: EventEmitter<Node> = new EventEmitter<Node>();\n  @Output() collapseParent: EventEmitter<boolean> = new EventEmitter<boolean>();\n  @Output() rangeScrolled: EventEmitter<RequestTreeHelisa> = new EventEmitter<RequestTreeHelisa>();\n  @Output() nodeSelected: EventEmitter<number | string> = new EventEmitter<number | string>();\n  @Output() dobleClick: EventEmitter<number | string> = new EventEmitter<number | string>();\n  @Output() keypressDelete: EventEmitter<number | string | null> = new EventEmitter<number | string | null>();\n  @Output() keypressInsert: EventEmitter<number | string | null> = new EventEmitter<number | string | null>();\n  @Output() checkedOptionNode: EventEmitter<number | string | null> = new EventEmitter<number | string | null>();\n  @Output() uncheckedOptionNode: EventEmitter<number | string | null> = new EventEmitter<number | string | null>();\n  @Output() clickAddNode: EventEmitter<Node> = new EventEmitter<Node>();\n  @Output() clickEditNode: EventEmitter<Node> = new EventEmitter<Node>();\n  @Output() clickDeleteNode: EventEmitter<Node> = new EventEmitter<Node>();\n\n  treeControl: NestedTreeControl<Node> = new NestedTreeControl<Node>((node: Node): Node[] | Observable<Node[]> => node.children);\n  dataSource: MatTreeNestedDataSource<Node> = new MatTreeNestedDataSource<Node>();\n\n  isSingleClick: boolean = true;\n  currentNode: Node = null;\n\n  /**\n   * Obtiene la descripcion completa del nodo\n   * @example Nodo padre,nodo hijo,nodo nieto\n   * @param node Debe tener todos los parent llenos hacia arriba\n   */\n  public static getDescription(node: Node): string {\n    let result: string[] = [node.name];\n    let concat: string = '';\n\n    if (node.parent) {\n      result.push(this.getDescription(node.parent));\n    }\n\n    if (result.length === 1) {\n      return node.name;\n    }\n\n    result = result.reverse();\n\n    for (let i: number = 0; i < result.length; i++) {\n      const element: string = result[i];\n      concat = concat + element + (i === result.length - 1 ? '' : ',');\n    }\n\n    return concat;\n  }\n\n  ngOnInit(): void {\n    // si se cargan datos por medio del servicio\n    this.treeHelisaService.dataSourceObservable.subscribe((res: Node): void => {\n      if (!!res && !!res.children) {\n        this.selectedNode = res.id;\n        this.receivePage(res.children);\n      } else {\n        this.dataSource.data = [];\n        this.treeControl.dataNodes = [];\n      }\n    });\n\n    // Observable, si cambia el nodo seleccionado por medio del servicio\n    this.treeHelisaService.nodeSelected.subscribe((res: string | number): void => {\n      if (!!this.data && !!this.data.children) {\n        this.selectNode(this.data, res);\n      }\n    });\n\n    this.treeHelisaService.refreshTreeObservable.subscribe((res: void): void => {\n      this.refreshTree();\n    });\n\n    this.treeHelisaService.refreshTreeWithPaginationObservable.subscribe((res: void): void => {\n      this.refreshTreeWithPagination();\n    });\n  }\n\n  ngAfterViewInit(): void {\n    this.treeHelisaService.nodeExpand.subscribe((res: boolean): void => {\n      if (res != null) {\n        if (res) {\n          this.tree.treeControl.expandAll();\n        }\n      }\n    });\n\n    this.treeHelisaService.nodeCollapse.subscribe((res: boolean): void => {\n      if (res !== null) {\n        if (res) {\n          this.tree.treeControl.collapseAll();\n        }\n      }\n    });\n\n    this.treeHelisaService.expandOneNodeObservable.subscribe((res: Node): void => {\n      if (res !== undefined) {\n        this.treeControl.expand(res);\n      }\n    });\n\n    this.treeHelisaService.collapseOneNodeObservable.subscribe((res: Node): void => {\n      if (res !== undefined) {\n        this.treeControl.collapse(res);\n      }\n    });\n  }\n\n  //#region  ====== Events ===========\n  onRedirect(node: Node): void {\n    this.isSingleClick = true;\n    setTimeout((): void => {\n      if (this.isSingleClick) {\n        this.selectNode(node, node.id);\n\n        // if(!!node && !node.children){\n        if (!!node) {\n          this.nodeSelected.emit(node.id);\n          this.currentNode = node;\n        }\n      }\n    }, 350);\n  }\n\n  onScroll(event: Event): void {\n    const element: HTMLDivElement = event.target as HTMLDivElement;\n\n    if (element.offsetHeight + element.scrollTop >= element.scrollHeight) {\n      this.goNextPage();\n    }\n  }\n\n  onEdit(node: Node): void {\n    this.clickEditNode.emit(node);\n    /** @Deprecated\n     *  Ya no se edita el nodo ahora solo se emite el evento 'clickEditNode'\n     * retornando el nodo al cual le hicieron click en la opción delete\n     */\n    // node.isEditable = true;\n    // this.isDisabled = true;\n  }\n\n  onAdd(node: Node): void {\n    this.clickAddNode.emit(node);\n    /** @Deprecated\n     *  Ya no se crea y se agrega el nodo ahora solo se emite el evento 'clickAddNode'\n     * retornando el nodo al cual le hicieron click en la opción add\n     */\n    //   // si no tiene hijos instanciar el array\n    //   if (!node.children) {\n    //     node.children = [];\n    //   }\n    //   node.children.push({\n    //     id: Math.random(),\n    //     name: '',\n    //     isSelected: false,\n    //     parent: node,\n    //     isEditable: true\n    //   });\n    //   if (node.children) {\n    //     this.isDisabled = true;\n    //     this.treeHelisaService.expandOneNode(node);\n    //   }\n    //   this.refreshTree();\n  }\n\n  onDelete(node: Node): void {\n    this.clickDeleteNode.emit(node);\n    /** @Deprecated\n     *  Ya no se elimina el nodo ahora solo se emite el evento 'clickDeleteNode'\n     * retornando el nodo al cual le hicieron click en la opción delete\n     */\n    // // Remueve el nodo utilizando la libreria de lodash\n    // _.remove(node.parent.children, node);\n\n    // this.refreshTree();\n    // this.removed.emit(node.id);\n  }\n\n  onEdited(node: Node, value: string): void {\n    node.name = value;\n    if (node.id == null && node.name === '') {\n      _.remove(node.parent.children, node);\n      this.refreshTree();\n    } else if (node.id && node.id != null && node.name.trim() !== '') {\n      this.edited.emit(node);\n      node.isEditable = false;\n      this.selectNode(node, node.id);\n    } else if (node.id == null && node.name.trim() !== '') {\n      this.added.emit(node);\n      node.isEditable = false;\n    }\n    this.isDisabled = false;\n    this.refreshTree();\n  }\n\n  onCancel(node: Node, value: string): void {\n    this.isDisabled = false;\n    // Si no tiene id por ser un nuevo item, lo elimina\n    if (node.id == null) {\n      _.remove(node.parent.children, node);\n      this.refreshTree();\n    }\n\n    node.isEditable = false;\n  }\n\n  onDblClick(node: Node): void {\n    this.isSingleClick = false;\n    this.dobleClick.emit(node.id);\n  }\n\n  @HostListener('document:keyup', ['$event'])\n  onKeyDown(event: KeyboardEvent): void {\n    switch (event.key) {\n      case 'Delete':\n        this.keypressDelete.emit(!!this.currentNode && this.currentNode.id ? this.currentNode.id : null);\n        break;\n      case 'Insert':\n        this.keypressInsert.emit(!!this.currentNode && this.currentNode.id ? this.currentNode.id : null);\n        break;\n      case 'ArrowDown':\n        this.moveDownIntoTree();\n        break;\n      case 'ArrowUp':\n        this.moveUpIntoTree();\n        break;\n    }\n  }\n\n  //#endregion ======= Events ========\n\n  //#region  ======== Metodos =============\n\n  private moveUpIntoTree(): number {\n    if (!!this.data) {\n      // si aun no hay ningun node seleccionado selecciona el primero\n      if (this.currentNode == null) {\n        this.selectNode(this.data, this.data.children[0].id);\n        this.currentNode = this.data.children[0];\n        if (!!this.currentNode.children && this.currentNode.children.length > 0) {\n          this.treeHelisaService.expandOneNode(this.currentNode);\n        }\n      } else {\n        if (!!this.currentNode.parent && this.currentNode.id != null) {\n          // obtiene el indice del nodo seleccionado actualmente\n          const index: number = this.currentNode.parent.children.indexOf(this.currentNode);\n\n          if (this.currentNode.parent.id == null && index === 0) {\n            return 0;\n          } else {\n            // si tiene nodos al mismo nivel salta al nodo anterior\n            if (index !== undefined && index === 0) {\n              this.currentNode = this.currentNode.parent;\n              this.selectNode(this.data, this.currentNode.id);\n              if (!!this.currentNode.children && this.currentNode.children.length > 0) {\n                this.treeHelisaService.expandOneNode(this.currentNode);\n              }\n            } else {\n              // si no tiene nodos al mismo nivel salta al nodo padre\n              this.currentNode = this.currentNode.parent.children[index - 1];\n              this.selectNode(this.data, this.currentNode.id);\n              if (!!this.currentNode.children && this.currentNode.children.length > 0) {\n                this.treeHelisaService.expandOneNode(this.currentNode);\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n\n  private moveDownIntoTree(): void {\n    if (!!this.data) {\n      if (this.currentNode == null) {\n        this.selectNode(this.data, this.data.children[0].id);\n        this.currentNode = this.data.children[0];\n        if (!!this.currentNode.children && this.currentNode.children.length > 0) {\n          this.treeHelisaService.expandOneNode(this.currentNode);\n        }\n      } else {\n        if (!!this.currentNode) {\n          // obtiene el indice del nodo seleccionado actualmente\n          const index: number =\n            !!this.currentNode && !!this.currentNode.parent ? this.currentNode.parent.children.indexOf(this.currentNode) : null;\n\n          // si tiene childrens pasa al primer children\n          if (!!this.currentNode.children && this.currentNode.children.length > 0) {\n            this.currentNode = this.currentNode.children[0];\n            this.selectNode(this.data, this.currentNode.id);\n            if (!!this.currentNode.children && this.currentNode.children.length > 0) {\n              this.treeHelisaService.expandOneNode(this.currentNode);\n            }\n          } else if (\n            index !== undefined &&\n            index === this.currentNode.parent.children.length - 1 &&\n            this.currentNode.parent.parent != null &&\n            this.currentNode.parent.parent.children != null &&\n            this.currentNode.parent.parent.children.length > 0\n          ) {\n            const indexOfParent: number = this.currentNode.parent.parent.children.indexOf(this.currentNode.parent);\n            this.currentNode =\n              this.currentNode.parent.parent.children[indexOfParent + 1] === undefined\n                ? this.currentNode\n                : this.currentNode.parent.parent.children[indexOfParent + 1];\n\n            this.selectNode(this.data, this.currentNode.id);\n            if (!!this.currentNode.children && this.currentNode.children.length > 0) {\n              this.treeHelisaService.expandOneNode(this.currentNode);\n            }\n          } else {\n            // si no tiene nodos al mismo nivel salta al siguiente hacia abajo\n            this.currentNode = this.currentNode.parent.children[index + 1];\n            this.selectNode(this.data, this.currentNode.id);\n            if (!!this.currentNode.children && this.currentNode.children.length > 0) {\n              this.treeHelisaService.expandOneNode(this.currentNode);\n            }\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Verifica si el nodo tiene hijos\n   */\n  hasChild(t: number, node: Node): boolean {\n    return !!node.children && node.children.length > 0;\n  }\n\n  /**\n   * Actualiza el arbol borrando toda la data , solo cuando no se utiliza paginacion\n   */\n  private refreshTree(): void {\n    this.data = null;\n    const datasourceData: Node[] = this.dataSource.data;\n    this.dataSource.data = null;\n    this.dataSource.data = datasourceData;\n    this.treeControl.dataNodes = datasourceData;\n  }\n\n  /**\n   * Actualiza el arbol cuando se utiliza la paginacion (Cuando no , utilice el metodo refreshTree())\n   */\n  private refreshTreeWithPagination(): void {\n    const datasourceData: Node[] = this.dataSource.data;\n    this.dataSource.data = null;\n    this.dataSource.data = datasourceData;\n    this.treeControl.dataNodes = datasourceData;\n  }\n\n  private goNextPage(): void {\n    if (!this.treeHelisaConnect.isLastPage && !this.treeHelisaConnect.isUsed) {\n      this.treeHelisaConnect.isUsed = true;\n      this.rangeScrolled.emit({\n        page: this.treeHelisaConnect.nextPage()\n      });\n    }\n  }\n\n  private receivePage(data: Node[]): void {\n    if (!this.data) {\n      this.data = { id: null, name: 'root', isSelected: false };\n    }\n    if (!this.data.children) {\n      this.data.children = new Array<Node>();\n      this.treeHelisaConnect = new TreeHelisaConnect<Node>();\n    }\n    this.data.children = this.data.children.concat(data);\n    this.data.children.forEach((node: Node): void => {\n      this.fillParent(node, this.data);\n    });\n\n    this.data.children = this.reorderByOrderIndex(this.data.children);\n\n    this.dataSource.data = this.data.children;\n    this.treeControl.dataNodes = this.data.children;\n    this.treeHelisaConnect.isLastPage = data.length === 0;\n    this.treeHelisaConnect.isUsed = false;\n  }\n\n  /**\n   * Llenan el campo parent de todos los nodos hijos\n   */\n  private fillParent(node: Node, parent: Node): void {\n    node.parent = parent;\n    if (node.children && node.children.length > 0) {\n      node.children.forEach((item: Node): void => {\n        this.fillParent(item, node);\n      });\n    }\n  }\n\n  /**\n   * coloca como true del isSelected del nodo que concuerde con el id\n   */\n  private selectNode(node: Node, id: number | string): Node {\n    if (node == null) {\n      return null;\n    }\n    this.upSelectNode(node);\n    if (!!this.selectedNode) {\n      const nodeSelected: Node = this.getNodeById(this.selectedNode);\n      if (nodeSelected != null) {\n        nodeSelected.isSelected = false;\n        this.selectedNode = null;\n      }\n    }\n    if (node.id !== undefined && node.id === id) {\n      node.isSelected = true;\n      this.expandAllParents(node);\n      this.selectedNode = node.id;\n      return node;\n    } else if (node.children != null) {\n      let i: number;\n      let result: Node = null;\n      for (i = 0; result == null && i < node.children.length; i++) {\n        result = this.selectNode(node.children[i], id);\n      }\n      return result;\n    }\n    return null;\n  }\n\n  private expandAllParents(node: Node): void {\n    if (!!node && !!node.parent) {\n      this.treeHelisaService.expandOneNode(node.parent);\n      this.expandAllParents(node.parent);\n    }\n  }\n\n  /**\n   * Elimina el isSelected de todos los nodos\n   */\n  private upSelectNode(node: Node): void {\n    if (!!node && node.isSelected !== undefined) {\n      node.isSelected = false;\n      if (!!node.children) {\n        for (const childrenNode of node.children) {\n          this.upSelectNode(childrenNode);\n        }\n      }\n    }\n  }\n\n  getClassNode(node: Node): string[] {\n    const classNode: string[] = [];\n    if (node.isSelected) {\n      classNode.push('isSelected');\n    }\n    if (node.classNode) {\n      classNode.push(node.classNode);\n    }\n    return classNode;\n  }\n\n  onEditMode(node: Node, editMode: boolean): void {\n    this.getSelectedOptions(node).editMode = editMode;\n  }\n\n  onSelectOption(event: MatOptionSelectionChange, node: Node): void {\n    node.isCheckedOption = event.source.selected;\n    if (node.isCheckedOption) {\n      this.checkedOptionNode.emit(node.id);\n    } else {\n      this.uncheckedOptionNode.emit(node.id);\n    }\n  }\n\n  getSelectedOptions(\n    node: Node\n  ): {\n    formControl: FormControl;\n    editMode: boolean;\n  } {\n    if (this.selectedOptions.has(node.id)) {\n      this.reloadSelectedOptions(node, this.selectedOptions.get(node.id).editMode);\n    } else {\n      this.reloadSelectedOptions(node, false);\n    }\n    return this.selectedOptions.get(node.id);\n  }\n\n  private reloadSelectedOptions(node: Node, editMode: boolean): void {\n    const array: Array<string | number | null> = new Array<string | number | null>();\n    node.options.forEach((option: Node): void => {\n      if (option.isCheckedOption) {\n        array.push(option.id);\n      }\n    });\n    const obj: {\n      formControl: FormControl;\n      editMode: boolean;\n    } = { formControl: new FormControl(array), editMode };\n    this.selectedOptions.set(node.id, obj);\n  }\n\n  /**\n   * Retorna el primer Node que encuentre segun el id enviado o null si no hay ninguno\n   * @param id  number | string\n   * @returns Node o null si no hay un nodo con ese id\n   */\n  getNodeById(id: number | string): Node {\n    const queue: Node[] = [...this.dataSource.data];\n    while (queue.length > 0) {\n      const curr: Node = queue.shift();\n      if (curr.id === id) {\n        return curr;\n      } else {\n        if (!!curr.children) {\n          queue.push(...curr.children);\n        }\n      }\n    }\n    return null;\n  }\n\n  reorderByOrderIndex(node: Node[]): Node[] {\n    if (!!node && node.length > 0) {\n      try {\n        node = _.orderBy(node, (x: Node): number => x.orderIndex, ['asc']);\n        node.forEach((element: Node): void => {\n          if (!!element.children && element != null) {\n            element.children = this.reorderByOrderIndex(element.children);\n          }\n        });\n        return node;\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  }\n\n  //#endregion ====== Metodos ============\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { OptionAutocompleteHelisa } from './autocomplete-helisa.component';\n\n@Injectable()\nexport class AutocompleteHelisaService<T> {\n\n  private emitChangeSource: BehaviorSubject<Array<OptionAutocompleteHelisa<T>>> =\n  new BehaviorSubject<Array<OptionAutocompleteHelisa<T>>>([]);\n\n  public dataSource$: Observable<Array<OptionAutocompleteHelisa<T>>> = this.emitChangeSource.asObservable();\n\n  constructor() { }\n\n  setDataSource(options: Array<OptionAutocompleteHelisa<T>>): void {\n    this.emitChangeSource.next(options);\n  }\n\n}\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { Observable, of, Subject } from 'rxjs';\nimport { map, startWith, throttleTime, debounceTime } from 'rxjs/operators';\nimport { AutocompleteHelisaService } from './autocomplete-helisa.component.service';\n\nexport interface OptionAutocompleteHelisa<T> {\n  value: T;\n  displayText: string;\n}\n\n@Component({\n  selector: 'hel-autocomplete',\n  templateUrl: './autocomplete-helisa.component.html',\n  styleUrls: ['./autocomplete-helisa.component.css'],\n  providers: [AutocompleteHelisaService]\n})\nexport class AutocompleteHelisaComponent<T> implements OnInit {\n\n  @Input() myControl: FormControl = new FormControl();\n  @Input() options: Array<OptionAutocompleteHelisa<T>> = new Array<OptionAutocompleteHelisa<T>>();\n  filteredOptions: Observable<OptionAutocompleteHelisa<T>[]>;\n  selectedValue: OptionAutocompleteHelisa<T>;\n  @Output() selectedValueEmmiter: EventEmitter<T> = new EventEmitter<T>();\n  @Output() nextPage: EventEmitter<void> = new EventEmitter<void>();\n  @Input() isRemote: boolean = false;\n  isLoading: boolean = false;\n\n\n  onScrollObservable: Subject<void> = new Subject<void>();\n\n  constructor(private autocompleteHelisaService: AutocompleteHelisaService<T>) {\n  }\n\n  ngOnInit(): void {\n\n    this.onScrollObservable.asObservable()\n    .pipe(\n      debounceTime(500),\n      throttleTime(500)\n    )\n    .subscribe((): void => {\n      this.nextPage.emit();\n    });\n\n    if (this.isRemote) {\n      this.autocompleteHelisaService.dataSource$.subscribe((data: OptionAutocompleteHelisa<T>[]): void => {\n        setTimeout((): void => {\n          this.options = data;\n          this.filteredOptions = of<OptionAutocompleteHelisa<T>[]>(this.options);\n        });\n      });\n    }\n\n    this.filteredOptions = this.myControl.valueChanges.pipe(\n      startWith(''),\n      map((x: string): string => this._checkRegex(x)),\n      map((value: string): OptionAutocompleteHelisa<T>[] => this._filter(value))\n    );\n\n  }\n\n  displayFn(option?: OptionAutocompleteHelisa<T>): string | undefined {\n    return option ? option.displayText : undefined;\n  }\n\n  getService(): AutocompleteHelisaService<T> {\n    return this.autocompleteHelisaService;\n  }\n\n\n  /** Elimina caracteres extraños */\n  private _checkRegex(value: string): string {\n    value = value.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '');\n    return value;\n  }\n\n  private _filter(value: string): OptionAutocompleteHelisa<T>[] {\n    if (!(value)) {\n      if (!this.isRemote) {\n        const filterValue: string[] = value.toLowerCase().split(' ');\n        return this.options.filter((option: OptionAutocompleteHelisa<T>): boolean => {\n          let ws: boolean = true;\n          filterValue.forEach((text: string): boolean => ws = ws && option.displayText.toLowerCase().indexOf(text) >= 0);\n          return ws;\n        }).splice(0, 5);\n      } else {\n        return this.options;\n      }\n    }\n  }\n\n  public onSelected(event: {option: {value: OptionAutocompleteHelisa<T>}}): void {\n    this.selectedValue = event.option.value;\n    this.selectedValueEmmiter.emit(this.selectedValue.value);\n  }\n\n  getNextPage(): void {\n    this.onScrollObservable.next();\n  }\n}\n","import { Directive, EventEmitter, Input, Output, OnDestroy } from '@angular/core';\nimport { MatAutocomplete } from '@angular/material/autocomplete';\nimport { takeUntil, tap } from 'rxjs/operators';\nimport { Subject } from 'rxjs';\n\n\nexport interface IAutoCompleteScrollEvent {\n  autoComplete: MatAutocomplete;\n  scrollEvent: Event;\n}\n\n\n@Directive({\n  selector: 'mat-autocomplete[optionsScroll]'\n})\nexport class OptionsScrollDirective implements OnDestroy {\n\n  /**\n   * This value would different depends of styles\n   */\n  @Input() thresholdPercent: number = .9;\n  @Output() optionsScroll: EventEmitter<IAutoCompleteScrollEvent> = new EventEmitter<IAutoCompleteScrollEvent>();\n  destroy: Subject<void> = new Subject<void>();\n  lastScrollTop: number = 0;\n\n  constructor(public autoComplete: MatAutocomplete) {\n    this.autoComplete.opened.pipe(\n      tap((): void => {\n        // Note: When autocomplete raises opened, panel is not yet created (by Overlay)\n        // Note: The panel will be available on next tick\n        // Note: The panel wil NOT open if there are no options to display\n        setTimeout((): void => {\n          // Note: remove listner just for safety, in case the close event is skipped.\n          this.removeScrollEventListener();\n          if (!!this.autoComplete &&\n            !!this.autoComplete.panel &&\n            !!this.autoComplete.panel.nativeElement) {\n            this.autoComplete.panel.nativeElement\n              .addEventListener('scroll', this.onScroll.bind(this), false);\n          }\n        });\n      }),\n      takeUntil(this.destroy)).subscribe();\n\n    this.autoComplete.closed.pipe(\n      tap((): void => this.removeScrollEventListener()),\n      takeUntil(this.destroy)).subscribe();\n  }\n\n  private removeScrollEventListener(): void {\n    if (!!this.autoComplete &&\n      !!this.autoComplete.panel &&\n      !!this.autoComplete.panel.nativeElement) {\n      this.autoComplete.panel.nativeElement\n        .removeEventListener('scroll', this.onScroll);\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.destroy.next();\n    this.destroy.complete();\n\n    this.removeScrollEventListener();\n  }\n\n\n  onScroll(event: Event): void {\n    // Credits: how to know if it's down or up scroll \"https://github.com/qeremy/so/blob/master/so.dom.js#L426\"\n    const st: number = (event.target as Window).pageYOffset || (event.target as Element).scrollTop;\n    if (st > this.lastScrollTop) {\n      // downscroll code\n      if (this.thresholdPercent === undefined) {\n        this.optionsScroll.next({ autoComplete: this.autoComplete, scrollEvent: event });\n      } else {\n        const threshold: number = this.thresholdPercent * 100 * (event.target as Element).scrollHeight / 100;\n        const current: number = (event.target as Element).scrollTop + (event.target as Element).clientHeight;\n        // console.log(`scroll ${current}, threshold: ${threshold}`)\n        if (current > threshold) {\n          // console.log('load next page');\n          this.optionsScroll.next({ autoComplete: this.autoComplete, scrollEvent: event });\n        }\n      }\n    } else {\n      // upscroll code\n    }\n    this.lastScrollTop = st <= 0 ? 0 : st;\n  }\n\n}\n","import { Directive, Input, HostListener, ElementRef } from '@angular/core';\nimport { MatTooltip } from '@angular/material/tooltip';\n\n@Directive({\n    selector: '[helTooltip]',\n    providers: [MatTooltip]\n})\nexport class HelTooltipDirective {\n\n    tooltip: MatTooltip;\n\n    /**\n     * Mensaje a mostrar\n     */\n    @Input('helTooltip') message: string;\n\n    /**\n     * Tiempo antes de ocultarla el mensaje\n     */\n    @Input() hideDelay: number = 600;\n\n    /**\n     * Tiempo antes de mostra el mensaje\n     */\n    @Input() showDelay: number = 500;\n\n\n    constructor(tooltip: MatTooltip, private elemRef: ElementRef) {\n      this.tooltip = tooltip;\n    }\n\n    @HostListener('mouseover') mouseover(): void {\n      const currentContent: string = this.elemRef.nativeElement.innerText;\n\n      if (!!currentContent && !!this.message) {\n        if ((currentContent.toUpperCase() !== this.message.toString().toUpperCase()) || this.isEllipsisActive(this.elemRef.nativeElement)) {\n          this.tooltip.message = this.message;\n        }\n      }\n\n      this.tooltip.showDelay =  this.showDelay;\n      this.tooltip.hideDelay = this.hideDelay;\n    }\n\n\n    private isEllipsisActive(e: {offsetWidth: number , scrollWidth: number}): boolean {\n      return (e.offsetWidth < e.scrollWidth);\n    }\n}\n","import { Directive, HostBinding, PLATFORM_ID, Inject, Input, OnChanges } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\n\n@Directive({\n  selector: 'a[href]',\n})\nexport class ExternalLinkDirective implements OnChanges {\n  @HostBinding('attr.rel') relAttr: string = '';\n  @HostBinding('attr.target') targetAttr: string = '';\n  @HostBinding('attr.href') hrefAttr: string = '';\n  @Input() href: string;\n\n  constructor(@Inject(PLATFORM_ID) private platformId: string) {}\n\n  ngOnChanges(): void {\n\n    this.hrefAttr = this.href;\n\n    if (this.isLinkExternal()) {\n      this.relAttr = 'noopener';\n      this.targetAttr = '_blank';\n    }\n  }\n\n  private isLinkExternal(): boolean {\n    return isPlatformBrowser(this.platformId) && !this.href.includes(location.hostname);\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n    name: 'externalLink'\n})\nexport class ExternalLinkPipe implements PipeTransform {\n    transform(value: string, ...args: string[]): string {\n        return '//' + value;\n    }\n}\n","import {AfterViewInit, Component, EventEmitter, Input, OnInit, Output, ViewChild} from '@angular/core';\nimport {ComboBoxListable} from './interface/combo-box-listable';\nimport {ComboBoxEditable} from './interface/combo-box-editable';\n\nexport enum ComboBoxHelisaState {\n  CLOSED,\n  SELECT,\n  INSERT\n}\n\n@Component({\n  selector: 'lib-combo-box-helisa',\n  templateUrl: './combo-box-helisa.component.html',\n  styleUrls: ['./combo-box-helisa.component.css']\n})\nexport class ComboBoxHelisaComponent<TYPE> implements OnInit, AfterViewInit {\n\n  @Input() editable: ComboBoxEditable<TYPE>;\n  @Input() listable: ComboBoxListable<TYPE>;\n  @Input() placeholder: string = 'Sin seleccionar';\n  @Input() selectedItem: TYPE;\n  @Output() selectEmitter: EventEmitter<TYPE> = new EventEmitter<TYPE>();\n  @Input() enabled: boolean = true;\n\n  private page: number = 0;\n  private pageSize: number = 50;\n  private haveNextPage: boolean = true;\n  state: ComboBoxHelisaState = ComboBoxHelisaState.CLOSED;\n\n  rows: TYPE[] = [];\n\n  constructor() {\n  }\n\n  ngOnInit(): void {\n  }\n\n  ngAfterViewInit(): void {\n    this.getNextPage();\n  }\n\n  private getNextPage(): void {\n    if (this.haveNextPage) {\n      this.listable.getData(this.page++, this.pageSize).subscribe((rows: TYPE[]): void => {\n        rows.forEach((item: TYPE): number => this.rows.push(item));\n        this.haveNextPage = rows.length > 0;\n      });\n    }\n  }\n\n  get comboBoxHelisaState(): typeof ComboBoxHelisaState {\n    return ComboBoxHelisaState;\n  }\n\n  onFocus(): void {\n    if (this.enabled) {\n      this.state = ComboBoxHelisaState.SELECT;\n    }\n  }\n\n  selectItem(row: TYPE): void {\n    this.selectedItem = row;\n    this.selectEmitter.emit(row);\n    this.state = ComboBoxHelisaState.CLOSED;\n  }\n\n  changeToInsert(): void {\n    this.state = ComboBoxHelisaState.INSERT;\n  }\n\n  insert(event: string): void {\n    if (event.trim().length > 0) {\n      this.editable.insert(event).subscribe(\n        (data: TYPE): void => {\n          this.rows.push(data);\n          this.state = ComboBoxHelisaState.SELECT;\n        }\n      );\n    } else {\n      this.state = ComboBoxHelisaState.SELECT;\n    }\n  }\n\n  onScroll(event: Event): void {\n    const element: HTMLDivElement = event.target as HTMLDivElement;\n    if (element.scrollHeight - element.scrollTop < 1000) {\n      this.getNextPage();\n    }\n  }\n}\n","import { AfterViewInit, Component, ContentChild, EventEmitter, Input, OnInit, Output, TemplateRef } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nexport enum PagingTreeInitialMode {\n  COLLAPSE,\n  EXPAND\n}\n\nexport interface PagingTreeHelisaListable<T> {\n  get(lastChildOrder: number, size: number): Observable<T[]>;\n\n  getIdField(): string;\n\n  getIdParentField(): string;\n\n  compare(a: T, b: T): number;\n}\n\ninterface HelisaNode<T> {\n  object: T;\n  level: number;\n  haveChildren: boolean;\n  expanded: boolean;\n  visible: boolean;\n  preorder: number;\n}\n\nexport interface HelisaNodeData<T> {\n  readonly object: T;\n  readonly level: number;\n  readonly haveChildren: boolean;\n  readonly expanded: boolean;\n  readonly visible: boolean;\n  readonly preorder: number;\n}\n\n@Component({\n  selector: 'hel-paging-tree',\n  templateUrl: './paging-tree-helisa.component.html',\n  styleUrls: ['./paging-tree-helisa.component.css']\n})\nexport class PagingTreeHelisaComponent<T> implements OnInit, AfterViewInit {\n\n  private pageSize: number = 200000;\n  private visibleLimit: number = 0;\n  private visibleSize: number = 100;\n  private treeMode: PagingTreeInitialMode = PagingTreeInitialMode.EXPAND;\n  private visibleObjects: Array<T> = [];\n  private service: PagingTreeHelisaListable<T>;\n  private searchNode: Map<string, HelisaNode<T>>;\n  private allNode: Array<HelisaNode<T>> = [];\n\n  @Output()\n  afterLoadData: EventEmitter<void> = new EventEmitter<void>();\n\n  @ContentChild('nodeComponent')\n  nodeComponent: TemplateRef<{ data: T, node: HelisaNodeData<T> }>;\n\n  @ContentChild('nodeTitle')\n  nodeTitle: TemplateRef<any>;\n\n  constructor() {\n  }\n\n  ngOnInit(): void {\n  }\n\n  ngAfterViewInit(): void {\n  }\n\n  @Input()\n  set mode(paramMode: PagingTreeInitialMode) {\n    this.treeMode = paramMode;\n    this.reset();\n  }\n\n  @Input()\n  set pagingTreeHelisaListable(paramService: PagingTreeHelisaListable<T>) {\n    this.service = paramService;\n    this.reset();\n  }\n\n  public reset(): void {\n    if (this.service) {\n      this.service.get(0, this.pageSize).subscribe((items: T[]): void => this.loadData(items));\n    }\n  }\n\n  private loadData(items: T[]): void {\n    this.searchNode = new Map<string, HelisaNode<T>>();\n    this.visibleObjects = [];\n    this.allNode = [];\n    items = this.sortItems(items);\n    this.searchNode = new Map<string, HelisaNode<T>>();\n    items.forEach((item: T): void => {\n      const node: HelisaNode<T> = this.createNode(item);\n      this.allNode.push(node);\n    });\n    this.reSort();\n    this.loadNextVisibleObjects(null);\n    this.afterLoadData.emit();\n  }\n\n  private sortItems(items: T[]): T[] {\n    const lAdy: Map<string, T[]> = new Map<string, T[]>();\n    const stack: T[] = [];\n    items.forEach((item: T): void => {\n      const idParent: string = item[this.service.getIdParentField()];\n      if (!idParent) {\n        stack.unshift(item);\n      } else {\n        if (!lAdy.has(idParent)) {\n          lAdy.set(idParent, []);\n        }\n        lAdy.get(idParent).push(item);\n      }\n    });\n    const response: T[] = new Array<T>(items.length);\n    let index: number = 0;\n    while (stack.length > 0) {\n      const last: T = stack.pop();\n      response[index++] = last;\n      const children: T[] = lAdy.get(last[this.service.getIdField()]);\n      if (children) {\n        for (let i: number = children.length - 1; i >= 0; i--) {\n          stack.push(children[i]);\n        }\n      }\n    }\n    return response;\n  }\n\n  private createNode(item: T): HelisaNode<T> {\n    if (this.searchNode.has(item[this.service.getIdField()])) {\n      throw Error('Ya existe el nodo.');\n    }\n    const parentInformation: HelisaNode<T> = this.getNodeInformationById(item[this.service.getIdParentField()]);\n    const nodeInformation: HelisaNode<T> = {\n      object: item,\n      haveChildren: false,\n      level: parentInformation ? parentInformation.level + 1 : 0,\n      expanded: this.treeMode === PagingTreeInitialMode.EXPAND,\n      visible: false,\n      preorder: this.searchNode.size + 1,\n    };\n    this.searchNode.set(item[this.service.getIdField()], nodeInformation);\n    if (parentInformation) {\n      parentInformation.haveChildren = true;\n    }\n    return nodeInformation;\n  }\n\n  public getNodeInformationById(id: string): HelisaNode<T> {\n    return this.searchNode.get(id);\n  }\n\n  public getNodeInformation(item: T): HelisaNode<T> {\n    return this.searchNode.get(item[this.service.getIdField()]);\n  }\n\n  getLevelClass(item: T): string {\n    return 'padding-level-' + this.getNodeInformationById(item[this.service.getIdField()]).level;\n  }\n\n  private loadNextVisibleObjects(nodeFrom: T): void {\n    const visibleObjects: T[] = [];\n    this.visibleObjects.forEach((item: T): void => {\n      if (this.getNodeInformation(item)) {\n        if (nodeFrom && this.getNodeInformation(nodeFrom).preorder >= this.getNodeInformation(item).preorder) {\n          visibleObjects.push(item);\n        } else {\n          this.getNodeInformationById(item[this.service.getIdField()]).visible = false;\n        }\n      }\n    });\n    this.visibleLimit = visibleObjects.length + this.visibleSize;\n    this.allNode.forEach((item: HelisaNode<T>): void => {\n      if (visibleObjects.length < this.visibleLimit &&\n        (!nodeFrom || this.getNodeInformation(nodeFrom).preorder < item.preorder)) {\n        const idParent: string = item.object[this.service.getIdParentField()];\n        if (!idParent) {\n          visibleObjects.push(item.object);\n          item.visible = true;\n        } else {\n          const parentInformation: HelisaNode<T> = this.getNodeInformationById(idParent);\n          if (parentInformation.visible && parentInformation.expanded) {\n            visibleObjects.push(item.object);\n            item.visible = true;\n          }\n        }\n      }\n    });\n    this.visibleObjects = visibleObjects;\n  }\n\n  collapseNode(item: T): void {\n    this.getNodeInformationById(item[this.service.getIdField()]).expanded = false;\n    this.loadNextVisibleObjects(item);\n  }\n\n  expandNode(item: T): void {\n    this.getNodeInformationById(item[this.service.getIdField()]).expanded = true;\n    this.loadNextVisibleObjects(item);\n  }\n\n  showNextPage(): void {\n    if (this.visibleObjects.length > 0) {\n      this.loadNextVisibleObjects(this.visibleObjects[this.visibleObjects.length - 1]);\n    }\n  }\n\n  get visibleData(): ReadonlyArray<T> {\n    return this.visibleObjects;\n  }\n\n  removeItem(item: T): void {\n    this.removeById(item[this.service.getIdField()]);\n  }\n\n  removeById(id: string): void {\n    if (this.getNodeInformationById(id)) {\n      const idParent: string = this.getNodeInformationById(id).object[this.service.getIdParentField()];\n      const set: Set<string> = new Set<string>();\n      set.add(id);\n      const beginIndex: number = this.allNode.findIndex(\n        (itemSearch: HelisaNode<T>): boolean => itemSearch.object[this.service.getIdField()] === id\n      );\n      let lastIndex: number = this.allNode.length;\n      for (let i: number = beginIndex + 1; i < this.allNode.length; i++) {\n        const itemSearch: T = this.allNode[i].object;\n        if (set.has(itemSearch[this.service.getIdParentField()])) {\n          set.add(itemSearch[this.service.getIdField()]);\n        } else {\n          lastIndex = i;\n          break;\n        }\n      }\n      const deletedItems: HelisaNode<T>[] = this.allNode.splice(beginIndex, lastIndex - beginIndex);\n      let parentHaveChildren: boolean = false;\n      deletedItems.forEach((deletedItem: HelisaNode<T>): boolean => this.searchNode.delete(deletedItem.object[this.service.getIdField()]));\n      this.allNode.forEach((searchItem: HelisaNode<T>, index: number): void => {\n        searchItem.preorder = index + 1;\n        if (searchItem.object[this.service.getIdParentField()] === idParent) {\n          parentHaveChildren = true;\n        }\n      });\n      if (idParent) {\n        this.getNodeInformationById(idParent).haveChildren = parentHaveChildren;\n      }\n      this.loadNextVisibleObjects(beginIndex > 0 ? this.allNode[beginIndex - 1].object : null);\n    }\n  }\n\n  addItem(item: T): void {\n    const indexParent: number = this.allNode.findIndex((node: HelisaNode<T>): boolean => node.object[this.service.getIdField()] === item[this.service.getIdParentField()]);\n    if (indexParent >= 0) {\n      this.allNode.push(this.createNode(item));\n      this.allNode[indexParent].haveChildren = true;\n      this.reSort();\n      this.expandNode(this.allNode[indexParent].object);\n    } else {\n      throw Error('No existe el padre.');\n    }\n  }\n\n  updateItem(item: T): void {\n    if (this.getNodeInformation(item)) {\n      this.getNodeInformation(item).object = item;\n      this.reSort();\n      const indexParent: number = this.allNode.findIndex(\n        (node: HelisaNode<T>): boolean => node.object[this.service.getIdField()] === item[this.service.getIdParentField()]);\n      if (indexParent >= 0) {\n        this.expandNode(this.allNode[indexParent].object);\n      } else {\n        this.loadNextVisibleObjects(null);\n      }\n    }\n  }\n\n  private reSort(): void {\n    const items: T[] = this.allNode.map((node: HelisaNode<T>): T => node.object);\n    items.sort((a: T, b: T): number => this.service.compare(a, b));\n    const preorder: T[] = this.sortItems(items);\n    preorder.forEach((object: T, index: number): number => this.getNodeInformation(object).preorder = index + 1);\n    this.allNode.sort((nodeA: HelisaNode<T>, nodeB: HelisaNode<T>): number => nodeA.preorder - nodeB.preorder);\n  }\n}\n","export enum AlertInformationType {\n    AUTHORIZATION_TRANSACTION,\n    CONFIRM_DELETE_DATA,\n    DELETE_DATA,\n    INFORMATION_NOT_VALID,\n    LOST_DATA,\n    UNCOMPLETED_DATA,\n    UNCOMPLETED_SELECTED_DATA,\n    DEFINE_COMMERCIAL_STRUCTURE,\n    DEFINE_PARKING_STRUCTURE,\n    DEFINE_RESIDENCIAL_STRUCTURE,\n    NO_SEARCH_RESULTS\n  }\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { AlertInformationType } from './alert-information-helisa-type.enum';\n\ninterface AlertInformationDataHelisaProperties {\n  alertType: AlertInformationType;\n  title: string;\n  content: string;\n  okLabel: string;\n  cancelLabel: string;\n}\n\nconst TITLE_BY_ALERT_TYPE: string[] = ['!Esta transacción requiere autorización!',\n                                       '',\n                                       '¿Está seguro que debe anular esta información?',\n                                       '',\n                                       '¿Está seguro de querer perder lo ya hecho?',\n                                       'No ha suministrado la información necesaria.',\n                                       '',\n                                       '',\n                                       '',\n                                       ''\n                                      ];\nconst CONTENT_BY_ALERT_TYPE: string[] = ['',\n                                         '¿Esta seguro que desea eliminar esta información?',\n                                         'Al anular este concepto, quedará la huella de todo lo que se hizo apoyados en su información. No es una eliminación tácita, es suprimir su uso en adelante.',\n                                         'Rectifique. Hay información no válida',\n                                         'Si no está seguro, puede continuar o \"aplicar\" y posteriormente cuando tenga clara las respuestas, usando la opción de modificar podrá completar el concepto.',\n                                         'Si insite en grabar así, este concepto no será utilizable hasta su conclusión satisfactoria, que deberá completar posteriormente modificando el concepto.',\n                                         'Elemento sin información requerida. Modifíquelo para completarlo.',\n                                         'Primero defina la estructura comercial en configuración.',\n                                         'Primero defina la estructura zona de parqueaderos en configuración.',\n                                         'Primero defina la estructura física residencial en configuración.',\n                                         'No fueron encontradas coincidencias con el criterio de búsqueda.',\n                                        ];\nconst OK_LABEL_BY_ALERT_TYPE: string[] = ['Solicitarla',\n                                          'Lo asumo',\n                                          'Lo asumo',\n                                          '',\n                                          'Lo asumo',\n                                          'Lo asumo',\n                                          'Aceptar',\n                                          '',\n                                          '',\n                                          ''\n                                         ];\nconst CANCEL_LABEL_BY_ALERT_TYPE: string[] = ['Negarla',\n                                              'Me retracto',\n                                              'Me retracto',\n                                              '',\n                                              'Me retracto',\n                                              'Me retracto',\n                                              '',\n                                              '',\n                                              '',\n                                              ''\n                                             ];\n\n@Component({\n  selector: 'hel-alert-information-data-helisa',\n  templateUrl: './alert-information-data-helisa.component.html',\n  styleUrls: ['./alert-information-data-helisa.component.sass']\n})\nexport class AlertInformationDataHelisaComponent implements OnInit {\n\n  alertType: AlertInformationType;\n  title: string;\n  content: string;\n  okLabel: string;\n  cancelLabel: string;\n\n  constructor(\n    public dialogRef: MatDialogRef<AlertInformationDataHelisaComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: AlertInformationDataHelisaProperties\n  ) {\n    this.alertType = data.alertType;\n    this.title = data.title;\n    if (this.title === undefined) {\n      this.title = TITLE_BY_ALERT_TYPE[this.alertType];\n    }\n    this.content = data.content;\n    if (this.content === undefined) {\n      this.content = CONTENT_BY_ALERT_TYPE[this.alertType];\n    }\n    this.okLabel = data.okLabel;\n    if (this.okLabel === undefined) {\n      this.okLabel = OK_LABEL_BY_ALERT_TYPE[this.alertType];\n    }\n    this.cancelLabel = data.cancelLabel;\n    if (this.cancelLabel === undefined) {\n      this.cancelLabel = CANCEL_LABEL_BY_ALERT_TYPE[this.alertType];\n    }\n    dialogRef.disableClose = true;\n    dialogRef.keydownEvents().subscribe((event: KeyboardEvent): void => {\n      if (event.code === 'Escape') {\n        this.dialogRef.close(this.onCancel());\n      }\n    });\n  }\n\n  ngOnInit(): void {\n    if (this.alertType === AlertInformationType.DEFINE_COMMERCIAL_STRUCTURE || this.alertType === AlertInformationType.DEFINE_PARKING_STRUCTURE ||\n        this.alertType === AlertInformationType.DEFINE_RESIDENCIAL_STRUCTURE) {\n      setTimeout((): void => {\n        this.dialogRef.close();\n      }, 3000);\n    }\n  }\n\n  onCancel(): void {\n    this.dialogRef.close();\n  }\n\n  hasTitle(): boolean {\n    return this.alertType === AlertInformationType.AUTHORIZATION_TRANSACTION || this.alertType === AlertInformationType.DELETE_DATA ||\n           this.alertType === AlertInformationType.LOST_DATA || this.alertType === AlertInformationType.UNCOMPLETED_DATA;\n  }\n\n  hasContent(): boolean {\n    return this.alertType === AlertInformationType.CONFIRM_DELETE_DATA || this.alertType === AlertInformationType.DELETE_DATA ||\n           this.alertType === AlertInformationType.INFORMATION_NOT_VALID || this.alertType === AlertInformationType.LOST_DATA ||\n           this.alertType === AlertInformationType.UNCOMPLETED_DATA || this.alertType === AlertInformationType.UNCOMPLETED_SELECTED_DATA ||\n           this.alertType === AlertInformationType.DEFINE_COMMERCIAL_STRUCTURE || this.alertType === AlertInformationType.DEFINE_PARKING_STRUCTURE ||\n           this.alertType === AlertInformationType.DEFINE_RESIDENCIAL_STRUCTURE || this.alertType === AlertInformationType.NO_SEARCH_RESULTS;\n  }\n\n  hasButtons(): boolean {\n    return this.alertType === AlertInformationType.AUTHORIZATION_TRANSACTION || this.alertType === AlertInformationType.CONFIRM_DELETE_DATA ||\n           this.alertType === AlertInformationType.DELETE_DATA || this.alertType === AlertInformationType.LOST_DATA ||\n           this.alertType === AlertInformationType.UNCOMPLETED_DATA || this.alertType === AlertInformationType.UNCOMPLETED_SELECTED_DATA;\n  }\n\n  hasCancelButton(): boolean {\n    return this.alertType !== AlertInformationType.UNCOMPLETED_SELECTED_DATA;\n  }\n}\n","import {DragDropModule} from '@angular/cdk/drag-drop';\nimport {LayoutModule} from '@angular/cdk/layout';\nimport {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatNativeDateModule, MatOptionModule } from '@angular/material/core';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatListModule } from '@angular/material/list';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatTreeModule } from '@angular/material/tree';\nimport { AlertHelisaComponent } from './components/alert-helisa/alert-helisa.component';\nimport { AutocompleteHelisaComponent } from './components/autocomplete-helisa/autocomplete-helisa.component';\nimport { DateHelisaComponent } from './components/date-helisa/date-helisa.component';\nimport { DependencyTableHelisaComponent } from './components/dependency-table-helisa/dependency-table-helisa.component';\nimport { InputHelisaComponent } from './components/input-helisa/input-helisa.component';\nimport { InputWithButtonComponent } from './components/input-with-button/input-with-button.component';\nimport { TableHelisaComponent } from './components/table-helisa/table-helisa.component';\nimport { TableHelisaService } from './components/table-helisa/table-helisa.service';\nimport { ToastHelisaComponent } from './components/toast-helisa/toast-helisa.component';\nimport { TreeHelisaComponent } from './components/tree-helisa/tree-helisa.component';\nimport { TreeHelisaService } from './components/tree-helisa/tree-helisa.service';\nimport { ExternalLinkDirective } from './directives/external-link.directive';\nimport { OptionsScrollDirective } from './directives/options-scroll.directive';\nimport { HelTooltipDirective } from './directives/tooltip.directive';\nimport { ExternalLinkPipe } from './pipes/external-link.pipe';\nimport { ComboBoxHelisaComponent } from './components/combo-box-helisa/combo-box-helisa.component';\nimport { PagingTreeHelisaComponent } from './components/paging-tree-helisa/paging-tree-helisa.component';\nimport { AlertInformationDataHelisaComponent } from './components/alert-information-data-helisa/alert-information-data-helisa.component';\n\n@NgModule({\n  declarations: [\n    InputWithButtonComponent,\n    ToastHelisaComponent,\n    AlertHelisaComponent,\n    DependencyTableHelisaComponent,\n    InputHelisaComponent,\n    TableHelisaComponent,\n    TreeHelisaComponent,\n    DateHelisaComponent,\n    AutocompleteHelisaComponent,\n    OptionsScrollDirective,\n    HelTooltipDirective,\n    ExternalLinkDirective,\n    ExternalLinkPipe,\n    ComboBoxHelisaComponent,\n    PagingTreeHelisaComponent,\n    AlertInformationDataHelisaComponent\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n\n    MatAutocompleteModule,\n    MatButtonModule,\n    MatCheckboxModule,\n    MatToolbarModule,\n    MatExpansionModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatSelectModule,\n    MatOptionModule,\n    MatListModule,\n    MatIconModule,\n    MatSnackBarModule,\n    MatCardModule,\n    LayoutModule,\n    MatTooltipModule,\n    MatButtonModule,\n    MatSidenavModule,\n    MatIconModule,\n    MatListModule,\n    MatGridListModule,\n    MatCardModule,\n    MatMenuModule,\n    MatInputModule,\n    MatSelectModule,\n    MatRadioModule,\n    MatProgressSpinnerModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatSortModule,\n    MatDialogModule,\n    MatTabsModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatStepperModule,\n    MatChipsModule,\n    DragDropModule,\n    MatTreeModule\n  ],\n  exports: [\n    InputWithButtonComponent,\n    ToastHelisaComponent,\n    AlertHelisaComponent,\n    DependencyTableHelisaComponent,\n    InputHelisaComponent,\n    TableHelisaComponent,\n    TreeHelisaComponent,\n    DateHelisaComponent,\n    AutocompleteHelisaComponent,\n    OptionsScrollDirective,\n    HelTooltipDirective,\n    ExternalLinkDirective,\n    ExternalLinkPipe,\n    MatButtonModule,\n    MatCheckboxModule,\n    MatToolbarModule,\n    MatExpansionModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatSelectModule,\n    MatOptionModule,\n    MatListModule,\n    MatIconModule,\n    MatSnackBarModule,\n    MatCardModule,\n    LayoutModule,\n    MatTooltipModule,\n    MatButtonModule,\n    MatSidenavModule,\n    MatIconModule,\n    MatListModule,\n    MatGridListModule,\n    MatCardModule,\n    MatMenuModule,\n    MatInputModule,\n    MatSelectModule,\n    MatRadioModule,\n    MatProgressSpinnerModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatSortModule,\n    MatDialogModule,\n    MatTabsModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatStepperModule,\n    MatChipsModule,\n    DragDropModule,\n    MatTreeModule,\n    ComboBoxHelisaComponent,\n    PagingTreeHelisaComponent,\n    AlertInformationDataHelisaComponent\n  ],\n  providers: [TableHelisaService, TreeHelisaService]\n})\nexport class HelisaLibModule { }\n","import { Injectable } from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { Observable } from 'rxjs';\nimport { AlertInformationDataHelisaComponent} from './alert-information-data-helisa.component';\nimport { AlertInformationType } from './alert-information-helisa-type.enum';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AlertInformationDataHelisaService {\n\n  constructor(public dialog: MatDialog) { }\n\n  openDialog(alertType: AlertInformationType, title?: string, content?: string, okLabel?: string, cancelLabel?: string): Observable<boolean> {\n    const dialogRef: MatDialogRef<AlertInformationDataHelisaComponent> = this.dialog.open(AlertInformationDataHelisaComponent, {\n      width: '250px',\n      data: { alertType, title, content, okLabel, cancelLabel }\n    });\n\n    return dialogRef.afterClosed();\n  }\n}\n","/*\n * Public API Surface of helisa-lib\n */\n\n// InputWithButton\nexport * from './lib/components/input-with-button/input-with-button.component';\n\n// ToastHelisa\nexport * from './lib/components/toast-helisa/toast-helisa.component';\nexport * from './lib/components/toast-helisa/toast-helisa.service';\nexport * from './lib/components/toast-helisa/toast-type.enum';\n\n// AlertHelisa\nexport * from './lib/components/alert-helisa/alert-helisa-type.enum';\nexport * from './lib/components/alert-helisa/alert-helisa.component';\nexport * from './lib/components/alert-helisa/alert-helisa.service';\n\n// DependencyTableHelisa\nexport * from './lib/components/dependency-table-helisa/dependency-table-helisa.component';\nexport * from './lib/components/dependency-table-helisa/dependency-table-helisa.service';\n\n// InputHelisa\nexport * from './lib/components/input-helisa/input-helisa.component';\n\n\n// TableHelisa\nexport * from './lib/components/table-helisa/table-helisa.component';\nexport * from './lib/components/table-helisa/table-helisa.interface';\nexport * from './lib/components/table-helisa/table-helisa.service';\n\n// Date\nexport * from './lib/components/date-helisa/date-helisa.component';\n\n// Tree\nexport * from './lib/components/tree-helisa/tree-helisa.component';\nexport * from './lib/components/tree-helisa/tree-helisa-connect';\nexport * from './lib/components/tree-helisa/tree-helisa.service';\nexport * from './lib/components/tree-helisa/node';\n\n\n// Autocomplete\nexport * from './lib/components/autocomplete-helisa/autocomplete-helisa.component';\nexport * from './lib/components/autocomplete-helisa/autocomplete-helisa.component.service';\n\n// Directives\nexport * from './lib/directives/options-scroll.directive';\nexport * from './lib/directives/tooltip.directive';\n\n\n// Module\nexport * from './lib/helisa-lib.module';\n\n// ComboBoxHelisa\nexport * from './lib/components/combo-box-helisa/combo-box-helisa.component';\nexport * from './lib/components/combo-box-helisa/interface/combo-box-listable';\nexport * from './lib/components/combo-box-helisa/interface/combo-box-editable';\n\n// PagingTreeHelisa\nexport * from './lib/components/paging-tree-helisa/paging-tree-helisa.component';\n\n// AlertInformationDataHelisa\nexport * from './lib/components/alert-information-data-helisa/alert-information-data-helisa.component';\nexport * from './lib/components/alert-information-data-helisa/alert-information-data-helisa.service';\nexport * from './lib/components/alert-information-data-helisa/alert-information-helisa-type.enum';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n\nexport {ExternalLinkDirective as ɵa} from './lib/directives/external-link.directive';\nexport {ExternalLinkPipe as ɵb} from './lib/pipes/external-link.pipe';"]}