{"version":3,"file":"helisa-lib.umd.js","sources":["../esm2015/projects/helisa-lib/src/lib/components/input-with-button/input-with-button.component.ts","../esm2015/projects/helisa-lib/src/lib/components/toast-helisa/toast-helisa.component.ts","../esm2015/projects/helisa-lib/src/lib/components/toast-helisa/toast-helisa.service.ts","../esm2015/projects/helisa-lib/src/lib/components/toast-helisa/toast-type.enum.ts","../esm2015/projects/helisa-lib/src/lib/components/alert-helisa/alert-helisa-type.enum.ts","../esm2015/projects/helisa-lib/src/lib/components/alert-helisa/alert-helisa.component.ts","../esm2015/projects/helisa-lib/src/lib/components/alert-helisa/alert-helisa.service.ts","../../../node_modules/tslib/tslib.es6.js","../esm2015/projects/helisa-lib/src/lib/components/dependency-table-helisa/dependency-table-helisa.service.ts","../esm2015/projects/helisa-lib/src/lib/components/table-helisa/table-helisa.service.ts","../esm2015/projects/helisa-lib/src/lib/components/dependency-table-helisa/dependency-table-helisa.component.ts","../esm2015/projects/helisa-lib/src/lib/components/input-helisa/input-helisa.component.ts","../esm2015/projects/helisa-lib/src/lib/components/table-helisa/table-helisa.interface.ts","../esm2015/projects/helisa-lib/src/lib/components/table-helisa/table-helisa-connect.component.ts","../esm2015/projects/helisa-lib/src/lib/components/table-helisa/table-helisa.component.ts","../esm2015/projects/helisa-lib/src/lib/components/date-helisa/date-helisa.component.ts","../esm2015/projects/helisa-lib/src/lib/components/tree-helisa/tree-helisa.service.ts","../esm2015/projects/helisa-lib/src/lib/components/tree-helisa/tree-helisa-connect.ts","../esm2015/projects/helisa-lib/src/lib/components/tree-helisa/tree-helisa.component.ts","../esm2015/projects/helisa-lib/src/lib/components/autocomplete-helisa/autocomplete-helisa.component.service.ts","../esm2015/projects/helisa-lib/src/lib/components/autocomplete-helisa/autocomplete-helisa.component.ts","../projects/helisa-lib/src/lib/directives/options-scroll.directive.ts","../projects/helisa-lib/src/lib/directives/tooltip.directive.ts","../projects/helisa-lib/src/lib/directives/external-link.directive.ts","../projects/helisa-lib/src/lib/pipes/external-link.pipe.ts","../esm2015/projects/helisa-lib/src/lib/components/combo-box-helisa/combo-box-helisa.component.ts","../esm2015/projects/helisa-lib/src/lib/components/paging-tree-helisa/paging-tree-helisa.component.ts","../esm2015/projects/helisa-lib/src/lib/components/alert-information-data-helisa/alert-information-helisa-type.enum.ts","../esm2015/projects/helisa-lib/src/lib/components/alert-information-data-helisa/alert-information-data-helisa.component.ts","../../projects/helisa-lib/src/lib/helisa-lib.module.ts","../esm2015/projects/helisa-lib/src/lib/components/alert-information-data-helisa/alert-information-data-helisa.service.ts","../../../projects/helisa-lib/src/public-api.ts","../../../projects/helisa-lib/src/helisa-lib.ts"],"sourcesContent":["import { Component, OnInit, Input, Output, EventEmitter, ViewChild, ElementRef } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'hel-input-with-button',\n  templateUrl: './input-with-button.component.html',\n  styleUrls: ['./input-with-button.component.sass']\n})\nexport class InputWithButtonComponent implements OnInit {\n\n  @Input() placeholder: string = '';\n  @Input() inputFormControl: FormControl = new FormControl('', Validators.required);\n  @Input() requiredMessage: string = 'El campo es requerido';\n  @Input() value: string = '';\n  @Input() isFocused: boolean = false;\n  @ViewChild('inputText', {static: true}) nameField: ElementRef;\n\n  @Output() done: EventEmitter<string> = new EventEmitter<string>();\n  @Output() cancel: EventEmitter<void> = new EventEmitter<void>();\n\n\n  constructor() { }\n\n  ngOnInit(): void {\n    if (this.value !== '') {\n      this.inputFormControl.setValue(this.value);\n    }\n    this.nameField.nativeElement.focus();\n  }\n\n\n  onDone(): void {\n    if (this.inputFormControl.valid) {\n      this.done.emit(this.inputFormControl.value);\n    }\n  }\n\n  onCancel(): void {\n    this.cancel.emit();\n  }\n\n}\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_SNACK_BAR_DATA } from '@angular/material/snack-bar';\nimport { ToastType } from './toast-type.enum';\n\n// @dynamic\n@Component({\n  selector: 'hel-toast',\n  templateUrl: './toast-helisa.component.html',\n  styleUrls: ['./toast-helisa.component.sass']\n})\nexport class ToastHelisaComponent implements OnInit {\n\n  constructor(@Inject(MAT_SNACK_BAR_DATA) public data: {type: ToastType, message: string, subMessages?: string[]}) { }\n\n  ngOnInit(): void {}\n\n}\n","import { Injectable } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { ToastType } from './toast-type.enum';\nimport { ToastHelisaComponent } from './toast-helisa.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ToastHelisaService {\n\n  durationInSeconds: number = 5;\n\n  constructor(private snackBar: MatSnackBar) { }\n\n  showToast(type: ToastType, message: string, subMessages?: string[]): void {\n    subMessages = subMessages ? subMessages : [];\n    this.snackBar.openFromComponent(ToastHelisaComponent, {\n      data: {message, type, subMessages},\n      duration: this.durationInSeconds * 1000\n    });\n  }\n}\n","export enum ToastType {\n    DONE = 'done',\n    ERROR = 'error',\n    INFO = 'info'\n}\n","export enum AlertHelisaType {\n    ERROR = 'ERROR',\n    CONFIRMATION = 'CONFIRMATION'\n}\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { AlertHelisaType } from './alert-helisa-type.enum';\n\ninterface AlertHelisaProperties {\n  title: string;\n  content: string;\n  type: AlertHelisaType;\n  okLabel: string;\n  cancelLabel: string;\n}\n\n@Component({\n  selector: 'hel-alert',\n  templateUrl: './alert-helisa.component.html',\n  styleUrls: ['./alert-helisa.component.sass']\n})\nexport class AlertHelisaComponent implements OnInit {\n\n  content: string;\n  title: string;\n  hasCancel: boolean;\n  okLabel: string;\n  cancelLabel: string;\n\n  constructor(\n    public dialogRef: MatDialogRef<AlertHelisaComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: AlertHelisaProperties\n  ) {\n    this.content = data.content;\n    this.title = data.title;\n    this.okLabel = data.okLabel;\n    if (this.okLabel === undefined) {\n      this.okLabel = 'aceptar';\n    }\n    this.cancelLabel = data.cancelLabel;\n    if (this.cancelLabel === undefined) {\n      this.cancelLabel = 'cancelar';\n    }\n    this.hasCancel = data.type === AlertHelisaType.CONFIRMATION;\n    dialogRef.disableClose = true;\n    dialogRef.keydownEvents().subscribe((event: KeyboardEvent): void => {\n      if (event.code === 'Escape') {\n        this.dialogRef.close(this.onCancel());\n      }\n    });\n  }\n\n  ngOnInit(): void {\n  }\n\n  onCancel(): void {\n    this.dialogRef.close();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { Observable } from 'rxjs';\nimport { AlertHelisaType } from './alert-helisa-type.enum';\nimport { AlertHelisaComponent } from './alert-helisa.component';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AlertHelisaService {\n\n  constructor(public dialog: MatDialog) { }\n\n  openDialog(type: AlertHelisaType, title: string, content: string, okLabel?: string, cancelLabel?: string): Observable<boolean> {\n    const dialogRef: MatDialogRef<AlertHelisaComponent> = this.dialog.open(AlertHelisaComponent, {\n      width: '250px',\n      data: { title, content, type, okLabel, cancelLabel }\n    });\n\n    return dialogRef.afterClosed();\n  }\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { Observable, Subject, BehaviorSubject } from 'rxjs';\nimport {ColumnConfig, AddRowButton, ConfigRowStyles, TotalTableHelisa} from '../table-helisa/table-helisa.interface';\nimport { EventDependency} from './dependency-table-helisa.component';\n\nexport interface ConfigTable<T> {\n  columns: Array<ColumnConfig>;\n  isRemote: boolean;\n  dataSource?: Array<T>;\n  count?: number;\n  order?: number;\n  showTitle?: boolean;\n  indexRowSelect?: number;\n  isDragged?: boolean;\n  addRowButton?: AddRowButton;\n  configRowStylesFromColumn?: Array<ConfigRowStyles<T>>;\n  configColumnClass?: Array<string>,\n  isCellSelection?: boolean;\n  addBookButton?: boolean;\n}\n\n@Injectable()\nexport class DependencyTableHelisaService<T> {\n\n\n  tables: Subject<ConfigTable<T>[]> = new Subject();\n  infoTables: Array<ConfigTable<T>> = new Array();\n\n  private emitVisibilityButton$: Subject<EventDependency<boolean>> = new Subject<EventDependency<boolean>>();\n  emitVisibilityButton: Observable<EventDependency<boolean>> = this.emitVisibilityButton$.asObservable();\n\n  private emitVisibilityAllButtons$: Subject<boolean> = new Subject<boolean>();\n  emitVisibilityAllButtons: Observable<boolean> = this.emitVisibilityAllButtons$.asObservable();\n\n  private emitIsCellSelection$: Subject<EventDependency<boolean>> = new Subject<EventDependency<boolean>>();\n  emitIsCellSelection: Observable<EventDependency<boolean>> = this.emitIsCellSelection$.asObservable();\n\n  private emitChangeColumns$: Subject<EventDependency<ColumnConfig[]>> = new Subject<EventDependency<ColumnConfig[]>>();\n  emitChangeColumns: Observable<EventDependency<ColumnConfig[]>> = this.emitChangeColumns$.asObservable();\n\n  emitTotal: Subject<EventDependency<TotalTableHelisa>> = new Subject<EventDependency<TotalTableHelisa>>();\n  emitNextPage: Subject<EventDependency<T[]>> = new Subject<EventDependency<T[]>>();\n\n  constructor() { }\n\n  /**\n   * retorna un Observable<ConfigTable[]>\n   */\n  getTables(): Observable<ConfigTable<T>[]> {\n    return this.tables;\n  }\n\n  /**\n   * Actualiza las dependencias, agrendo la tabla que envian en el orden correspondiente o al final.\n   * También remueve las dependecias que hay apartir de la tabla segun se indique en el parametro.\n   * @param configTable Objeto que contiene la configuración para la tabla.\n   * @param withRemoveDependency boolean por defecto es false, si es 'true' indica que remueva las dependencias apartir de el.\n   */\n  updateDependency(configTable: ConfigTable<T>, withRemoveDependency: boolean = false): void {\n    if (withRemoveDependency) {\n      this.infoTables = this.infoTables.slice(0, !configTable.order ? 0 : configTable.order);\n    }\n    if (!configTable.order || configTable.order >= this.infoTables.length) {\n      configTable.order = this.infoTables.length;\n    }\n    this.infoTables[configTable.order] = configTable;\n    if (configTable.isRemote) {\n      configTable.dataSource = null;\n      if (configTable.count === null) {\n        throw new Error('hace falta el count');\n      }\n    } else {\n      if (configTable.dataSource === null) {\n        throw new Error('hace falta el dataSource');\n      }\n      configTable.count = configTable.dataSource.length;\n    }\n    this.tables.next(this.infoTables);\n  }\n\n  /**\n   * Emite un evento de total con la información para la tabla correspondiente\n   * @param event wrapper que contiene el indice de la tabla y la información de la pagina\n   */\n  setTotal(event: EventDependency<TotalTableHelisa>): void {\n    this.emitTotal.next(event);\n  }\n\n  /**\n   * Emite un evento de agregar pagina con la pagina para la tabla correspondiente\n   * @param event wrapper que contiene el indice de la tabla y la información de la pagina\n   */\n  addPage(event: EventDependency<T[]>): void {\n    this.emitNextPage.next(event);\n  }\n\n  selectIndexRow(config: ConfigTable<T>): void {\n    if (this.infoTables[config.order]) {\n      this.infoTables[config.order].indexRowSelect = config.indexRowSelect;\n      this.tables.next(this.infoTables);\n    }\n  }\n\n\n  /**\n   * Muestra o esconde el boton una tabla en especifico\n   * @param event para indicar el index de la tabla y en \"data\" true o false\n   */\n  changeVisibilityButton(event: EventDependency<boolean>): void {\n    this.emitVisibilityButton$.next(event);\n  }\n\n\n  /**\n   * Esconde los botones de todas las tablas\n   * @param show indicar si se muestran o no todos los botones de las tablas\n   */\n  changeVisibilityAllButtons(show: boolean): void {\n    this.emitVisibilityAllButtons$.next(show);\n  }\n\n  /**\n   * Para habilitar el manejo de selección de celda\n   * @param event para indicar el index de la tabla y en \"data\" true o false\n   */\n  changeisCellSelection(event: EventDependency<boolean>): void {\n    this.emitIsCellSelection$.next(event);\n  }\n\n   /**\n    * Para habilitar el cambio de columnas\n    * @param event para indicar el index de la tabla y en \"data\" columnas\n    */\n  changeColumnsByTable( event: EventDependency<ColumnConfig[]>): void {\n    this.emitChangeColumns$.next(event);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport {BehaviorSubject, Observable, Subject} from 'rxjs';\nimport {TotalTableHelisa} from './table-helisa.interface';\nimport {TableHelisaComponent} from './table-helisa.component';\n\nexport interface TableHelisaServiceInfo<T> {\n  obj: T;\n  table?: {} | TableHelisaComponent<T>;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TableHelisaService<T> {\n\n  private emitChangeSource: Subject<TableHelisaServiceInfo<TotalTableHelisa>> = new Subject<TableHelisaServiceInfo<TotalTableHelisa>>();\n  private emitNextPage: Subject<TableHelisaServiceInfo<T[]>> = new Subject<TableHelisaServiceInfo<T[]>>();\n\n  totalReturn: Observable<TableHelisaServiceInfo<TotalTableHelisa>> = this.emitChangeSource.asObservable();\n  nextPageReturn: Observable<TableHelisaServiceInfo<T[]>> = this.emitNextPage.asObservable();\n\n  private emitVisibleButton$: Subject<boolean> = new Subject<boolean>();\n  /**\n   * Observable para saber si se debe mostrar o esconder el boton de add row\n   */\n  emitVisibleButton: Observable<boolean> = this.emitVisibleButton$.asObservable();\n\n  setTotal(total: TotalTableHelisa, table?: TableHelisaComponent<TotalTableHelisa>): void {\n    this.emitChangeSource.next({obj: total, table});\n  }\n\n  addPage(page: T[], table?: TableHelisaComponent<T>): void {\n    this.emitNextPage.next({obj: page, table});\n  }\n\n  /**\n   * para modificar el valor de si se muestra o no el boton de add row de la tabla\n   * @param change indicar si se muestra o no el boton de add row de la tabla\n   */\n  changeVisibilityButton(change: boolean): void {\n    this.emitVisibleButton$.next(change);\n  }\n\n}\n","import {Component, OnInit, EventEmitter, Output, QueryList, ViewChildren, Input} from '@angular/core';\nimport {DependencyTableHelisaService, ConfigTable} from './dependency-table-helisa.service';\nimport {Cell, ColumnConfig, EventColumn, RequestTableHelisa, SelectObject, TotalTableHelisa} from '../table-helisa/table-helisa.interface';\nimport {TableHelisaService} from '../table-helisa/table-helisa.service';\nimport {TableHelisaComponent} from '../table-helisa/table-helisa.component';\n\nexport interface EventDependency<T> {\n  index: number;\n  data: T;\n}\n\n@Component({\n  selector: 'hel-dependency-table',\n  templateUrl: './dependency-table-helisa.component.html',\n  styleUrls: ['./dependency-table-helisa.component.sass'],\n  providers: [DependencyTableHelisaService]\n})\nexport class DependencyTableHelisaComponent<T> implements OnInit {\n\n  tables: Array<ConfigTable<T>> = [];\n  @ViewChildren('viewTables') viewTables: QueryList<TableHelisaComponent<T>>;\n  @Input() showToolTip: boolean = true;\n\n  /**\n   * deprecated, use selectObject\n   */\n  @Output() selected: EventEmitter<EventDependency<T>> = new EventEmitter<EventDependency<T>>();\n  @Output() selectObject: EventEmitter<EventDependency<{} | T>> = new EventEmitter<EventDependency<{} | T>>();\n  @Output() nextPage: EventEmitter<EventDependency<{} | T>> = new EventEmitter<EventDependency<{} | T>>();\n  @Output() total: EventEmitter<EventDependency<{} | T>> = new EventEmitter<EventDependency<{}>>();\n  @Output() sort: EventEmitter<EventDependency<{} | T>> = new EventEmitter<EventDependency<{}>>();\n  @Output() drop: EventEmitter<EventDependency<{} | T>> = new EventEmitter<EventDependency<{}>>();\n  @Output() addRow: EventEmitter<number> = new EventEmitter<number>();\n  @Output() selectCell: EventEmitter<EventDependency<{} | T>> = new EventEmitter<EventDependency<{} | T>>();\n  @Output() bookClicked: EventEmitter<EventDependency<{} | T>> = new EventEmitter<EventDependency<{} | T>>();\n  selectedObject: EventDependency<{}> = null;\n\n\n  /**\n   * Tiempo antes de ocultarla el mensaje del tooltip\n   */\n  @Input() hideDelay: number = 600;\n\n  /**\n   * Tiempo antes de mostra el mensaje del tooltip\n   */\n  @Input() showDelay: number = 500;\n\n\n  constructor(private dependencyTableHelisaService: DependencyTableHelisaService<T>, private tableService: TableHelisaService<T>) {\n  }\n\n  ngOnInit(): void {\n    this.getTables();\n    this.dependencyTableHelisaService.emitNextPage.subscribe(\n      (event: EventDependency<T[]>): void => {\n        this.tableService.addPage(event.data, this.viewTables.toArray()[event.index]);\n      }\n    );\n\n    this.dependencyTableHelisaService.emitTotal.subscribe(\n      (event: EventDependency<TotalTableHelisa>): void => {\n        this.tableService.setTotal(event.data, this.viewTables[event.index]);\n      }\n    );\n\n    // Observable para mostrar o esconder el boton de una tabla\n    this.dependencyTableHelisaService.emitVisibilityButton.subscribe(\n      (data: EventDependency<boolean>): void => {\n        if (!!data && data.index !== undefined) {\n          const table: ConfigTable<T> = this.tables[data.index];\n          if (!!table) {\n            table.addRowButton.showButton = data.data;\n          }\n        }\n      }\n    );\n\n    // Observable para mostrar o esconder los botones de todas las tablas\n    this.dependencyTableHelisaService.emitVisibilityAllButtons.subscribe(\n      (data: boolean): void => {\n        if (data !== undefined && data != null) {\n          this.tables.forEach((element: ConfigTable<T>): void => {\n            if (!!element.addRowButton) {\n              element.addRowButton.showButton = data;\n            }\n          });\n        }\n      }\n    );\n\n    // Observable para manejo de selección de celdas\n    this.dependencyTableHelisaService.emitIsCellSelection.subscribe(\n      (data: EventDependency<boolean>): void => {\n        if (!!data && data.index !== undefined) {\n          const table: ConfigTable<T> = this.tables[data.index];\n          if (table) {\n            table.isCellSelection = data.data;\n          }\n        }\n      });\n\n    // Observable para manejo de columnas\n    this.dependencyTableHelisaService.emitChangeColumns.subscribe(\n      (data: EventDependency<ColumnConfig[]>): void => {\n        if (!!data && data.index !== undefined) {\n          const table: ConfigTable<T> = this.tables[data.index];\n          if (table) {\n            table.columns = data.data;\n          }\n        }\n      });\n  }\n\n  /**\n   * retorna el servicio que gestiona el componente.\n   */\n  getService(): DependencyTableHelisaService<T> {\n    return this.dependencyTableHelisaService;\n  }\n\n  /**\n   * Obtiene un observable con las tablas dependientes desde el servicio.\n   */\n  getTables(): void {\n    this.dependencyTableHelisaService.getTables()\n      .subscribe((tables: ConfigTable<T>[]): void => {\n          this.tables.splice(0, this.tables.length, ...tables);\n          this.viewTables.forEach((item: TableHelisaComponent<T>): void => {\n            item.reload();\n          });\n        }\n      );\n  }\n\n  /**\n   * Evento que se dispara desde una tabla, emitiendo un nuevo evento con el inidice de la tabla que dispara el evento y el evento generado.\n   * @param index indica el indice de la tabla seleccionada\n   * @param data retorna la fila que fue seleccionada\n   */\n  onSelectedDependency(index: number, event: SelectObject<T>): void {\n    this.selectedObject = {index, data: event};\n    this.selected.emit({index, data: event.value});\n    this.selectObject.emit({index, data: event});\n  }\n\n  /**\n   * Evento que se dispara desde una tabla, emitiendo un nuevo evento con el inidice de la tabla que dispara el evento y el evento generado.\n   * @param index indica el indice de la tabla que genera el evento\n   * @param event evento generado desde la tabla\n   */\n  onNextPage(index: number, event: RequestTableHelisa<T>): void {\n    this.nextPage.emit({index, data: event});\n  }\n\n  /**\n   * Evento que se dispara desde una tabla, emitiendo un nuevo evento con el inidice de la tabla que dispara el evento y el evento generado.\n   * @param index indica el indice de la tabla que genera el evento\n   * @param event evento generado desde la tabla\n   */\n  onTotal(index: number, event: EventColumn): void {\n    this.total.emit({index, data: event});\n  }\n\n  /**\n   * Evento que se dispara desde una tabla, emitiendo un nuevo evento con el inidice de la tabla que dispara el evento y el evento generado.\n   * @param index indica el indice de la tabla que genera el evento\n   * @param event evento generado desde la tabla\n   */\n  onSort(index: number, event: EventColumn): void {\n    this.sort.emit({index, data: event});\n  }\n\n  /**\n   * Evento que se dispara desde una tabla, emitiendo un nuevo evento con el inidice de la tabla que dispara el evento y el evento generado.\n   * @param index indica el indice de la tabla que genera el evento\n   * @param event evento generado desde la tabla\n   */\n  onDrop(index: number, event: EventDependency<T>): void {\n    this.drop.emit({index, data: event});\n  }\n\n  /**\n   * Evento que se dispara desde una tabla, emite el indice de la tabla al cual se le debe añadir una nueva fila\n   * @param index indica el indice de la tabla de la cual se dispara el evento\n   */\n  onAddRow(index: number): void {\n    this.addRow.emit(index);\n  }\n\n  selectedCell(index: number, event: Cell<T>): void {\n    if (this.tables[index].isCellSelection) {\n      this.selectCell.emit({index, data: event});\n    }\n  }\n\n  onBookClicked(index: number, event: EventDependency<T>): void {\n    this.bookClicked.emit({index, data: event});\n  }\n}\n","import { Component, EventEmitter, Input, OnInit, Output, ViewChild, ElementRef, AfterViewInit } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\nexport enum InputHelisaType {\n  DEFAULT, IDENTITY, NUMERIC, DOUBLE, POSITIVEORNEGATIVEDOUBLE, PHONE\n}\n\n@Component({\n  selector: 'hel-input',\n  templateUrl: './input-helisa.component.html',\n  styleUrls: ['./input-helisa.component.sass']\n})\nexport class InputHelisaComponent implements OnInit, AfterViewInit {\n\n  private readonly DECIMAL_SEPARATOR: string = '.';\n  private readonly THOUSAND_SEPARATOR: string = ',';\n  private readonly NEGATIVE_SIGN: string = '-';\n\n  @Input() placeholder: string = '';\n  @Input() floatLabel: 'never' | 'always' | 'auto' = 'never';\n  @Input() minlength: number;\n  @Input() maxlength: number;\n\n  /** Activar o desactivar el autocompletado\n   * (Caracteristica de los navegadores para campos comunes como\n   * Direccion , Usuario, Password ... etc)\n   */\n  @Input() autocompleteMode: boolean = false;\n\n  // Mostrar o no el icono de buscar\n  @Input() isSearch: boolean = false;\n  // @Input() inputFormControl: FormControl = new FormControl('');\n  @Input() isFocused: boolean = false;\n\n  /**\n   * Deprecated\n   */\n  @Input() disabled: boolean = false;\n  @Input() type: InputHelisaType = InputHelisaType.DEFAULT;\n\n  /**\n   * Deprecated\n   */\n  @Output() setValue: EventEmitter<string> = new EventEmitter<string>();\n\n  // tslint:disable-next-line:no-any\n  @Output() blur: EventEmitter<any> = new EventEmitter();\n\n  formControlMask: FormControl = new FormControl('');\n  private realValue: string = '';\n  private inputFormReal: FormControl = new FormControl('');\n\n  @ViewChild('inputText', {static: true}) inputText: ElementRef;\n\n  constructor() {\n  }\n\n  @Input()\n  set inputFormControl(formControl: FormControl) {\n    this.inputFormReal = formControl;\n    this.inputFormReal.registerOnDisabledChange(((isDisabled: boolean): void => {\n      if (isDisabled) {\n        this.formControlMask.disable();\n      } else {\n        this.formControlMask.enable();\n      }\n    }));\n    this.inputFormReal.valueChanges.subscribe((data: string): void => {\n      this.statusChange(this.inputFormReal.status);\n      if (this.getMaskedValue(data) !== this.formControlMask.value) {\n        this.change(data);\n        if (this.isFocused) {\n          this.onFocus(null);\n        }\n      }\n    });\n    this.formControlMask.setValidators(this.inputFormReal.validator);\n    this.change(this.inputFormReal.value);\n    // disable control\n    if (formControl.disabled) {\n      this.formControlMask.disable({ onlySelf: true });\n    }\n    this.inputFormReal.statusChanges.subscribe(\n      (data: string): void => {\n        this.statusChange(data);\n        if (this.isFocused) {\n          this.onFocus(null);\n        }\n      }\n    );\n  }\n\n\n  private statusChange(data: string): void {\n    if (data === 'INVALID') {\n      this.formControlMask.setErrors({ key: 'Error de validación.' });\n      this.formControlMask.markAsTouched();\n    } else {\n      this.formControlMask.setErrors(null);\n    }\n  }\n\n  ngOnInit(): void {\n    if (this.isFocused) {\n      this.inputText.nativeElement.focus();\n    }\n  }\n\n  ngAfterViewInit(): void {\n    // this.isParentDisabled();\n  }\n\n  /*isParentDisabled(): void {\n    setTimeout(() => {\n      if (this.nameInput.nativeElement.closest('.hw-disabled-mode')) {\n        this.disabled = true;\n      } else {\n        this.disabled = false;\n      }\n    });\n  }*/\n\n  search(): void {\n    this.setValue.emit(this.realValue);\n  }\n\n  change(event: string): void {\n    if (event != null) {\n      event = event + '';\n    }\n    let position: number = this.inputText.nativeElement.selectionStart;\n    const length: number = event ? event.length : 0;\n    this.realValue = this.getRealValue(event);\n    if (this.getMaskedValue(this.realValue) !== this.formControlMask.value) {\n      this.formControlMask.setValue(this.getMaskedValue(this.realValue));\n      position += this.inputText.nativeElement.value.length - length;\n      this.inputText.nativeElement.selectionStart = position;\n      this.inputText.nativeElement.selectionEnd = position;\n    }\n    this.inputFormReal.setValue(this.realValue);\n  }\n\n  private getMaskedValue(str: string): string {\n    if (str == null) {\n      return str;\n    }\n    str = str + '';\n    if (this.type === InputHelisaType.DEFAULT || this.type === InputHelisaType.PHONE) {\n      return str;\n    }\n    let maskedStr: string = '';\n    if (this.type === InputHelisaType.IDENTITY) {\n      for (let i: number = str.length - 1, j: number = 0; i >= 0; i--, j++) {\n        if (j > 0 && j % 3 === 0) {\n          maskedStr = this.DECIMAL_SEPARATOR + maskedStr;\n        }\n        maskedStr = str[i] + maskedStr;\n      }\n    }\n    if (this.type === InputHelisaType.NUMERIC) {\n      for (let i: number = str.length - 1, j: number = 0; i >= 0; i--, j++) {\n        if (j > 0 && j % 3 === 0) {\n          maskedStr = this.THOUSAND_SEPARATOR + maskedStr;\n        }\n        maskedStr = str[i] + maskedStr;\n      }\n    }\n    if (this.type === InputHelisaType.DOUBLE) {\n      maskedStr = this.getMaskedValueDouble(str);\n    }\n    if (this.type === InputHelisaType.POSITIVEORNEGATIVEDOUBLE) {\n      const isNegativeValue: boolean = str.indexOf(this.NEGATIVE_SIGN) === 0;\n      const newStr: string = isNegativeValue ? str.replace(this.NEGATIVE_SIGN, '') : str;\n      maskedStr = this.getMaskedValueDouble(newStr);\n      if (isNegativeValue) {\n        maskedStr = this.NEGATIVE_SIGN + maskedStr;\n      }\n    }\n    return maskedStr;\n  }\n\n  private getMaskedValueDouble(str: string): string {\n    let maskedStr: string = '';\n    if (str.indexOf(this.DECIMAL_SEPARATOR) >= 0) {\n      for (let i: number = str.indexOf(this.DECIMAL_SEPARATOR); i < str.length; i++) {\n        maskedStr += str[i];\n      }\n    }\n    for (let i: number = (str.indexOf(this.DECIMAL_SEPARATOR) >= 0 ? str.indexOf(this.DECIMAL_SEPARATOR) : str.length) - 1,\n      j: number = 0; i >= 0; i--, j++) {\n\n      if (j > 0 && j % 3 === 0) {\n        maskedStr = this.THOUSAND_SEPARATOR + maskedStr;\n      }\n      maskedStr = str[i] + maskedStr;\n    }\n    return maskedStr;\n  }\n\n  private getRealValue(str: string): string {\n    if (str == null) {\n      return str;\n    }\n    str = str + '';\n    let realStr: string = '';\n    if (this.type === InputHelisaType.DEFAULT) {\n      return str;\n    }\n    if (this.type === InputHelisaType.IDENTITY || this.type === InputHelisaType.NUMERIC || this.type === InputHelisaType.PHONE) {\n      for (const strItem of str) {\n        if (strItem.match('[0-9]')) {\n          realStr += strItem;\n        }\n      }\n    }\n    if (this.type === InputHelisaType.DOUBLE) {\n      realStr = this.getRealValueDouble(str);\n    }\n    if (this.type === InputHelisaType.POSITIVEORNEGATIVEDOUBLE) {\n      const isNegativeValue: boolean = str.indexOf(this.NEGATIVE_SIGN) === 0;\n      const newStr: string = isNegativeValue ? str.replace(this.NEGATIVE_SIGN, '') : str;\n      realStr = this.getRealValueDouble(newStr)\n      if (isNegativeValue) {\n        realStr = this.NEGATIVE_SIGN + realStr;\n      } \n    }\n    return realStr;\n  }\n\n  getRealValueDouble(str: string): string {\n    let realStr: string = '';\n    let haveDot: boolean = false;\n\n      for (const strItem of str) {\n        if (strItem.match('[0-9]') || ((strItem === this.DECIMAL_SEPARATOR) && !haveDot)) {\n          realStr += strItem;\n        }\n        haveDot = haveDot || (strItem === this.DECIMAL_SEPARATOR);\n      }\n    return realStr;\n  }\n\n  onFocus($event: FocusEvent): void {\n    if ((this.type === InputHelisaType.NUMERIC || this.type === InputHelisaType.DOUBLE || this.type === InputHelisaType.POSITIVEORNEGATIVEDOUBLE) &&\n      Number(this.getRealValue(this.inputText.nativeElement.value)) === 0) {\n      this.inputText.nativeElement.select();\n    }\n  }\n}\n","import { SortDirection } from '@angular/material/sort';\nimport { RowData } from './table-helisa.component';\n\nexport enum ColumnType {\n  NORMAL, URL\n}\n\nexport interface ColumnConfig {\n  name: string;\n  title?: string;\n  visible?: boolean;\n  sortable?: boolean;\n  groupable?: boolean;\n  totalType?: TotalType;\n  searchable?: boolean;\n  sortDirection?: SortDirection;\n  subtitle?: string;\n  colspanTitle?: number;\n  colspanSubtitle?: number;\n  columnStyle?: string;\n  columnType?: ColumnType;\n  isSelectable?: boolean;\n}\n\nexport interface AddRowButton {\n  text: string;\n  showButton: boolean;\n}\n\nexport enum EventScope {\n  USER, CODE_CALL\n}\n\nexport enum TotalType {\n  SUM, AVERAGE, COUNT\n}\n\nexport enum ChangeColumnConfigurationType {\n  SORT, UNKNOWN, TOTAL\n}\n\nexport interface EventColumn {\n  column: ColumnConfig;\n  columnConfigurations: Array<ColumnConfig>;\n  type: ChangeColumnConfigurationType;\n}\n\nexport interface TotalTableHelisa {\n  column: ColumnConfig;\n  value: number;\n}\n\nexport interface TotalGroup {\n  sum: number;\n  count: number;\n}\n\nexport interface EventSearch {\n  text: string;\n  columnConfigurations: Array<ColumnConfig>;\n}\n\nexport interface RequestTableHelisa<T> {\n  page: number;\n  body: {} | T;\n}\n\nexport interface DropElement<T> {\n value: T;\n order: number;\n}\n\nexport interface SelectObject<T> {\n  value: T;\n  scope: EventScope;\n}\n\nexport enum TableHelisaType {\n  REMOTE, LOCAL\n}\n\n\nexport interface Cell<T> {\n  column: ColumnConfig;\n  row: RowData<T> | T;\n }\n\nexport interface ConfigCellStyles<T> {\n   cellData: T;\n   classCell: string;\n }\n\nexport interface ConfigRowStyles<T> {\n  column: ColumnConfig;\n  data: {} | T;\n  classRow: string;\n}\n\n// @dynamic\nexport class ColumnConfigUtil<T> {\n\n  getValue(obj: T, column: ColumnConfig): T | number | string {\n    return column.name.split('.').reduce((o: T, field: string): T | string => o && o[field], obj);\n  }\n}\n\n","import {ColumnConfig} from './table-helisa.interface';\nimport {Observable} from 'rxjs';\n\n\nexport class TableHelisaConnectComponent<T> {\n  page: number;\n  isLastPage: boolean;\n  isUsed: boolean;\n\n  constructor() {\n    this.page = 0;\n    this.isLastPage = false;\n    this.isUsed = false;\n  }\n\n  public getBody(columnConfig: Array<ColumnConfig>, search: string): {} {\n    return {};\n  }\n\n  nextPage(): number {\n    return this.page++;\n  }\n}\n","import {AfterViewInit, Component, EventEmitter, Input, OnInit, Output, ViewChild, ElementRef, DoCheck} from '@angular/core';\nimport {MatSort, Sort} from '@angular/material/sort';\nimport { MatTable, MatTableDataSource } from '@angular/material/table';\n\nimport {\n  AddRowButton,\n  Cell,\n  ChangeColumnConfigurationType,\n  ColumnConfig,\n  ColumnConfigUtil,\n  ConfigCellStyles,\n  ConfigRowStyles,\n  DropElement,\n  EventColumn,\n  EventScope,\n  EventSearch,\n  RequestTableHelisa,\n  SelectObject,\n  TableHelisaType,\n  TotalGroup,\n  TotalType,\n  ColumnType,\n  TotalTableHelisa\n} from './table-helisa.interface';\nimport { TableHelisaService, TableHelisaServiceInfo } from './table-helisa.service';\nimport { TableHelisaConnectComponent } from './table-helisa-connect.component';\nimport { moveItemInArray } from '@angular/cdk/drag-drop';\n\nexport interface RowData<T> {\n  data: {} | T;\n  rowType: RowType;\n}\n\nenum RowType {\n  GROUP_TITLE, GROUP_FOOTER, ROW\n}\n\n\n\n@Component({\n  selector: 'hel-table',\n  templateUrl: './table-helisa.component.html',\n  styleUrls: ['./table-helisa.component.sass']\n})\nexport class TableHelisaComponent<T> implements OnInit, AfterViewInit {\n\n  private tableHelisaConnectComponent: TableHelisaConnectComponent<T>;\n  totalData: Array<number>;\n  rawData: Array<T>;\n  data: MatTableDataSource<RowData<T>> = new MatTableDataSource<RowData<T>>([]);\n  displayedColumns: string[] = [];\n  displayedColumnsWithTitle: string[] = [];\n  displayedColumnsWithSubtitle: string[] = [];\n  displayedColumnsWithFooter: string[] = [];\n  columnConfig: Array<ColumnConfig>;\n  selectedObject: T;\n  lastSearch: string;\n  type: TableHelisaType = TableHelisaType.LOCAL;\n  indexRowSelect: number;\n  private scrollCount: number = 0;\n  hasSubtitle: boolean = false;\n  private indexRowStartDrag: number = -1;\n  private lastIndexRowDrag: number = -1;\n  private dataBeforeDrag: { data: RowData<T>[] } = null;\n  private dataSource$: Array<T> = [];\n  private scrollX: number = 0;\n  private scrollY: number = 0;\n\n  @ViewChild(MatSort, {static: true}) matSort: MatSort;\n  @ViewChild(MatTable, {static: true}) matTable: MatTable<T>;\n  @ViewChild(MatTable, { read: ElementRef, static: true }) matTableElement: ElementRef;\n  @ViewChild('containerTable', {static: true}) containerTable: ElementRef;\n\n  @Output() sort: EventEmitter<EventColumn> = new EventEmitter<EventColumn>();\n  @Output() total: EventEmitter<EventColumn> = new EventEmitter<EventColumn>();\n  @Output() search: EventEmitter<EventSearch> = new EventEmitter<EventSearch>();\n\n  /**\n   * Deprecado, cambiar por electObject\n   */\n  @Output() select: EventEmitter<T> = new EventEmitter<T>();\n  @Output() selectCell: EventEmitter<Cell<T>> = new EventEmitter<Cell<T>>();\n  @Output() selectObject: EventEmitter<SelectObject<T>> = new EventEmitter<SelectObject<T>>();\n  @Output() nextPage: EventEmitter<RequestTableHelisa<T>> = new EventEmitter<RequestTableHelisa<T>>();\n  @Input() showTitle: boolean = true;\n  @Input() isCellSelection: boolean = false;\n  @Input() count: number;\n  @Input() configCellStyles: Array<ConfigCellStyles<T>>;\n  @Input() configRowStylesFromColumn: Array<ConfigRowStyles<T>>;\n  @Input() configColumnClass: Array<string>;\n  @Input() selectedCells: Cell<T>;\n  @Output() drop: EventEmitter<DropElement<T>> = new EventEmitter<DropElement<T>>();\n  @Input() isDragged: boolean = false;\n  @Input() addRowButton: AddRowButton = { showButton: false, text: '' };\n  @Output() addRow: EventEmitter<void> = new EventEmitter<void>();\n  @Output() bookClicked: EventEmitter<T> = new EventEmitter<T>();\n  @Input() addBookButton: boolean = false;\n  @Input() showToolTip: boolean = true;\n  showFooter: boolean = false;\n  showSearch: boolean = false;\n\n\n\n  /**\n   * Tiempo antes de ocultarla el mensaje del tooltip\n   */\n  @Input() hideDelay: number = 600;\n\n  /**\n   * Tiempo antes de mostra el mensaje del tooltip\n   */\n  @Input() showDelay: number = 500;\n\n\n  constructor(private tableService: TableHelisaService<T>) { }\n\n  ngOnInit(): void {\n    this.reloadColumnConfig();\n    this.tableService.nextPageReturn.subscribe(\n      (data: TableHelisaServiceInfo<T[]>): void => {\n        if (!data.table || data.table === this) {\n          this.receivePage(data.obj);\n        }\n      }\n    );\n    this.tableService.totalReturn.subscribe((info: TableHelisaServiceInfo<TotalTableHelisa>): void => {\n      if (info) {\n        this.columnConfig.forEach((column: ColumnConfig, idx: number): void => {\n          if (column === info.obj.column) {\n            this.totalData[idx] = this.getGroupValue(column, { sum: info.obj.value, count: this.count });\n          }\n        });\n      }\n    });\n    this.matSort.sortChange.subscribe(\n      (event: Sort): void => {\n        const column: ColumnConfig = this.columnConfig.find((c: ColumnConfig): boolean => c.name === event.active);\n        column.sortDirection = event.direction;\n        this.sort.emit({ column, columnConfigurations: this.columnConfig, type: ChangeColumnConfigurationType.SORT });\n      }\n    );\n\n    this.tableService.emitVisibleButton.subscribe(\n      (data: boolean): void => {\n        if (data !== undefined && data != null) {\n          this.addRowButton.showButton = data;\n        }\n      }\n    );\n    this.reload();\n  }\n\n  ngAfterViewInit(): void {\n    if (this.isCellSelection) {\n      this.matTable.renderRows();\n    }\n  }\n\n  @Input()\n  set isRemote(w: boolean) {\n    this.type = w ? TableHelisaType.REMOTE : TableHelisaType.LOCAL;\n    this.tableHelisaConnectComponent = new TableHelisaConnectComponent<T>();\n    if (this.type === TableHelisaType.REMOTE) {\n      this.goNextPage();\n    } else {\n      this.tableHelisaConnectComponent.page++;\n    }\n  }\n\n  @Input()\n  set columnConfiguration(columnConfiguration: Array<ColumnConfig>) {\n    this.columnConfig = columnConfiguration;\n    this.reload();\n    this.reloadColumnConfig();\n  }\n\n  @Input()\n  set dataSource(dataSource: Array<T>) {\n    this.dataSource$ = dataSource;\n    this.rawData = dataSource;\n    this.reload();\n  }\n\n  get dataSource(): Array<T> {\n    return this.dataSource$;\n  }\n\n  @Input()\n  set selectedIndexRow(idRowSelected: number) {\n    this.indexRowSelect = idRowSelected;\n    if (this.rawData && this.rawData.length) {\n      if ((idRowSelected >= this.rawData.length || idRowSelected < 0)) {\n        this.indexRowSelect = 0;\n      }\n      this.selectRow({ data: this.rawData[this.indexRowSelect], rowType: RowType.ROW }, false);\n    }\n  }\n\n  private reloadColumnConfig(): void {\n    this.hasSubtitle = false;\n    this.displayedColumns.splice(0, this.displayedColumns.length);\n\n    if (this.columnConfig) {\n      if (this.addBookButton) {\n        const columnCount: number = this.columnConfig.length;\n        let countSubtitle: number = 0;\n        let showBookButton: boolean = false;\n        this.columnConfig.forEach((column: ColumnConfig): void => {\n          if (!!column.subtitle) {\n            countSubtitle = countSubtitle + 1;\n          }\n          if ((!showBookButton) && (column.name === 'bookButton')) {\n            showBookButton = true;\n          }\n        });\n        const subtitleTemp: boolean = columnCount === countSubtitle;\n        if (!showBookButton) {\n          this.columnConfig.push({\n            name: 'bookButton',\n            title: '',\n            subtitle: subtitleTemp ? '' : undefined ,\n            visible: true\n          });\n        }\n      }\n      this.columnConfig.forEach((column: ColumnConfig): void => {\n        if (column.visible) {\n          this.displayedColumns.push(column.name);\n        }\n        if (!this.hasSubtitle) {\n          this.hasSubtitle = column.subtitle !== undefined;\n        }\n      });\n      if (this.rawData) {\n        this.dataSource = this.rawData;\n      }\n    }\n    this.displayedColumnsWithTitle.splice(0, this.displayedColumnsWithTitle.length);\n    this.displayedColumnsWithSubtitle.splice(0, this.displayedColumnsWithSubtitle.length);\n    this.displayedColumnsWithFooter.splice(0, this.displayedColumnsWithFooter.length);\n    this.getColumnsWithTitle().forEach((col: string): number => this.displayedColumnsWithTitle.push(col));\n    this.getHeaderSubtitle().forEach((col: string): number => this.displayedColumnsWithSubtitle.push(col));\n    this.footerDisplayedColumns().forEach((col: string): number => this.displayedColumnsWithFooter.push(col));\n  }\n\n  public reload(): void {\n    if(this.columnConfig) {\n      const changeData: Array<RowData<T>> = Array<RowData<T>>();\n      let haveGroup: boolean = false;\n      let groupFooter: Array<TotalGroup>;\n      this.columnConfig.forEach((column: ColumnConfig): void => {\n        if (column.totalType !== undefined && (this.type === TableHelisaType.LOCAL || this.tableHelisaConnectComponent.page <= 1)) {\n          this.totalData = new Array<number>(this.columnConfig.length);\n          this.showFooter = true;\n          this.total.emit({column, columnConfigurations: this.columnConfig, type: ChangeColumnConfigurationType.TOTAL});\n        }\n        this.showSearch = this.showSearch || column.searchable;\n        haveGroup = haveGroup || column.groupable;\n      });\n      if (haveGroup) {\n        this.rawData = this.rawData.sort((a: T, b: T): number => {\n          let result: number = 0;\n          this.columnConfig.forEach((column: ColumnConfig): void => {\n            if (result === 0) {\n              result = this.compare(a, b);\n            }\n          });\n          return result;\n        });\n      }\n      if(this.rawData) {\n        this.rawData.forEach((row: T): void => {\n          if (haveGroup && (changeData.length === 0 || this.compare(changeData[changeData.length - 1].data as T, row) !== 0)) {\n            if (groupFooter) {\n              changeData.push({data: groupFooter, rowType: RowType.GROUP_FOOTER});\n            }\n            changeData.push({data: row, rowType: RowType.GROUP_TITLE});\n            groupFooter = new Array<TotalGroup>(this.columnConfig.length);\n          }\n          if (haveGroup) {\n            this.addTotalGroup(groupFooter, row);\n          }\n          changeData.push({data: row, rowType: RowType.ROW});\n        });\n        this.data = new MatTableDataSource<RowData<T>>(changeData);\n      }\n      if (this.rawData && this.rawData.length && this.indexRowSelect && !this.selectedObject) {\n        if (this.indexRowSelect >= this.rawData.length || this.indexRowSelect < 0) {\n          this.indexRowSelect = 0;\n        }\n        this.selectRow({data: this.rawData[this.indexRowSelect], rowType: RowType.ROW}, false);\n      }\n    }\n  }\n\n  private addTotalGroup(rowTotal: Array<TotalGroup>, row: T): void {\n    this.columnConfig.forEach((column: ColumnConfig, index: number): void => {\n      if (column.totalType !== undefined) {\n        if (rowTotal[index] === undefined) {\n          rowTotal[index] = { sum: (new ColumnConfigUtil().getValue(row, column) as number), count: 1 };\n        } else {\n          rowTotal[index].sum += (new ColumnConfigUtil().getValue(row, column) as number);\n          rowTotal[index].count++;\n        }\n      }\n    });\n  }\n\n  private compare(a: T, b: T): number {\n    let ws: number = 0;\n    this.columnConfig.forEach((column: ColumnConfig): void => {\n      if (ws === 0 && column.groupable) {\n        if ((new ColumnConfigUtil().getValue(a, column) as number) < (new ColumnConfigUtil().getValue(b, column) as number)) {\n          ws = -1;\n        } else if ((new ColumnConfigUtil().getValue(a, column) as number) > (new ColumnConfigUtil().getValue(b, column) as number)) {\n          ws = 1;\n        }\n      }\n    });\n    return ws;\n  }\n\n  getGroupDescription(obj: T): string {\n    let result: string = '';\n    this.columnConfig.forEach((column: ColumnConfig): void => {\n      if (column.groupable) {\n        result += (result.length ? ' - ' : '') + (new ColumnConfigUtil().getValue(obj, column));\n      }\n    });\n    return result;\n  }\n\n  isGroupTitle(index: number, item: RowData<T>): boolean {\n    return item.rowType === RowType.GROUP_TITLE;\n  }\n\n  isRow(index: number, item: RowData<T>): boolean {\n    return item.rowType === RowType.ROW;\n  }\n\n  isGroupFooter(index: number, item: RowData<T>): boolean {\n    return item.rowType === RowType.GROUP_FOOTER;\n  }\n\n  footerDisplayedColumns(): Array<string> {\n    return this.displayedColumns.map((name: string): string => 'footer-' + name);\n  }\n\n  getGroupValue(column: ColumnConfig, data: TotalGroup): number {\n    if (column.totalType === TotalType.SUM) { return data.sum; }\n    if (column.totalType === TotalType.COUNT) { return data.count; }\n    if (column.totalType === TotalType.AVERAGE) { return 1. * data.sum / data.count; }\n    return undefined;\n  }\n\n  getValue(obj: T, column: ColumnConfig): T {\n    return new ColumnConfigUtil().getValue(obj, column) as T;\n  }\n\n  getValueTooltip(obj: T, column: ColumnConfig): string {\n    if (this.showToolTip) {\n      return new ColumnConfigUtil().getValue(obj, column) as string;\n    } else {\n      return null;\n    }\n  }\n\n  searchText(text: string): void {\n    this.lastSearch = text;\n    this.search.emit({ text, columnConfigurations: this.columnConfig });\n  }\n\n  selectRow(row: RowData<T>, isUser: boolean, column?: ColumnConfig): void {\n    if (row === undefined || row === null) {\n      return;\n    }\n    if ((column === undefined || column === null) || (!!column && column.name !== 'bookButton')) {\n      this.selectedObject = row.data as T;\n      this.select.emit(this.selectedObject);\n      this.selectObject.emit({ value: this.selectedObject, scope: isUser ? EventScope.USER : EventScope.CODE_CALL });\n    } else if (!!column && column.name === 'bookButton') {\n      if (this.selectedObject !== row.data) {\n        this.selectedObject = row.data as T;\n        this.select.emit(this.selectedObject);\n        this.selectObject.emit({ value: this.selectedObject, scope: isUser ? EventScope.USER : EventScope.CODE_CALL });\n      }\n      this.bookClicked.emit(this.selectedObject);\n    }\n  }\n\n  onScroll(event: Event): void {\n    const element: HTMLDivElement = event.target as HTMLDivElement;\n    let isScrollY: boolean;\n\n    if (this.scrollY !== element.scrollTop) {\n      isScrollY = true;\n      this.scrollY = element.scrollTop;\n      this.scrollX = element.scrollLeft;\n    }\n\n    if (this.scrollX !== element.scrollLeft) {\n      isScrollY = false;\n      this.scrollY = element.scrollTop;\n      this.scrollX = element.scrollLeft;\n    }\n\n    if ((element.scrollHeight - element.scrollTop < 1000) && isScrollY) {\n      this.goNextPage();\n    }\n\n  }\n\n  private goNextPage(): void {\n    if (!this.tableHelisaConnectComponent.isLastPage && !this.tableHelisaConnectComponent.isUsed) {\n      this.tableHelisaConnectComponent.isUsed = true;\n      this.nextPage.emit({\n        page: this.tableHelisaConnectComponent.nextPage(),\n        body: this.tableHelisaConnectComponent.getBody(this.columnConfig, this.lastSearch)\n      });\n    }\n  }\n\n  private receivePage(data: T[]): void {\n    if (!this.rawData) {\n      this.rawData = new Array<T>();\n    }\n    this.rawData = this.rawData.concat(data);\n    this.dataSource = this.rawData;\n    this.tableHelisaConnectComponent.isLastPage = data.length === 0;\n    this.tableHelisaConnectComponent.isUsed = false;\n  }\n\n  dblClickCell(): void {\n    this.selectCell.emit(this.selectedCells as Cell<T>);\n  }\n\n  selectedCell(element: RowData<T>, column: ColumnConfig): void {\n    if (column.isSelectable === undefined || column.isSelectable === null || column.isSelectable) {\n      this.selectRow(element, true, column);\n      this.selectedCells = { column, row: element };\n      this.selectCell.emit(this.selectedCells);\n    }\n  }\n\n  isSelectedCell(row: RowData<T>, column: ColumnConfig): boolean {\n    if (this.isCellSelection) {\n      if (this.selectedCells != null) {\n        if (this.selectedCells.column.name === column.name &&\n          (this.selectedCells.row as RowData<T>).data === row.data) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  getClassToCell(row: T, column: ColumnConfig): string[] {\n    const classToCell: Array<string> = new Array<string>();\n    if (this.configCellStyles) {\n      const found: ConfigCellStyles<T> = this.configCellStyles.find((c: ConfigCellStyles<T>): boolean => {\n        return c.cellData === this.getValue(row, column);\n      });\n      if (found) {\n        classToCell.push(found.classCell);\n      }\n    }\n    if (column.columnStyle) {\n      classToCell.push(column.columnStyle);\n    }\n    return classToCell;\n  }\n\n  getClassToColumn(): string[] {\n    return this.configColumnClass;\n  }\n\n  getClassToRow(row: T): string[] {\n    const classToRow: Array<string> = new Array<string>();\n    if (row === this.selectedObject && !this.isCellSelection) {\n      classToRow.push('');\n    }\n    if (this.configRowStylesFromColumn) {\n      const founds: ConfigRowStyles<T>[] = this.configRowStylesFromColumn.filter((c: ConfigRowStyles<T>): boolean => {\n        return c.data === this.getValue(row, c.column);\n      });\n      if (founds) {\n        founds.forEach((c: ConfigRowStyles<T>): void => {\n          classToRow.push(c.classRow);\n        });\n      }\n    }\n    return classToRow;\n  }\n\n  onDrop(event: MouseEvent): void {\n    if (this.isDragged && this.indexRowStartDrag >= 0) {\n      const rowIndex: number = this.getRowIndex(event.pageY);\n      const array: RowData<T>[] = this.dataBeforeDrag.data;\n      const rawData: T[] = this.rawData;\n      moveItemInArray(array, this.indexRowStartDrag, rowIndex);\n      moveItemInArray(rawData, this.indexRowStartDrag, rowIndex);\n      this.drop.emit({ value: array[rowIndex].data as T, order: rowIndex });\n      this.rawData = rawData;\n      this.data = new MatTableDataSource(array);\n      event.stopPropagation();\n    }\n  }\n\n  tableKeydown(event: KeyboardEvent): void {\n    if (!this.isCellSelection) {\n      let currentIndex: number = this.data.data.findIndex((row: RowData<T>): boolean => row.data === this.selectedObject);\n      let newSelection: number = -10;\n      if (event.key === 'ArrowDown') {\n        this.scrollCount++;\n        this.data.data.forEach((row: RowData<T>, index: number): void => {\n          if (newSelection === -10 && index > currentIndex && row.rowType === RowType.ROW) {\n            newSelection = index;\n          }\n        });\n      }\n      if (event.key === 'ArrowUp') {\n        this.scrollCount--;\n        currentIndex = this.data.data.length - currentIndex - 1;\n        this.data.data.reverse().forEach((row: RowData<T>, index: number): void => {\n          if (newSelection === -10 && index > currentIndex && row.rowType === RowType.ROW) {\n            newSelection = index;\n          }\n        });\n        this.data.data.reverse();\n        if (newSelection !== -10) {\n          newSelection = this.data.data.length - newSelection - 1;\n        }\n      }\n      if (newSelection !== -10) {\n        this.selectRow(this.data.data[newSelection], true);\n      }\n      if (Math.abs(this.scrollCount) >= 2) {\n        this.scrollCount = 0;\n      } else {\n        event.preventDefault();\n      }\n    }\n  }\n\n  /**\n   * Emite el evento cuando se da click al boton AddRow\n   */\n  onAddRow(): void {\n    this.addRow.emit();\n  }\n\n\n  getHeaderSubtitle(): string[] {\n    const x: string[] = this.columnConfig.map((column: ColumnConfig, index: number): string => {\n      if (column.visible && column.subtitle !== undefined) {\n        return 'subtitle' + index;\n      } else {\n        return null;\n      }\n    }).filter((data: string): boolean => data != null);\n    return x;\n  }\n\n  getColumnsWithTitle(): string[] {\n    return this.columnConfig.filter((column: ColumnConfig): boolean =>\n      column.visible && column.title !== undefined\n    ).map((col: ColumnConfig): string => col.name);\n  }\n\n  dragger(event: MouseEvent): boolean {\n    if (this.isDragged && this.indexRowStartDrag >= 0) {\n      const rowIndex: number = this.getRowIndex(event.pageY);\n      if (rowIndex !== this.lastIndexRowDrag) {\n        this.lastIndexRowDrag = rowIndex;\n        // This can have a memory problem with big data\n        const array: RowData<T>[] = [...this.dataBeforeDrag.data];\n        moveItemInArray(array, this.indexRowStartDrag, rowIndex);\n        this.data = new MatTableDataSource(array);\n      }\n      event.preventDefault();\n      return true;\n    }\n  }\n\n  startDrag(event: MouseEvent): void {\n    this.indexRowStartDrag = this.getRowIndex(event.pageY);\n    this.lastIndexRowDrag = this.indexRowStartDrag;\n    this.dataBeforeDrag = this.data;\n  }\n\n  private getRowIndex(pageY: number): number {\n    let offsetTop: number = 0;\n    let container: HTMLElement = this.containerTable.nativeElement;\n    while ((container !== null) && (offsetTop === 0)) {\n      offsetTop = container.offsetTop;\n      container = container.parentElement;\n    }\n    let rowIndex: number = -1;\n    const rows: HTMLCollection = this.matTableElement.nativeElement.children[1].children;\n    for (let i: number = 0; i < rows.length; i++) {\n      const row: HTMLElement = (rows[i] as HTMLElement);\n      if (pageY - offsetTop > row.offsetTop - this.containerTable.nativeElement.scrollTop) {\n        rowIndex = i;\n      }\n    }\n    if (rowIndex < 0) { rowIndex = 0; }\n    return rowIndex;\n  }\n\n  get columnType(): typeof ColumnType {\n    return ColumnType;\n  }\n\n}\n\n","import { Component, OnInit, Input, Output, EventEmitter, ViewChild } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\nimport * as moment_ from 'moment';\nconst moment: typeof moment_ = moment_;\n\nimport { MatDatepickerInputEvent, MatDatepicker } from '@angular/material/datepicker';\nimport { filter, tap } from 'rxjs/operators';\n\nexport enum TypeCalendarEnum {\n  NORMAL = 'norma',\n  MONTH_YEAR = 'mounth-year',\n  STRICT = 'strict'\n}\n\n\n@Component({\n  selector: 'hel-date-helisa',\n  templateUrl: './date-helisa.component.html',\n  styleUrls: ['./date-helisa.component.css'],\n})\nexport class DateHelisaComponent implements OnInit {\n\n  @ViewChild('picker', { static: true }) datePickerShow: MatDatepicker<Date>;\n  @Input() floatLabel: 'never' | 'always' | 'auto' = 'never';\n  @Input() dateFormControl: FormControl = new FormControl('');\n  private date: Date = new Date();\n\n  /**\n   * Formato de fecha.\n   * Los formatos validos son aquellos que maneja la libreria momentjs y este: 'DD [de] MMMM [de] YYYY'\n   * https://momentjs.com/docs/#/parsing/string-format/\n   */\n  @Input() dateFormat: string = 'DD/MM/YYYY';\n  @Input() locale: string = 'es';\n  @Input() errorMessage: string = 'La fecha no concuerda con el formato ';\n  @Input() placeholder: string = this.dateFormat;\n  @Input() showDatePicker: boolean = false;\n  @Input() minDate: Date;\n  @Input() maxDate: Date;\n  @Output() change: EventEmitter<Date> = new EventEmitter<Date>();\n  isClosed: boolean = false;\n  // tslint:disable-next-line:no-any\n  timeout: any;\n  isDisabled: boolean = false;\n  /**\n   * Si este valor es diferente a TypeCalendarEnum.NORMAL no\n   * será tomado en cuenta\n   */\n  @Input() typeCalendar: TypeCalendarEnum = TypeCalendarEnum.NORMAL;\n\n  dateToVisualize: FormControl;\n\n  /**\n   * Para evitar nuevos eventos miestras se realiza el parseo\n   */\n  private isFromInputEvent: boolean = false;\n\n  /**\n   * Verificar si el formato es valido\n   */\n  invalidFormat: boolean = false;\n  private inputFormReal: FormControl = new FormControl('');\n\n  constructor() { }\n\n  /*\n  * TypeCalendarEnum.MONTH_YEAR = 'MM/YYYY'\n  * TypeCalendarEnum.STRICT = 'DD [de] MMMM [de] YYYY'\n  * */\n  ngOnInit(): void {\n    moment.locale(this.locale);\n    this.dateToVisualize = new FormControl('', this.dateFormControl.validator);\n    this.formHandler();\n    this.inputFormReal = this.dateFormControl;\n    this.inputFormReal.registerOnDisabledChange((isDisabled: boolean): void => {\n      if (isDisabled) {\n        this.isDisabled = true;\n        this.dateToVisualize.disable();\n      } else {\n        this.isDisabled = false;\n        this.dateToVisualize.enable();\n      }\n    });\n\n    /**\n     * establecer valor por defecto de la fecha\n     */\n    if (this.dateFormControl.value !== '' && this.dateFormControl.value !== null) {\n      const incomingDate: string = moment(this.dateFormControl.value, this.dateFormat).format(this.dateFormat);\n      if (incomingDate !== 'Invalid date') {\n        this.dateToVisualize.setValue(incomingDate);\n        this.dateFormControl.setValue(this.dateFormControl.value);\n      }\n    }\n\n  }\n\n  get typeCalendarEnum(): typeof TypeCalendarEnum {\n    return TypeCalendarEnum;\n  }\n\n  openDatePicker(): void {\n    if (this.showDatePicker && !this.isClosed) {\n      this.isClosed = true;\n      this.timeout = setTimeout((): void => {\n        this.datePickerShow.open();\n      }, 2000);\n    }\n  }\n\n  onKey(event: KeyboardEvent): void {\n    if (event.key === 'Enter') {\n      this.onBlur();\n      this.isClosed = true;\n      this.datePickerShow.open();\n    }\n  }\n\n  onBlur(): void {\n    if (moment(this.dateToVisualize.value, this.dateFormat, true).isValid()) {\n      const incomingDate: string = moment(this.dateToVisualize.value, this.dateFormat).format(this.dateFormat);\n      this.dateToVisualize.setValue(incomingDate.trim());\n      this.dateFormControl.setValue(moment(this.dateToVisualize.value, this.dateFormat).toDate());\n      this.change.emit(moment(this.dateToVisualize.value, this.dateFormat).toDate());\n      clearTimeout(this.timeout);\n      this.isClosed = false;\n      if (this.showDatePicker) {\n        this.isClosed = true;\n        this.datePickerShow.open();\n      }\n    }\n  }\n\n\n  /**\n   * Determina como se debe inicializar la visualizacion del calendar\n   */\n  getStartView(): string {\n    // multi-year\n    if (this.typeCalendar === this.typeCalendarEnum.MONTH_YEAR) {\n      return 'multi-year';\n    } else if (this.typeCalendar === this.typeCalendarEnum.STRICT) {\n      return 'month';\n    } else {\n      return 'month';\n    }\n  }\n\n  private formHandler(): void {\n    if (this.typeCalendar === this.typeCalendarEnum.STRICT) {\n      this.dateToVisualize.valueChanges.subscribe((date: string): void => {\n        this.invalidFormat = false;\n        const isValid: boolean = moment(date, this.dateFormat, true).isValid();\n        const result: string = moment(date, this.dateFormat).format(this.dateFormat);\n        if (!!result && (result === 'Invalid date' || !isValid)) {\n          this.invalidFormat = true;\n          return;\n        }\n        if (!!result) {\n          if (!this.isFromInputEvent) {\n            this.isFromInputEvent = true;\n            this.dateToVisualize.setValue(moment(result, this.dateFormat).format(this.dateFormat));\n            this.dateFormControl.setValue(moment(result, this.dateFormat).toDate());\n            this.isFromInputEvent = false;\n          } else {\n            setTimeout((): void => {\n              this.isFromInputEvent = false;\n            }, 1500);\n          }\n\n        }\n      });\n    } else {\n      this.dateToVisualize.valueChanges\n        .pipe(\n          tap((date: string): void => {\n            if (date.trim().length > this.dateFormat.length) {\n              this.invalidFormat = true;\n            } else {\n              this.invalidFormat = false;\n            }\n          }),\n          filter((date: string): boolean => date.length === this.dateFormat.length)\n        )\n        .subscribe((date: string): void => {\n          this.invalidFormat = false;\n          const isValid: boolean = moment(date, this.dateFormat, true).isValid();\n          const result: string = moment(date, this.dateFormat).format('YYYY-MM-DD');\n\n          if (!!result && (result === 'Invalid date' || !isValid)) {\n            this.invalidFormat = true;\n            return;\n          }\n\n          if (!!result) {\n            if (!this.isFromInputEvent) {\n              this.isFromInputEvent = true;\n              const subString: string[] = result.split('-');\n\n              const year: number = parseFloat(subString[0]);\n              const month: number = parseFloat(subString[1]);\n              const day: number = parseFloat(subString[2]);\n\n              this.date.setFullYear(year);\n              this.date.setDate(day);\n              this.date.setMonth(month - 1); // -1 por que los meses se toman como los indices en un array\n\n              /** cuando es de tipo MOUNTH_YEAR retorna el ultimo dia del mes seleccionado */\n              if (this.typeCalendar === TypeCalendarEnum.MONTH_YEAR) {\n                this.date = moment(this.date).endOf('month').toDate();\n              }\n\n              this.dateToVisualize.setValue(moment(this.date, 'YYYY-MM-DD').format(this.dateFormat));\n              this.dateFormControl.setValue(this.date);\n              this.isFromInputEvent = false;\n            } else {\n              setTimeout((): void => {\n                this.isFromInputEvent = false;\n              }, 1500);\n            }\n\n          }\n        });\n    }\n\n\n    this.dateFormControl.valueChanges\n      .subscribe((date: string): void => {\n        const incommingDate: string = moment(date, this.dateFormat).format(this.dateFormat);\n        if (this.dateFormControl.value !== '' && incommingDate !== 'Invalid date') {\n          this.dateToVisualize.setValue(incommingDate);\n        }\n      });\n  }\n\n\n  /**\n   * Evento que se dispara luego seleccionar un mes\n   */\n  monthSelectedHandler(chosenMonthDate: moment_.Moment, datepicker: MatDatepicker<moment_.Moment>): void {\n    if (this.typeCalendar === TypeCalendarEnum.MONTH_YEAR) {\n      datepicker.close();\n      const date: Date = moment(chosenMonthDate).endOf('month').toDate();\n\n      this.dateToVisualize.setValue(moment(date, 'YYYY-MM-DD').format(this.dateFormat));\n      this.dateFormControl.setValue(date);\n      this.change.emit(date);\n    }\n  }\n\n  /**\n   * Evento desde el control touch del calendar\n   */\n  dateChange(type: string, event: MatDatepickerInputEvent<Date>): void {\n    this.dateToVisualize.setValue(moment(event.value, 'YYYY-MM-DD').format(this.dateFormat));\n    this.dateFormControl.setValue(new Date(event.value));\n    this.change.emit(new Date(event.value));\n    this.isClosed = true;\n  }\n\n  getErrorMessage(): string {\n    return this.errorMessage + this.dateFormat;\n  }\n\n  getDateToControl(): Date {\n    return moment(this.dateToVisualize.value, this.dateFormat).toDate();\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Subject, BehaviorSubject, Subscriber, Observable } from 'rxjs';\nimport { Node } from './node';\n\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class TreeHelisaService {\n\n    // Observable string sources\n    private emitNodeSelected: BehaviorSubject<number | string> = new BehaviorSubject<number | string>(1);\n    // Observable string streams\n    nodeSelected: Observable<string | number> = this.emitNodeSelected.asObservable();\n\n    // Observable string sources\n    private emitDataSource: BehaviorSubject<Node> = new BehaviorSubject<Node>(undefined);\n\n    // Observable string streams\n    dataSourceObservable: Observable<Node> = this.emitDataSource.asObservable();\n\n    // Expand node observable\n    private emitExpandAllNodes: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(null);\n    nodeExpand: Observable<boolean> = this.emitExpandAllNodes.asObservable();\n\n     // Collapse node observable\n     private emitCollapseAllNodes: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(null);\n     nodeCollapse: Observable<boolean> = this.emitCollapseAllNodes.asObservable();\n\n    private emitRefreshTree: Subject<void> = new Subject<void>();\n    refreshTreeObservable: Observable<void> = this.emitRefreshTree.asObservable();\n\n    private emitRefreshTreeWithPagination: Subject<void> = new Subject<void>();\n    refreshTreeWithPaginationObservable: Observable<void> = this.emitRefreshTreeWithPagination.asObservable();\n\n    private emitExpandOneNode: Subject<Node> = new Subject<Node>();\n    expandOneNodeObservable: Observable<Node> = this.emitExpandOneNode.asObservable();\n\n    private emitCollapseOneNode: Subject<Node> = new Subject<Node>();\n    collapseOneNodeObservable: Observable<Node> = this.emitCollapseOneNode.asObservable();\n\n    // Service message commands\n    changeNodeSelected(idResidentialArea: number | string): void {\n        this.emitNodeSelected.next(idResidentialArea);\n    }\n\n    // Service message commands\n    changeDataSource(data: Node): void {\n        this.emitDataSource.next(data);\n    }\n\n    expandAllNodes(expand: boolean): void {\n        this.emitExpandAllNodes.next(expand);\n    }\n\n    collapseAllNodes(collapse: boolean): void {\n        this.emitCollapseAllNodes.next(collapse);\n    }\n\n    refreshTree(): void {\n        this.emitRefreshTree.next();\n    }\n\n\n    refreshTreeWithPagination(): void {\n        this.emitRefreshTreeWithPagination.next();\n    }\n\n\n    expandOneNode(node: Node): void {\n    this.emitExpandOneNode.next(node);\n    }\n\n\n    collapseOneNode(node: Node): void {\n        this.emitCollapseOneNode.next(node);\n    }\n\n    constructor() {\n\n    }\n\n}\n","export class TreeHelisaConnect<T> {\n    page: number;\n    isLastPage: boolean;\n    isUsed: boolean;\n\n    constructor() {\n      this.page = 0;\n      this.isLastPage = false;\n      this.isUsed = false;\n    }\n\n    nextPage(): number {\n      return this.page = this.page + 1;\n    }\n  }\n","import { Component, OnInit, Input, Output, EventEmitter, ViewChild, AfterViewInit, ElementRef, HostListener } from '@angular/core';\nimport { NestedTreeControl, TreeControl } from '@angular/cdk/tree';\nimport { MatOptionSelectionChange } from '@angular/material/core';\nimport { MatTreeNestedDataSource, MatTree } from '@angular/material/tree';\nimport { Node } from './node';\nimport { TreeHelisaService } from './tree-helisa.service';\nimport { Router } from '@angular/router';\nimport * as _ from 'lodash';\nimport { TreeHelisaConnect } from './tree-helisa-connect';\nimport { FormControl } from '@angular/forms';\nimport { Observable } from 'rxjs';\n\nexport interface RequestTreeHelisa {\n  page: number;\n}\n\n@Component({\n  selector: 'hel-tree',\n  templateUrl: './tree-helisa.component.html',\n  styleUrls: ['./tree-helisa.component.sass']\n  // host: { '(document:keyup)': 'onKeyDown($event)' }\n})\nexport class TreeHelisaComponent implements OnInit, AfterViewInit {\n  isDisabled: boolean;\n  selectedNode: number | string | null;\n  //#endregion ====== Variables ========\n\n  constructor(private treeHelisaService: TreeHelisaService, private router: Router, private elementRef: ElementRef) {\n    // cargar datos pasados por el @Input\n    if (!!this.data) {\n      const data: Node = this.data;\n      this.data = null;\n      this.receivePage(data.children);\n    } else {\n      this.dataSource.data = [];\n      this.treeControl.dataNodes = [];\n    }\n  }\n\n  //#region  ====== Variables =============\n  private treeHelisaConnect: TreeHelisaConnect<Node>;\n  formEdit: FormControl;\n  @ViewChild('tree', {static: true}) tree: MatTree<{}>;\n  private selectedOptions: Map<\n    string | number,\n    {\n      formControl: FormControl;\n      editMode: boolean;\n    }\n  > = new Map<\n    string | number,\n    {\n      formControl: FormControl;\n      editMode: boolean;\n    }\n  >();\n  /**\n   * Datos del Arbol\n   */\n  @Input() data: Node;\n\n  /**\n   * Retorna el id del nodo removido\n   */\n  @Output() removed: EventEmitter<string | number> = new EventEmitter<number | string>();\n\n  /**\n   * Retorna un nodo editado\n   */\n  @Output() edited: EventEmitter<Node> = new EventEmitter<Node>();\n\n  /**\n   * Retorna un nodo sin id del nodo , pero si con el parent\n   * para conocer a cual fue añadido\n   */\n  @Output() added: EventEmitter<Node> = new EventEmitter<Node>();\n  @Output() collapseParent: EventEmitter<boolean> = new EventEmitter<boolean>();\n  @Output() rangeScrolled: EventEmitter<RequestTreeHelisa> = new EventEmitter<RequestTreeHelisa>();\n  @Output() nodeSelected: EventEmitter<number | string> = new EventEmitter<number | string>();\n  @Output() dobleClick: EventEmitter<number | string> = new EventEmitter<number | string>();\n  @Output() keypressDelete: EventEmitter<number | string | null> = new EventEmitter<number | string | null>();\n  @Output() keypressInsert: EventEmitter<number | string | null> = new EventEmitter<number | string | null>();\n  @Output() checkedOptionNode: EventEmitter<number | string | null> = new EventEmitter<number | string | null>();\n  @Output() uncheckedOptionNode: EventEmitter<number | string | null> = new EventEmitter<number | string | null>();\n  @Output() clickAddNode: EventEmitter<Node> = new EventEmitter<Node>();\n  @Output() clickEditNode: EventEmitter<Node> = new EventEmitter<Node>();\n  @Output() clickDeleteNode: EventEmitter<Node> = new EventEmitter<Node>();\n\n  treeControl: NestedTreeControl<Node> = new NestedTreeControl<Node>((node: Node): Node[] | Observable<Node[]> => node.children);\n  dataSource: MatTreeNestedDataSource<Node> = new MatTreeNestedDataSource<Node>();\n\n  isSingleClick: boolean = true;\n  currentNode: Node = null;\n\n  /**\n   * Obtiene la descripcion completa del nodo\n   * @example Nodo padre,nodo hijo,nodo nieto\n   * @param node Debe tener todos los parent llenos hacia arriba\n   */\n  public static getDescription(node: Node): string {\n    let result: string[] = [node.name];\n    let concat: string = '';\n\n    if (node.parent) {\n      result.push(this.getDescription(node.parent));\n    }\n\n    if (result.length === 1) {\n      return node.name;\n    }\n\n    result = result.reverse();\n\n    for (let i: number = 0; i < result.length; i++) {\n      const element: string = result[i];\n      concat = concat + element + (i === result.length - 1 ? '' : ',');\n    }\n\n    return concat;\n  }\n\n  ngOnInit(): void {\n    // si se cargan datos por medio del servicio\n    this.treeHelisaService.dataSourceObservable.subscribe((res: Node): void => {\n      if (!!res && !!res.children) {\n        this.selectedNode = res.id;\n        this.receivePage(res.children);\n      } else {\n        this.dataSource.data = [];\n        this.treeControl.dataNodes = [];\n      }\n    });\n\n    // Observable, si cambia el nodo seleccionado por medio del servicio\n    this.treeHelisaService.nodeSelected.subscribe((res: string | number): void => {\n      if (!!this.data && !!this.data.children) {\n        this.selectNode(this.data, res);\n      }\n    });\n\n    this.treeHelisaService.refreshTreeObservable.subscribe((res: void): void => {\n      this.refreshTree();\n    });\n\n    this.treeHelisaService.refreshTreeWithPaginationObservable.subscribe((res: void): void => {\n      this.refreshTreeWithPagination();\n    });\n  }\n\n  ngAfterViewInit(): void {\n    this.treeHelisaService.nodeExpand.subscribe((res: boolean): void => {\n      if (res != null) {\n        if (res) {\n          this.tree.treeControl.expandAll();\n        }\n      }\n    });\n\n    this.treeHelisaService.nodeCollapse.subscribe((res: boolean): void => {\n      if (res !== null) {\n        if (res) {\n          this.tree.treeControl.collapseAll();\n        }\n      }\n    });\n\n    this.treeHelisaService.expandOneNodeObservable.subscribe((res: Node): void => {\n      if (res !== undefined) {\n        this.treeControl.expand(res);\n      }\n    });\n\n    this.treeHelisaService.collapseOneNodeObservable.subscribe((res: Node): void => {\n      if (res !== undefined) {\n        this.treeControl.collapse(res);\n      }\n    });\n  }\n\n  //#region  ====== Events ===========\n  onRedirect(node: Node): void {\n    this.isSingleClick = true;\n    setTimeout((): void => {\n      if (this.isSingleClick) {\n        this.selectNode(node, node.id);\n\n        // if(!!node && !node.children){\n        if (!!node) {\n          this.nodeSelected.emit(node.id);\n          this.currentNode = node;\n        }\n      }\n    }, 350);\n  }\n\n  onScroll(event: Event): void {\n    const element: HTMLDivElement = event.target as HTMLDivElement;\n\n    if (element.offsetHeight + element.scrollTop >= element.scrollHeight) {\n      this.goNextPage();\n    }\n  }\n\n  onEdit(node: Node): void {\n    this.clickEditNode.emit(node);\n    /** @Deprecated\n     *  Ya no se edita el nodo ahora solo se emite el evento 'clickEditNode'\n     * retornando el nodo al cual le hicieron click en la opción delete\n     */\n    // node.isEditable = true;\n    // this.isDisabled = true;\n  }\n\n  onAdd(node: Node): void {\n    this.clickAddNode.emit(node);\n    /** @Deprecated\n     *  Ya no se crea y se agrega el nodo ahora solo se emite el evento 'clickAddNode'\n     * retornando el nodo al cual le hicieron click en la opción add\n     */\n    //   // si no tiene hijos instanciar el array\n    //   if (!node.children) {\n    //     node.children = [];\n    //   }\n    //   node.children.push({\n    //     id: Math.random(),\n    //     name: '',\n    //     isSelected: false,\n    //     parent: node,\n    //     isEditable: true\n    //   });\n    //   if (node.children) {\n    //     this.isDisabled = true;\n    //     this.treeHelisaService.expandOneNode(node);\n    //   }\n    //   this.refreshTree();\n  }\n\n  onDelete(node: Node): void {\n    this.clickDeleteNode.emit(node);\n    /** @Deprecated\n     *  Ya no se elimina el nodo ahora solo se emite el evento 'clickDeleteNode'\n     * retornando el nodo al cual le hicieron click en la opción delete\n     */\n    // // Remueve el nodo utilizando la libreria de lodash\n    // _.remove(node.parent.children, node);\n\n    // this.refreshTree();\n    // this.removed.emit(node.id);\n  }\n\n  onEdited(node: Node, value: string): void {\n    node.name = value;\n    if (node.id == null && node.name === '') {\n      _.remove(node.parent.children, node);\n      this.refreshTree();\n    } else if (node.id && node.id != null && node.name.trim() !== '') {\n      this.edited.emit(node);\n      node.isEditable = false;\n      this.selectNode(node, node.id);\n    } else if (node.id == null && node.name.trim() !== '') {\n      this.added.emit(node);\n      node.isEditable = false;\n    }\n    this.isDisabled = false;\n    this.refreshTree();\n  }\n\n  onCancel(node: Node, value: string): void {\n    this.isDisabled = false;\n    // Si no tiene id por ser un nuevo item, lo elimina\n    if (node.id == null) {\n      _.remove(node.parent.children, node);\n      this.refreshTree();\n    }\n\n    node.isEditable = false;\n  }\n\n  onDblClick(node: Node): void {\n    this.isSingleClick = false;\n    this.dobleClick.emit(node.id);\n  }\n\n  @HostListener('document:keyup', ['$event'])\n  onKeyDown(event: KeyboardEvent): void {\n    switch (event.key) {\n      case 'Delete':\n        this.keypressDelete.emit(!!this.currentNode && this.currentNode.id ? this.currentNode.id : null);\n        break;\n      case 'Insert':\n        this.keypressInsert.emit(!!this.currentNode && this.currentNode.id ? this.currentNode.id : null);\n        break;\n      case 'ArrowDown':\n        this.moveDownIntoTree();\n        break;\n      case 'ArrowUp':\n        this.moveUpIntoTree();\n        break;\n    }\n  }\n\n  //#endregion ======= Events ========\n\n  //#region  ======== Metodos =============\n\n  private moveUpIntoTree(): number {\n    if (!!this.data) {\n      // si aun no hay ningun node seleccionado selecciona el primero\n      if (this.currentNode == null) {\n        this.selectNode(this.data, this.data.children[0].id);\n        this.currentNode = this.data.children[0];\n        if (!!this.currentNode.children && this.currentNode.children.length > 0) {\n          this.treeHelisaService.expandOneNode(this.currentNode);\n        }\n      } else {\n        if (!!this.currentNode.parent && this.currentNode.id != null) {\n          // obtiene el indice del nodo seleccionado actualmente\n          const index: number = this.currentNode.parent.children.indexOf(this.currentNode);\n\n          if (this.currentNode.parent.id == null && index === 0) {\n            return 0;\n          } else {\n            // si tiene nodos al mismo nivel salta al nodo anterior\n            if (index !== undefined && index === 0) {\n              this.currentNode = this.currentNode.parent;\n              this.selectNode(this.data, this.currentNode.id);\n              if (!!this.currentNode.children && this.currentNode.children.length > 0) {\n                this.treeHelisaService.expandOneNode(this.currentNode);\n              }\n            } else {\n              // si no tiene nodos al mismo nivel salta al nodo padre\n              this.currentNode = this.currentNode.parent.children[index - 1];\n              this.selectNode(this.data, this.currentNode.id);\n              if (!!this.currentNode.children && this.currentNode.children.length > 0) {\n                this.treeHelisaService.expandOneNode(this.currentNode);\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n\n  private moveDownIntoTree(): void {\n    if (!!this.data) {\n      if (this.currentNode == null) {\n        this.selectNode(this.data, this.data.children[0].id);\n        this.currentNode = this.data.children[0];\n        if (!!this.currentNode.children && this.currentNode.children.length > 0) {\n          this.treeHelisaService.expandOneNode(this.currentNode);\n        }\n      } else {\n        if (!!this.currentNode) {\n          // obtiene el indice del nodo seleccionado actualmente\n          const index: number =\n            !!this.currentNode && !!this.currentNode.parent ? this.currentNode.parent.children.indexOf(this.currentNode) : null;\n\n          // si tiene childrens pasa al primer children\n          if (!!this.currentNode.children && this.currentNode.children.length > 0) {\n            this.currentNode = this.currentNode.children[0];\n            this.selectNode(this.data, this.currentNode.id);\n            if (!!this.currentNode.children && this.currentNode.children.length > 0) {\n              this.treeHelisaService.expandOneNode(this.currentNode);\n            }\n          } else if (\n            index !== undefined &&\n            index === this.currentNode.parent.children.length - 1 &&\n            this.currentNode.parent.parent != null &&\n            this.currentNode.parent.parent.children != null &&\n            this.currentNode.parent.parent.children.length > 0\n          ) {\n            const indexOfParent: number = this.currentNode.parent.parent.children.indexOf(this.currentNode.parent);\n            this.currentNode =\n              this.currentNode.parent.parent.children[indexOfParent + 1] === undefined\n                ? this.currentNode\n                : this.currentNode.parent.parent.children[indexOfParent + 1];\n\n            this.selectNode(this.data, this.currentNode.id);\n            if (!!this.currentNode.children && this.currentNode.children.length > 0) {\n              this.treeHelisaService.expandOneNode(this.currentNode);\n            }\n          } else {\n            // si no tiene nodos al mismo nivel salta al siguiente hacia abajo\n            this.currentNode = this.currentNode.parent.children[index + 1];\n            this.selectNode(this.data, this.currentNode.id);\n            if (!!this.currentNode.children && this.currentNode.children.length > 0) {\n              this.treeHelisaService.expandOneNode(this.currentNode);\n            }\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Verifica si el nodo tiene hijos\n   */\n  hasChild(t: number, node: Node): boolean {\n    return !!node.children && node.children.length > 0;\n  }\n\n  /**\n   * Actualiza el arbol borrando toda la data , solo cuando no se utiliza paginacion\n   */\n  private refreshTree(): void {\n    this.data = null;\n    const datasourceData: Node[] = this.dataSource.data;\n    this.dataSource.data = null;\n    this.dataSource.data = datasourceData;\n    this.treeControl.dataNodes = datasourceData;\n  }\n\n  /**\n   * Actualiza el arbol cuando se utiliza la paginacion (Cuando no , utilice el metodo refreshTree())\n   */\n  private refreshTreeWithPagination(): void {\n    const datasourceData: Node[] = this.dataSource.data;\n    this.dataSource.data = null;\n    this.dataSource.data = datasourceData;\n    this.treeControl.dataNodes = datasourceData;\n  }\n\n  private goNextPage(): void {\n    if (!this.treeHelisaConnect.isLastPage && !this.treeHelisaConnect.isUsed) {\n      this.treeHelisaConnect.isUsed = true;\n      this.rangeScrolled.emit({\n        page: this.treeHelisaConnect.nextPage()\n      });\n    }\n  }\n\n  private receivePage(data: Node[]): void {\n    if (!this.data) {\n      this.data = { id: null, name: 'root', isSelected: false };\n    }\n    if (!this.data.children) {\n      this.data.children = new Array<Node>();\n      this.treeHelisaConnect = new TreeHelisaConnect<Node>();\n    }\n    this.data.children = this.data.children.concat(data);\n    this.data.children.forEach((node: Node): void => {\n      this.fillParent(node, this.data);\n    });\n    this.data.children = this.reorderByOrderIndex(this.data.children);\n    this.dataSource.data = this.data.children;\n    this.treeControl.dataNodes = this.data.children;\n    this.treeHelisaConnect.isLastPage = data.length === 0;\n    this.treeHelisaConnect.isUsed = false;\n  }\n\n  /**\n   * Llenan el campo parent de todos los nodos hijos\n   */\n  private fillParent(node: Node, parent: Node): void {\n    node.parent = parent;\n    if (node.children && node.children.length > 0) {\n      node.children.forEach((item: Node): void => {\n        this.fillParent(item, node);\n      });\n    }\n  }\n\n  /**\n   * coloca como true del isSelected del nodo que concuerde con el id\n   */\n  private selectNode(node: Node, id: number | string): Node {\n    if (node == null) {\n      return null;\n    }\n    this.upSelectNode(node);\n    if (!!this.selectedNode) {\n      const nodeSelected: Node = this.getNodeById(this.selectedNode);\n      if (nodeSelected != null) {\n        nodeSelected.isSelected = false;\n        this.selectedNode = null;\n      }\n    }\n    if (node.id !== undefined && node.id === id) {\n      node.isSelected = true;\n      this.expandAllParents(node);\n      this.selectedNode = node.id;\n      return node;\n    } else if (node.children != null) {\n      let i: number;\n      let result: Node = null;\n      for (i = 0; result == null && i < node.children.length; i++) {\n        result = this.selectNode(node.children[i], id);\n      }\n      return result;\n    }\n    return null;\n  }\n\n  private expandAllParents(node: Node): void {\n    if (!!node && !!node.parent) {\n      this.treeHelisaService.expandOneNode(node.parent);\n      this.expandAllParents(node.parent);\n    }\n  }\n\n  /**\n   * Elimina el isSelected de todos los nodos\n   */\n  private upSelectNode(node: Node): void {\n    if (!!node && node.isSelected !== undefined) {\n      node.isSelected = false;\n      if (!!node.children) {\n        for (const childrenNode of node.children) {\n          this.upSelectNode(childrenNode);\n        }\n      }\n    }\n  }\n\n  getClassNode(node: Node): string[] {\n    const classNode: string[] = [];\n    if (node.isSelected) {\n      classNode.push('isSelected');\n    }\n    if (node.classNode) {\n      classNode.push(node.classNode);\n    }\n    return classNode;\n  }\n\n  onEditMode(node: Node, editMode: boolean): void {\n    this.getSelectedOptions(node).editMode = editMode;\n  }\n\n  onSelectOption(event: MatOptionSelectionChange, node: Node): void {\n    node.isCheckedOption = event.source.selected;\n    if (node.isCheckedOption) {\n      this.checkedOptionNode.emit(node.id);\n    } else {\n      this.uncheckedOptionNode.emit(node.id);\n    }\n  }\n\n  getSelectedOptions(\n    node: Node\n  ): {\n    formControl: FormControl;\n    editMode: boolean;\n  } {\n    if (this.selectedOptions.has(node.id)) {\n      this.reloadSelectedOptions(node, this.selectedOptions.get(node.id).editMode);\n    } else {\n      this.reloadSelectedOptions(node, false);\n    }\n    return this.selectedOptions.get(node.id);\n  }\n\n  private reloadSelectedOptions(node: Node, editMode: boolean): void {\n    const array: Array<string | number | null> = new Array<string | number | null>();\n    node.options.forEach((option: Node): void => {\n      if (option.isCheckedOption) {\n        array.push(option.id);\n      }\n    });\n    const obj: {\n      formControl: FormControl;\n      editMode: boolean;\n    } = { formControl: new FormControl(array), editMode };\n    this.selectedOptions.set(node.id, obj);\n  }\n\n  /**\n   * Retorna el primer Node que encuentre segun el id enviado o null si no hay ninguno\n   * @param id  number | string\n   * @returns Node o null si no hay un nodo con ese id\n   */\n  getNodeById(id: number | string): Node {\n    const queue: Node[] = [...this.dataSource.data];\n    while (queue.length > 0) {\n      const curr: Node = queue.shift();\n      if (curr.id === id) {\n        return curr;\n      } else {\n        if (!!curr.children) {\n          queue.push(...curr.children);\n        }\n      }\n    }\n    return null;\n  }\n\n  reorderByOrderIndex(node: Node[]): Node[] {\n    if (!!node && node.length > 0) {\n      try {\n        node = _.orderBy(node, (x: Node): number => x.orderIndex, ['asc']);\n        node.forEach((element: Node): void => {\n          if (!!element.children && element != null) {\n            element.children = this.reorderByOrderIndex(element.children);\n          }\n        });\n        return node;\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  }\n\n  //#endregion ====== Metodos ============\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { OptionAutocompleteHelisa } from './autocomplete-helisa.component';\n\n@Injectable()\nexport class AutocompleteHelisaService<T> {\n\n  private emitChangeSource: BehaviorSubject<Array<OptionAutocompleteHelisa<T>>> =\n  new BehaviorSubject<Array<OptionAutocompleteHelisa<T>>>([]);\n\n  public dataSource$: Observable<Array<OptionAutocompleteHelisa<T>>> = this.emitChangeSource.asObservable();\n\n  constructor() { }\n\n  setDataSource(options: Array<OptionAutocompleteHelisa<T>>): void {\n    this.emitChangeSource.next(options);\n  }\n\n}\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { Observable, of, Subject } from 'rxjs';\nimport { map, startWith, throttleTime, debounceTime } from 'rxjs/operators';\nimport { AutocompleteHelisaService } from './autocomplete-helisa.component.service';\n\nexport interface OptionAutocompleteHelisa<T> {\n  value: T;\n  displayText: string;\n}\n\n@Component({\n  selector: 'hel-autocomplete',\n  templateUrl: './autocomplete-helisa.component.html',\n  styleUrls: ['./autocomplete-helisa.component.css'],\n  providers: [AutocompleteHelisaService]\n})\nexport class AutocompleteHelisaComponent<T> implements OnInit {\n\n  @Input() myControl: FormControl = new FormControl();\n  @Input() options: Array<OptionAutocompleteHelisa<T>> = new Array<OptionAutocompleteHelisa<T>>();\n  filteredOptions: Observable<OptionAutocompleteHelisa<T>[]>;\n  selectedValue: OptionAutocompleteHelisa<T>;\n  @Output() selectedValueEmmiter: EventEmitter<T> = new EventEmitter<T>();\n  @Output() nextPage: EventEmitter<void> = new EventEmitter<void>();\n  @Input() isRemote: boolean = false;\n  isLoading: boolean = false;\n\n\n  onScrollObservable: Subject<void> = new Subject<void>();\n\n  constructor(private autocompleteHelisaService: AutocompleteHelisaService<T>) {\n  }\n\n  ngOnInit(): void {\n\n    this.onScrollObservable.asObservable()\n    .pipe(\n      debounceTime(500),\n      throttleTime(500)\n    )\n    .subscribe((): void => {\n      this.nextPage.emit();\n    });\n\n    if (this.isRemote) {\n      this.autocompleteHelisaService.dataSource$.subscribe((data: OptionAutocompleteHelisa<T>[]): void => {\n        setTimeout((): void => {\n          this.options = data;\n          this.filteredOptions = of<OptionAutocompleteHelisa<T>[]>(this.options);\n        });\n      });\n    }\n\n    this.filteredOptions = this.myControl.valueChanges.pipe(\n      startWith(''),\n      map((x: string): string => this._checkRegex(x)),\n      map((value: string): OptionAutocompleteHelisa<T>[] => this._filter(value))\n    );\n\n  }\n\n  displayFn(option?: OptionAutocompleteHelisa<T>): string | undefined {\n    return option ? option.displayText : undefined;\n  }\n\n  getService(): AutocompleteHelisaService<T> {\n    return this.autocompleteHelisaService;\n  }\n\n\n  /** Elimina caracteres extraños */\n  private _checkRegex(value: string): string {\n    value = value.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '');\n    return value;\n  }\n\n  private _filter(value: string): OptionAutocompleteHelisa<T>[] {\n    if (!(value)) {\n      if (!this.isRemote) {\n        const filterValue: string[] = value.toLowerCase().split(' ');\n        return this.options.filter((option: OptionAutocompleteHelisa<T>): boolean => {\n          let ws: boolean = true;\n          filterValue.forEach((text: string): boolean => ws = ws && option.displayText.toLowerCase().indexOf(text) >= 0);\n          return ws;\n        }).splice(0, 5);\n      } else {\n        return this.options;\n      }\n    }\n  }\n\n  public onSelected(event: {option: {value: OptionAutocompleteHelisa<T>}}): void {\n    this.selectedValue = event.option.value;\n    this.selectedValueEmmiter.emit(this.selectedValue.value);\n  }\n\n  getNextPage(): void {\n    this.onScrollObservable.next();\n  }\n}\n","import { Directive, EventEmitter, Input, Output, OnDestroy } from '@angular/core';\nimport { MatAutocomplete } from '@angular/material/autocomplete';\nimport { takeUntil, tap } from 'rxjs/operators';\nimport { Subject } from 'rxjs';\n\n\nexport interface IAutoCompleteScrollEvent {\n  autoComplete: MatAutocomplete;\n  scrollEvent: Event;\n}\n\n\n@Directive({\n  selector: 'mat-autocomplete[optionsScroll]'\n})\nexport class OptionsScrollDirective implements OnDestroy {\n\n  /**\n   * This value would different depends of styles\n   */\n  @Input() thresholdPercent: number = .9;\n  @Output() optionsScroll: EventEmitter<IAutoCompleteScrollEvent> = new EventEmitter<IAutoCompleteScrollEvent>();\n  destroy: Subject<void> = new Subject<void>();\n  lastScrollTop: number = 0;\n\n  constructor(public autoComplete: MatAutocomplete) {\n    this.autoComplete.opened.pipe(\n      tap((): void => {\n        // Note: When autocomplete raises opened, panel is not yet created (by Overlay)\n        // Note: The panel will be available on next tick\n        // Note: The panel wil NOT open if there are no options to display\n        setTimeout((): void => {\n          // Note: remove listner just for safety, in case the close event is skipped.\n          this.removeScrollEventListener();\n          if (!!this.autoComplete &&\n            !!this.autoComplete.panel &&\n            !!this.autoComplete.panel.nativeElement) {\n            this.autoComplete.panel.nativeElement\n              .addEventListener('scroll', this.onScroll.bind(this), false);\n          }\n        });\n      }),\n      takeUntil(this.destroy)).subscribe();\n\n    this.autoComplete.closed.pipe(\n      tap((): void => this.removeScrollEventListener()),\n      takeUntil(this.destroy)).subscribe();\n  }\n\n  private removeScrollEventListener(): void {\n    if (!!this.autoComplete &&\n      !!this.autoComplete.panel &&\n      !!this.autoComplete.panel.nativeElement) {\n      this.autoComplete.panel.nativeElement\n        .removeEventListener('scroll', this.onScroll);\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.destroy.next();\n    this.destroy.complete();\n\n    this.removeScrollEventListener();\n  }\n\n\n  onScroll(event: Event): void {\n    // Credits: how to know if it's down or up scroll \"https://github.com/qeremy/so/blob/master/so.dom.js#L426\"\n    const st: number = (event.target as Window).pageYOffset || (event.target as Element).scrollTop;\n    if (st > this.lastScrollTop) {\n      // downscroll code\n      if (this.thresholdPercent === undefined) {\n        this.optionsScroll.next({ autoComplete: this.autoComplete, scrollEvent: event });\n      } else {\n        const threshold: number = this.thresholdPercent * 100 * (event.target as Element).scrollHeight / 100;\n        const current: number = (event.target as Element).scrollTop + (event.target as Element).clientHeight;\n        // console.log(`scroll ${current}, threshold: ${threshold}`)\n        if (current > threshold) {\n          // console.log('load next page');\n          this.optionsScroll.next({ autoComplete: this.autoComplete, scrollEvent: event });\n        }\n      }\n    } else {\n      // upscroll code\n    }\n    this.lastScrollTop = st <= 0 ? 0 : st;\n  }\n\n}\n","import { Directive, Input, HostListener, ElementRef } from '@angular/core';\nimport { MatTooltip } from '@angular/material/tooltip';\n\n@Directive({\n    selector: '[helTooltip]',\n    providers: [MatTooltip]\n})\nexport class HelTooltipDirective {\n\n    tooltip: MatTooltip;\n\n    /**\n     * Mensaje a mostrar\n     */\n    @Input('helTooltip') message: string;\n\n    /**\n     * Tiempo antes de ocultarla el mensaje\n     */\n    @Input() hideDelay: number = 600;\n\n    /**\n     * Tiempo antes de mostra el mensaje\n     */\n    @Input() showDelay: number = 500;\n\n\n    constructor(tooltip: MatTooltip, private elemRef: ElementRef) {\n      this.tooltip = tooltip;\n    }\n\n    @HostListener('mouseover') mouseover(): void {\n      const currentContent: string = this.elemRef.nativeElement.innerText;\n\n      if (!!currentContent && !!this.message) {\n        if ((currentContent.toUpperCase() !== this.message.toString().toUpperCase()) || this.isEllipsisActive(this.elemRef.nativeElement)) {\n          this.tooltip.message = this.message;\n        }\n      }\n\n      this.tooltip.showDelay =  this.showDelay;\n      this.tooltip.hideDelay = this.hideDelay;\n    }\n\n\n    private isEllipsisActive(e: {offsetWidth: number , scrollWidth: number}): boolean {\n      return (e.offsetWidth < e.scrollWidth);\n    }\n}\n","import { Directive, HostBinding, PLATFORM_ID, Inject, Input, OnChanges } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\n\n@Directive({\n  selector: 'a[href]',\n})\nexport class ExternalLinkDirective implements OnChanges {\n  @HostBinding('attr.rel') relAttr: string = '';\n  @HostBinding('attr.target') targetAttr: string = '';\n  @HostBinding('attr.href') hrefAttr: string = '';\n  @Input() href: string;\n\n  constructor(@Inject(PLATFORM_ID) private platformId: string) {}\n\n  ngOnChanges(): void {\n\n    this.hrefAttr = this.href;\n\n    if (this.isLinkExternal()) {\n      this.relAttr = 'noopener';\n      this.targetAttr = '_blank';\n    }\n  }\n\n  private isLinkExternal(): boolean {\n    return isPlatformBrowser(this.platformId) && !this.href.includes(location.hostname);\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n    name: 'externalLink'\n})\nexport class ExternalLinkPipe implements PipeTransform {\n    transform(value: string, ...args: string[]): string {\n        return '//' + value;\n    }\n}\n","import {AfterViewInit, Component, EventEmitter, Input, OnInit, Output, ViewChild} from '@angular/core';\nimport {ComboBoxListable} from './interface/combo-box-listable';\nimport {ComboBoxEditable} from './interface/combo-box-editable';\n\nexport enum ComboBoxHelisaState {\n  CLOSED,\n  SELECT,\n  INSERT\n}\n\n@Component({\n  selector: 'lib-combo-box-helisa',\n  templateUrl: './combo-box-helisa.component.html',\n  styleUrls: ['./combo-box-helisa.component.css']\n})\nexport class ComboBoxHelisaComponent<TYPE> implements OnInit, AfterViewInit {\n\n  @Input() editable: ComboBoxEditable<TYPE>;\n  @Input() listable: ComboBoxListable<TYPE>;\n  @Input() placeholder: string = 'Sin seleccionar';\n  @Input() selectedItem: TYPE;\n  @Output() selectEmitter: EventEmitter<TYPE> = new EventEmitter<TYPE>();\n  @Input() enabled: boolean = true;\n\n  private page: number = 0;\n  private pageSize: number = 50;\n  private haveNextPage: boolean = true;\n  state: ComboBoxHelisaState = ComboBoxHelisaState.CLOSED;\n\n  rows: TYPE[] = [];\n\n  constructor() {\n  }\n\n  ngOnInit(): void {\n  }\n\n  ngAfterViewInit(): void {\n    this.getNextPage();\n  }\n\n  private getNextPage(): void {\n    if (this.haveNextPage) {\n      this.listable.getData(this.page++, this.pageSize).subscribe((rows: TYPE[]): void => {\n        rows.forEach((item: TYPE): number => this.rows.push(item));\n        this.haveNextPage = rows.length > 0;\n      });\n    }\n  }\n\n  get comboBoxHelisaState(): typeof ComboBoxHelisaState {\n    return ComboBoxHelisaState;\n  }\n\n  onFocus(): void {\n    if (this.enabled) {\n      this.state = ComboBoxHelisaState.SELECT;\n    }\n  }\n\n  selectItem(row: TYPE): void {\n    this.selectedItem = row;\n    this.selectEmitter.emit(row);\n    this.state = ComboBoxHelisaState.CLOSED;\n  }\n\n  changeToInsert(): void {\n    this.state = ComboBoxHelisaState.INSERT;\n  }\n\n  insert(event: string): void {\n    if (event.trim().length > 0) {\n      this.editable.insert(event).subscribe(\n        (data: TYPE): void => {\n          this.rows.push(data);\n          this.state = ComboBoxHelisaState.SELECT;\n        }\n      );\n    } else {\n      this.state = ComboBoxHelisaState.SELECT;\n    }\n  }\n\n  onScroll(event: Event): void {\n    const element: HTMLDivElement = event.target as HTMLDivElement;\n    if (element.scrollHeight - element.scrollTop < 1000) {\n      this.getNextPage();\n    }\n  }\n}\n","import { AfterViewInit, Component, ContentChild, EventEmitter, Input, OnInit, Output, TemplateRef } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nexport enum PagingTreeInitialMode {\n  COLLAPSE,\n  EXPAND\n}\n\nexport interface PagingTreeHelisaListable<T> {\n  get(lastChildOrder: number, size: number): Observable<T[]>;\n\n  getIdField(): string;\n\n  getIdParentField(): string;\n\n  compare(a: T, b: T): number;\n}\n\ninterface HelisaNode<T> {\n  object: T;\n  level: number;\n  haveChildren: boolean;\n  expanded: boolean;\n  visible: boolean;\n  preorder: number;\n}\n\nexport interface HelisaNodeData<T> {\n  readonly object: T;\n  readonly level: number;\n  readonly haveChildren: boolean;\n  readonly expanded: boolean;\n  readonly visible: boolean;\n  readonly preorder: number;\n}\n\n@Component({\n  selector: 'hel-paging-tree',\n  templateUrl: './paging-tree-helisa.component.html',\n  styleUrls: ['./paging-tree-helisa.component.css']\n})\nexport class PagingTreeHelisaComponent<T> implements OnInit, AfterViewInit {\n\n  private pageSize: number = 200000;\n  private visibleLimit: number = 0;\n  private visibleSize: number = 100;\n  private treeMode: PagingTreeInitialMode = PagingTreeInitialMode.EXPAND;\n  private visibleObjects: Array<T> = [];\n  private service: PagingTreeHelisaListable<T>;\n  private searchNode: Map<string, HelisaNode<T>>;\n  private allNode: Array<HelisaNode<T>> = [];\n\n  @Output()\n  afterLoadData: EventEmitter<void> = new EventEmitter<void>();\n\n  @ContentChild('nodeComponent')\n  nodeComponent: TemplateRef<{ data: T, node: HelisaNodeData<T> }>;\n\n  @ContentChild('nodeTitle')\n  nodeTitle: TemplateRef<any>;\n\n  constructor() {\n  }\n\n  ngOnInit(): void {\n  }\n\n  ngAfterViewInit(): void {\n  }\n\n  @Input()\n  set mode(paramMode: PagingTreeInitialMode) {\n    this.treeMode = paramMode;\n    this.reset();\n  }\n\n  @Input()\n  set pagingTreeHelisaListable(paramService: PagingTreeHelisaListable<T>) {\n    this.service = paramService;\n    this.reset();\n  }\n\n  public reset(): void {\n    if (this.service) {\n      this.service.get(0, this.pageSize).subscribe((items: T[]): void => this.loadData(items));\n    }\n  }\n\n  private loadData(items: T[]): void {\n    this.searchNode = new Map<string, HelisaNode<T>>();\n    this.visibleObjects = [];\n    this.allNode = [];\n    items = this.sortItems(items);\n    this.searchNode = new Map<string, HelisaNode<T>>();\n    items.forEach((item: T): void => {\n      const node: HelisaNode<T> = this.createNode(item);\n      this.allNode.push(node);\n    });\n    this.reSort();\n    this.loadNextVisibleObjects(null);\n    this.afterLoadData.emit();\n  }\n\n  private sortItems(items: T[]): T[] {\n    const lAdy: Map<string, T[]> = new Map<string, T[]>();\n    const stack: T[] = [];\n    items.forEach((item: T): void => {\n      const idParent: string = item[this.service.getIdParentField()];\n      if (!idParent) {\n        stack.unshift(item);\n      } else {\n        if (!lAdy.has(idParent)) {\n          lAdy.set(idParent, []);\n        }\n        lAdy.get(idParent).push(item);\n      }\n    });\n    const response: T[] = new Array<T>(items.length);\n    let index: number = 0;\n    while (stack.length > 0) {\n      const last: T = stack.pop();\n      response[index++] = last;\n      const children: T[] = lAdy.get(last[this.service.getIdField()]);\n      if (children) {\n        for (let i: number = children.length - 1; i >= 0; i--) {\n          stack.push(children[i]);\n        }\n      }\n    }\n    return response;\n  }\n\n  private createNode(item: T): HelisaNode<T> {\n    if (this.searchNode.has(item[this.service.getIdField()])) {\n      throw Error('Ya existe el nodo.');\n    }\n    const parentInformation: HelisaNode<T> = this.getNodeInformationById(item[this.service.getIdParentField()]);\n    const nodeInformation: HelisaNode<T> = {\n      object: item,\n      haveChildren: false,\n      level: parentInformation ? parentInformation.level + 1 : 0,\n      expanded: this.treeMode === PagingTreeInitialMode.EXPAND,\n      visible: false,\n      preorder: this.searchNode.size + 1,\n    };\n    this.searchNode.set(item[this.service.getIdField()], nodeInformation);\n    if (parentInformation) {\n      parentInformation.haveChildren = true;\n    }\n    return nodeInformation;\n  }\n\n  public getNodeInformationById(id: string): HelisaNode<T> {\n    return this.searchNode.get(id);\n  }\n\n  public getNodeInformation(item: T): HelisaNode<T> {\n    return this.searchNode.get(item[this.service.getIdField()]);\n  }\n\n  getLevelClass(item: T): string {\n    return 'padding-level-' + this.getNodeInformationById(item[this.service.getIdField()]).level;\n  }\n\n  private loadNextVisibleObjects(nodeFrom: T): void {\n    const visibleObjects: T[] = [];\n    this.visibleObjects.forEach((item: T): void => {\n      if (this.getNodeInformation(item)) {\n        if (nodeFrom && this.getNodeInformation(nodeFrom).preorder >= this.getNodeInformation(item).preorder) {\n          visibleObjects.push(item);\n        } else {\n          this.getNodeInformationById(item[this.service.getIdField()]).visible = false;\n        }\n      }\n    });\n    this.visibleLimit = visibleObjects.length + this.visibleSize;\n    this.allNode.forEach((item: HelisaNode<T>): void => {\n      if (visibleObjects.length < this.visibleLimit &&\n        (!nodeFrom || this.getNodeInformation(nodeFrom).preorder < item.preorder)) {\n        const idParent: string = item.object[this.service.getIdParentField()];\n        if (!idParent) {\n          visibleObjects.push(item.object);\n          item.visible = true;\n        } else {\n          const parentInformation: HelisaNode<T> = this.getNodeInformationById(idParent);\n          if (parentInformation.visible && parentInformation.expanded) {\n            visibleObjects.push(item.object);\n            item.visible = true;\n          }\n        }\n      }\n    });\n    this.visibleObjects = visibleObjects;\n  }\n\n  collapseNode(item: T): void {\n    this.getNodeInformationById(item[this.service.getIdField()]).expanded = false;\n    this.loadNextVisibleObjects(item);\n  }\n\n  expandNode(item: T): void {\n    this.getNodeInformationById(item[this.service.getIdField()]).expanded = true;\n    this.loadNextVisibleObjects(item);\n  }\n\n  showNextPage(): void {\n    if (this.visibleObjects.length > 0) {\n      this.loadNextVisibleObjects(this.visibleObjects[this.visibleObjects.length - 1]);\n    }\n  }\n\n  get visibleData(): ReadonlyArray<T> {\n    return this.visibleObjects;\n  }\n\n  removeItem(item: T): void {\n    this.removeById(item[this.service.getIdField()]);\n  }\n\n  removeById(id: string): void {\n    if (this.getNodeInformationById(id)) {\n      const idParent: string = this.getNodeInformationById(id).object[this.service.getIdParentField()];\n      const set: Set<string> = new Set<string>();\n      set.add(id);\n      const beginIndex: number = this.allNode.findIndex(\n        (itemSearch: HelisaNode<T>): boolean => itemSearch.object[this.service.getIdField()] === id\n      );\n      let lastIndex: number = this.allNode.length;\n      for (let i: number = beginIndex + 1; i < this.allNode.length; i++) {\n        const itemSearch: T = this.allNode[i].object;\n        if (set.has(itemSearch[this.service.getIdParentField()])) {\n          set.add(itemSearch[this.service.getIdField()]);\n        } else {\n          lastIndex = i;\n          break;\n        }\n      }\n      const deletedItems: HelisaNode<T>[] = this.allNode.splice(beginIndex, lastIndex - beginIndex);\n      let parentHaveChildren: boolean = false;\n      deletedItems.forEach((deletedItem: HelisaNode<T>): boolean => this.searchNode.delete(deletedItem.object[this.service.getIdField()]));\n      this.allNode.forEach((searchItem: HelisaNode<T>, index: number): void => {\n        searchItem.preorder = index + 1;\n        if (searchItem.object[this.service.getIdParentField()] === idParent) {\n          parentHaveChildren = true;\n        }\n      });\n      if (idParent) {\n        this.getNodeInformationById(idParent).haveChildren = parentHaveChildren;\n      }\n      this.loadNextVisibleObjects(beginIndex > 0 ? this.allNode[beginIndex - 1].object : null);\n    }\n  }\n\n  addItem(item: T): void {\n    const indexParent: number = this.allNode.findIndex((node: HelisaNode<T>): boolean => node.object[this.service.getIdField()] === item[this.service.getIdParentField()]);\n    if (indexParent >= 0) {\n      this.allNode.push(this.createNode(item));\n      this.allNode[indexParent].haveChildren = true;\n      this.reSort();\n      this.expandNode(this.allNode[indexParent].object);\n    } else {\n      throw Error('No existe el padre.');\n    }\n  }\n\n  updateItem(item: T): void {\n    if (this.getNodeInformation(item)) {\n      this.getNodeInformation(item).object = item;\n      this.reSort();\n      const indexParent: number = this.allNode.findIndex(\n        (node: HelisaNode<T>): boolean => node.object[this.service.getIdField()] === item[this.service.getIdParentField()]);\n      if (indexParent >= 0) {\n        this.expandNode(this.allNode[indexParent].object);\n      } else {\n        this.loadNextVisibleObjects(null);\n      }\n    }\n  }\n\n  private reSort(): void {\n    const items: T[] = this.allNode.map((node: HelisaNode<T>): T => node.object);\n    items.sort((a: T, b: T): number => this.service.compare(a, b));\n    const preorder: T[] = this.sortItems(items);\n    preorder.forEach((object: T, index: number): number => this.getNodeInformation(object).preorder = index + 1);\n    this.allNode.sort((nodeA: HelisaNode<T>, nodeB: HelisaNode<T>): number => nodeA.preorder - nodeB.preorder);\n  }\n}\n","export enum AlertInformationType {\n    AUTHORIZATION_TRANSACTION,\n    CONFIRM_DELETE_DATA,\n    DELETE_DATA,\n    INFORMATION_NOT_VALID,\n    LOST_DATA,\n    UNCOMPLETED_DATA,\n    UNCOMPLETED_SELECTED_DATA,\n    DEFINE_COMMERCIAL_STRUCTURE,\n    DEFINE_PARKING_STRUCTURE,\n    DEFINE_RESIDENCIAL_STRUCTURE,\n    NO_SEARCH_RESULTS\n  }\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { AlertInformationType } from './alert-information-helisa-type.enum';\n\ninterface AlertInformationDataHelisaProperties {\n  alertType: AlertInformationType;\n  title: string;\n  content: string;\n  okLabel: string;\n  cancelLabel: string;\n}\n\nconst TITLE_BY_ALERT_TYPE: string[] = ['!Esta transacción requiere autorización!',\n                                       '',\n                                       '¿Está seguro que debe anular esta información?',\n                                       '',\n                                       '¿Está seguro de querer perder lo ya hecho?',\n                                       'No ha suministrado la información necesaria.',\n                                       '',\n                                       '',\n                                       '',\n                                       ''\n                                      ];\nconst CONTENT_BY_ALERT_TYPE: string[] = ['',\n                                         '¿Esta seguro que desea eliminar esta información?',\n                                         'Al anular este concepto, quedará la huella de todo lo que se hizo apoyados en su información. No es una eliminación tácita, es suprimir su uso en adelante.',\n                                         'Rectifique. Hay información no válida',\n                                         'Si no está seguro, puede continuar o \"aplicar\" y posteriormente cuando tenga clara las respuestas, usando la opción de modificar podrá completar el concepto.',\n                                         'Si insite en grabar así, este concepto no será utilizable hasta su conclusión satisfactoria, que deberá completar posteriormente modificando el concepto.',\n                                         'Elemento sin información requerida. Modifíquelo para completarlo.',\n                                         'Primero defina la estructura comercial en configuración.',\n                                         'Primero defina la estructura zona de parqueaderos en configuración.',\n                                         'Primero defina la estructura física residencial en configuración.',\n                                         'No fueron encontradas coincidencias con el criterio de búsqueda.',\n                                        ];\nconst OK_LABEL_BY_ALERT_TYPE: string[] = ['Solicitarla',\n                                          'Lo asumo',\n                                          'Lo asumo',\n                                          '',\n                                          'Lo asumo',\n                                          'Lo asumo',\n                                          'Aceptar',\n                                          '',\n                                          '',\n                                          ''\n                                         ];\nconst CANCEL_LABEL_BY_ALERT_TYPE: string[] = ['Negarla',\n                                              'Me retracto',\n                                              'Me retracto',\n                                              '',\n                                              'Me retracto',\n                                              'Me retracto',\n                                              '',\n                                              '',\n                                              '',\n                                              ''\n                                             ];\n\n@Component({\n  selector: 'hel-alert-information-data-helisa',\n  templateUrl: './alert-information-data-helisa.component.html',\n  styleUrls: ['./alert-information-data-helisa.component.sass']\n})\nexport class AlertInformationDataHelisaComponent implements OnInit {\n\n  alertType: AlertInformationType;\n  title: string;\n  content: string;\n  okLabel: string;\n  cancelLabel: string;\n\n  constructor(\n    public dialogRef: MatDialogRef<AlertInformationDataHelisaComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: AlertInformationDataHelisaProperties\n  ) {\n    this.alertType = data.alertType;\n    this.title = data.title;\n    if (this.title === undefined) {\n      this.title = TITLE_BY_ALERT_TYPE[this.alertType];\n    }\n    this.content = data.content;\n    if (this.content === undefined) {\n      this.content = CONTENT_BY_ALERT_TYPE[this.alertType];\n    }\n    this.okLabel = data.okLabel;\n    if (this.okLabel === undefined) {\n      this.okLabel = OK_LABEL_BY_ALERT_TYPE[this.alertType];\n    }\n    this.cancelLabel = data.cancelLabel;\n    if (this.cancelLabel === undefined) {\n      this.cancelLabel = CANCEL_LABEL_BY_ALERT_TYPE[this.alertType];\n    }\n  }\n\n  ngOnInit(): void {\n    if (this.alertType === AlertInformationType.DEFINE_COMMERCIAL_STRUCTURE || this.alertType === AlertInformationType.DEFINE_PARKING_STRUCTURE ||\n        this.alertType === AlertInformationType.DEFINE_RESIDENCIAL_STRUCTURE) {\n      setTimeout((): void => {\n        this.dialogRef.close();\n      }, 3000);\n    }\n  }\n\n  onCancel(): void {\n    this.dialogRef.close();\n  }\n\n  hasTitle(): boolean {\n    return this.alertType === AlertInformationType.AUTHORIZATION_TRANSACTION || this.alertType === AlertInformationType.DELETE_DATA ||\n           this.alertType === AlertInformationType.LOST_DATA || this.alertType === AlertInformationType.UNCOMPLETED_DATA;\n  }\n\n  hasContent(): boolean {\n    return this.alertType === AlertInformationType.CONFIRM_DELETE_DATA || this.alertType === AlertInformationType.DELETE_DATA ||\n           this.alertType === AlertInformationType.INFORMATION_NOT_VALID || this.alertType === AlertInformationType.LOST_DATA ||\n           this.alertType === AlertInformationType.UNCOMPLETED_DATA || this.alertType === AlertInformationType.UNCOMPLETED_SELECTED_DATA ||\n           this.alertType === AlertInformationType.DEFINE_COMMERCIAL_STRUCTURE || this.alertType === AlertInformationType.DEFINE_PARKING_STRUCTURE ||\n           this.alertType === AlertInformationType.DEFINE_RESIDENCIAL_STRUCTURE || this.alertType === AlertInformationType.NO_SEARCH_RESULTS;\n  }\n\n  hasButtons(): boolean {\n    return this.alertType === AlertInformationType.AUTHORIZATION_TRANSACTION || this.alertType === AlertInformationType.CONFIRM_DELETE_DATA ||\n           this.alertType === AlertInformationType.DELETE_DATA || this.alertType === AlertInformationType.LOST_DATA ||\n           this.alertType === AlertInformationType.UNCOMPLETED_DATA || this.alertType === AlertInformationType.UNCOMPLETED_SELECTED_DATA;\n  }\n\n  hasCancelButton(): boolean {\n    return this.alertType !== AlertInformationType.UNCOMPLETED_SELECTED_DATA;\n  }\n}\n","import {DragDropModule} from '@angular/cdk/drag-drop';\nimport {LayoutModule} from '@angular/cdk/layout';\nimport {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatNativeDateModule, MatOptionModule } from '@angular/material/core';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatListModule } from '@angular/material/list';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatTreeModule } from '@angular/material/tree';\nimport { AlertHelisaComponent } from './components/alert-helisa/alert-helisa.component';\nimport { AutocompleteHelisaComponent } from './components/autocomplete-helisa/autocomplete-helisa.component';\nimport { DateHelisaComponent } from './components/date-helisa/date-helisa.component';\nimport { DependencyTableHelisaComponent } from './components/dependency-table-helisa/dependency-table-helisa.component';\nimport { InputHelisaComponent } from './components/input-helisa/input-helisa.component';\nimport { InputWithButtonComponent } from './components/input-with-button/input-with-button.component';\nimport { TableHelisaComponent } from './components/table-helisa/table-helisa.component';\nimport { TableHelisaService } from './components/table-helisa/table-helisa.service';\nimport { ToastHelisaComponent } from './components/toast-helisa/toast-helisa.component';\nimport { TreeHelisaComponent } from './components/tree-helisa/tree-helisa.component';\nimport { TreeHelisaService } from './components/tree-helisa/tree-helisa.service';\nimport { ExternalLinkDirective } from './directives/external-link.directive';\nimport { OptionsScrollDirective } from './directives/options-scroll.directive';\nimport { HelTooltipDirective } from './directives/tooltip.directive';\nimport { ExternalLinkPipe } from './pipes/external-link.pipe';\nimport { ComboBoxHelisaComponent } from './components/combo-box-helisa/combo-box-helisa.component';\nimport { PagingTreeHelisaComponent } from './components/paging-tree-helisa/paging-tree-helisa.component';\nimport { AlertInformationDataHelisaComponent } from './components/alert-information-data-helisa/alert-information-data-helisa.component';\n\n@NgModule({\n  declarations: [\n    InputWithButtonComponent,\n    ToastHelisaComponent,\n    AlertHelisaComponent,\n    DependencyTableHelisaComponent,\n    InputHelisaComponent,\n    TableHelisaComponent,\n    TreeHelisaComponent,\n    DateHelisaComponent,\n    AutocompleteHelisaComponent,\n    OptionsScrollDirective,\n    HelTooltipDirective,\n    ExternalLinkDirective,\n    ExternalLinkPipe,\n    ComboBoxHelisaComponent,\n    PagingTreeHelisaComponent,\n    AlertInformationDataHelisaComponent\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n\n    MatAutocompleteModule,\n    MatButtonModule,\n    MatCheckboxModule,\n    MatToolbarModule,\n    MatExpansionModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatSelectModule,\n    MatOptionModule,\n    MatListModule,\n    MatIconModule,\n    MatSnackBarModule,\n    MatCardModule,\n    LayoutModule,\n    MatTooltipModule,\n    MatButtonModule,\n    MatSidenavModule,\n    MatIconModule,\n    MatListModule,\n    MatGridListModule,\n    MatCardModule,\n    MatMenuModule,\n    MatInputModule,\n    MatSelectModule,\n    MatRadioModule,\n    MatProgressSpinnerModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatSortModule,\n    MatDialogModule,\n    MatTabsModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatStepperModule,\n    MatChipsModule,\n    DragDropModule,\n    MatTreeModule\n  ],\n  exports: [\n    InputWithButtonComponent,\n    ToastHelisaComponent,\n    AlertHelisaComponent,\n    DependencyTableHelisaComponent,\n    InputHelisaComponent,\n    TableHelisaComponent,\n    TreeHelisaComponent,\n    DateHelisaComponent,\n    AutocompleteHelisaComponent,\n    OptionsScrollDirective,\n    HelTooltipDirective,\n    ExternalLinkDirective,\n    ExternalLinkPipe,\n    MatButtonModule,\n    MatCheckboxModule,\n    MatToolbarModule,\n    MatExpansionModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatSelectModule,\n    MatOptionModule,\n    MatListModule,\n    MatIconModule,\n    MatSnackBarModule,\n    MatCardModule,\n    LayoutModule,\n    MatTooltipModule,\n    MatButtonModule,\n    MatSidenavModule,\n    MatIconModule,\n    MatListModule,\n    MatGridListModule,\n    MatCardModule,\n    MatMenuModule,\n    MatInputModule,\n    MatSelectModule,\n    MatRadioModule,\n    MatProgressSpinnerModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatSortModule,\n    MatDialogModule,\n    MatTabsModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatStepperModule,\n    MatChipsModule,\n    DragDropModule,\n    MatTreeModule,\n    ComboBoxHelisaComponent,\n    PagingTreeHelisaComponent,\n    AlertInformationDataHelisaComponent\n  ],\n  providers: [TableHelisaService, TreeHelisaService]\n})\nexport class HelisaLibModule { }\n","import { Injectable } from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { Observable } from 'rxjs';\nimport { AlertInformationDataHelisaComponent} from './alert-information-data-helisa.component';\nimport { AlertInformationType } from './alert-information-helisa-type.enum';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AlertInformationDataHelisaService {\n\n  constructor(public dialog: MatDialog) { }\n\n  openDialog(alertType: AlertInformationType, title?: string, content?: string, okLabel?: string, cancelLabel?: string): Observable<boolean> {\n    const dialogRef: MatDialogRef<AlertInformationDataHelisaComponent> = this.dialog.open(AlertInformationDataHelisaComponent, {\n      width: '250px',\n      data: { alertType, title, content, okLabel, cancelLabel }\n    });\n\n    return dialogRef.afterClosed();\n  }\n}\n","/*\n * Public API Surface of helisa-lib\n */\n\n// InputWithButton\nexport * from './lib/components/input-with-button/input-with-button.component';\n\n// ToastHelisa\nexport * from './lib/components/toast-helisa/toast-helisa.component';\nexport * from './lib/components/toast-helisa/toast-helisa.service';\nexport * from './lib/components/toast-helisa/toast-type.enum';\n\n// AlertHelisa\nexport * from './lib/components/alert-helisa/alert-helisa-type.enum';\nexport * from './lib/components/alert-helisa/alert-helisa.component';\nexport * from './lib/components/alert-helisa/alert-helisa.service';\n\n// DependencyTableHelisa\nexport * from './lib/components/dependency-table-helisa/dependency-table-helisa.component';\nexport * from './lib/components/dependency-table-helisa/dependency-table-helisa.service';\n\n// InputHelisa\nexport * from './lib/components/input-helisa/input-helisa.component';\n\n\n// TableHelisa\nexport * from './lib/components/table-helisa/table-helisa.component';\nexport * from './lib/components/table-helisa/table-helisa.interface';\nexport * from './lib/components/table-helisa/table-helisa.service';\n\n// Date\nexport * from './lib/components/date-helisa/date-helisa.component';\n\n// Tree\nexport * from './lib/components/tree-helisa/tree-helisa.component';\nexport * from './lib/components/tree-helisa/tree-helisa-connect';\nexport * from './lib/components/tree-helisa/tree-helisa.service';\nexport * from './lib/components/tree-helisa/node';\n\n\n// Autocomplete\nexport * from './lib/components/autocomplete-helisa/autocomplete-helisa.component';\nexport * from './lib/components/autocomplete-helisa/autocomplete-helisa.component.service';\n\n// Directives\nexport * from './lib/directives/options-scroll.directive';\nexport * from './lib/directives/tooltip.directive';\n\n\n// Module\nexport * from './lib/helisa-lib.module';\n\n// ComboBoxHelisa\nexport * from './lib/components/combo-box-helisa/combo-box-helisa.component';\nexport * from './lib/components/combo-box-helisa/interface/combo-box-listable';\nexport * from './lib/components/combo-box-helisa/interface/combo-box-editable';\n\n// PagingTreeHelisa\nexport * from './lib/components/paging-tree-helisa/paging-tree-helisa.component';\n\n// AlertInformationDataHelisa\nexport * from './lib/components/alert-information-data-helisa/alert-information-data-helisa.component';\nexport * from './lib/components/alert-information-data-helisa/alert-information-data-helisa.service';\nexport * from './lib/components/alert-information-data-helisa/alert-information-helisa-type.enum';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n\nexport {ExternalLinkDirective as ɵa} from './lib/directives/external-link.directive';\nexport {ExternalLinkPipe as ɵb} from './lib/pipes/external-link.pipe';"],"names":["FormControl","Validators","EventEmitter","Component","Input","ViewChild","Output","Inject","MAT_SNACK_BAR_DATA","Injectable","MatSnackBar","ToastType","AlertHelisaType","MatDialogRef","MAT_DIALOG_DATA","MatDialog","Subject","ViewChildren","InputHelisaType","ColumnType","EventScope","TotalType","ChangeColumnConfigurationType","TableHelisaType","MatTableDataSource","moveItemInArray","MatSort","MatTable","ElementRef","moment_","TypeCalendarEnum","tap","filter","BehaviorSubject","NestedTreeControl","MatTreeNestedDataSource","_.remove","_.orderBy","Router","HostListener","debounceTime","throttleTime","of","startWith","map","takeUntil","Directive","MatAutocomplete","MatTooltip","isPlatformBrowser","PLATFORM_ID","HostBinding","Pipe","ComboBoxHelisaState","PagingTreeInitialMode","ContentChild","AlertInformationType","NgModule","CommonModule","FormsModule","ReactiveFormsModule","MatAutocompleteModule","MatButtonModule","MatCheckboxModule","MatToolbarModule","MatExpansionModule","MatFormFieldModule","MatInputModule","MatSelectModule","MatOptionModule","MatListModule","MatIconModule","MatSnackBarModule","MatCardModule","LayoutModule","MatTooltipModule","MatSidenavModule","MatGridListModule","MatMenuModule","MatRadioModule","MatProgressSpinnerModule","MatTableModule","MatPaginatorModule","MatSortModule","MatDialogModule","MatTabsModule","MatDatepickerModule","MatNativeDateModule","MatStepperModule","MatChipsModule","DragDropModule","MatTreeModule"],"mappings":"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"}