{"version":3,"file":"helisa-lib.umd.js","sources":["../esm2015/projects/helisa-lib/src/lib/components/input-with-button/input-with-button.component.ts","../esm2015/projects/helisa-lib/src/lib/components/toast-helisa/toast-helisa.component.ts","../esm2015/projects/helisa-lib/src/lib/components/toast-helisa/toast-helisa.service.ts","../esm2015/projects/helisa-lib/src/lib/components/toast-helisa/toast-type.enum.ts","../esm2015/projects/helisa-lib/src/lib/components/alert-helisa/alert-helisa-type.enum.ts","../esm2015/projects/helisa-lib/src/lib/components/alert-helisa/alert-helisa.component.ts","../esm2015/projects/helisa-lib/src/lib/components/alert-helisa/alert-helisa.service.ts","../../../node_modules/tslib/tslib.es6.js","../esm2015/projects/helisa-lib/src/lib/components/dependency-table-helisa/dependency-table-helisa.service.ts","../esm2015/projects/helisa-lib/src/lib/components/table-helisa/table-helisa.service.ts","../esm2015/projects/helisa-lib/src/lib/components/dependency-table-helisa/dependency-table-helisa.component.ts","../esm2015/projects/helisa-lib/src/lib/components/input-helisa/input-helisa.component.ts","../esm2015/projects/helisa-lib/src/lib/components/table-helisa/table-helisa.interface.ts","../esm2015/projects/helisa-lib/src/lib/components/table-helisa/table-helisa-connect.component.ts","../esm2015/projects/helisa-lib/src/lib/components/table-helisa/table-helisa.component.ts","../esm2015/projects/helisa-lib/src/lib/components/date-helisa/date-helisa.component.ts","../esm2015/projects/helisa-lib/src/lib/components/tree-helisa/tree-helisa.service.ts","../esm2015/projects/helisa-lib/src/lib/components/tree-helisa/tree-helisa-connect.ts","../esm2015/projects/helisa-lib/src/lib/components/tree-helisa/tree-helisa.component.ts","../esm2015/projects/helisa-lib/src/lib/components/autocomplete-helisa/autocomplete-helisa.component.service.ts","../esm2015/projects/helisa-lib/src/lib/components/autocomplete-helisa/autocomplete-helisa.component.ts","../projects/helisa-lib/src/lib/directives/options-scroll.directive.ts","../projects/helisa-lib/src/lib/directives/tooltip.directive.ts","../projects/helisa-lib/src/lib/directives/external-link.directive.ts","../projects/helisa-lib/src/lib/pipes/external-link.pipe.ts","../esm2015/projects/helisa-lib/src/lib/components/combo-box-helisa/combo-box-helisa.component.ts","../esm2015/projects/helisa-lib/src/lib/components/paging-tree-helisa/paging-tree-helisa.component.ts","../esm2015/projects/helisa-lib/src/lib/components/alert-information-data-helisa/alert-information-helisa-type.enum.ts","../esm2015/projects/helisa-lib/src/lib/components/alert-information-data-helisa/alert-information-data-helisa.component.ts","../../projects/helisa-lib/src/lib/helisa-lib.module.ts","../esm2015/projects/helisa-lib/src/lib/components/alert-information-data-helisa/alert-information-data-helisa.service.ts","../../../projects/helisa-lib/src/public-api.ts","../../../projects/helisa-lib/src/helisa-lib.ts"],"sourcesContent":["import { Component, OnInit, Input, Output, EventEmitter, ViewChild, ElementRef } from '@angular/core';\r\nimport { FormControl, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'hel-input-with-button',\r\n  templateUrl: './input-with-button.component.html',\r\n  styleUrls: ['./input-with-button.component.sass']\r\n})\r\nexport class InputWithButtonComponent implements OnInit {\r\n\r\n  @Input() placeholder: string = '';\r\n  @Input() inputFormControl: FormControl = new FormControl('', Validators.required);\r\n  @Input() requiredMessage: string = 'El campo es requerido';\r\n  @Input() value: string = '';\r\n  @Input() isFocused: boolean = false;\r\n  @ViewChild('inputText', {static: true}) nameField: ElementRef;\r\n\r\n  @Output() done: EventEmitter<string> = new EventEmitter<string>();\r\n  @Output() cancel: EventEmitter<void> = new EventEmitter<void>();\r\n\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n    if (this.value !== '') {\r\n      this.inputFormControl.setValue(this.value);\r\n    }\r\n    this.nameField.nativeElement.focus();\r\n  }\r\n\r\n\r\n  onDone(): void {\r\n    if (this.inputFormControl.valid) {\r\n      this.done.emit(this.inputFormControl.value);\r\n    }\r\n  }\r\n\r\n  onCancel(): void {\r\n    this.cancel.emit();\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MAT_SNACK_BAR_DATA } from '@angular/material/snack-bar';\r\nimport { ToastType } from './toast-type.enum';\r\n\r\n// @dynamic\r\n@Component({\r\n  selector: 'hel-toast',\r\n  templateUrl: './toast-helisa.component.html',\r\n  styleUrls: ['./toast-helisa.component.sass']\r\n})\r\nexport class ToastHelisaComponent implements OnInit {\r\n\r\n  constructor(@Inject(MAT_SNACK_BAR_DATA) public data: {type: ToastType, message: string, subMessages?: string[]}) { }\r\n\r\n  ngOnInit(): void {}\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ToastType } from './toast-type.enum';\r\nimport { ToastHelisaComponent } from './toast-helisa.component';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ToastHelisaService {\r\n\r\n  durationInSeconds: number = 5;\r\n\r\n  constructor(private snackBar: MatSnackBar) { }\r\n\r\n  showToast(type: ToastType, message: string, subMessages?: string[]): void {\r\n    subMessages = subMessages ? subMessages : [];\r\n    this.snackBar.openFromComponent(ToastHelisaComponent, {\r\n      data: {message, type, subMessages},\r\n      duration: this.durationInSeconds * 1000\r\n    });\r\n  }\r\n}\r\n","export enum ToastType {\r\n    DONE = 'done',\r\n    ERROR = 'error',\r\n    INFO = 'info'\r\n}\r\n","export enum AlertHelisaType {\r\n    ERROR = 'ERROR',\r\n    CONFIRMATION = 'CONFIRMATION'\r\n}\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { AlertHelisaType } from './alert-helisa-type.enum';\r\n\r\ninterface AlertHelisaProperties {\r\n  title: string;\r\n  content: string;\r\n  type: AlertHelisaType;\r\n  okLabel: string;\r\n  cancelLabel: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'hel-alert',\r\n  templateUrl: './alert-helisa.component.html',\r\n  styleUrls: ['./alert-helisa.component.sass']\r\n})\r\nexport class AlertHelisaComponent implements OnInit {\r\n\r\n  content: string;\r\n  title: string;\r\n  hasCancel: boolean;\r\n  okLabel: string;\r\n  cancelLabel: string;\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<AlertHelisaComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: AlertHelisaProperties\r\n  ) {\r\n    this.content = data.content;\r\n    this.title = data.title;\r\n    this.okLabel = data.okLabel;\r\n    if (this.okLabel === undefined) {\r\n      this.okLabel = 'aceptar';\r\n    }\r\n    this.cancelLabel = data.cancelLabel;\r\n    if (this.cancelLabel === undefined) {\r\n      this.cancelLabel = 'cancelar';\r\n    }\r\n    this.hasCancel = data.type === AlertHelisaType.CONFIRMATION;\r\n    dialogRef.disableClose = true;\r\n    dialogRef.keydownEvents().subscribe((event: KeyboardEvent): void => {\r\n      if (event.code === 'Escape') {\r\n        this.dialogRef.close(this.onCancel());\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  onCancel(): void {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { Observable } from 'rxjs';\r\nimport { AlertHelisaType } from './alert-helisa-type.enum';\r\nimport { AlertHelisaComponent } from './alert-helisa.component';\r\n\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AlertHelisaService {\r\n\r\n  constructor(public dialog: MatDialog) { }\r\n\r\n  openDialog(type: AlertHelisaType, title: string, content: string, okLabel?: string, cancelLabel?: string): Observable<boolean> {\r\n    const dialogRef: MatDialogRef<AlertHelisaComponent> = this.dialog.open(AlertHelisaComponent, {\r\n      width: '250px',\r\n      data: { title, content, type, okLabel, cancelLabel }\r\n    });\r\n\r\n    return dialogRef.afterClosed();\r\n  }\r\n}\r\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, Subject, BehaviorSubject } from 'rxjs';\r\nimport {ColumnConfig, AddRowButton, ConfigRowStyles, TotalTableHelisa} from '../table-helisa/table-helisa.interface';\r\nimport { EventDependency} from './dependency-table-helisa.component';\r\n\r\nexport interface ConfigTable<T> {\r\n  columns: Array<ColumnConfig>;\r\n  isRemote: boolean;\r\n  dataSource?: Array<T>;\r\n  count?: number;\r\n  order?: number;\r\n  showTitle?: boolean;\r\n  indexRowSelect?: number;\r\n  isDragged?: boolean;\r\n  addRowButton?: AddRowButton;\r\n  configRowStylesFromColumn?: Array<ConfigRowStyles<T>>;\r\n  isCellSelection?: boolean;\r\n  addBookButton?: boolean;\r\n}\r\n\r\n@Injectable()\r\nexport class DependencyTableHelisaService<T> {\r\n\r\n\r\n  tables: Subject<ConfigTable<T>[]> = new Subject();\r\n  infoTables: Array<ConfigTable<T>> = new Array();\r\n\r\n  private emitVisibilityButton$: Subject<EventDependency<boolean>> = new Subject<EventDependency<boolean>>();\r\n  emitVisibilityButton: Observable<EventDependency<boolean>> = this.emitVisibilityButton$.asObservable();\r\n\r\n  private emitVisibilityAllButtons$: Subject<boolean> = new Subject<boolean>();\r\n  emitVisibilityAllButtons: Observable<boolean> = this.emitVisibilityAllButtons$.asObservable();\r\n\r\n  private emitIsCellSelection$: Subject<EventDependency<boolean>> = new Subject<EventDependency<boolean>>();\r\n  emitIsCellSelection: Observable<EventDependency<boolean>> = this.emitIsCellSelection$.asObservable();\r\n\r\n  private emitChangeColumns$: Subject<EventDependency<ColumnConfig[]>> = new Subject<EventDependency<ColumnConfig[]>>();\r\n  emitChangeColumns: Observable<EventDependency<ColumnConfig[]>> = this.emitChangeColumns$.asObservable();\r\n\r\n  emitTotal: Subject<EventDependency<TotalTableHelisa>> = new Subject<EventDependency<TotalTableHelisa>>();\r\n  emitNextPage: Subject<EventDependency<T[]>> = new Subject<EventDependency<T[]>>();\r\n\r\n  constructor() { }\r\n\r\n  /**\r\n   * retorna un Observable<ConfigTable[]>\r\n   */\r\n  getTables(): Observable<ConfigTable<T>[]> {\r\n    return this.tables;\r\n  }\r\n\r\n  /**\r\n   * Actualiza las dependencias, agrendo la tabla que envian en el orden correspondiente o al final.\r\n   * También remueve las dependecias que hay apartir de la tabla segun se indique en el parametro.\r\n   * @param configTable Objeto que contiene la configuración para la tabla.\r\n   * @param withRemoveDependency boolean por defecto es false, si es 'true' indica que remueva las dependencias apartir de el.\r\n   */\r\n  updateDependency(configTable: ConfigTable<T>, withRemoveDependency: boolean = false): void {\r\n    if (withRemoveDependency) {\r\n      this.infoTables = this.infoTables.slice(0, !configTable.order ? 0 : configTable.order);\r\n    }\r\n    if (!configTable.order || configTable.order >= this.infoTables.length) {\r\n      configTable.order = this.infoTables.length;\r\n    }\r\n    this.infoTables[configTable.order] = configTable;\r\n    if (configTable.isRemote) {\r\n      configTable.dataSource = null;\r\n      if (configTable.count === null) {\r\n        throw new Error('hace falta el count');\r\n      }\r\n    } else {\r\n      if (configTable.dataSource === null) {\r\n        throw new Error('hace falta el dataSource');\r\n      }\r\n      configTable.count = configTable.dataSource.length;\r\n    }\r\n    this.tables.next(this.infoTables);\r\n  }\r\n\r\n  /**\r\n   * Emite un evento de total con la información para la tabla correspondiente\r\n   * @param event wrapper que contiene el indice de la tabla y la información de la pagina\r\n   */\r\n  setTotal(event: EventDependency<TotalTableHelisa>): void {\r\n    this.emitTotal.next(event);\r\n  }\r\n\r\n  /**\r\n   * Emite un evento de agregar pagina con la pagina para la tabla correspondiente\r\n   * @param event wrapper que contiene el indice de la tabla y la información de la pagina\r\n   */\r\n  addPage(event: EventDependency<T[]>): void {\r\n    this.emitNextPage.next(event);\r\n  }\r\n\r\n  selectIndexRow(config: ConfigTable<T>): void {\r\n    if (this.infoTables[config.order]) {\r\n      this.infoTables[config.order].indexRowSelect = config.indexRowSelect;\r\n      this.tables.next(this.infoTables);\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * Muestra o esconde el boton una tabla en especifico\r\n   * @param event para indicar el index de la tabla y en \"data\" true o false\r\n   */\r\n  changeVisibilityButton(event: EventDependency<boolean>): void {\r\n    this.emitVisibilityButton$.next(event);\r\n  }\r\n\r\n\r\n  /**\r\n   * Esconde los botones de todas las tablas\r\n   * @param show indicar si se muestran o no todos los botones de las tablas\r\n   */\r\n  changeVisibilityAllButtons(show: boolean): void {\r\n    this.emitVisibilityAllButtons$.next(show);\r\n  }\r\n\r\n  /**\r\n   * Para habilitar el manejo de selección de celda\r\n   * @param event para indicar el index de la tabla y en \"data\" true o false\r\n   */\r\n  changeisCellSelection(event: EventDependency<boolean>): void {\r\n    this.emitIsCellSelection$.next(event);\r\n  }\r\n\r\n   /**\r\n    * Para habilitar el cambio de columnas\r\n    * @param event para indicar el index de la tabla y en \"data\" columnas\r\n    */\r\n  changeColumnsByTable( event: EventDependency<ColumnConfig[]>): void {\r\n    this.emitChangeColumns$.next(event);\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {BehaviorSubject, Observable, Subject} from 'rxjs';\r\nimport {TotalTableHelisa} from './table-helisa.interface';\r\nimport {TableHelisaComponent} from './table-helisa.component';\r\n\r\nexport interface TableHelisaServiceInfo<T> {\r\n  obj: T;\r\n  table?: {} | TableHelisaComponent<T>;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TableHelisaService<T> {\r\n\r\n  private emitChangeSource: Subject<TableHelisaServiceInfo<TotalTableHelisa>> = new Subject<TableHelisaServiceInfo<TotalTableHelisa>>();\r\n  private emitNextPage: Subject<TableHelisaServiceInfo<T[]>> = new Subject<TableHelisaServiceInfo<T[]>>();\r\n\r\n  totalReturn: Observable<TableHelisaServiceInfo<TotalTableHelisa>> = this.emitChangeSource.asObservable();\r\n  nextPageReturn: Observable<TableHelisaServiceInfo<T[]>> = this.emitNextPage.asObservable();\r\n\r\n  private emitVisibleButton$: Subject<boolean> = new Subject<boolean>();\r\n  /**\r\n   * Observable para saber si se debe mostrar o esconder el boton de add row\r\n   */\r\n  emitVisibleButton: Observable<boolean> = this.emitVisibleButton$.asObservable();\r\n\r\n  setTotal(total: TotalTableHelisa, table?: TableHelisaComponent<TotalTableHelisa>): void {\r\n    this.emitChangeSource.next({obj: total, table});\r\n  }\r\n\r\n  addPage(page: T[], table?: TableHelisaComponent<T>): void {\r\n    this.emitNextPage.next({obj: page, table});\r\n  }\r\n\r\n  /**\r\n   * para modificar el valor de si se muestra o no el boton de add row de la tabla\r\n   * @param change indicar si se muestra o no el boton de add row de la tabla\r\n   */\r\n  changeVisibilityButton(change: boolean): void {\r\n    this.emitVisibleButton$.next(change);\r\n  }\r\n\r\n}\r\n","import {Component, OnInit, EventEmitter, Output, QueryList, ViewChildren, Input} from '@angular/core';\r\nimport {DependencyTableHelisaService, ConfigTable} from './dependency-table-helisa.service';\r\nimport {Cell, ColumnConfig, EventColumn, RequestTableHelisa, SelectObject, TotalTableHelisa} from '../table-helisa/table-helisa.interface';\r\nimport {TableHelisaService} from '../table-helisa/table-helisa.service';\r\nimport {TableHelisaComponent} from '../table-helisa/table-helisa.component';\r\n\r\nexport interface EventDependency<T> {\r\n  index: number;\r\n  data: T;\r\n}\r\n\r\n@Component({\r\n  selector: 'hel-dependency-table',\r\n  templateUrl: './dependency-table-helisa.component.html',\r\n  styleUrls: ['./dependency-table-helisa.component.sass'],\r\n  providers: [DependencyTableHelisaService]\r\n})\r\nexport class DependencyTableHelisaComponent<T> implements OnInit {\r\n\r\n  tables: Array<ConfigTable<T>> = [];\r\n  @ViewChildren('viewTables') viewTables: QueryList<TableHelisaComponent<T>>;\r\n  @Input() showToolTip: boolean = true;\r\n\r\n  /**\r\n   * deprecated, use selectObject\r\n   */\r\n  @Output() selected: EventEmitter<EventDependency<T>> = new EventEmitter<EventDependency<T>>();\r\n  @Output() selectObject: EventEmitter<EventDependency<{} | T>> = new EventEmitter<EventDependency<{} | T>>();\r\n  @Output() nextPage: EventEmitter<EventDependency<{} | T>> = new EventEmitter<EventDependency<{} | T>>();\r\n  @Output() total: EventEmitter<EventDependency<{} | T>> = new EventEmitter<EventDependency<{}>>();\r\n  @Output() sort: EventEmitter<EventDependency<{} | T>> = new EventEmitter<EventDependency<{}>>();\r\n  @Output() drop: EventEmitter<EventDependency<{} | T>> = new EventEmitter<EventDependency<{}>>();\r\n  @Output() addRow: EventEmitter<number> = new EventEmitter<number>();\r\n  @Output() selectCell: EventEmitter<EventDependency<{} | T>> = new EventEmitter<EventDependency<{} | T>>();\r\n  @Output() bookClicked: EventEmitter<EventDependency<{} | T>> = new EventEmitter<EventDependency<{} | T>>();\r\n  selectedObject: EventDependency<{}> = null;\r\n\r\n\r\n  /**\r\n   * Tiempo antes de ocultarla el mensaje del tooltip\r\n   */\r\n  @Input() hideDelay: number = 600;\r\n\r\n  /**\r\n   * Tiempo antes de mostra el mensaje del tooltip\r\n   */\r\n  @Input() showDelay: number = 500;\r\n\r\n\r\n  constructor(private dependencyTableHelisaService: DependencyTableHelisaService<T>, private tableService: TableHelisaService<T>) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getTables();\r\n    this.dependencyTableHelisaService.emitNextPage.subscribe(\r\n      (event: EventDependency<T[]>): void => {\r\n        this.tableService.addPage(event.data, this.viewTables.toArray()[event.index]);\r\n      }\r\n    );\r\n\r\n    this.dependencyTableHelisaService.emitTotal.subscribe(\r\n      (event: EventDependency<TotalTableHelisa>): void => {\r\n        this.tableService.setTotal(event.data, this.viewTables[event.index]);\r\n      }\r\n    );\r\n\r\n    // Observable para mostrar o esconder el boton de una tabla\r\n    this.dependencyTableHelisaService.emitVisibilityButton.subscribe(\r\n      (data: EventDependency<boolean>): void => {\r\n        if (!!data && data.index !== undefined) {\r\n          const table: ConfigTable<T> = this.tables[data.index];\r\n          if (!!table) {\r\n            table.addRowButton.showButton = data.data;\r\n          }\r\n        }\r\n      }\r\n    );\r\n\r\n    // Observable para mostrar o esconder los botones de todas las tablas\r\n    this.dependencyTableHelisaService.emitVisibilityAllButtons.subscribe(\r\n      (data: boolean): void => {\r\n        if (data !== undefined && data != null) {\r\n          this.tables.forEach((element: ConfigTable<T>): void => {\r\n            if (!!element.addRowButton) {\r\n              element.addRowButton.showButton = data;\r\n            }\r\n          });\r\n        }\r\n      }\r\n    );\r\n\r\n    // Observable para manejo de selección de celdas\r\n    this.dependencyTableHelisaService.emitIsCellSelection.subscribe(\r\n      (data: EventDependency<boolean>): void => {\r\n        if (!!data && data.index !== undefined) {\r\n          const table: ConfigTable<T> = this.tables[data.index];\r\n          if (table) {\r\n            table.isCellSelection = data.data;\r\n          }\r\n        }\r\n      });\r\n\r\n    // Observable para manejo de columnas\r\n    this.dependencyTableHelisaService.emitChangeColumns.subscribe(\r\n      (data: EventDependency<ColumnConfig[]>): void => {\r\n        if (!!data && data.index !== undefined) {\r\n          const table: ConfigTable<T> = this.tables[data.index];\r\n          if (table) {\r\n            table.columns = data.data;\r\n          }\r\n        }\r\n      });\r\n  }\r\n\r\n  /**\r\n   * retorna el servicio que gestiona el componente.\r\n   */\r\n  getService(): DependencyTableHelisaService<T> {\r\n    return this.dependencyTableHelisaService;\r\n  }\r\n\r\n  /**\r\n   * Obtiene un observable con las tablas dependientes desde el servicio.\r\n   */\r\n  getTables(): void {\r\n    this.dependencyTableHelisaService.getTables()\r\n      .subscribe((tables: ConfigTable<T>[]): void => {\r\n          this.tables.splice(0, this.tables.length, ...tables);\r\n          this.viewTables.forEach((item: TableHelisaComponent<T>): void => {\r\n            item.reload();\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  /**\r\n   * Evento que se dispara desde una tabla, emitiendo un nuevo evento con el inidice de la tabla que dispara el evento y el evento generado.\r\n   * @param index indica el indice de la tabla seleccionada\r\n   * @param data retorna la fila que fue seleccionada\r\n   */\r\n  onSelectedDependency(index: number, event: SelectObject<T>): void {\r\n    this.selectedObject = {index, data: event};\r\n    this.selected.emit({index, data: event.value});\r\n    this.selectObject.emit({index, data: event});\r\n  }\r\n\r\n  /**\r\n   * Evento que se dispara desde una tabla, emitiendo un nuevo evento con el inidice de la tabla que dispara el evento y el evento generado.\r\n   * @param index indica el indice de la tabla que genera el evento\r\n   * @param event evento generado desde la tabla\r\n   */\r\n  onNextPage(index: number, event: RequestTableHelisa<T>): void {\r\n    this.nextPage.emit({index, data: event});\r\n  }\r\n\r\n  /**\r\n   * Evento que se dispara desde una tabla, emitiendo un nuevo evento con el inidice de la tabla que dispara el evento y el evento generado.\r\n   * @param index indica el indice de la tabla que genera el evento\r\n   * @param event evento generado desde la tabla\r\n   */\r\n  onTotal(index: number, event: EventColumn): void {\r\n    this.total.emit({index, data: event});\r\n  }\r\n\r\n  /**\r\n   * Evento que se dispara desde una tabla, emitiendo un nuevo evento con el inidice de la tabla que dispara el evento y el evento generado.\r\n   * @param index indica el indice de la tabla que genera el evento\r\n   * @param event evento generado desde la tabla\r\n   */\r\n  onSort(index: number, event: EventColumn): void {\r\n    this.sort.emit({index, data: event});\r\n  }\r\n\r\n  /**\r\n   * Evento que se dispara desde una tabla, emitiendo un nuevo evento con el inidice de la tabla que dispara el evento y el evento generado.\r\n   * @param index indica el indice de la tabla que genera el evento\r\n   * @param event evento generado desde la tabla\r\n   */\r\n  onDrop(index: number, event: EventDependency<T>): void {\r\n    this.drop.emit({index, data: event});\r\n  }\r\n\r\n  /**\r\n   * Evento que se dispara desde una tabla, emite el indice de la tabla al cual se le debe añadir una nueva fila\r\n   * @param index indica el indice de la tabla de la cual se dispara el evento\r\n   */\r\n  onAddRow(index: number): void {\r\n    this.addRow.emit(index);\r\n  }\r\n\r\n  selectedCell(index: number, event: Cell<T>): void {\r\n    if (this.tables[index].isCellSelection) {\r\n      this.selectCell.emit({index, data: event});\r\n    }\r\n  }\r\n\r\n  onBookClicked(index: number, event: EventDependency<T>): void {\r\n    this.bookClicked.emit({index, data: event});\r\n  }\r\n}\r\n","import { Component, EventEmitter, Input, OnInit, Output, ViewChild, ElementRef, AfterViewInit } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\n\r\nexport enum InputHelisaType {\r\n  DEFAULT, IDENTITY, NUMERIC, DOUBLE\r\n}\r\n\r\n@Component({\r\n  selector: 'hel-input',\r\n  templateUrl: './input-helisa.component.html',\r\n  styleUrls: ['./input-helisa.component.sass']\r\n})\r\nexport class InputHelisaComponent implements OnInit, AfterViewInit {\r\n\r\n  private readonly DECIMAL_SEPARATOR: string = '.';\r\n  private readonly THOUSAND_SEPARATOR: string = ',';\r\n\r\n  @Input() placeholder: string = '';\r\n  @Input() floatLabel: 'never' | 'always' | 'auto' = 'never';\r\n\r\n  /** Activar o desactivar el autocompletado\r\n   * (Caracteristica de los navegadores para campos comunes como\r\n   * Direccion , Usuario, Password ... etc)\r\n   */\r\n  @Input() autocompleteMode: boolean = false;\r\n\r\n  // Mostrar o no el icono de buscar\r\n  @Input() isSearch: boolean = false;\r\n  // @Input() inputFormControl: FormControl = new FormControl('');\r\n  @Input() isFocused: boolean = false;\r\n\r\n  /**\r\n   * Deprecated\r\n   */\r\n  @Input() disabled: boolean = false;\r\n  @Input() type: InputHelisaType = InputHelisaType.DEFAULT;\r\n\r\n  /**\r\n   * Deprecated\r\n   */\r\n  @Output() setValue: EventEmitter<string> = new EventEmitter<string>();\r\n\r\n  // tslint:disable-next-line:no-any\r\n  @Output() blur: EventEmitter<any> = new EventEmitter();\r\n\r\n  formControlMask: FormControl = new FormControl('');\r\n  private realValue: string = '';\r\n  private inputFormReal: FormControl = new FormControl('');\r\n\r\n  @ViewChild('inputText', {static: true}) inputText: ElementRef;\r\n\r\n  constructor() {\r\n  }\r\n\r\n  @Input()\r\n  set inputFormControl(formControl: FormControl) {\r\n    this.inputFormReal = formControl;\r\n    this.inputFormReal.registerOnDisabledChange(((isDisabled: boolean): void => {\r\n      if (isDisabled) {\r\n        this.formControlMask.disable();\r\n      } else {\r\n        this.formControlMask.enable();\r\n      }\r\n    }));\r\n    this.inputFormReal.valueChanges.subscribe((data: string): void => {\r\n      this.statusChange(this.inputFormReal.status);\r\n      if (this.getMaskedValue(data) !== this.formControlMask.value) {\r\n        this.change(data);\r\n        if (this.isFocused) {\r\n          this.onFocus(null);\r\n        }\r\n      }\r\n    });\r\n    this.formControlMask.setValidators(this.inputFormReal.validator);\r\n    this.change(this.inputFormReal.value);\r\n    // disable control\r\n    if (formControl.disabled) {\r\n      this.formControlMask.disable({ onlySelf: true });\r\n    }\r\n    this.inputFormReal.statusChanges.subscribe(\r\n      (data: string): void => {\r\n        this.statusChange(data);\r\n        if (this.isFocused) {\r\n          this.onFocus(null);\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n\r\n  private statusChange(data: string): void {\r\n    if (data === 'INVALID') {\r\n      this.formControlMask.setErrors({ key: 'Error de validación.' });\r\n      this.formControlMask.markAsTouched();\r\n    } else {\r\n      this.formControlMask.setErrors(null);\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    if (this.isFocused) {\r\n      this.inputText.nativeElement.focus();\r\n    }\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    // this.isParentDisabled();\r\n  }\r\n\r\n  /*isParentDisabled(): void {\r\n    setTimeout(() => {\r\n      if (this.nameInput.nativeElement.closest('.hw-disabled-mode')) {\r\n        this.disabled = true;\r\n      } else {\r\n        this.disabled = false;\r\n      }\r\n    });\r\n  }*/\r\n\r\n  search(): void {\r\n    this.setValue.emit(this.realValue);\r\n  }\r\n\r\n  change(event: string): void {\r\n    if (event != null) {\r\n      event = event + '';\r\n    }\r\n    let position: number = this.inputText.nativeElement.selectionStart;\r\n    const length: number = event ? event.length : 0;\r\n    this.realValue = this.getRealValue(event);\r\n    if (this.getMaskedValue(this.realValue) !== this.formControlMask.value) {\r\n      this.formControlMask.setValue(this.getMaskedValue(this.realValue));\r\n      position += this.inputText.nativeElement.value.length - length;\r\n      this.inputText.nativeElement.selectionStart = position;\r\n      this.inputText.nativeElement.selectionEnd = position;\r\n    }\r\n    this.inputFormReal.setValue(this.realValue);\r\n  }\r\n\r\n  private getMaskedValue(str: string): string {\r\n    if (str == null) {\r\n      return str;\r\n    }\r\n    str = str + '';\r\n    if (this.type === InputHelisaType.DEFAULT) {\r\n      return str;\r\n    }\r\n    let maskedStr: string = '';\r\n    if (this.type === InputHelisaType.IDENTITY) {\r\n      for (let i: number = str.length - 1, j: number = 0; i >= 0; i--, j++) {\r\n        if (j > 0 && j % 3 === 0) {\r\n          maskedStr = this.DECIMAL_SEPARATOR + maskedStr;\r\n        }\r\n        maskedStr = str[i] + maskedStr;\r\n      }\r\n    }\r\n    if (this.type === InputHelisaType.NUMERIC) {\r\n      for (let i: number = str.length - 1, j: number = 0; i >= 0; i--, j++) {\r\n        if (j > 0 && j % 3 === 0) {\r\n          maskedStr = this.THOUSAND_SEPARATOR + maskedStr;\r\n        }\r\n        maskedStr = str[i] + maskedStr;\r\n      }\r\n    }\r\n    if (this.type === InputHelisaType.DOUBLE) {\r\n      if (str.indexOf(this.DECIMAL_SEPARATOR) >= 0) {\r\n        for (let i: number = str.indexOf(this.DECIMAL_SEPARATOR); i < str.length; i++) {\r\n          maskedStr += str[i];\r\n        }\r\n      }\r\n      for (let i: number = (str.indexOf(this.DECIMAL_SEPARATOR) >= 0 ? str.indexOf(this.DECIMAL_SEPARATOR) : str.length) - 1,\r\n        j: number = 0; i >= 0; i--, j++) {\r\n\r\n        if (j > 0 && j % 3 === 0) {\r\n          maskedStr = this.THOUSAND_SEPARATOR + maskedStr;\r\n        }\r\n        maskedStr = str[i] + maskedStr;\r\n      }\r\n    }\r\n    return maskedStr;\r\n  }\r\n\r\n  private getRealValue(str: string): string {\r\n    if (str == null) {\r\n      return str;\r\n    }\r\n    str = str + '';\r\n    let realStr: string = '';\r\n    if (this.type === InputHelisaType.DEFAULT) {\r\n      return str;\r\n    }\r\n    if (this.type === InputHelisaType.IDENTITY) {\r\n      for (const strItem of str) {\r\n        if (strItem.match('[0-9]')) {\r\n          realStr += strItem;\r\n        }\r\n      }\r\n    }\r\n    if (this.type === InputHelisaType.NUMERIC) {\r\n      for (const strItem of str) {\r\n        if (strItem.match('[0-9]')) {\r\n          realStr += strItem;\r\n        }\r\n      }\r\n    }\r\n    if (this.type === InputHelisaType.DOUBLE) {\r\n      let haveDot: boolean = false;\r\n\r\n      for (const strItem of str) {\r\n        if (strItem.match('[0-9]') || ((strItem === this.DECIMAL_SEPARATOR) && !haveDot)) {\r\n          realStr += strItem;\r\n        }\r\n        haveDot = haveDot || (strItem === this.DECIMAL_SEPARATOR);\r\n      }\r\n    }\r\n    return realStr;\r\n  }\r\n\r\n  onFocus($event: FocusEvent): void {\r\n    if ((this.type === InputHelisaType.NUMERIC || this.type === InputHelisaType.DOUBLE) &&\r\n      Number(this.getRealValue(this.inputText.nativeElement.value)) === 0) {\r\n      this.inputText.nativeElement.select();\r\n    }\r\n  }\r\n}\r\n","import { SortDirection } from '@angular/material/sort';\r\nimport { RowData } from './table-helisa.component';\r\n\r\nexport enum ColumnType {\r\n  NORMAL, URL\r\n}\r\n\r\nexport interface ColumnConfig {\r\n  name: string;\r\n  title?: string;\r\n  visible?: boolean;\r\n  sortable?: boolean;\r\n  groupable?: boolean;\r\n  totalType?: TotalType;\r\n  searchable?: boolean;\r\n  sortDirection?: SortDirection;\r\n  subtitle?: string;\r\n  colspanTitle?: number;\r\n  colspanSubtitle?: number;\r\n  columnStyle?: string;\r\n  columnType?: ColumnType;\r\n}\r\n\r\nexport interface AddRowButton {\r\n  text: string;\r\n  showButton: boolean;\r\n}\r\n\r\nexport enum EventScope {\r\n  USER, CODE_CALL\r\n}\r\n\r\nexport enum TotalType {\r\n  SUM, AVERAGE, COUNT\r\n}\r\n\r\nexport enum ChangeColumnConfigurationType {\r\n  SORT, UNKNOWN, TOTAL\r\n}\r\n\r\nexport interface EventColumn {\r\n  column: ColumnConfig;\r\n  columnConfigurations: Array<ColumnConfig>;\r\n  type: ChangeColumnConfigurationType;\r\n}\r\n\r\nexport interface TotalTableHelisa {\r\n  column: ColumnConfig;\r\n  value: number;\r\n}\r\n\r\nexport interface TotalGroup {\r\n  sum: number;\r\n  count: number;\r\n}\r\n\r\nexport interface EventSearch {\r\n  text: string;\r\n  columnConfigurations: Array<ColumnConfig>;\r\n}\r\n\r\nexport interface RequestTableHelisa<T> {\r\n  page: number;\r\n  body: {} | T;\r\n}\r\n\r\nexport interface DropElement<T> {\r\n value: T;\r\n order: number;\r\n}\r\n\r\nexport interface SelectObject<T> {\r\n  value: T;\r\n  scope: EventScope;\r\n}\r\n\r\nexport enum TableHelisaType {\r\n  REMOTE, LOCAL\r\n}\r\n\r\n\r\nexport interface Cell<T> {\r\n  column: ColumnConfig;\r\n  row: RowData<T> | T;\r\n }\r\n\r\nexport interface ConfigCellStyles<T> {\r\n   cellData: T;\r\n   classCell: string;\r\n }\r\n\r\nexport interface ConfigRowStyles<T> {\r\n  column: ColumnConfig;\r\n  data: {} | T;\r\n  classRow: string;\r\n}\r\n\r\n// @dynamic\r\nexport class ColumnConfigUtil<T> {\r\n\r\n  getValue(obj: T, column: ColumnConfig): T | number | string {\r\n    return column.name.split('.').reduce((o: T, field: string): T | string => o && o[field], obj);\r\n  }\r\n}\r\n\r\n","import {ColumnConfig} from './table-helisa.interface';\r\nimport {Observable} from 'rxjs';\r\n\r\n\r\nexport class TableHelisaConnectComponent<T> {\r\n  page: number;\r\n  isLastPage: boolean;\r\n  isUsed: boolean;\r\n\r\n  constructor() {\r\n    this.page = 0;\r\n    this.isLastPage = false;\r\n    this.isUsed = false;\r\n  }\r\n\r\n  public getBody(columnConfig: Array<ColumnConfig>, search: string): {} {\r\n    return {};\r\n  }\r\n\r\n  nextPage(): number {\r\n    return this.page++;\r\n  }\r\n}\r\n","import {AfterViewInit, Component, EventEmitter, Input, OnInit, Output, ViewChild, ElementRef, DoCheck} from '@angular/core';\r\nimport {MatSort, Sort} from '@angular/material/sort';\r\nimport { MatTable, MatTableDataSource } from '@angular/material/table';\r\n\r\nimport {\r\n  AddRowButton,\r\n  Cell,\r\n  ChangeColumnConfigurationType,\r\n  ColumnConfig,\r\n  ColumnConfigUtil,\r\n  ConfigCellStyles,\r\n  ConfigRowStyles,\r\n  DropElement,\r\n  EventColumn,\r\n  EventScope,\r\n  EventSearch,\r\n  RequestTableHelisa,\r\n  SelectObject,\r\n  TableHelisaType,\r\n  TotalGroup,\r\n  TotalType,\r\n  ColumnType,\r\n  TotalTableHelisa\r\n} from './table-helisa.interface';\r\nimport { TableHelisaService, TableHelisaServiceInfo } from './table-helisa.service';\r\nimport { TableHelisaConnectComponent } from './table-helisa-connect.component';\r\nimport { CdkDragDrop, moveItemInArray } from '@angular/cdk/drag-drop';\r\nimport { of } from 'rxjs';\r\n\r\nexport interface RowData<T> {\r\n  data: {} | T;\r\n  rowType: RowType;\r\n}\r\n\r\nenum RowType {\r\n  GROUP_TITLE, GROUP_FOOTER, ROW\r\n}\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'hel-table',\r\n  templateUrl: './table-helisa.component.html',\r\n  styleUrls: ['./table-helisa.component.sass']\r\n})\r\nexport class TableHelisaComponent<T> implements OnInit, AfterViewInit {\r\n\r\n  private tableHelisaConnectComponent: TableHelisaConnectComponent<T>;\r\n  totalData: Array<number>;\r\n  rawData: Array<T>;\r\n  data: MatTableDataSource<RowData<T>> = new MatTableDataSource<RowData<T>>([]);\r\n  displayedColumns: string[] = [];\r\n  displayedColumnsWithTitle: string[] = [];\r\n  displayedColumnsWithSubtitle: string[] = [];\r\n  displayedColumnsWithFooter: string[] = [];\r\n  columnConfig: Array<ColumnConfig>;\r\n  selectedObject: T;\r\n  lastSearch: string;\r\n  type: TableHelisaType = TableHelisaType.LOCAL;\r\n  indexRowSelect: number;\r\n  private scrollCount: number = 0;\r\n  hasSubtitle: boolean = false;\r\n  private indexRowStartDrag: number = -1;\r\n  private lastIndexRowDrag: number = -1;\r\n  private dataBeforeDrag: { data: RowData<T>[] } = null;\r\n  private dataSource$: Array<T> = [];\r\n  private scrollX: number = 0;\r\n  private scrollY: number = 0;\r\n\r\n  @ViewChild(MatSort, {static: true}) matSort: MatSort;\r\n  @ViewChild(MatTable, {static: true}) matTable: MatTable<T>;\r\n  @ViewChild(MatTable, { read: ElementRef, static: true }) matTableElement: ElementRef;\r\n  @ViewChild('containerTable', {static: true}) containerTable: ElementRef;\r\n\r\n  @Output() sort: EventEmitter<EventColumn> = new EventEmitter<EventColumn>();\r\n  @Output() total: EventEmitter<EventColumn> = new EventEmitter<EventColumn>();\r\n  @Output() search: EventEmitter<EventSearch> = new EventEmitter<EventSearch>();\r\n\r\n  /**\r\n   * Deprecado, cambiar por electObject\r\n   */\r\n  @Output() select: EventEmitter<T> = new EventEmitter<T>();\r\n  @Output() selectCell: EventEmitter<Cell<T>> = new EventEmitter<Cell<T>>();\r\n  @Output() selectObject: EventEmitter<SelectObject<T>> = new EventEmitter<SelectObject<T>>();\r\n  @Output() nextPage: EventEmitter<RequestTableHelisa<T>> = new EventEmitter<RequestTableHelisa<T>>();\r\n  @Input() showTitle: boolean = true;\r\n  @Input() isCellSelection: boolean = false;\r\n  @Input() count: number;\r\n  @Input() configCellStyles: Array<ConfigCellStyles<T>>;\r\n  @Input() configRowStylesFromColumn: Array<ConfigRowStyles<T>>;\r\n  @Input() selectedCells: Cell<T>;\r\n  @Output() drop: EventEmitter<DropElement<T>> = new EventEmitter<DropElement<T>>();\r\n  @Input() isDragged: boolean = false;\r\n  @Input() addRowButton: AddRowButton = { showButton: false, text: '' };\r\n  @Output() addRow: EventEmitter<void> = new EventEmitter<void>();\r\n  @Output() bookClicked: EventEmitter<T> = new EventEmitter<T>();\r\n  @Input() addBookButton: boolean = false;\r\n  @Input() showToolTip: boolean = true;\r\n  showFooter: boolean = false;\r\n  showSearch: boolean = false;\r\n\r\n\r\n\r\n  /**\r\n   * Tiempo antes de ocultarla el mensaje del tooltip\r\n   */\r\n  @Input() hideDelay: number = 600;\r\n\r\n  /**\r\n   * Tiempo antes de mostra el mensaje del tooltip\r\n   */\r\n  @Input() showDelay: number = 500;\r\n\r\n\r\n  constructor(private tableService: TableHelisaService<T>) { }\r\n\r\n  ngOnInit(): void {\r\n    this.reloadColumnConfig();\r\n    this.tableService.nextPageReturn.subscribe(\r\n      (data: TableHelisaServiceInfo<T[]>): void => {\r\n        if (!data.table || data.table === this) {\r\n          this.receivePage(data.obj);\r\n        }\r\n      }\r\n    );\r\n    this.tableService.totalReturn.subscribe((info: TableHelisaServiceInfo<TotalTableHelisa>): void => {\r\n      if (info) {\r\n        this.columnConfig.forEach((column: ColumnConfig, idx: number): void => {\r\n          if (column === info.obj.column) {\r\n            this.totalData[idx] = this.getGroupValue(column, { sum: info.obj.value, count: this.count });\r\n          }\r\n        });\r\n      }\r\n    });\r\n    this.matSort.sortChange.subscribe(\r\n      (event: Sort): void => {\r\n        const column: ColumnConfig = this.columnConfig.find((c: ColumnConfig): boolean => c.name === event.active);\r\n        column.sortDirection = event.direction;\r\n        this.sort.emit({ column, columnConfigurations: this.columnConfig, type: ChangeColumnConfigurationType.SORT });\r\n      }\r\n    );\r\n\r\n    this.tableService.emitVisibleButton.subscribe(\r\n      (data: boolean): void => {\r\n        if (data !== undefined && data != null) {\r\n          this.addRowButton.showButton = data;\r\n        }\r\n      }\r\n    );\r\n    this.reload();\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    if (this.isCellSelection) {\r\n      this.matTable.renderRows();\r\n    }\r\n  }\r\n\r\n  @Input()\r\n  set isRemote(w: boolean) {\r\n    this.type = w ? TableHelisaType.REMOTE : TableHelisaType.LOCAL;\r\n    this.tableHelisaConnectComponent = new TableHelisaConnectComponent<T>();\r\n    if (this.type === TableHelisaType.REMOTE) {\r\n      this.goNextPage();\r\n    } else {\r\n      this.tableHelisaConnectComponent.page++;\r\n    }\r\n  }\r\n\r\n  @Input()\r\n  set columnConfiguration(columnConfiguration: Array<ColumnConfig>) {\r\n    this.columnConfig = columnConfiguration;\r\n    this.reload();\r\n    this.reloadColumnConfig();\r\n  }\r\n\r\n  @Input()\r\n  set dataSource(dataSource: Array<T>) {\r\n    this.dataSource$ = dataSource;\r\n    this.rawData = dataSource;\r\n    this.reload();\r\n  }\r\n\r\n  get dataSource(): Array<T> {\r\n    return this.dataSource$;\r\n  }\r\n\r\n  @Input()\r\n  set selectedIndexRow(idRowSelected: number) {\r\n    this.indexRowSelect = idRowSelected;\r\n    if (this.rawData && this.rawData.length) {\r\n      if ((idRowSelected >= this.rawData.length || idRowSelected < 0)) {\r\n        this.indexRowSelect = 0;\r\n      }\r\n      this.selectRow({ data: this.rawData[this.indexRowSelect], rowType: RowType.ROW }, false);\r\n    }\r\n  }\r\n\r\n  private reloadColumnConfig(): void {\r\n    this.hasSubtitle = false;\r\n    this.displayedColumns.splice(0, this.displayedColumns.length);\r\n\r\n    if (this.columnConfig) {\r\n      if (this.addBookButton) {\r\n        const columnCount: number = this.columnConfig.length;\r\n        let countSubtitle: number = 0;\r\n        let showBookButton: boolean = false;\r\n        this.columnConfig.forEach((column: ColumnConfig): void => {\r\n          if (!!column.subtitle) {\r\n            countSubtitle = countSubtitle + 1;\r\n          }\r\n          if ((!showBookButton) && (column.name === 'bookButton')) {\r\n            showBookButton = true;\r\n          }\r\n        });\r\n        const subtitleTemp: boolean = columnCount === countSubtitle;\r\n        if (!showBookButton) {\r\n          this.columnConfig.push({\r\n            name: 'bookButton',\r\n            title: '',\r\n            subtitle: subtitleTemp ? '' : undefined ,\r\n            visible: true\r\n          });\r\n        }\r\n      }\r\n      this.columnConfig.forEach((column: ColumnConfig): void => {\r\n        if (column.visible) {\r\n          this.displayedColumns.push(column.name);\r\n        }\r\n        if (!this.hasSubtitle) {\r\n          this.hasSubtitle = column.subtitle !== undefined;\r\n        }\r\n      });\r\n      if (this.rawData) {\r\n        this.dataSource = this.rawData;\r\n      }\r\n    }\r\n    this.displayedColumnsWithTitle.splice(0, this.displayedColumnsWithTitle.length);\r\n    this.displayedColumnsWithSubtitle.splice(0, this.displayedColumnsWithSubtitle.length);\r\n    this.displayedColumnsWithFooter.splice(0, this.displayedColumnsWithFooter.length);\r\n    this.getColumnsWithTitle().forEach((col: string): number => this.displayedColumnsWithTitle.push(col));\r\n    this.getHeaderSubtitle().forEach((col: string): number => this.displayedColumnsWithSubtitle.push(col));\r\n    this.footerDisplayedColumns().forEach((col: string): number => this.displayedColumnsWithFooter.push(col));\r\n  }\r\n\r\n  public reload(): void {\r\n    if(this.columnConfig) {\r\n      const changeData: Array<RowData<T>> = Array<RowData<T>>();\r\n      let haveGroup: boolean = false;\r\n      let groupFooter: Array<TotalGroup>;\r\n      this.columnConfig.forEach((column: ColumnConfig): void => {\r\n        if (column.totalType !== undefined && (this.type === TableHelisaType.LOCAL || this.tableHelisaConnectComponent.page <= 1)) {\r\n          this.totalData = new Array<number>(this.columnConfig.length);\r\n          this.showFooter = true;\r\n          this.total.emit({column, columnConfigurations: this.columnConfig, type: ChangeColumnConfigurationType.TOTAL});\r\n        }\r\n        this.showSearch = this.showSearch || column.searchable;\r\n        haveGroup = haveGroup || column.groupable;\r\n      });\r\n      if (haveGroup) {\r\n        this.rawData = this.rawData.sort((a: T, b: T): number => {\r\n          let result: number = 0;\r\n          this.columnConfig.forEach((column: ColumnConfig): void => {\r\n            if (result === 0) {\r\n              result = this.compare(a, b);\r\n            }\r\n          });\r\n          return result;\r\n        });\r\n      }\r\n      if(this.rawData) {\r\n        this.rawData.forEach((row: T): void => {\r\n          if (haveGroup && (changeData.length === 0 || this.compare(changeData[changeData.length - 1].data as T, row) !== 0)) {\r\n            if (groupFooter) {\r\n              changeData.push({data: groupFooter, rowType: RowType.GROUP_FOOTER});\r\n            }\r\n            changeData.push({data: row, rowType: RowType.GROUP_TITLE});\r\n            groupFooter = new Array<TotalGroup>(this.columnConfig.length);\r\n          }\r\n          if (haveGroup) {\r\n            this.addTotalGroup(groupFooter, row);\r\n          }\r\n          changeData.push({data: row, rowType: RowType.ROW});\r\n        });\r\n        this.data = new MatTableDataSource<RowData<T>>(changeData);\r\n      }\r\n      if (this.rawData && this.rawData.length && this.indexRowSelect && !this.selectedObject) {\r\n        if (this.indexRowSelect >= this.rawData.length || this.indexRowSelect < 0) {\r\n          this.indexRowSelect = 0;\r\n        }\r\n        this.selectRow({data: this.rawData[this.indexRowSelect], rowType: RowType.ROW}, false);\r\n      }\r\n    }\r\n  }\r\n\r\n  private addTotalGroup(rowTotal: Array<TotalGroup>, row: T): void {\r\n    this.columnConfig.forEach((column: ColumnConfig, index: number): void => {\r\n      if (column.totalType !== undefined) {\r\n        if (rowTotal[index] === undefined) {\r\n          rowTotal[index] = { sum: (new ColumnConfigUtil().getValue(row, column) as number), count: 1 };\r\n        } else {\r\n          rowTotal[index].sum += (new ColumnConfigUtil().getValue(row, column) as number);\r\n          rowTotal[index].count++;\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  private compare(a: T, b: T): number {\r\n    let ws: number = 0;\r\n    this.columnConfig.forEach((column: ColumnConfig): void => {\r\n      if (ws === 0 && column.groupable) {\r\n        if ((new ColumnConfigUtil().getValue(a, column) as number) < (new ColumnConfigUtil().getValue(b, column) as number)) {\r\n          ws = -1;\r\n        } else if ((new ColumnConfigUtil().getValue(a, column) as number) > (new ColumnConfigUtil().getValue(b, column) as number)) {\r\n          ws = 1;\r\n        }\r\n      }\r\n    });\r\n    return ws;\r\n  }\r\n\r\n  getGroupDescription(obj: T): string {\r\n    let result: string = '';\r\n    this.columnConfig.forEach((column: ColumnConfig): void => {\r\n      if (column.groupable) {\r\n        result += (result.length ? ' - ' : '') + (new ColumnConfigUtil().getValue(obj, column));\r\n      }\r\n    });\r\n    return result;\r\n  }\r\n\r\n  isGroupTitle(index: number, item: RowData<T>): boolean {\r\n    return item.rowType === RowType.GROUP_TITLE;\r\n  }\r\n\r\n  isRow(index: number, item: RowData<T>): boolean {\r\n    return item.rowType === RowType.ROW;\r\n  }\r\n\r\n  isGroupFooter(index: number, item: RowData<T>): boolean {\r\n    return item.rowType === RowType.GROUP_FOOTER;\r\n  }\r\n\r\n  footerDisplayedColumns(): Array<string> {\r\n    return this.displayedColumns.map((name: string): string => 'footer-' + name);\r\n  }\r\n\r\n  getGroupValue(column: ColumnConfig, data: TotalGroup): number {\r\n    if (column.totalType === TotalType.SUM) { return data.sum; }\r\n    if (column.totalType === TotalType.COUNT) { return data.count; }\r\n    if (column.totalType === TotalType.AVERAGE) { return 1. * data.sum / data.count; }\r\n    return undefined;\r\n  }\r\n\r\n  getValue(obj: T, column: ColumnConfig): T {\r\n    return new ColumnConfigUtil().getValue(obj, column) as T;\r\n  }\r\n\r\n  getValueTooltip(obj: T, column: ColumnConfig): string {\r\n    if (this.showToolTip) {\r\n      return new ColumnConfigUtil().getValue(obj, column) as string;\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  searchText(text: string): void {\r\n    this.lastSearch = text;\r\n    this.search.emit({ text, columnConfigurations: this.columnConfig });\r\n  }\r\n\r\n  selectRow(row: RowData<T>, isUser: boolean, column?: ColumnConfig): void {\r\n    if (row === undefined || row === null) {\r\n      return;\r\n    }\r\n    if ((column === undefined || column === null) || (!!column && column.name !== 'bookButton')) {\r\n      this.selectedObject = row.data as T;\r\n      this.select.emit(this.selectedObject);\r\n      this.selectObject.emit({ value: this.selectedObject, scope: isUser ? EventScope.USER : EventScope.CODE_CALL });\r\n    } else if (!!column && column.name === 'bookButton') {\r\n      if (this.selectedObject !== row.data) {\r\n        this.selectedObject = row.data as T;\r\n        this.select.emit(this.selectedObject);\r\n        this.selectObject.emit({ value: this.selectedObject, scope: isUser ? EventScope.USER : EventScope.CODE_CALL });\r\n      }\r\n      this.bookClicked.emit(this.selectedObject);\r\n    }\r\n  }\r\n\r\n  onScroll(event: Event): void {\r\n    const element: HTMLDivElement = event.target as HTMLDivElement;\r\n    let isScrollY: boolean;\r\n\r\n    if (this.scrollY !== element.scrollTop) {\r\n      isScrollY = true;\r\n      this.scrollY = element.scrollTop;\r\n      this.scrollX = element.scrollLeft;\r\n    }\r\n\r\n    if (this.scrollX !== element.scrollLeft) {\r\n      isScrollY = false;\r\n      this.scrollY = element.scrollTop;\r\n      this.scrollX = element.scrollLeft;\r\n    }\r\n\r\n    if ((element.scrollHeight - element.scrollTop < 1000) && isScrollY) {\r\n      this.goNextPage();\r\n    }\r\n\r\n  }\r\n\r\n  private goNextPage(): void {\r\n    if (!this.tableHelisaConnectComponent.isLastPage && !this.tableHelisaConnectComponent.isUsed) {\r\n      this.tableHelisaConnectComponent.isUsed = true;\r\n      this.nextPage.emit({\r\n        page: this.tableHelisaConnectComponent.nextPage(),\r\n        body: this.tableHelisaConnectComponent.getBody(this.columnConfig, this.lastSearch)\r\n      });\r\n    }\r\n  }\r\n\r\n  private receivePage(data: T[]): void {\r\n    if (!this.rawData) {\r\n      this.rawData = new Array<T>();\r\n    }\r\n    this.rawData = this.rawData.concat(data);\r\n    this.dataSource = this.rawData;\r\n    this.tableHelisaConnectComponent.isLastPage = data.length === 0;\r\n    this.tableHelisaConnectComponent.isUsed = false;\r\n  }\r\n\r\n  dblClickCell(): void {\r\n    this.selectCell.emit(this.selectedCells as Cell<T>);\r\n  }\r\n\r\n  selectedCell(element: RowData<T>, column: ColumnConfig): void {\r\n    this.selectRow(element, true, column);\r\n\r\n    this.selectedCells = { column, row: element };\r\n    this.selectCell.emit(this.selectedCells);\r\n  }\r\n\r\n  isSelectedCell(row: RowData<T>, column: ColumnConfig): boolean {\r\n    if (this.isCellSelection) {\r\n      if (this.selectedCells != null) {\r\n        if (this.selectedCells.column.name === column.name &&\r\n          (this.selectedCells.row as RowData<T>).data === row.data) {\r\n          return true;\r\n        }\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  getClassToCell(row: T, column: ColumnConfig): string[] {\r\n    const classToCell: Array<string> = new Array<string>();\r\n    if (this.configCellStyles) {\r\n      const found: ConfigCellStyles<T> = this.configCellStyles.find((c: ConfigCellStyles<T>): boolean => {\r\n        return c.cellData === this.getValue(row, column);\r\n      });\r\n      if (found) {\r\n        classToCell.push(found.classCell);\r\n      }\r\n    }\r\n    if (column.columnStyle) {\r\n      classToCell.push(column.columnStyle);\r\n    }\r\n    return classToCell;\r\n  }\r\n\r\n  getClassToRow(row: T): string[] {\r\n    const classToRow: Array<string> = new Array<string>();\r\n    if (row === this.selectedObject && !this.isCellSelection) {\r\n      classToRow.push('');\r\n    }\r\n    if (this.configRowStylesFromColumn) {\r\n      const found: ConfigRowStyles<T> = this.configRowStylesFromColumn.find((c: ConfigRowStyles<T>): boolean => {\r\n        return c.data === this.getValue(row, c.column);\r\n      });\r\n      if (found) {\r\n        classToRow.push(found.classRow);\r\n      }\r\n    }\r\n    return classToRow;\r\n  }\r\n\r\n  onDrop(event: MouseEvent): void {\r\n    if (this.isDragged && this.indexRowStartDrag >= 0) {\r\n      const rowIndex: number = this.getRowIndex(event.pageY);\r\n      const array: RowData<T>[] = this.dataBeforeDrag.data;\r\n      const rawData: T[] = this.rawData;\r\n      moveItemInArray(array, this.indexRowStartDrag, rowIndex);\r\n      moveItemInArray(rawData, this.indexRowStartDrag, rowIndex);\r\n      this.drop.emit({ value: array[rowIndex].data as T, order: rowIndex });\r\n      this.rawData = rawData;\r\n      this.data = new MatTableDataSource(array);\r\n      event.stopPropagation();\r\n    }\r\n  }\r\n\r\n  tableKeydown(event: KeyboardEvent): void {\r\n    if (!this.isCellSelection) {\r\n      let currentIndex: number = this.data.data.findIndex((row: RowData<T>): boolean => row.data === this.selectedObject);\r\n      let newSelection: number = -10;\r\n      if (event.key === 'ArrowDown') {\r\n        this.scrollCount++;\r\n        this.data.data.forEach((row: RowData<T>, index: number): void => {\r\n          if (newSelection === -10 && index > currentIndex && row.rowType === RowType.ROW) {\r\n            newSelection = index;\r\n          }\r\n        });\r\n      }\r\n      if (event.key === 'ArrowUp') {\r\n        this.scrollCount--;\r\n        currentIndex = this.data.data.length - currentIndex - 1;\r\n        this.data.data.reverse().forEach((row: RowData<T>, index: number): void => {\r\n          if (newSelection === -10 && index > currentIndex && row.rowType === RowType.ROW) {\r\n            newSelection = index;\r\n          }\r\n        });\r\n        this.data.data.reverse();\r\n        if (newSelection !== -10) {\r\n          newSelection = this.data.data.length - newSelection - 1;\r\n        }\r\n      }\r\n      if (newSelection !== -10) {\r\n        this.selectRow(this.data.data[newSelection], true);\r\n      }\r\n      if (Math.abs(this.scrollCount) >= 2) {\r\n        this.scrollCount = 0;\r\n      } else {\r\n        event.preventDefault();\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Emite el evento cuando se da click al boton AddRow\r\n   */\r\n  onAddRow(): void {\r\n    this.addRow.emit();\r\n  }\r\n\r\n\r\n  getHeaderSubtitle(): string[] {\r\n    const x: string[] = this.columnConfig.map((column: ColumnConfig, index: number): string => {\r\n      if (column.visible && column.subtitle !== undefined) {\r\n        return 'subtitle' + index;\r\n      } else {\r\n        return null;\r\n      }\r\n    }).filter((data: string): boolean => data != null);\r\n    return x;\r\n  }\r\n\r\n  getColumnsWithTitle(): string[] {\r\n    return this.columnConfig.filter((column: ColumnConfig): boolean =>\r\n      column.visible && column.title !== undefined\r\n    ).map((col: ColumnConfig): string => col.name);\r\n  }\r\n\r\n  dragger(event: MouseEvent): boolean {\r\n    if (this.isDragged && this.indexRowStartDrag >= 0) {\r\n      const rowIndex: number = this.getRowIndex(event.pageY);\r\n      if (rowIndex !== this.lastIndexRowDrag) {\r\n        this.lastIndexRowDrag = rowIndex;\r\n        // This can have a memory problem with big data\r\n        const array: RowData<T>[] = [...this.dataBeforeDrag.data];\r\n        moveItemInArray(array, this.indexRowStartDrag, rowIndex);\r\n        this.data = new MatTableDataSource(array);\r\n      }\r\n      event.preventDefault();\r\n      return true;\r\n    }\r\n  }\r\n\r\n  startDrag(event: MouseEvent): void {\r\n    this.indexRowStartDrag = this.getRowIndex(event.pageY);\r\n    this.lastIndexRowDrag = this.indexRowStartDrag;\r\n    this.dataBeforeDrag = this.data;\r\n  }\r\n\r\n  private getRowIndex(pageY: number): number {\r\n    let offsetTop: number = 0;\r\n    let container: HTMLElement = this.containerTable.nativeElement;\r\n    while ((container !== null) && (offsetTop === 0)) {\r\n      offsetTop = container.offsetTop;\r\n      container = container.parentElement;\r\n    }\r\n    let rowIndex: number = -1;\r\n    const rows: HTMLCollection = this.matTableElement.nativeElement.children[1].children;\r\n    for (let i: number = 0; i < rows.length; i++) {\r\n      const row: HTMLElement = (rows[i] as HTMLElement);\r\n      if (pageY - offsetTop > row.offsetTop - this.containerTable.nativeElement.scrollTop) {\r\n        rowIndex = i;\r\n      }\r\n    }\r\n    if (rowIndex < 0) { rowIndex = 0; }\r\n    return rowIndex;\r\n  }\r\n\r\n  get columnType(): typeof ColumnType {\r\n    return ColumnType;\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, Input, Output, EventEmitter, ViewChild } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\n\r\nimport * as moment_ from 'moment';\r\nconst moment: typeof moment_ = moment_;\r\n\r\nimport { MatDatepickerInputEvent, MatDatepicker } from '@angular/material/datepicker';\r\nimport { filter, tap } from 'rxjs/operators';\r\n\r\nexport enum TypeCalendarEnum {\r\n  NORMAL = 'norma',\r\n  MONTH_YEAR = 'mounth-year',\r\n  STRICT = 'strict'\r\n}\r\n\r\n\r\n@Component({\r\n  selector: 'hel-date-helisa',\r\n  templateUrl: './date-helisa.component.html',\r\n  styleUrls: ['./date-helisa.component.css'],\r\n})\r\nexport class DateHelisaComponent implements OnInit {\r\n\r\n  @ViewChild('picker', { static: true }) datePickerShow: MatDatepicker<Date>;\r\n  @Input() floatLabel: 'never' | 'always' | 'auto' = 'never';\r\n  @Input() dateFormControl: FormControl = new FormControl('');\r\n  private date: Date = new Date();\r\n\r\n  /**\r\n   * Formato de fecha.\r\n   * Los formatos validos son aquellos que maneja la libreria momentjs y este: 'DD [de] MMMM [de] YYYY'\r\n   * https://momentjs.com/docs/#/parsing/string-format/\r\n   */\r\n  @Input() dateFormat: string = 'DD/MM/YYYY';\r\n  @Input() locale: string = 'es';\r\n  @Input() errorMessage: string = 'La fecha no concuerda con el formato ';\r\n  @Input() placeholder: string = this.dateFormat;\r\n  @Input() showDatePicker: boolean = false;\r\n  @Input() minDate: Date;\r\n  @Input() maxDate: Date;\r\n  @Output() change: EventEmitter<Date> = new EventEmitter<Date>();\r\n  isClosed: boolean = false;\r\n  // tslint:disable-next-line:no-any\r\n  timeout: any;\r\n  isDisabled: boolean = false;\r\n  /**\r\n   * Si este valor es diferente a TypeCalendarEnum.NORMAL no\r\n   * será tomado en cuenta\r\n   */\r\n  @Input() typeCalendar: TypeCalendarEnum = TypeCalendarEnum.NORMAL;\r\n\r\n  dateToVisualize: FormControl;\r\n\r\n  /**\r\n   * Para evitar nuevos eventos miestras se realiza el parseo\r\n   */\r\n  private isFromInputEvent: boolean = false;\r\n\r\n  /**\r\n   * Verificar si el formato es valido\r\n   */\r\n  invalidFormat: boolean = false;\r\n  private inputFormReal: FormControl = new FormControl('');\r\n\r\n  constructor() { }\r\n\r\n  /*\r\n  * TypeCalendarEnum.MONTH_YEAR = 'MM/YYYY'\r\n  * TypeCalendarEnum.STRICT = 'DD [de] MMMM [de] YYYY'\r\n  * */\r\n  ngOnInit(): void {\r\n    moment.locale(this.locale);\r\n    this.dateToVisualize = new FormControl('', this.dateFormControl.validator);\r\n    this.formHandler();\r\n    this.inputFormReal = this.dateFormControl;\r\n    this.inputFormReal.registerOnDisabledChange((isDisabled: boolean): void => {\r\n      if (isDisabled) {\r\n        this.isDisabled = true;\r\n        this.dateToVisualize.disable();\r\n      } else {\r\n        this.isDisabled = false;\r\n        this.dateToVisualize.enable();\r\n      }\r\n    });\r\n\r\n    /**\r\n     * establecer valor por defecto de la fecha\r\n     */\r\n    if (this.dateFormControl.value !== '' && this.dateFormControl.value !== null) {\r\n      const incomingDate: string = moment(this.dateFormControl.value, this.dateFormat).format(this.dateFormat);\r\n      if (incomingDate !== 'Invalid date') {\r\n        this.dateToVisualize.setValue(incomingDate);\r\n        this.dateFormControl.setValue(this.dateFormControl.value);\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  get typeCalendarEnum(): typeof TypeCalendarEnum {\r\n    return TypeCalendarEnum;\r\n  }\r\n\r\n  openDatePicker(): void {\r\n    if (this.showDatePicker && !this.isClosed) {\r\n      this.isClosed = true;\r\n      this.timeout = setTimeout((): void => {\r\n        this.datePickerShow.open();\r\n      }, 2000);\r\n    }\r\n  }\r\n\r\n  onKey(event: KeyboardEvent): void {\r\n    if (event.key === ' ' && this.showDatePicker) {\r\n      this.onBlur();\r\n      this.isClosed = true;\r\n      this.datePickerShow.open();\r\n    }\r\n  }\r\n\r\n  onBlur(): void {\r\n    clearTimeout(this.timeout);\r\n    this.isClosed = false;\r\n  }\r\n\r\n  /**\r\n   * Determina como se debe inicializar la visualizacion del calendar\r\n   */\r\n  getStartView(): string {\r\n    // multi-year\r\n    if (this.typeCalendar === this.typeCalendarEnum.MONTH_YEAR) {\r\n      return 'multi-year';\r\n    } else if (this.typeCalendar === this.typeCalendarEnum.STRICT) {\r\n      return 'month';\r\n    } else {\r\n      return 'month';\r\n    }\r\n  }\r\n\r\n  private formHandler(): void {\r\n    if (this.typeCalendar === this.typeCalendarEnum.STRICT) {\r\n      this.dateToVisualize.valueChanges.subscribe((date: string): void => {\r\n        this.invalidFormat = false;\r\n        const isValid: boolean = moment(date, this.dateFormat, true).isValid();\r\n        const result: string = moment(date, this.dateFormat).format(this.dateFormat);\r\n        if (!!result && (result === 'Invalid date' || !isValid)) {\r\n          this.invalidFormat = true;\r\n          return;\r\n        }\r\n        if (!!result) {\r\n          if (!this.isFromInputEvent) {\r\n            this.isFromInputEvent = true;\r\n            this.dateToVisualize.setValue(moment(result, this.dateFormat).format(this.dateFormat));\r\n            this.dateFormControl.setValue(moment(result, this.dateFormat).toDate());\r\n            this.isFromInputEvent = false;\r\n          } else {\r\n            setTimeout((): void => {\r\n              this.isFromInputEvent = false;\r\n            }, 1500);\r\n          }\r\n\r\n        }\r\n      });\r\n    } else {\r\n      this.dateToVisualize.valueChanges\r\n        .pipe(\r\n          tap((date: string): void => {\r\n            if (date.length > this.dateFormat.length) {\r\n              this.invalidFormat = true;\r\n            } else {\r\n              this.invalidFormat = false;\r\n            }\r\n          }),\r\n          filter((date: string): boolean => date.length === this.dateFormat.length)\r\n        )\r\n        .subscribe((date: string): void => {\r\n          this.invalidFormat = false;\r\n          const isValid: boolean = moment(date, this.dateFormat, true).isValid();\r\n          const result: string = moment(date, this.dateFormat).format('YYYY-MM-DD');\r\n\r\n          if (!!result && (result === 'Invalid date' || !isValid)) {\r\n            this.invalidFormat = true;\r\n            return;\r\n          }\r\n\r\n          if (!!result) {\r\n            if (!this.isFromInputEvent) {\r\n              this.isFromInputEvent = true;\r\n              const subString: string[] = result.split('-');\r\n\r\n              const year: number = parseFloat(subString[0]);\r\n              const month: number = parseFloat(subString[1]);\r\n              const day: number = parseFloat(subString[2]);\r\n\r\n              this.date.setFullYear(year);\r\n              this.date.setDate(day);\r\n              this.date.setMonth(month - 1); // -1 por que los meses se toman como los indices en un array\r\n\r\n              /** cuando es de tipo MOUNTH_YEAR retorna el ultimo dia del mes seleccionado */\r\n              if (this.typeCalendar === TypeCalendarEnum.MONTH_YEAR) {\r\n                this.date = moment(this.date).endOf('month').toDate();\r\n              }\r\n\r\n              this.dateToVisualize.setValue(moment(this.date, 'YYYY-MM-DD').format(this.dateFormat));\r\n              this.dateFormControl.setValue(this.date);\r\n              this.isFromInputEvent = false;\r\n            } else {\r\n              setTimeout((): void => {\r\n                this.isFromInputEvent = false;\r\n              }, 1500);\r\n            }\r\n\r\n          }\r\n        });\r\n    }\r\n\r\n\r\n    this.dateFormControl.valueChanges\r\n      .subscribe((date: string): void => {\r\n        const incommingDate: string = moment(date, this.dateFormat).format(this.dateFormat);\r\n        if (this.dateFormControl.value !== '' && incommingDate !== 'Invalid date') {\r\n          this.dateToVisualize.setValue(incommingDate);\r\n        }\r\n      });\r\n  }\r\n\r\n\r\n  /**\r\n   * Evento que se dispara luego seleccionar un mes\r\n   */\r\n  monthSelectedHandler(chosenMonthDate: moment_.Moment, datepicker: MatDatepicker<moment_.Moment>): void {\r\n\r\n    if (this.typeCalendar === TypeCalendarEnum.MONTH_YEAR) {\r\n      datepicker.close();\r\n      const date: Date = moment(chosenMonthDate).endOf('month').toDate();\r\n\r\n      this.dateToVisualize.setValue(moment(date, 'YYYY-MM-DD').format(this.dateFormat));\r\n      this.dateFormControl.setValue(date);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Evento desde el control touch del calendar\r\n   */\r\n  dateChange(type: string, event: MatDatepickerInputEvent<Date>): void {\r\n    this.dateToVisualize.setValue(moment(event.value, 'YYYY-MM-DD').format(this.dateFormat));\r\n    this.dateFormControl.setValue(event.value);\r\n    this.change.emit(event.value);\r\n    this.isClosed = true;\r\n  }\r\n\r\n  getErrorMessage(): string {\r\n    return this.errorMessage + this.dateFormat;\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Subject, BehaviorSubject, Subscriber, Observable } from 'rxjs';\r\nimport { Node } from './node';\r\n\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class TreeHelisaService {\r\n\r\n    // Observable string sources\r\n    private emitNodeSelected: BehaviorSubject<number | string> = new BehaviorSubject<number | string>(1);\r\n    // Observable string streams\r\n    nodeSelected: Observable<string | number> = this.emitNodeSelected.asObservable();\r\n\r\n    // Observable string sources\r\n    private emitDataSource: BehaviorSubject<Node> = new BehaviorSubject<Node>(undefined);\r\n\r\n    // Observable string streams\r\n    dataSourceObservable: Observable<Node> = this.emitDataSource.asObservable();\r\n\r\n    // Expand node observable\r\n    private emitExpandAllNodes: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(null);\r\n    nodeExpand: Observable<boolean> = this.emitExpandAllNodes.asObservable();\r\n\r\n     // Collapse node observable\r\n     private emitCollapseAllNodes: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(null);\r\n     nodeCollapse: Observable<boolean> = this.emitCollapseAllNodes.asObservable();\r\n\r\n    private emitRefreshTree: Subject<void> = new Subject<void>();\r\n    refreshTreeObservable: Observable<void> = this.emitRefreshTree.asObservable();\r\n\r\n    private emitRefreshTreeWithPagination: Subject<void> = new Subject<void>();\r\n    refreshTreeWithPaginationObservable: Observable<void> = this.emitRefreshTreeWithPagination.asObservable();\r\n\r\n    private emitExpandOneNode: Subject<Node> = new Subject<Node>();\r\n    expandOneNodeObservable: Observable<Node> = this.emitExpandOneNode.asObservable();\r\n\r\n    private emitCollapseOneNode: Subject<Node> = new Subject<Node>();\r\n    collapseOneNodeObservable: Observable<Node> = this.emitCollapseOneNode.asObservable();\r\n\r\n    // Service message commands\r\n    changeNodeSelected(idResidentialArea: number | string): void {\r\n        this.emitNodeSelected.next(idResidentialArea);\r\n    }\r\n\r\n    // Service message commands\r\n    changeDataSource(data: Node): void {\r\n        this.emitDataSource.next(data);\r\n    }\r\n\r\n    expandAllNodes(expand: boolean): void {\r\n        this.emitExpandAllNodes.next(expand);\r\n    }\r\n\r\n    collapseAllNodes(collapse: boolean): void {\r\n        this.emitCollapseAllNodes.next(collapse);\r\n    }\r\n\r\n    refreshTree(): void {\r\n        this.emitRefreshTree.next();\r\n    }\r\n\r\n\r\n    refreshTreeWithPagination(): void {\r\n        this.emitRefreshTreeWithPagination.next();\r\n    }\r\n\r\n\r\n    expandOneNode(node: Node): void {\r\n    this.emitExpandOneNode.next(node);\r\n    }\r\n\r\n\r\n    collapseOneNode(node: Node): void {\r\n        this.emitCollapseOneNode.next(node);\r\n    }\r\n\r\n    constructor() {\r\n\r\n    }\r\n\r\n}\r\n","export class TreeHelisaConnect<T> {\r\n    page: number;\r\n    isLastPage: boolean;\r\n    isUsed: boolean;\r\n\r\n    constructor() {\r\n      this.page = 0;\r\n      this.isLastPage = false;\r\n      this.isUsed = false;\r\n    }\r\n\r\n    nextPage(): number {\r\n      return this.page = this.page + 1;\r\n    }\r\n  }\r\n","import { Component, OnInit, Input, Output, EventEmitter, ViewChild, AfterViewInit, ElementRef, HostListener } from '@angular/core';\r\nimport { NestedTreeControl, TreeControl } from '@angular/cdk/tree';\r\nimport { MatOptionSelectionChange } from '@angular/material/core';\r\nimport { MatTreeNestedDataSource, MatTree } from '@angular/material/tree';\r\nimport { Node } from './node';\r\nimport { TreeHelisaService } from './tree-helisa.service';\r\nimport { Router } from '@angular/router';\r\nimport * as _ from 'lodash';\r\nimport { TreeHelisaConnect } from './tree-helisa-connect';\r\nimport { FormControl } from '@angular/forms';\r\nimport { Observable } from 'rxjs';\r\n\r\nexport interface RequestTreeHelisa {\r\n  page: number;\r\n}\r\n\r\n@Component({\r\n  selector: 'hel-tree',\r\n  templateUrl: './tree-helisa.component.html',\r\n  styleUrls: ['./tree-helisa.component.sass']\r\n  // host: { '(document:keyup)': 'onKeyDown($event)' }\r\n})\r\nexport class TreeHelisaComponent implements OnInit, AfterViewInit {\r\n  isDisabled: boolean;\r\n  selectedNode: number | string | null;\r\n  //#endregion ====== Variables ========\r\n\r\n  constructor(private treeHelisaService: TreeHelisaService, private router: Router, private elementRef: ElementRef) {\r\n    // cargar datos pasados por el @Input\r\n    if (!!this.data) {\r\n      const data: Node = this.data;\r\n      this.data = null;\r\n      this.receivePage(data.children);\r\n    } else {\r\n      this.dataSource.data = [];\r\n      this.treeControl.dataNodes = [];\r\n    }\r\n  }\r\n\r\n  //#region  ====== Variables =============\r\n  private treeHelisaConnect: TreeHelisaConnect<Node>;\r\n  formEdit: FormControl;\r\n  @ViewChild('tree', {static: true}) tree: MatTree<{}>;\r\n  private selectedOptions: Map<\r\n    string | number,\r\n    {\r\n      formControl: FormControl;\r\n      editMode: boolean;\r\n    }\r\n  > = new Map<\r\n    string | number,\r\n    {\r\n      formControl: FormControl;\r\n      editMode: boolean;\r\n    }\r\n  >();\r\n  /**\r\n   * Datos del Arbol\r\n   */\r\n  @Input() data: Node;\r\n\r\n  /**\r\n   * Retorna el id del nodo removido\r\n   */\r\n  @Output() removed: EventEmitter<string | number> = new EventEmitter<number | string>();\r\n\r\n  /**\r\n   * Retorna un nodo editado\r\n   */\r\n  @Output() edited: EventEmitter<Node> = new EventEmitter<Node>();\r\n\r\n  /**\r\n   * Retorna un nodo sin id del nodo , pero si con el parent\r\n   * para conocer a cual fue añadido\r\n   */\r\n  @Output() added: EventEmitter<Node> = new EventEmitter<Node>();\r\n  @Output() collapseParent: EventEmitter<boolean> = new EventEmitter<boolean>();\r\n  @Output() rangeScrolled: EventEmitter<RequestTreeHelisa> = new EventEmitter<RequestTreeHelisa>();\r\n  @Output() nodeSelected: EventEmitter<number | string> = new EventEmitter<number | string>();\r\n  @Output() dobleClick: EventEmitter<number | string> = new EventEmitter<number | string>();\r\n  @Output() keypressDelete: EventEmitter<number | string | null> = new EventEmitter<number | string | null>();\r\n  @Output() keypressInsert: EventEmitter<number | string | null> = new EventEmitter<number | string | null>();\r\n  @Output() checkedOptionNode: EventEmitter<number | string | null> = new EventEmitter<number | string | null>();\r\n  @Output() uncheckedOptionNode: EventEmitter<number | string | null> = new EventEmitter<number | string | null>();\r\n  @Output() clickAddNode: EventEmitter<Node> = new EventEmitter<Node>();\r\n  @Output() clickEditNode: EventEmitter<Node> = new EventEmitter<Node>();\r\n  @Output() clickDeleteNode: EventEmitter<Node> = new EventEmitter<Node>();\r\n\r\n  treeControl: NestedTreeControl<Node> = new NestedTreeControl<Node>((node: Node): Node[] | Observable<Node[]> => node.children);\r\n  dataSource: MatTreeNestedDataSource<Node> = new MatTreeNestedDataSource<Node>();\r\n\r\n  isSingleClick: boolean = true;\r\n  currentNode: Node = null;\r\n\r\n  /**\r\n   * Obtiene la descripcion completa del nodo\r\n   * @example Nodo padre,nodo hijo,nodo nieto\r\n   * @param node Debe tener todos los parent llenos hacia arriba\r\n   */\r\n  public static getDescription(node: Node): string {\r\n    let result: string[] = [node.name];\r\n    let concat: string = '';\r\n\r\n    if (node.parent) {\r\n      result.push(this.getDescription(node.parent));\r\n    }\r\n\r\n    if (result.length === 1) {\r\n      return node.name;\r\n    }\r\n\r\n    result = result.reverse();\r\n\r\n    for (let i: number = 0; i < result.length; i++) {\r\n      const element: string = result[i];\r\n      concat = concat + element + (i === result.length - 1 ? '' : ',');\r\n    }\r\n\r\n    return concat;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    // si se cargan datos por medio del servicio\r\n    this.treeHelisaService.dataSourceObservable.subscribe((res: Node): void => {\r\n      if (!!res && !!res.children) {\r\n        this.selectedNode = res.id;\r\n        this.receivePage(res.children);\r\n      } else {\r\n        this.dataSource.data = [];\r\n        this.treeControl.dataNodes = [];\r\n      }\r\n    });\r\n\r\n    // Observable, si cambia el nodo seleccionado por medio del servicio\r\n    this.treeHelisaService.nodeSelected.subscribe((res: string | number): void => {\r\n      if (!!this.data && !!this.data.children) {\r\n        this.selectNode(this.data, res);\r\n      }\r\n    });\r\n\r\n    this.treeHelisaService.refreshTreeObservable.subscribe((res: void): void => {\r\n      this.refreshTree();\r\n    });\r\n\r\n    this.treeHelisaService.refreshTreeWithPaginationObservable.subscribe((res: void): void => {\r\n      this.refreshTreeWithPagination();\r\n    });\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.treeHelisaService.nodeExpand.subscribe((res: boolean): void => {\r\n      if (res != null) {\r\n        if (res) {\r\n          this.tree.treeControl.expandAll();\r\n        }\r\n      }\r\n    });\r\n\r\n    this.treeHelisaService.nodeCollapse.subscribe((res: boolean): void => {\r\n      if (res !== null) {\r\n        if (res) {\r\n          this.tree.treeControl.collapseAll();\r\n        }\r\n      }\r\n    });\r\n\r\n    this.treeHelisaService.expandOneNodeObservable.subscribe((res: Node): void => {\r\n      if (res !== undefined) {\r\n        this.treeControl.expand(res);\r\n      }\r\n    });\r\n\r\n    this.treeHelisaService.collapseOneNodeObservable.subscribe((res: Node): void => {\r\n      if (res !== undefined) {\r\n        this.treeControl.collapse(res);\r\n      }\r\n    });\r\n  }\r\n\r\n  //#region  ====== Events ===========\r\n  onRedirect(node: Node): void {\r\n    this.isSingleClick = true;\r\n    setTimeout((): void => {\r\n      if (this.isSingleClick) {\r\n        this.selectNode(node, node.id);\r\n\r\n        // if(!!node && !node.children){\r\n        if (!!node) {\r\n          this.nodeSelected.emit(node.id);\r\n          this.currentNode = node;\r\n        }\r\n      }\r\n    }, 350);\r\n  }\r\n\r\n  onScroll(event: Event): void {\r\n    const element: HTMLDivElement = event.target as HTMLDivElement;\r\n\r\n    if (element.offsetHeight + element.scrollTop >= element.scrollHeight) {\r\n      this.goNextPage();\r\n    }\r\n  }\r\n\r\n  onEdit(node: Node): void {\r\n    this.clickEditNode.emit(node);\r\n    /** @Deprecated\r\n     *  Ya no se edita el nodo ahora solo se emite el evento 'clickEditNode'\r\n     * retornando el nodo al cual le hicieron click en la opción delete\r\n     */\r\n    // node.isEditable = true;\r\n    // this.isDisabled = true;\r\n  }\r\n\r\n  onAdd(node: Node): void {\r\n    this.clickAddNode.emit(node);\r\n    /** @Deprecated\r\n     *  Ya no se crea y se agrega el nodo ahora solo se emite el evento 'clickAddNode'\r\n     * retornando el nodo al cual le hicieron click en la opción add\r\n     */\r\n    //   // si no tiene hijos instanciar el array\r\n    //   if (!node.children) {\r\n    //     node.children = [];\r\n    //   }\r\n    //   node.children.push({\r\n    //     id: Math.random(),\r\n    //     name: '',\r\n    //     isSelected: false,\r\n    //     parent: node,\r\n    //     isEditable: true\r\n    //   });\r\n    //   if (node.children) {\r\n    //     this.isDisabled = true;\r\n    //     this.treeHelisaService.expandOneNode(node);\r\n    //   }\r\n    //   this.refreshTree();\r\n  }\r\n\r\n  onDelete(node: Node): void {\r\n    this.clickDeleteNode.emit(node);\r\n    /** @Deprecated\r\n     *  Ya no se elimina el nodo ahora solo se emite el evento 'clickDeleteNode'\r\n     * retornando el nodo al cual le hicieron click en la opción delete\r\n     */\r\n    // // Remueve el nodo utilizando la libreria de lodash\r\n    // _.remove(node.parent.children, node);\r\n\r\n    // this.refreshTree();\r\n    // this.removed.emit(node.id);\r\n  }\r\n\r\n  onEdited(node: Node, value: string): void {\r\n    node.name = value;\r\n    if (node.id == null && node.name === '') {\r\n      _.remove(node.parent.children, node);\r\n      this.refreshTree();\r\n    } else if (node.id && node.id != null && node.name.trim() !== '') {\r\n      this.edited.emit(node);\r\n      node.isEditable = false;\r\n      this.selectNode(node, node.id);\r\n    } else if (node.id == null && node.name.trim() !== '') {\r\n      this.added.emit(node);\r\n      node.isEditable = false;\r\n    }\r\n    this.isDisabled = false;\r\n    this.refreshTree();\r\n  }\r\n\r\n  onCancel(node: Node, value: string): void {\r\n    this.isDisabled = false;\r\n    // Si no tiene id por ser un nuevo item, lo elimina\r\n    if (node.id == null) {\r\n      _.remove(node.parent.children, node);\r\n      this.refreshTree();\r\n    }\r\n\r\n    node.isEditable = false;\r\n  }\r\n\r\n  onDblClick(node: Node): void {\r\n    this.isSingleClick = false;\r\n    this.dobleClick.emit(node.id);\r\n  }\r\n\r\n  @HostListener('document:keyup', ['$event'])\r\n  onKeyDown(event: KeyboardEvent): void {\r\n    switch (event.key) {\r\n      case 'Delete':\r\n        this.keypressDelete.emit(!!this.currentNode && this.currentNode.id ? this.currentNode.id : null);\r\n        break;\r\n      case 'Insert':\r\n        this.keypressInsert.emit(!!this.currentNode && this.currentNode.id ? this.currentNode.id : null);\r\n        break;\r\n      case 'ArrowDown':\r\n        this.moveDownIntoTree();\r\n        break;\r\n      case 'ArrowUp':\r\n        this.moveUpIntoTree();\r\n        break;\r\n    }\r\n  }\r\n\r\n  //#endregion ======= Events ========\r\n\r\n  //#region  ======== Metodos =============\r\n\r\n  private moveUpIntoTree(): number {\r\n    if (!!this.data) {\r\n      // si aun no hay ningun node seleccionado selecciona el primero\r\n      if (this.currentNode == null) {\r\n        this.selectNode(this.data, this.data.children[0].id);\r\n        this.currentNode = this.data.children[0];\r\n        if (!!this.currentNode.children && this.currentNode.children.length > 0) {\r\n          this.treeHelisaService.expandOneNode(this.currentNode);\r\n        }\r\n      } else {\r\n        if (!!this.currentNode.parent && this.currentNode.id != null) {\r\n          // obtiene el indice del nodo seleccionado actualmente\r\n          const index: number = this.currentNode.parent.children.indexOf(this.currentNode);\r\n\r\n          if (this.currentNode.parent.id == null && index === 0) {\r\n            return 0;\r\n          } else {\r\n            // si tiene nodos al mismo nivel salta al nodo anterior\r\n            if (index !== undefined && index === 0) {\r\n              this.currentNode = this.currentNode.parent;\r\n              this.selectNode(this.data, this.currentNode.id);\r\n              if (!!this.currentNode.children && this.currentNode.children.length > 0) {\r\n                this.treeHelisaService.expandOneNode(this.currentNode);\r\n              }\r\n            } else {\r\n              // si no tiene nodos al mismo nivel salta al nodo padre\r\n              this.currentNode = this.currentNode.parent.children[index - 1];\r\n              this.selectNode(this.data, this.currentNode.id);\r\n              if (!!this.currentNode.children && this.currentNode.children.length > 0) {\r\n                this.treeHelisaService.expandOneNode(this.currentNode);\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  private moveDownIntoTree(): void {\r\n    if (!!this.data) {\r\n      if (this.currentNode == null) {\r\n        this.selectNode(this.data, this.data.children[0].id);\r\n        this.currentNode = this.data.children[0];\r\n        if (!!this.currentNode.children && this.currentNode.children.length > 0) {\r\n          this.treeHelisaService.expandOneNode(this.currentNode);\r\n        }\r\n      } else {\r\n        if (!!this.currentNode) {\r\n          // obtiene el indice del nodo seleccionado actualmente\r\n          const index: number =\r\n            !!this.currentNode && !!this.currentNode.parent ? this.currentNode.parent.children.indexOf(this.currentNode) : null;\r\n\r\n          // si tiene childrens pasa al primer children\r\n          if (!!this.currentNode.children && this.currentNode.children.length > 0) {\r\n            this.currentNode = this.currentNode.children[0];\r\n            this.selectNode(this.data, this.currentNode.id);\r\n            if (!!this.currentNode.children && this.currentNode.children.length > 0) {\r\n              this.treeHelisaService.expandOneNode(this.currentNode);\r\n            }\r\n          } else if (\r\n            index !== undefined &&\r\n            index === this.currentNode.parent.children.length - 1 &&\r\n            this.currentNode.parent.parent != null &&\r\n            this.currentNode.parent.parent.children != null &&\r\n            this.currentNode.parent.parent.children.length > 0\r\n          ) {\r\n            const indexOfParent: number = this.currentNode.parent.parent.children.indexOf(this.currentNode.parent);\r\n            this.currentNode =\r\n              this.currentNode.parent.parent.children[indexOfParent + 1] === undefined\r\n                ? this.currentNode\r\n                : this.currentNode.parent.parent.children[indexOfParent + 1];\r\n\r\n            this.selectNode(this.data, this.currentNode.id);\r\n            if (!!this.currentNode.children && this.currentNode.children.length > 0) {\r\n              this.treeHelisaService.expandOneNode(this.currentNode);\r\n            }\r\n          } else {\r\n            // si no tiene nodos al mismo nivel salta al siguiente hacia abajo\r\n            this.currentNode = this.currentNode.parent.children[index + 1];\r\n            this.selectNode(this.data, this.currentNode.id);\r\n            if (!!this.currentNode.children && this.currentNode.children.length > 0) {\r\n              this.treeHelisaService.expandOneNode(this.currentNode);\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Verifica si el nodo tiene hijos\r\n   */\r\n  hasChild(t: number, node: Node): boolean {\r\n    return !!node.children && node.children.length > 0;\r\n  }\r\n\r\n  /**\r\n   * Actualiza el arbol borrando toda la data , solo cuando no se utiliza paginacion\r\n   */\r\n  private refreshTree(): void {\r\n    this.data = null;\r\n    const datasourceData: Node[] = this.dataSource.data;\r\n    this.dataSource.data = null;\r\n    this.dataSource.data = datasourceData;\r\n    this.treeControl.dataNodes = datasourceData;\r\n  }\r\n\r\n  /**\r\n   * Actualiza el arbol cuando se utiliza la paginacion (Cuando no , utilice el metodo refreshTree())\r\n   */\r\n  private refreshTreeWithPagination(): void {\r\n    const datasourceData: Node[] = this.dataSource.data;\r\n    this.dataSource.data = null;\r\n    this.dataSource.data = datasourceData;\r\n    this.treeControl.dataNodes = datasourceData;\r\n  }\r\n\r\n  private goNextPage(): void {\r\n    if (!this.treeHelisaConnect.isLastPage && !this.treeHelisaConnect.isUsed) {\r\n      this.treeHelisaConnect.isUsed = true;\r\n      this.rangeScrolled.emit({\r\n        page: this.treeHelisaConnect.nextPage()\r\n      });\r\n    }\r\n  }\r\n\r\n  private receivePage(data: Node[]): void {\r\n    if (!this.data) {\r\n      this.data = { id: null, name: 'root', isSelected: false };\r\n    }\r\n    if (!this.data.children) {\r\n      this.data.children = new Array<Node>();\r\n      this.treeHelisaConnect = new TreeHelisaConnect<Node>();\r\n    }\r\n    this.data.children = this.data.children.concat(data);\r\n    this.data.children.forEach((node: Node): void => {\r\n      this.fillParent(node, this.data);\r\n    });\r\n\r\n    this.data.children = this.reorderByOrderIndex(this.data.children);\r\n\r\n    this.dataSource.data = this.data.children;\r\n    this.treeControl.dataNodes = this.data.children;\r\n    this.treeHelisaConnect.isLastPage = data.length === 0;\r\n    this.treeHelisaConnect.isUsed = false;\r\n  }\r\n\r\n  /**\r\n   * Llenan el campo parent de todos los nodos hijos\r\n   */\r\n  private fillParent(node: Node, parent: Node): void {\r\n    node.parent = parent;\r\n    if (node.children && node.children.length > 0) {\r\n      node.children.forEach((item: Node): void => {\r\n        this.fillParent(item, node);\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * coloca como true del isSelected del nodo que concuerde con el id\r\n   */\r\n  private selectNode(node: Node, id: number | string): Node {\r\n    if (node == null) {\r\n      return null;\r\n    }\r\n    this.upSelectNode(node);\r\n    if (!!this.selectedNode) {\r\n      const nodeSelected: Node = this.getNodeById(this.selectedNode);\r\n      if (nodeSelected != null) {\r\n        nodeSelected.isSelected = false;\r\n        this.selectedNode = null;\r\n      }\r\n    }\r\n    if (node.id !== undefined && node.id === id) {\r\n      node.isSelected = true;\r\n      this.expandAllParents(node);\r\n      this.selectedNode = node.id;\r\n      return node;\r\n    } else if (node.children != null) {\r\n      let i: number;\r\n      let result: Node = null;\r\n      for (i = 0; result == null && i < node.children.length; i++) {\r\n        result = this.selectNode(node.children[i], id);\r\n      }\r\n      return result;\r\n    }\r\n    return null;\r\n  }\r\n\r\n  private expandAllParents(node: Node): void {\r\n    if (!!node && !!node.parent) {\r\n      this.treeHelisaService.expandOneNode(node.parent);\r\n      this.expandAllParents(node.parent);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Elimina el isSelected de todos los nodos\r\n   */\r\n  private upSelectNode(node: Node): void {\r\n    if (!!node && node.isSelected !== undefined) {\r\n      node.isSelected = false;\r\n      if (!!node.children) {\r\n        for (const childrenNode of node.children) {\r\n          this.upSelectNode(childrenNode);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  getClassNode(node: Node): string[] {\r\n    const classNode: string[] = [];\r\n    if (node.isSelected) {\r\n      classNode.push('isSelected');\r\n    }\r\n    if (node.classNode) {\r\n      classNode.push(node.classNode);\r\n    }\r\n    return classNode;\r\n  }\r\n\r\n  onEditMode(node: Node, editMode: boolean): void {\r\n    this.getSelectedOptions(node).editMode = editMode;\r\n  }\r\n\r\n  onSelectOption(event: MatOptionSelectionChange, node: Node): void {\r\n    node.isCheckedOption = event.source.selected;\r\n    if (node.isCheckedOption) {\r\n      this.checkedOptionNode.emit(node.id);\r\n    } else {\r\n      this.uncheckedOptionNode.emit(node.id);\r\n    }\r\n  }\r\n\r\n  getSelectedOptions(\r\n    node: Node\r\n  ): {\r\n    formControl: FormControl;\r\n    editMode: boolean;\r\n  } {\r\n    if (this.selectedOptions.has(node.id)) {\r\n      this.reloadSelectedOptions(node, this.selectedOptions.get(node.id).editMode);\r\n    } else {\r\n      this.reloadSelectedOptions(node, false);\r\n    }\r\n    return this.selectedOptions.get(node.id);\r\n  }\r\n\r\n  private reloadSelectedOptions(node: Node, editMode: boolean): void {\r\n    const array: Array<string | number | null> = new Array<string | number | null>();\r\n    node.options.forEach((option: Node): void => {\r\n      if (option.isCheckedOption) {\r\n        array.push(option.id);\r\n      }\r\n    });\r\n    const obj: {\r\n      formControl: FormControl;\r\n      editMode: boolean;\r\n    } = { formControl: new FormControl(array), editMode };\r\n    this.selectedOptions.set(node.id, obj);\r\n  }\r\n\r\n  /**\r\n   * Retorna el primer Node que encuentre segun el id enviado o null si no hay ninguno\r\n   * @param id  number | string\r\n   * @returns Node o null si no hay un nodo con ese id\r\n   */\r\n  getNodeById(id: number | string): Node {\r\n    const queue: Node[] = [...this.dataSource.data];\r\n    while (queue.length > 0) {\r\n      const curr: Node = queue.shift();\r\n      if (curr.id === id) {\r\n        return curr;\r\n      } else {\r\n        if (!!curr.children) {\r\n          queue.push(...curr.children);\r\n        }\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  reorderByOrderIndex(node: Node[]): Node[] {\r\n    if (!!node && node.length > 0) {\r\n      try {\r\n        node = _.orderBy(node, (x: Node): number => x.orderIndex, ['asc']);\r\n        node.forEach((element: Node): void => {\r\n          if (!!element.children && element != null) {\r\n            element.children = this.reorderByOrderIndex(element.children);\r\n          }\r\n        });\r\n        return node;\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n  }\r\n\r\n  //#endregion ====== Metodos ============\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { OptionAutocompleteHelisa } from './autocomplete-helisa.component';\r\n\r\n@Injectable()\r\nexport class AutocompleteHelisaService<T> {\r\n\r\n  private emitChangeSource: BehaviorSubject<Array<OptionAutocompleteHelisa<T>>> =\r\n  new BehaviorSubject<Array<OptionAutocompleteHelisa<T>>>([]);\r\n\r\n  public dataSource$: Observable<Array<OptionAutocompleteHelisa<T>>> = this.emitChangeSource.asObservable();\r\n\r\n  constructor() { }\r\n\r\n  setDataSource(options: Array<OptionAutocompleteHelisa<T>>): void {\r\n    this.emitChangeSource.next(options);\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { Observable, of, Subject } from 'rxjs';\r\nimport { map, startWith, throttleTime, debounceTime } from 'rxjs/operators';\r\nimport { AutocompleteHelisaService } from './autocomplete-helisa.component.service';\r\n\r\nexport interface OptionAutocompleteHelisa<T> {\r\n  value: T;\r\n  displayText: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'hel-autocomplete',\r\n  templateUrl: './autocomplete-helisa.component.html',\r\n  styleUrls: ['./autocomplete-helisa.component.css'],\r\n  providers: [AutocompleteHelisaService]\r\n})\r\nexport class AutocompleteHelisaComponent<T> implements OnInit {\r\n\r\n  @Input() myControl: FormControl = new FormControl();\r\n  @Input() options: Array<OptionAutocompleteHelisa<T>> = new Array<OptionAutocompleteHelisa<T>>();\r\n  filteredOptions: Observable<OptionAutocompleteHelisa<T>[]>;\r\n  selectedValue: OptionAutocompleteHelisa<T>;\r\n  @Output() selectedValueEmmiter: EventEmitter<T> = new EventEmitter<T>();\r\n  @Output() nextPage: EventEmitter<void> = new EventEmitter<void>();\r\n  @Input() isRemote: boolean = false;\r\n  isLoading: boolean = false;\r\n\r\n\r\n  onScrollObservable: Subject<void> = new Subject<void>();\r\n\r\n  constructor(private autocompleteHelisaService: AutocompleteHelisaService<T>) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.onScrollObservable.asObservable()\r\n    .pipe(\r\n      debounceTime(500),\r\n      throttleTime(500)\r\n    )\r\n    .subscribe((): void => {\r\n      this.nextPage.emit();\r\n    });\r\n\r\n    if (this.isRemote) {\r\n      this.autocompleteHelisaService.dataSource$.subscribe((data: OptionAutocompleteHelisa<T>[]): void => {\r\n        setTimeout((): void => {\r\n          this.options = data;\r\n          this.filteredOptions = of<OptionAutocompleteHelisa<T>[]>(this.options);\r\n        });\r\n      });\r\n    }\r\n\r\n    this.filteredOptions = this.myControl.valueChanges.pipe(\r\n      startWith(''),\r\n      map((x: string): string => this._checkRegex(x)),\r\n      map((value: string): OptionAutocompleteHelisa<T>[] => this._filter(value))\r\n    );\r\n\r\n  }\r\n\r\n  displayFn(option?: OptionAutocompleteHelisa<T>): string | undefined {\r\n    return option ? option.displayText : undefined;\r\n  }\r\n\r\n  getService(): AutocompleteHelisaService<T> {\r\n    return this.autocompleteHelisaService;\r\n  }\r\n\r\n\r\n  /** Elimina caracteres extraños */\r\n  private _checkRegex(value: string): string {\r\n    value = value.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '');\r\n    return value;\r\n  }\r\n\r\n  private _filter(value: string): OptionAutocompleteHelisa<T>[] {\r\n    if (!(value)) {\r\n      if (!this.isRemote) {\r\n        const filterValue: string[] = value.toLowerCase().split(' ');\r\n        return this.options.filter((option: OptionAutocompleteHelisa<T>): boolean => {\r\n          let ws: boolean = true;\r\n          filterValue.forEach((text: string): boolean => ws = ws && option.displayText.toLowerCase().indexOf(text) >= 0);\r\n          return ws;\r\n        }).splice(0, 5);\r\n      } else {\r\n        return this.options;\r\n      }\r\n    }\r\n  }\r\n\r\n  public onSelected(event: {option: {value: OptionAutocompleteHelisa<T>}}): void {\r\n    this.selectedValue = event.option.value;\r\n    this.selectedValueEmmiter.emit(this.selectedValue.value);\r\n  }\r\n\r\n  getNextPage(): void {\r\n    this.onScrollObservable.next();\r\n  }\r\n}\r\n","import { Directive, EventEmitter, Input, Output, OnDestroy } from '@angular/core';\r\nimport { MatAutocomplete } from '@angular/material/autocomplete';\r\nimport { takeUntil, tap } from 'rxjs/operators';\r\nimport { Subject } from 'rxjs';\r\n\r\n\r\nexport interface IAutoCompleteScrollEvent {\r\n  autoComplete: MatAutocomplete;\r\n  scrollEvent: Event;\r\n}\r\n\r\n\r\n@Directive({\r\n  selector: 'mat-autocomplete[optionsScroll]'\r\n})\r\nexport class OptionsScrollDirective implements OnDestroy {\r\n\r\n  /**\r\n   * This value would different depends of styles\r\n   */\r\n  @Input() thresholdPercent: number = .9;\r\n  @Output() optionsScroll: EventEmitter<IAutoCompleteScrollEvent> = new EventEmitter<IAutoCompleteScrollEvent>();\r\n  destroy: Subject<void> = new Subject<void>();\r\n  lastScrollTop: number = 0;\r\n\r\n  constructor(public autoComplete: MatAutocomplete) {\r\n    this.autoComplete.opened.pipe(\r\n      tap((): void => {\r\n        // Note: When autocomplete raises opened, panel is not yet created (by Overlay)\r\n        // Note: The panel will be available on next tick\r\n        // Note: The panel wil NOT open if there are no options to display\r\n        setTimeout((): void => {\r\n          // Note: remove listner just for safety, in case the close event is skipped.\r\n          this.removeScrollEventListener();\r\n          if (!!this.autoComplete &&\r\n            !!this.autoComplete.panel &&\r\n            !!this.autoComplete.panel.nativeElement) {\r\n            this.autoComplete.panel.nativeElement\r\n              .addEventListener('scroll', this.onScroll.bind(this), false);\r\n          }\r\n        });\r\n      }),\r\n      takeUntil(this.destroy)).subscribe();\r\n\r\n    this.autoComplete.closed.pipe(\r\n      tap((): void => this.removeScrollEventListener()),\r\n      takeUntil(this.destroy)).subscribe();\r\n  }\r\n\r\n  private removeScrollEventListener(): void {\r\n    if (!!this.autoComplete &&\r\n      !!this.autoComplete.panel &&\r\n      !!this.autoComplete.panel.nativeElement) {\r\n      this.autoComplete.panel.nativeElement\r\n        .removeEventListener('scroll', this.onScroll);\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.destroy.next();\r\n    this.destroy.complete();\r\n\r\n    this.removeScrollEventListener();\r\n  }\r\n\r\n\r\n  onScroll(event: Event): void {\r\n    // Credits: how to know if it's down or up scroll \"https://github.com/qeremy/so/blob/master/so.dom.js#L426\"\r\n    const st: number = (event.target as Window).pageYOffset || (event.target as Element).scrollTop;\r\n    if (st > this.lastScrollTop) {\r\n      // downscroll code\r\n      if (this.thresholdPercent === undefined) {\r\n        this.optionsScroll.next({ autoComplete: this.autoComplete, scrollEvent: event });\r\n      } else {\r\n        const threshold: number = this.thresholdPercent * 100 * (event.target as Element).scrollHeight / 100;\r\n        const current: number = (event.target as Element).scrollTop + (event.target as Element).clientHeight;\r\n        // console.log(`scroll ${current}, threshold: ${threshold}`)\r\n        if (current > threshold) {\r\n          // console.log('load next page');\r\n          this.optionsScroll.next({ autoComplete: this.autoComplete, scrollEvent: event });\r\n        }\r\n      }\r\n    } else {\r\n      // upscroll code\r\n    }\r\n    this.lastScrollTop = st <= 0 ? 0 : st;\r\n  }\r\n\r\n}\r\n","import { Directive, Input, HostListener, ElementRef } from '@angular/core';\r\nimport { MatTooltip } from '@angular/material/tooltip';\r\n\r\n@Directive({\r\n    selector: '[helTooltip]',\r\n    providers: [MatTooltip]\r\n})\r\nexport class HelTooltipDirective {\r\n\r\n    tooltip: MatTooltip;\r\n\r\n    /**\r\n     * Mensaje a mostrar\r\n     */\r\n    @Input('helTooltip') message: string;\r\n\r\n    /**\r\n     * Tiempo antes de ocultarla el mensaje\r\n     */\r\n    @Input() hideDelay: number = 600;\r\n\r\n    /**\r\n     * Tiempo antes de mostra el mensaje\r\n     */\r\n    @Input() showDelay: number = 500;\r\n\r\n\r\n    constructor(tooltip: MatTooltip, private elemRef: ElementRef) {\r\n      this.tooltip = tooltip;\r\n    }\r\n\r\n    @HostListener('mouseover') mouseover(): void {\r\n      const currentContent: string = this.elemRef.nativeElement.innerText;\r\n\r\n      if (!!currentContent && !!this.message) {\r\n        if ((currentContent.toUpperCase() !== this.message.toString().toUpperCase()) || this.isEllipsisActive(this.elemRef.nativeElement)) {\r\n          this.tooltip.message = this.message;\r\n        }\r\n      }\r\n\r\n      this.tooltip.showDelay =  this.showDelay;\r\n      this.tooltip.hideDelay = this.hideDelay;\r\n    }\r\n\r\n\r\n    private isEllipsisActive(e: {offsetWidth: number , scrollWidth: number}): boolean {\r\n      return (e.offsetWidth < e.scrollWidth);\r\n    }\r\n}\r\n","import { Directive, HostBinding, PLATFORM_ID, Inject, Input, OnChanges } from '@angular/core';\r\nimport { isPlatformBrowser } from '@angular/common';\r\n\r\n@Directive({\r\n  selector: 'a[href]',\r\n})\r\nexport class ExternalLinkDirective implements OnChanges {\r\n  @HostBinding('attr.rel') relAttr: string = '';\r\n  @HostBinding('attr.target') targetAttr: string = '';\r\n  @HostBinding('attr.href') hrefAttr: string = '';\r\n  @Input() href: string;\r\n\r\n  constructor(@Inject(PLATFORM_ID) private platformId: string) {}\r\n\r\n  ngOnChanges(): void {\r\n\r\n    this.hrefAttr = this.href;\r\n\r\n    if (this.isLinkExternal()) {\r\n      this.relAttr = 'noopener';\r\n      this.targetAttr = '_blank';\r\n    }\r\n  }\r\n\r\n  private isLinkExternal(): boolean {\r\n    return isPlatformBrowser(this.platformId) && !this.href.includes(location.hostname);\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n    name: 'externalLink'\r\n})\r\nexport class ExternalLinkPipe implements PipeTransform {\r\n    transform(value: string, ...args: string[]): string {\r\n        return '//' + value;\r\n    }\r\n}\r\n","import {AfterViewInit, Component, EventEmitter, Input, OnInit, Output, ViewChild} from '@angular/core';\r\nimport {ComboBoxListable} from './interface/combo-box-listable';\r\nimport {ComboBoxEditable} from './interface/combo-box-editable';\r\n\r\nexport enum ComboBoxHelisaState {\r\n  CLOSED,\r\n  SELECT,\r\n  INSERT\r\n}\r\n\r\n@Component({\r\n  selector: 'lib-combo-box-helisa',\r\n  templateUrl: './combo-box-helisa.component.html',\r\n  styleUrls: ['./combo-box-helisa.component.css']\r\n})\r\nexport class ComboBoxHelisaComponent<TYPE> implements OnInit, AfterViewInit {\r\n\r\n  @Input() editable: ComboBoxEditable<TYPE>;\r\n  @Input() listable: ComboBoxListable<TYPE>;\r\n  @Input() placeholder: string = 'Sin seleccionar';\r\n  @Input() selectedItem: TYPE;\r\n  @Output() selectEmitter: EventEmitter<TYPE> = new EventEmitter<TYPE>();\r\n  @Input() enabled: boolean = true;\r\n\r\n  private page: number = 0;\r\n  private pageSize: number = 50;\r\n  private haveNextPage: boolean = true;\r\n  state: ComboBoxHelisaState = ComboBoxHelisaState.CLOSED;\r\n\r\n  rows: TYPE[] = [];\r\n\r\n  constructor() {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.getNextPage();\r\n  }\r\n\r\n  private getNextPage(): void {\r\n    if (this.haveNextPage) {\r\n      this.listable.getData(this.page++, this.pageSize).subscribe((rows: TYPE[]): void => {\r\n        rows.forEach((item: TYPE): number => this.rows.push(item));\r\n        this.haveNextPage = rows.length > 0;\r\n      });\r\n    }\r\n  }\r\n\r\n  get comboBoxHelisaState(): typeof ComboBoxHelisaState {\r\n    return ComboBoxHelisaState;\r\n  }\r\n\r\n  onFocus(): void {\r\n    if (this.enabled) {\r\n      this.state = ComboBoxHelisaState.SELECT;\r\n    }\r\n  }\r\n\r\n  selectItem(row: TYPE): void {\r\n    this.selectedItem = row;\r\n    this.selectEmitter.emit(row);\r\n    this.state = ComboBoxHelisaState.CLOSED;\r\n  }\r\n\r\n  changeToInsert(): void {\r\n    this.state = ComboBoxHelisaState.INSERT;\r\n  }\r\n\r\n  insert(event: string): void {\r\n    if (event.trim().length > 0) {\r\n      this.editable.insert(event).subscribe(\r\n        (data: TYPE): void => {\r\n          this.rows.push(data);\r\n          this.state = ComboBoxHelisaState.SELECT;\r\n        }\r\n      );\r\n    } else {\r\n      this.state = ComboBoxHelisaState.SELECT;\r\n    }\r\n  }\r\n\r\n  onScroll(event: Event): void {\r\n    const element: HTMLDivElement = event.target as HTMLDivElement;\r\n    if (element.scrollHeight - element.scrollTop < 1000) {\r\n      this.getNextPage();\r\n    }\r\n  }\r\n}\r\n","import { AfterViewInit, Component, ContentChild, EventEmitter, Input, OnInit, Output, TemplateRef } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\nexport enum PagingTreeInitialMode {\r\n  COLLAPSE,\r\n  EXPAND\r\n}\r\n\r\nexport interface PagingTreeHelisaListable<T> {\r\n  get(lastChildOrder: number, size: number): Observable<T[]>;\r\n\r\n  getIdField(): string;\r\n\r\n  getIdParentField(): string;\r\n\r\n  compare(a: T, b: T): number;\r\n}\r\n\r\ninterface HelisaNode<T> {\r\n  object: T;\r\n  level: number;\r\n  haveChildren: boolean;\r\n  expanded: boolean;\r\n  visible: boolean;\r\n  preorder: number;\r\n}\r\n\r\nexport interface HelisaNodeData<T> {\r\n  readonly object: T;\r\n  readonly level: number;\r\n  readonly haveChildren: boolean;\r\n  readonly expanded: boolean;\r\n  readonly visible: boolean;\r\n  readonly preorder: number;\r\n}\r\n\r\n@Component({\r\n  selector: 'hel-paging-tree',\r\n  templateUrl: './paging-tree-helisa.component.html',\r\n  styleUrls: ['./paging-tree-helisa.component.css']\r\n})\r\nexport class PagingTreeHelisaComponent<T> implements OnInit, AfterViewInit {\r\n\r\n  private pageSize: number = 200000;\r\n  private visibleLimit: number = 0;\r\n  private visibleSize: number = 100;\r\n  private treeMode: PagingTreeInitialMode = PagingTreeInitialMode.EXPAND;\r\n  private visibleObjects: Array<T> = [];\r\n  private service: PagingTreeHelisaListable<T>;\r\n  private searchNode: Map<string, HelisaNode<T>>;\r\n  private allNode: Array<HelisaNode<T>> = [];\r\n\r\n  @Output()\r\n  afterLoadData: EventEmitter<void> = new EventEmitter<void>();\r\n\r\n  @ContentChild('nodeComponent')\r\n  nodeComponent: TemplateRef<{ data: T, node: HelisaNodeData<T> }>;\r\n\r\n  @ContentChild('nodeTitle')\r\n  nodeTitle: TemplateRef<any>;\r\n\r\n  constructor() {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n  }\r\n\r\n  @Input()\r\n  set mode(paramMode: PagingTreeInitialMode) {\r\n    this.treeMode = paramMode;\r\n    this.reset();\r\n  }\r\n\r\n  @Input()\r\n  set pagingTreeHelisaListable(paramService: PagingTreeHelisaListable<T>) {\r\n    this.service = paramService;\r\n    this.reset();\r\n  }\r\n\r\n  public reset(): void {\r\n    if (this.service) {\r\n      this.service.get(0, this.pageSize).subscribe((items: T[]): void => this.loadData(items));\r\n    }\r\n  }\r\n\r\n  private loadData(items: T[]): void {\r\n    this.searchNode = new Map<string, HelisaNode<T>>();\r\n    this.visibleObjects = [];\r\n    this.allNode = [];\r\n    items = this.sortItems(items);\r\n    this.searchNode = new Map<string, HelisaNode<T>>();\r\n    items.forEach((item: T): void => {\r\n      const node: HelisaNode<T> = this.createNode(item);\r\n      this.allNode.push(node);\r\n    });\r\n    this.reSort();\r\n    this.loadNextVisibleObjects(null);\r\n    this.afterLoadData.emit();\r\n  }\r\n\r\n  private sortItems(items: T[]): T[] {\r\n    const lAdy: Map<string, T[]> = new Map<string, T[]>();\r\n    const stack: T[] = [];\r\n    items.forEach((item: T): void => {\r\n      const idParent: string = item[this.service.getIdParentField()];\r\n      if (!idParent) {\r\n        stack.unshift(item);\r\n      } else {\r\n        if (!lAdy.has(idParent)) {\r\n          lAdy.set(idParent, []);\r\n        }\r\n        lAdy.get(idParent).push(item);\r\n      }\r\n    });\r\n    const response: T[] = new Array<T>(items.length);\r\n    let index: number = 0;\r\n    while (stack.length > 0) {\r\n      const last: T = stack.pop();\r\n      response[index++] = last;\r\n      const children: T[] = lAdy.get(last[this.service.getIdField()]);\r\n      if (children) {\r\n        for (let i: number = children.length - 1; i >= 0; i--) {\r\n          stack.push(children[i]);\r\n        }\r\n      }\r\n    }\r\n    return response;\r\n  }\r\n\r\n  private createNode(item: T): HelisaNode<T> {\r\n    if (this.searchNode.has(item[this.service.getIdField()])) {\r\n      throw Error('Ya existe el nodo.');\r\n    }\r\n    const parentInformation: HelisaNode<T> = this.getNodeInformationById(item[this.service.getIdParentField()]);\r\n    const nodeInformation: HelisaNode<T> = {\r\n      object: item,\r\n      haveChildren: false,\r\n      level: parentInformation ? parentInformation.level + 1 : 0,\r\n      expanded: this.treeMode === PagingTreeInitialMode.EXPAND,\r\n      visible: false,\r\n      preorder: this.searchNode.size + 1,\r\n    };\r\n    this.searchNode.set(item[this.service.getIdField()], nodeInformation);\r\n    if (parentInformation) {\r\n      parentInformation.haveChildren = true;\r\n    }\r\n    return nodeInformation;\r\n  }\r\n\r\n  public getNodeInformationById(id: string): HelisaNode<T> {\r\n    return this.searchNode.get(id);\r\n  }\r\n\r\n  public getNodeInformation(item: T): HelisaNode<T> {\r\n    return this.searchNode.get(item[this.service.getIdField()]);\r\n  }\r\n\r\n  getLevelClass(item: T): string {\r\n    return 'padding-level-' + this.getNodeInformationById(item[this.service.getIdField()]).level;\r\n  }\r\n\r\n  private loadNextVisibleObjects(nodeFrom: T): void {\r\n    const visibleObjects: T[] = [];\r\n    this.visibleObjects.forEach((item: T): void => {\r\n      if (this.getNodeInformation(item)) {\r\n        if (nodeFrom && this.getNodeInformation(nodeFrom).preorder >= this.getNodeInformation(item).preorder) {\r\n          visibleObjects.push(item);\r\n        } else {\r\n          this.getNodeInformationById(item[this.service.getIdField()]).visible = false;\r\n        }\r\n      }\r\n    });\r\n    this.visibleLimit = visibleObjects.length + this.visibleSize;\r\n    this.allNode.forEach((item: HelisaNode<T>): void => {\r\n      if (visibleObjects.length < this.visibleLimit &&\r\n        (!nodeFrom || this.getNodeInformation(nodeFrom).preorder < item.preorder)) {\r\n        const idParent: string = item.object[this.service.getIdParentField()];\r\n        if (!idParent) {\r\n          visibleObjects.push(item.object);\r\n          item.visible = true;\r\n        } else {\r\n          const parentInformation: HelisaNode<T> = this.getNodeInformationById(idParent);\r\n          if (parentInformation.visible && parentInformation.expanded) {\r\n            visibleObjects.push(item.object);\r\n            item.visible = true;\r\n          }\r\n        }\r\n      }\r\n    });\r\n    this.visibleObjects = visibleObjects;\r\n  }\r\n\r\n  collapseNode(item: T): void {\r\n    this.getNodeInformationById(item[this.service.getIdField()]).expanded = false;\r\n    this.loadNextVisibleObjects(item);\r\n  }\r\n\r\n  expandNode(item: T): void {\r\n    this.getNodeInformationById(item[this.service.getIdField()]).expanded = true;\r\n    this.loadNextVisibleObjects(item);\r\n  }\r\n\r\n  showNextPage(): void {\r\n    if (this.visibleObjects.length > 0) {\r\n      this.loadNextVisibleObjects(this.visibleObjects[this.visibleObjects.length - 1]);\r\n    }\r\n  }\r\n\r\n  get visibleData(): ReadonlyArray<T> {\r\n    return this.visibleObjects;\r\n  }\r\n\r\n  removeItem(item: T): void {\r\n    this.removeById(item[this.service.getIdField()]);\r\n  }\r\n\r\n  removeById(id: string): void {\r\n    if (this.getNodeInformationById(id)) {\r\n      const idParent: string = this.getNodeInformationById(id).object[this.service.getIdParentField()];\r\n      const set: Set<string> = new Set<string>();\r\n      set.add(id);\r\n      const beginIndex: number = this.allNode.findIndex(\r\n        (itemSearch: HelisaNode<T>): boolean => itemSearch.object[this.service.getIdField()] === id\r\n      );\r\n      let lastIndex: number = this.allNode.length;\r\n      for (let i: number = beginIndex + 1; i < this.allNode.length; i++) {\r\n        const itemSearch: T = this.allNode[i].object;\r\n        if (set.has(itemSearch[this.service.getIdParentField()])) {\r\n          set.add(itemSearch[this.service.getIdField()]);\r\n        } else {\r\n          lastIndex = i;\r\n          break;\r\n        }\r\n      }\r\n      const deletedItems: HelisaNode<T>[] = this.allNode.splice(beginIndex, lastIndex - beginIndex);\r\n      let parentHaveChildren: boolean = false;\r\n      deletedItems.forEach((deletedItem: HelisaNode<T>): boolean => this.searchNode.delete(deletedItem.object[this.service.getIdField()]));\r\n      this.allNode.forEach((searchItem: HelisaNode<T>, index: number): void => {\r\n        searchItem.preorder = index + 1;\r\n        if (searchItem.object[this.service.getIdParentField()] === idParent) {\r\n          parentHaveChildren = true;\r\n        }\r\n      });\r\n      if (idParent) {\r\n        this.getNodeInformationById(idParent).haveChildren = parentHaveChildren;\r\n      }\r\n      this.loadNextVisibleObjects(beginIndex > 0 ? this.allNode[beginIndex - 1].object : null);\r\n    }\r\n  }\r\n\r\n  addItem(item: T): void {\r\n    const indexParent: number = this.allNode.findIndex((node: HelisaNode<T>): boolean => node.object[this.service.getIdField()] === item[this.service.getIdParentField()]);\r\n    if (indexParent >= 0) {\r\n      this.allNode.push(this.createNode(item));\r\n      this.allNode[indexParent].haveChildren = true;\r\n      this.reSort();\r\n      this.expandNode(this.allNode[indexParent].object);\r\n    } else {\r\n      throw Error('No existe el padre.');\r\n    }\r\n  }\r\n\r\n  updateItem(item: T): void {\r\n    if (this.getNodeInformation(item)) {\r\n      this.getNodeInformation(item).object = item;\r\n      this.reSort();\r\n      const indexParent: number = this.allNode.findIndex(\r\n        (node: HelisaNode<T>): boolean => node.object[this.service.getIdField()] === item[this.service.getIdParentField()]);\r\n      if (indexParent >= 0) {\r\n        this.expandNode(this.allNode[indexParent].object);\r\n      } else {\r\n        this.loadNextVisibleObjects(null);\r\n      }\r\n    }\r\n  }\r\n\r\n  private reSort(): void {\r\n    const items: T[] = this.allNode.map((node: HelisaNode<T>): T => node.object);\r\n    items.sort((a: T, b: T): number => this.service.compare(a, b));\r\n    const preorder: T[] = this.sortItems(items);\r\n    preorder.forEach((object: T, index: number): number => this.getNodeInformation(object).preorder = index + 1);\r\n    this.allNode.sort((nodeA: HelisaNode<T>, nodeB: HelisaNode<T>): number => nodeA.preorder - nodeB.preorder);\r\n  }\r\n}\r\n","export enum AlertInformationType {\r\n    AUTHORIZATION_TRANSACTION,\r\n    CONFIRM_DELETE_DATA,\r\n    DELETE_DATA,\r\n    INFORMATION_NOT_VALID,\r\n    LOST_DATA,\r\n    UNCOMPLETED_DATA,\r\n    UNCOMPLETED_SELECTED_DATA,\r\n    DEFINE_COMMERCIAL_STRUCTURE,\r\n    DEFINE_PARKING_STRUCTURE,\r\n    DEFINE_RESIDENCIAL_STRUCTURE\r\n  }\r\n","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { AlertInformationType } from './alert-information-helisa-type.enum';\r\n\r\ninterface AlertInformationDataHelisaProperties {\r\n  alertType: AlertInformationType;\r\n  title: string;\r\n  content: string;\r\n  okLabel: string;\r\n  cancelLabel: string;\r\n}\r\n\r\nconst TITLE_BY_ALERT_TYPE: string[] = ['!Esta transacción requiere autorización!',\r\n                                       '',\r\n                                       '¿Está seguro que debe anular esta información?',\r\n                                       '',\r\n                                       '¿Está seguro de querer perder lo ya hecho?',\r\n                                       'No ha suministrado la información necesaria.',\r\n                                       '',\r\n                                       '',\r\n                                       '',\r\n                                       ''\r\n                                      ];\r\nconst CONTENT_BY_ALERT_TYPE: string[] = ['',\r\n                                         '¿Esta seguro que desea eliminar esta información?',\r\n                                         'Al anular este concepto, quedará la huella de todo lo que se hizo apoyados en su información. No es una eliminación tácita, es suprimir su uso en adelante.',\r\n                                         'Rectifique. Hay información no válida',\r\n                                         'Si no está seguro, puede continuar o \"aplicar\" y posteriormente cuando tenga clara las respuestas, usando la opción de modificar podrá completar el concepto.',\r\n                                         'Si insite en grabar así, este concepto no será utilizable hasta su conclusión satisfactoria, que deberá completar posteriormente modificando el concepto.',\r\n                                         'Elemento sin información requerida. Modifíquelo para completarlo.',\r\n                                         'Primero defina la estructura comercial en configuración.',\r\n                                         'Primero defina la estructura zona de parqueaderos en configuración.',\r\n                                         'Primero defina la estructura física residencial en configuración.'\r\n                                        ];\r\nconst OK_LABEL_BY_ALERT_TYPE: string[] = ['Solicitarla',\r\n                                          'Lo asumo',\r\n                                          'Lo asumo',\r\n                                          '',\r\n                                          'Lo asumo',\r\n                                          'Lo asumo',\r\n                                          'Aceptar',\r\n                                          '',\r\n                                          '',\r\n                                          ''\r\n                                         ];\r\nconst CANCEL_LABEL_BY_ALERT_TYPE: string[] = ['Negarla',\r\n                                              'Me retracto',\r\n                                              'Me retracto',\r\n                                              '',\r\n                                              'Me retracto',\r\n                                              'Me retracto',\r\n                                              '',\r\n                                              '',\r\n                                              '',\r\n                                              ''\r\n                                             ];\r\n\r\n@Component({\r\n  selector: 'hel-alert-information-data-helisa',\r\n  templateUrl: './alert-information-data-helisa.component.html',\r\n  styleUrls: ['./alert-information-data-helisa.component.sass']\r\n})\r\nexport class AlertInformationDataHelisaComponent implements OnInit {\r\n\r\n  alertType: AlertInformationType;\r\n  title: string;\r\n  content: string;\r\n  okLabel: string;\r\n  cancelLabel: string;\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<AlertInformationDataHelisaComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: AlertInformationDataHelisaProperties\r\n  ) {\r\n    this.alertType = data.alertType;\r\n    this.title = data.title;\r\n    if (this.title === undefined) {\r\n      this.title = TITLE_BY_ALERT_TYPE[this.alertType];\r\n    }\r\n    this.content = data.content;\r\n    if (this.content === undefined) {\r\n      this.content = CONTENT_BY_ALERT_TYPE[this.alertType];\r\n    }\r\n    this.okLabel = data.okLabel;\r\n    if (this.okLabel === undefined) {\r\n      this.okLabel = OK_LABEL_BY_ALERT_TYPE[this.alertType];\r\n    }\r\n    this.cancelLabel = data.cancelLabel;\r\n    if (this.cancelLabel === undefined) {\r\n      this.cancelLabel = CANCEL_LABEL_BY_ALERT_TYPE[this.alertType];\r\n    }\r\n    dialogRef.disableClose = true;\r\n    dialogRef.keydownEvents().subscribe((event: KeyboardEvent): void => {\r\n      if (event.code === 'Escape') {\r\n        this.dialogRef.close(this.onCancel());\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    if (this.alertType === AlertInformationType.DEFINE_COMMERCIAL_STRUCTURE || this.alertType === AlertInformationType.DEFINE_PARKING_STRUCTURE ||\r\n        this.alertType === AlertInformationType.DEFINE_RESIDENCIAL_STRUCTURE) {\r\n      setTimeout((): void => {\r\n        this.dialogRef.close();\r\n      }, 3000);\r\n    }\r\n  }\r\n\r\n  onCancel(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  hasTitle(): boolean {\r\n    return this.alertType === AlertInformationType.AUTHORIZATION_TRANSACTION || this.alertType === AlertInformationType.DELETE_DATA ||\r\n           this.alertType === AlertInformationType.LOST_DATA || this.alertType === AlertInformationType.UNCOMPLETED_DATA;\r\n  }\r\n\r\n  hasContent(): boolean {\r\n    return this.alertType === AlertInformationType.CONFIRM_DELETE_DATA || this.alertType === AlertInformationType.DELETE_DATA ||\r\n           this.alertType === AlertInformationType.INFORMATION_NOT_VALID || this.alertType === AlertInformationType.LOST_DATA ||\r\n           this.alertType === AlertInformationType.UNCOMPLETED_DATA || this.alertType === AlertInformationType.UNCOMPLETED_SELECTED_DATA ||\r\n           this.alertType === AlertInformationType.DEFINE_COMMERCIAL_STRUCTURE || this.alertType === AlertInformationType.DEFINE_PARKING_STRUCTURE ||\r\n           this.alertType === AlertInformationType.DEFINE_RESIDENCIAL_STRUCTURE;\r\n  }\r\n\r\n  hasButtons(): boolean {\r\n    return this.alertType === AlertInformationType.AUTHORIZATION_TRANSACTION || this.alertType === AlertInformationType.CONFIRM_DELETE_DATA ||\r\n           this.alertType === AlertInformationType.DELETE_DATA || this.alertType === AlertInformationType.LOST_DATA ||\r\n           this.alertType === AlertInformationType.UNCOMPLETED_DATA || this.alertType === AlertInformationType.UNCOMPLETED_SELECTED_DATA;\r\n  }\r\n\r\n  hasCancelButton(): boolean {\r\n    return this.alertType !== AlertInformationType.UNCOMPLETED_SELECTED_DATA;\r\n  }\r\n}\r\n","import {DragDropModule} from '@angular/cdk/drag-drop';\r\nimport {LayoutModule} from '@angular/cdk/layout';\r\nimport {CommonModule} from '@angular/common';\r\nimport {NgModule} from '@angular/core';\r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatNativeDateModule, MatOptionModule } from '@angular/material/core';\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatChipsModule } from '@angular/material/chips';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatStepperModule } from '@angular/material/stepper';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { MatTreeModule } from '@angular/material/tree';\r\nimport { AlertHelisaComponent } from './components/alert-helisa/alert-helisa.component';\r\nimport { AutocompleteHelisaComponent } from './components/autocomplete-helisa/autocomplete-helisa.component';\r\nimport { DateHelisaComponent } from './components/date-helisa/date-helisa.component';\r\nimport { DependencyTableHelisaComponent } from './components/dependency-table-helisa/dependency-table-helisa.component';\r\nimport { InputHelisaComponent } from './components/input-helisa/input-helisa.component';\r\nimport { InputWithButtonComponent } from './components/input-with-button/input-with-button.component';\r\nimport { TableHelisaComponent } from './components/table-helisa/table-helisa.component';\r\nimport { TableHelisaService } from './components/table-helisa/table-helisa.service';\r\nimport { ToastHelisaComponent } from './components/toast-helisa/toast-helisa.component';\r\nimport { TreeHelisaComponent } from './components/tree-helisa/tree-helisa.component';\r\nimport { TreeHelisaService } from './components/tree-helisa/tree-helisa.service';\r\nimport { ExternalLinkDirective } from './directives/external-link.directive';\r\nimport { OptionsScrollDirective } from './directives/options-scroll.directive';\r\nimport { HelTooltipDirective } from './directives/tooltip.directive';\r\nimport { ExternalLinkPipe } from './pipes/external-link.pipe';\r\nimport { ComboBoxHelisaComponent } from './components/combo-box-helisa/combo-box-helisa.component';\r\nimport { PagingTreeHelisaComponent } from './components/paging-tree-helisa/paging-tree-helisa.component';\r\nimport { AlertInformationDataHelisaComponent } from './components/alert-information-data-helisa/alert-information-data-helisa.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    InputWithButtonComponent,\r\n    ToastHelisaComponent,\r\n    AlertHelisaComponent,\r\n    DependencyTableHelisaComponent,\r\n    InputHelisaComponent,\r\n    TableHelisaComponent,\r\n    TreeHelisaComponent,\r\n    DateHelisaComponent,\r\n    AutocompleteHelisaComponent,\r\n    OptionsScrollDirective,\r\n    HelTooltipDirective,\r\n    ExternalLinkDirective,\r\n    ExternalLinkPipe,\r\n    ComboBoxHelisaComponent,\r\n    PagingTreeHelisaComponent,\r\n    AlertInformationDataHelisaComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n\r\n    MatAutocompleteModule,\r\n    MatButtonModule,\r\n    MatCheckboxModule,\r\n    MatToolbarModule,\r\n    MatExpansionModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatSelectModule,\r\n    MatOptionModule,\r\n    MatListModule,\r\n    MatIconModule,\r\n    MatSnackBarModule,\r\n    MatCardModule,\r\n    LayoutModule,\r\n    MatTooltipModule,\r\n    MatButtonModule,\r\n    MatSidenavModule,\r\n    MatIconModule,\r\n    MatListModule,\r\n    MatGridListModule,\r\n    MatCardModule,\r\n    MatMenuModule,\r\n    MatInputModule,\r\n    MatSelectModule,\r\n    MatRadioModule,\r\n    MatProgressSpinnerModule,\r\n    MatTableModule,\r\n    MatPaginatorModule,\r\n    MatSortModule,\r\n    MatDialogModule,\r\n    MatTabsModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    MatStepperModule,\r\n    MatChipsModule,\r\n    DragDropModule,\r\n    MatTreeModule\r\n  ],\r\n  exports: [\r\n    InputWithButtonComponent,\r\n    ToastHelisaComponent,\r\n    AlertHelisaComponent,\r\n    DependencyTableHelisaComponent,\r\n    InputHelisaComponent,\r\n    TableHelisaComponent,\r\n    TreeHelisaComponent,\r\n    DateHelisaComponent,\r\n    AutocompleteHelisaComponent,\r\n    OptionsScrollDirective,\r\n    HelTooltipDirective,\r\n    ExternalLinkDirective,\r\n    ExternalLinkPipe,\r\n    MatButtonModule,\r\n    MatCheckboxModule,\r\n    MatToolbarModule,\r\n    MatExpansionModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatSelectModule,\r\n    MatOptionModule,\r\n    MatListModule,\r\n    MatIconModule,\r\n    MatSnackBarModule,\r\n    MatCardModule,\r\n    LayoutModule,\r\n    MatTooltipModule,\r\n    MatButtonModule,\r\n    MatSidenavModule,\r\n    MatIconModule,\r\n    MatListModule,\r\n    MatGridListModule,\r\n    MatCardModule,\r\n    MatMenuModule,\r\n    MatInputModule,\r\n    MatSelectModule,\r\n    MatRadioModule,\r\n    MatProgressSpinnerModule,\r\n    MatTableModule,\r\n    MatPaginatorModule,\r\n    MatSortModule,\r\n    MatDialogModule,\r\n    MatTabsModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    MatStepperModule,\r\n    MatChipsModule,\r\n    DragDropModule,\r\n    MatTreeModule,\r\n    ComboBoxHelisaComponent,\r\n    PagingTreeHelisaComponent,\r\n    AlertInformationDataHelisaComponent\r\n  ],\r\n  providers: [TableHelisaService, TreeHelisaService]\r\n})\r\nexport class HelisaLibModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { Observable } from 'rxjs';\r\nimport { AlertInformationDataHelisaComponent} from './alert-information-data-helisa.component';\r\nimport { AlertInformationType } from './alert-information-helisa-type.enum';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AlertInformationDataHelisaService {\r\n\r\n  constructor(public dialog: MatDialog) { }\r\n\r\n  openDialog(alertType: AlertInformationType, title?: string, content?: string, okLabel?: string, cancelLabel?: string): Observable<boolean> {\r\n    const dialogRef: MatDialogRef<AlertInformationDataHelisaComponent> = this.dialog.open(AlertInformationDataHelisaComponent, {\r\n      width: '250px',\r\n      data: { alertType, title, content, okLabel, cancelLabel }\r\n    });\r\n\r\n    return dialogRef.afterClosed();\r\n  }\r\n}\r\n","/*\r\n * Public API Surface of helisa-lib\r\n */\r\n\r\n// InputWithButton\r\nexport * from './lib/components/input-with-button/input-with-button.component';\r\n\r\n// ToastHelisa\r\nexport * from './lib/components/toast-helisa/toast-helisa.component';\r\nexport * from './lib/components/toast-helisa/toast-helisa.service';\r\nexport * from './lib/components/toast-helisa/toast-type.enum';\r\n\r\n// AlertHelisa\r\nexport * from './lib/components/alert-helisa/alert-helisa-type.enum';\r\nexport * from './lib/components/alert-helisa/alert-helisa.component';\r\nexport * from './lib/components/alert-helisa/alert-helisa.service';\r\n\r\n// DependencyTableHelisa\r\nexport * from './lib/components/dependency-table-helisa/dependency-table-helisa.component';\r\nexport * from './lib/components/dependency-table-helisa/dependency-table-helisa.service';\r\n\r\n// InputHelisa\r\nexport * from './lib/components/input-helisa/input-helisa.component';\r\n\r\n\r\n// TableHelisa\r\nexport * from './lib/components/table-helisa/table-helisa.component';\r\nexport * from './lib/components/table-helisa/table-helisa.interface';\r\nexport * from './lib/components/table-helisa/table-helisa.service';\r\n\r\n// Date\r\nexport * from './lib/components/date-helisa/date-helisa.component';\r\n\r\n// Tree\r\nexport * from './lib/components/tree-helisa/tree-helisa.component';\r\nexport * from './lib/components/tree-helisa/tree-helisa-connect';\r\nexport * from './lib/components/tree-helisa/tree-helisa.service';\r\nexport * from './lib/components/tree-helisa/node';\r\n\r\n\r\n// Autocomplete\r\nexport * from './lib/components/autocomplete-helisa/autocomplete-helisa.component';\r\nexport * from './lib/components/autocomplete-helisa/autocomplete-helisa.component.service';\r\n\r\n// Directives\r\nexport * from './lib/directives/options-scroll.directive';\r\nexport * from './lib/directives/tooltip.directive';\r\n\r\n\r\n// Module\r\nexport * from './lib/helisa-lib.module';\r\n\r\n// ComboBoxHelisa\r\nexport * from './lib/components/combo-box-helisa/combo-box-helisa.component';\r\nexport * from './lib/components/combo-box-helisa/interface/combo-box-listable';\r\nexport * from './lib/components/combo-box-helisa/interface/combo-box-editable';\r\n\r\n// PagingTreeHelisa\r\nexport * from './lib/components/paging-tree-helisa/paging-tree-helisa.component';\r\n\r\n// AlertInformationDataHelisa\r\nexport * from './lib/components/alert-information-data-helisa/alert-information-data-helisa.component';\r\nexport * from './lib/components/alert-information-data-helisa/alert-information-data-helisa.service';\r\nexport * from './lib/components/alert-information-data-helisa/alert-information-helisa-type.enum';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n\nexport {ExternalLinkDirective as ɵa} from './lib/directives/external-link.directive';\nexport {ExternalLinkPipe as ɵb} from './lib/pipes/external-link.pipe';"],"names":["FormControl","Validators","EventEmitter","Component","Input","ViewChild","Output","Inject","MAT_SNACK_BAR_DATA","Injectable","MatSnackBar","ToastType","AlertHelisaType","MatDialogRef","MAT_DIALOG_DATA","MatDialog","Subject","ViewChildren","InputHelisaType","ColumnType","EventScope","TotalType","ChangeColumnConfigurationType","TableHelisaType","MatTableDataSource","moveItemInArray","MatSort","MatTable","ElementRef","moment_","TypeCalendarEnum","tap","filter","BehaviorSubject","NestedTreeControl","MatTreeNestedDataSource","_.remove","_.orderBy","Router","HostListener","debounceTime","throttleTime","of","startWith","map","takeUntil","Directive","MatAutocomplete","MatTooltip","isPlatformBrowser","PLATFORM_ID","HostBinding","Pipe","ComboBoxHelisaState","PagingTreeInitialMode","ContentChild","AlertInformationType","NgModule","CommonModule","FormsModule","ReactiveFormsModule","MatAutocompleteModule","MatButtonModule","MatCheckboxModule","MatToolbarModule","MatExpansionModule","MatFormFieldModule","MatInputModule","MatSelectModule","MatOptionModule","MatListModule","MatIconModule","MatSnackBarModule","MatCardModule","LayoutModule","MatTooltipModule","MatSidenavModule","MatGridListModule","MatMenuModule","MatRadioModule","MatProgressSpinnerModule","MatTableModule","MatPaginatorModule","MatSortModule","MatDialogModule","MatTabsModule","MatDatepickerModule","MatNativeDateModule","MatStepperModule","MatChipsModule","DragDropModule","MatTreeModule"],"mappings":"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"}