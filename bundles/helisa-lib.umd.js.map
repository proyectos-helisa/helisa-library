{"version":3,"file":"helisa-lib.umd.js.map","sources":["ng://helisa-lib/lib/components/input-with-button/input-with-button.component.ts","ng://helisa-lib/lib/components/toast-helisa/toast-helisa.component.ts","ng://helisa-lib/lib/components/toast-helisa/toast-helisa.service.ts","ng://helisa-lib/lib/components/toast-helisa/toast-type.enum.ts","ng://helisa-lib/lib/components/alert-helisa/alert-helisa-type.enum.ts","ng://helisa-lib/lib/components/alert-helisa/alert-helisa.component.ts","ng://helisa-lib/lib/components/alert-helisa/alert-helisa.service.ts","ng://helisa-lib/lib/components/dependency-table-helisa/dependency-table-helisa.service.ts","ng://helisa-lib/lib/components/table-helisa/table-helisa.service.ts","ng://helisa-lib/lib/components/dependency-table-helisa/dependency-table-helisa.component.ts","ng://helisa-lib/lib/components/input-helisa/input-helisa.component.ts","ng://helisa-lib/lib/components/table-helisa/table-helisa.interface.ts","ng://helisa-lib/lib/components/table-helisa/table-helisa-connect.component.ts","ng://helisa-lib/lib/components/table-helisa/table-helisa.component.ts","ng://helisa-lib/lib/components/date-helisa/date-helisa.component.ts","node_modules/tslib/tslib.es6.js","ng://helisa-lib/lib/components/tree-helisa/tree-helisa.service.ts","ng://helisa-lib/lib/components/tree-helisa/tree-helisa-connect.ts","ng://helisa-lib/lib/components/tree-helisa/tree-helisa.component.ts","ng://helisa-lib/lib/components/autocomplete-helisa/autocomplete-helisa.component.service.ts","ng://helisa-lib/lib/components/autocomplete-helisa/autocomplete-helisa.component.ts","ng://helisa-lib/lib/directives/options-scroll.directive.ts","ng://helisa-lib/lib/helisa-lib.module.ts"],"sourcesContent":["import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { FormControl, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'hel-input-with-button',\r\n  templateUrl: './input-with-button.component.html',\r\n  styleUrls: ['./input-with-button.component.sass']\r\n})\r\nexport class InputWithButtonComponent implements OnInit {\r\n\r\n  @Input() placeholder: string =\"\";  \r\n  @Input() inputFormControl:FormControl = new FormControl('',Validators.required);\r\n  @Input() requiredMessage:string = \"El campo es requerido\";\r\n  @Input() value:string = \"\";\r\n\r\n  @Output() done = new EventEmitter<string>();\r\n  @Output() cancel = new EventEmitter<any>();\r\n\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n    if(this.value != \"\"){\r\n      this.inputFormControl.setValue(this.value);\r\n    }\r\n  }\r\n\r\n\r\n  onDone(){\r\n    if(this.inputFormControl.valid)\r\n    {\r\n      this.done.emit(this.inputFormControl.value);\r\n    }\r\n  }\r\n\r\n  onCancel(){\r\n    this.cancel.emit();\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MAT_SNACK_BAR_DATA } from '@angular/material';\r\n\r\n@Component({\r\n  selector: 'hel-toast',\r\n  templateUrl: './toast-helisa.component.html',\r\n  styleUrls: ['./toast-helisa.component.sass']\r\n})\r\nexport class ToastHelisaComponent implements OnInit {\r\n\r\n  constructor(@Inject(MAT_SNACK_BAR_DATA) public data: any) { }\r\n\r\n  ngOnInit() {}\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material';\r\nimport { ToastType } from './toast-type.enum';\r\nimport { ToastHelisaComponent } from './toast-helisa.component';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ToastHelisaService {\r\n\r\n  durationInSeconds = 5;\r\n\r\n  constructor(private snackBar: MatSnackBar) { }\r\n\r\n  showToast(type:ToastType, message:String, subMessages?:String[]){\r\n    subMessages = subMessages ? subMessages : [];\r\n    this.snackBar.openFromComponent(ToastHelisaComponent, {\r\n      data: {message: message, type: type, subMessages:subMessages},\r\n      duration: this.durationInSeconds * 1000\r\n    });\r\n  }\r\n}\r\n","export enum ToastType {\r\n    DONE = \"done\",\r\n    ERROR = \"error\",\r\n    INFO = \"info\"\r\n}\r\n","export enum AlertHelisaType {\r\n    ERROR = \"ERROR\",\r\n    CONFIRMATION = \"CONFIRMATION\"\r\n}\r\n","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\nimport { AlertHelisaType } from './alert-helisa-type.enum';\r\n\r\n@Component({\r\n  selector: 'hel-alert',\r\n  templateUrl: './alert-helisa.component.html',\r\n  styleUrls: ['./alert-helisa.component.sass']\r\n})\r\nexport class AlertHelisaComponent implements OnInit {\r\n\r\n  content: string;\r\n  title: String;\r\n  hasCancel: boolean;\r\n\r\n  constructor(public dialogRef: MatDialogRef<AlertHelisaComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data) {\r\n      this.content = data.content;\r\n      this.title = data.title;\r\n      this.hasCancel = data.type == AlertHelisaType.CONFIRMATION;\r\n    }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  onCancel(){\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { MatDialog } from '@angular/material';\r\nimport { Observable } from 'rxjs';\r\nimport { AlertHelisaComponent } from './alert-helisa.component';\r\nimport { AlertHelisaType } from './alert-helisa-type.enum';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AlertHelisaService {\r\n\r\n  constructor(public dialog: MatDialog) { }\r\n\r\n  openDialog(type:AlertHelisaType, title:String, content:String): Observable<any> {\r\n    const dialogRef = this.dialog.open(AlertHelisaComponent, {\r\n      width: '250px',\r\n      data: {title: title, content: content, type:type}\r\n    });\r\n\r\n    return dialogRef.afterClosed();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, Subject, BehaviorSubject } from 'rxjs';\r\nimport {ColumnConfig, RequestTableHelisa, AddRowButton, ConfigRowStyles} from '../table-helisa/table-helisa.interface';\r\nimport { EventDependency} from './dependency-table-helisa.component';\r\n\r\nexport interface ConfigTable {\r\n  columns: Array<ColumnConfig>,\r\n  isRemote: boolean,\r\n  dataSource?: Array<any>,\r\n  count?: number,\r\n  order?: number,\r\n  showTitle?: boolean,\r\n  indexRowSelect?: number,\r\n  isDragged?: boolean,\r\n  addRowButton?: AddRowButton,\r\n  configRowStylesFromColumn?: Array<ConfigRowStyles>,\r\n  isCellSelection?: boolean,\r\n  addBookButton?: boolean\r\n}\r\n\r\n@Injectable()\r\nexport class DependencyTableHelisaService {\r\n\r\n\r\n  tables: Subject<ConfigTable[]> = new Subject();\r\n  infoTables: Array<ConfigTable> = new Array();\r\n  \r\n  private emitVisibilityButton$ = new Subject<EventDependency>();\r\n  emitVisibilityButton = this.emitVisibilityButton$.asObservable();\r\n  \r\n  private emitVisibilityAllButtons$ = new Subject<boolean>();\r\n  emitVisibilityAllButtons = this.emitVisibilityAllButtons$.asObservable();\r\n\r\n  private emitIsCellSelection$ = new Subject<EventDependency>();\r\n  emitIsCellSelection = this.emitIsCellSelection$.asObservable();\r\n\r\n  private emitChangeColumns$ = new Subject<EventDependency>();\r\n  emitChangeColumns = this.emitChangeColumns$.asObservable();\r\n\r\n  emitTotal = new Subject<EventDependency>();\r\n  emitNextPage = new Subject<EventDependency>();\r\n\r\n  constructor() { }\r\n\r\n  /**\r\n   * retorna un Observable<ConfigTable[]>\r\n   */\r\n  getTables(): Observable<ConfigTable[]> {\r\n    return this.tables;\r\n  }\r\n\r\n  /**\r\n   * Actualiza las dependencias, agrendo la tabla que envian en el orden correspondiente o al final.\r\n   * TambiÃ©n remueve las dependecias que hay apartir de la tabla segun se indique en el parametro.\r\n   * @param configTable Objeto que contiene la configuraciÃ³n para la tabla.\r\n   * @param withRemoveDependency boolean por defecto es false, si es 'true' indica que remueva las dependencias apartir de el.\r\n   */\r\n  updateDependency(configTable: ConfigTable, withRemoveDependency: boolean = false) {\r\n    if (withRemoveDependency) {\r\n      this.infoTables = this.infoTables.slice(0, !configTable.order ? 0 : configTable.order);\r\n    }\r\n    if (!configTable.order || configTable.order >= this.infoTables.length) {\r\n      configTable.order = this.infoTables.length;\r\n    }\r\n    this.infoTables[configTable.order] = configTable;\r\n    if (configTable.isRemote) {\r\n      configTable.dataSource = null;\r\n      if (configTable.count === null)\r\n        throw \"hace falta el count\";\r\n    } else {\r\n      if (configTable.dataSource === null)\r\n        throw \"hace falta el dataSource\";\r\n      configTable.count = configTable.dataSource.length;\r\n    }\r\n    this.tables.next(this.infoTables);\r\n  }\r\n\r\n  /**\r\n   * Emite un evento de total con la informaciÃ³n para la tabla correspondiente\r\n   * @param event wrapper que contiene el indice de la tabla y la informaciÃ³n de la pagina \r\n   */\r\n  setTotal(event: EventDependency) {\r\n    this.emitTotal.next(event);\r\n  }\r\n\r\n  /**\r\n   * Emite un evento de agregar pagina con la pagina para la tabla correspondiente\r\n   * @param event wrapper que contiene el indice de la tabla y la informaciÃ³n de la pagina\r\n   */\r\n  addPage(event: EventDependency) {\r\n    this.emitNextPage.next(event);\r\n  }\r\n\r\n  selectIndexRow(config: ConfigTable) {\r\n    if (this.infoTables[config.order]) {\r\n      this.infoTables[config.order].indexRowSelect = config.indexRowSelect;\r\n      this.tables.next(this.infoTables); }\r\n  }\r\n\r\n\r\n  /**\r\n   * Muestra o esconde el boton una tabla en especifico\r\n   * @param event para indicar el index de la tabla y en \"data\" true o false\r\n   */\r\n  changeVisibilityButton(event:EventDependency){\r\n    this.emitVisibilityButton$.next(event);\r\n  }\r\n\r\n\r\n  /**\r\n   * Esconde los botones de todas las tablas\r\n   * @param show indicar si se muestran o no todos los botones de las tablas\r\n   */\r\n  changeVisibilityAllButtons(show:boolean){\r\n    this.emitVisibilityAllButtons$.next(show);\r\n  }\r\n\r\n  /**\r\n   * Para habilitar el manejo de selecciÃ³n de celda\r\n   * @param event para indicar el index de la tabla y en \"data\" true o false \r\n   */\r\n  changeisCellSelection(event:EventDependency) {\r\n    this.emitIsCellSelection$.next(event);\r\n  }\r\n\r\n   /**\r\n   * Para habilitar el cambio de columnas\r\n   * @param event para indicar el index de la tabla y en \"data\" columnas \r\n   */\r\n  changeColumnsByTable(event:EventDependency) {\r\n    this.emitChangeColumns$.next(event);\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {BehaviorSubject, Observable, Subject} from \"rxjs\";\r\nimport {TotalTableHelisa} from \"./table-helisa.interface\";\r\nimport {TableHelisaComponent} from \"./table-helisa.component\";\r\n\r\nexport interface TableHelisaServiceInfo<T> {\r\n  obj: T;\r\n  table?: TableHelisaComponent<any>;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TableHelisaService<T> {\r\n\r\n  private emitChangeSource = new Subject<TableHelisaServiceInfo<TotalTableHelisa>>();\r\n  private emitNextPage = new Subject<TableHelisaServiceInfo<T[]>>();\r\n\r\n  totalReturn = this.emitChangeSource.asObservable();\r\n  nextPageReturn = this.emitNextPage.asObservable();\r\n\r\n  setTotal(total: TotalTableHelisa, table?: TableHelisaComponent<T>) {\r\n    this.emitChangeSource.next({obj: total, table: table});\r\n  }\r\n\r\n  addPage(page: T[], table?: TableHelisaComponent<T>) {\r\n    this.emitNextPage.next({obj: page, table: table});\r\n  }\r\n\r\n\r\n  private emitVisibleButton$ = new Subject<boolean>();\r\n  /**\r\n   * Observable para saber si se debe mostrar o esconder el boton de add row\r\n   */\r\n  emitVisibleButton = this.emitVisibleButton$.asObservable();\r\n\r\n  /**\r\n   * para modificar el valor de si se muestra o no el boton de add row de la tabla\r\n   * @param change indicar si se muestra o no el boton de add row de la tabla\r\n   */\r\n  changeVisibilityButton(change:boolean){\r\n    this.emitVisibleButton$.next(change);\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, EventEmitter, Output, QueryList, ViewChildren, Input } from '@angular/core';\r\nimport { DependencyTableHelisaService, ConfigTable } from './dependency-table-helisa.service';\r\nimport {ColumnConfig, RequestTableHelisa, SelectObject} from '../table-helisa/table-helisa.interface';\r\nimport { TableHelisaService } from '../table-helisa/table-helisa.service';\r\nimport { TableHelisaComponent } from '../table-helisa/table-helisa.component';\r\n\r\nexport interface EventDependency {\r\n  index: number,\r\n  data: any\r\n}\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'hel-dependency-table',\r\n  templateUrl: './dependency-table-helisa.component.html',\r\n  styleUrls: ['./dependency-table-helisa.component.sass'],\r\n  providers: [DependencyTableHelisaService]\r\n})\r\nexport class DependencyTableHelisaComponent implements OnInit {\r\n\r\n  tables: Array<ConfigTable> = [];\r\n  @ViewChildren('viewTables') viewTables: QueryList<TableHelisaComponent<any>>;\r\n  @Input() showToolTip:boolean = true;\r\n\r\n  /**\r\n   * deprecated, use selectObject\r\n   */\r\n  @Output() selected: EventEmitter<EventDependency> = new EventEmitter<EventDependency>();\r\n  @Output() selectObject: EventEmitter<EventDependency> = new EventEmitter<EventDependency>();\r\n  @Output() nextPage: EventEmitter<EventDependency> = new EventEmitter<EventDependency>();\r\n  @Output() total: EventEmitter<EventDependency> = new EventEmitter<EventDependency>();\r\n  @Output() sort: EventEmitter<EventDependency> = new EventEmitter<EventDependency>();\r\n  @Output() drop: EventEmitter<EventDependency> = new EventEmitter<EventDependency>();\r\n  @Output() addRow: EventEmitter<number> = new EventEmitter<number>();\r\n  @Output() selectCell = new EventEmitter<EventDependency>();\r\n  @Output() bookClicked: EventEmitter<EventDependency> = new EventEmitter<EventDependency>();  \r\n  selectedObject: EventDependency = null;\r\n\r\n  constructor(private dependencyTableHelisaService: DependencyTableHelisaService, private tableService: TableHelisaService<any>) { }\r\n\r\n  ngOnInit() {\r\n    this.getTables();\r\n    this.dependencyTableHelisaService.emitNextPage.subscribe(\r\n      event => {\r\n        this.tableService.addPage(event.data, this.viewTables.toArray()[event.index]);\r\n      }\r\n    );\r\n\r\n    this.dependencyTableHelisaService.emitTotal.subscribe(\r\n      event => {\r\n        this.tableService.setTotal(event.data, this.viewTables[event.index]);\r\n      }\r\n    );\r\n\r\n    // Observable para mostrar o esconder el boton de una tabla\r\n    this.dependencyTableHelisaService.emitVisibilityButton.subscribe(\r\n      data=>{        \r\n        if(!!data && data.index != undefined){\r\n            let table = this.tables[data.index];\r\n            if(!!table){\r\n              table.addRowButton.showButton = data.data;\r\n            }\r\n        }\r\n      }\r\n    )\r\n\r\n    //Observable para mostrar o esconder los botones de todas las tablas\r\n    this.dependencyTableHelisaService.emitVisibilityAllButtons.subscribe(\r\n      data=>{\r\n        if(data != undefined && data != null){\r\n          this.tables.forEach(element => {\r\n            if(!!element.addRowButton){\r\n              element.addRowButton.showButton = data;\r\n            }\r\n          });\r\n        }\r\n      }\r\n    )\r\n\r\n    //Observable para manejo de selecciÃ³n de celdas\r\n    this.dependencyTableHelisaService.emitIsCellSelection.subscribe(\r\n      data => {\r\n        if (!!data && data.index != undefined) {\r\n          let table = this.tables[data.index];\r\n          if (table) {\r\n            table.isCellSelection = data.data;\r\n          }\r\n        }\r\n      });\r\n\r\n    //Observable para manejo de columnas\r\n    this.dependencyTableHelisaService.emitChangeColumns.subscribe(\r\n      data => {\r\n        if (!!data && data.index != undefined) {\r\n          let table = this.tables[data.index];\r\n          if (table) {\r\n            table.columns = data.data;\r\n          }\r\n        }\r\n      });\r\n  }\r\n\r\n  /**\r\n   * retorna el servicio que gestiona el componente.\r\n   */\r\n  getService(): DependencyTableHelisaService {\r\n    return this.dependencyTableHelisaService;\r\n  }\r\n\r\n  /**\r\n   * Obtiene un observable con las tablas dependientes desde el servicio.\r\n   */\r\n  getTables() {\r\n    this.dependencyTableHelisaService.getTables()\r\n      .subscribe(tables => {\r\n        this.tables = tables;\r\n      }\r\n      );\r\n  }\r\n\r\n  /**\r\n   * Evento que se dispara desde una tabla, emitiendo un nuevo evento con el inidice de la tabla que dispara el evento y el evento generado.\r\n   * @param index indica el indice de la tabla seleccionada\r\n   * @param data retorna la fila que fue seleccionada\r\n   */\r\n  onSelectedDependency(index: number, event: SelectObject<any>) {\r\n    this.selectedObject = { index: index, data: event };\r\n    this.selected.emit({ index: index, data: event.value });\r\n    this.selectObject.emit({index: index, data: event});\r\n  }\r\n\r\n  /**\r\n   * Evento que se dispara desde una tabla, emitiendo un nuevo evento con el inidice de la tabla que dispara el evento y el evento generado.\r\n   * @param index indica el indice de la tabla que genera el evento\r\n   * @param event evento generado desde la tabla\r\n   */\r\n  onNextPage(index: number, event: RequestTableHelisa) {\r\n    this.nextPage.emit({ index: index, data: event });\r\n  }\r\n\r\n  /**\r\n   * Evento que se dispara desde una tabla, emitiendo un nuevo evento con el inidice de la tabla que dispara el evento y el evento generado.\r\n   * @param index indica el indice de la tabla que genera el evento\r\n   * @param event evento generado desde la tabla\r\n   */\r\n  onTotal(index: number, event: any) {\r\n    this.total.emit({ index: index, data: event });\r\n  }\r\n\r\n  /**\r\n   * Evento que se dispara desde una tabla, emitiendo un nuevo evento con el inidice de la tabla que dispara el evento y el evento generado.\r\n   * @param index indica el indice de la tabla que genera el evento\r\n   * @param event evento generado desde la tabla\r\n   */\r\n  onSort(index: number, event: any) {\r\n    this.sort.emit({ index: index, data: event });\r\n  }\r\n\r\n  /**\r\n   * Evento que se dispara desde una tabla, emitiendo un nuevo evento con el inidice de la tabla que dispara el evento y el evento generado.\r\n   * @param index indica el indice de la tabla que genera el evento\r\n   * @param event evento generado desde la tabla\r\n   */\r\n  onDrop(index: number, event: any) {\r\n    this.drop.emit({ index: index, data: event });\r\n  }\r\n\r\n  /**\r\n   * Evento que se dispara desde una tabla, emite el indice de la tabla al cual se le debe aÃ±adir una nueva fila\r\n   * @param index indica el indice de la tabla de la cual se dispara el evento\r\n   */\r\n  onAddRow(index:number){\r\n    this.addRow.emit(index);\r\n  }\r\n\r\n  selectedCell(index: number, event: any) {\r\n    if (this.tables[index].isCellSelection) {\r\n      this.selectCell.emit({ index: index, data: event });\r\n    }\r\n  }\r\n\r\n  onBookClicked(index,event){\r\n    this.bookClicked.emit({index:index ,data:event});\r\n  }\r\n}\r\n","import {Component, EventEmitter, Input, OnInit, Output, ViewChild, ElementRef} from '@angular/core';\r\nimport {FormControl} from \"@angular/forms\";\r\n\r\n@Component({\r\n  selector: 'hel-input',\r\n  templateUrl: './input-helisa.component.html',\r\n  styleUrls: ['./input-helisa.component.sass']\r\n})\r\nexport class InputHelisaComponent implements OnInit {\r\n\r\n  @Input() placeholder = '';\r\n  @Output() setValue: EventEmitter<string> = new EventEmitter<string>();\r\n  @Input() isSearch = false;\r\n  @Input() inputFormControl: FormControl = new FormControl('');\r\n  @Input() isFocused = false;\r\n  @Input() disabled = false;\r\n\r\n  @ViewChild('inputText') nameInput: ElementRef;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n    if (this.isFocused) {\r\n      this.nameInput.nativeElement.focus();\r\n    }\r\n  }\r\n\r\n  search() {\r\n    this.setValue.emit(this.inputFormControl.value);\r\n  }\r\n\r\n}\r\n","import {SortDirection} from \"@angular/material\";\r\n\r\nexport interface ColumnConfig {\r\n  name: string;\r\n  title?: string;\r\n  visible?: boolean;\r\n  sortable?: boolean;\r\n  groupable?: boolean;\r\n  totalType?: TotalType;\r\n  searchable?: boolean;\r\n  sortDirection?: SortDirection;\r\n  subtitle?: string;\r\n  colspanTitle?: number;\r\n  colspanSubtitle?: number;\r\n}\r\n\r\nexport interface AddRowButton{  \r\n  text: string;\r\n  showButton:boolean;\r\n}\r\n\r\nexport enum EventScope {\r\n  USER, CODE_CALL\r\n}\r\n\r\nexport enum TotalType {\r\n  SUM, AVERAGE, COUNT\r\n}\r\n\r\nexport enum ChangeColumnConfigurationType {\r\n  SORT, UNKNOWN, TOTAL\r\n}\r\n\r\nexport interface EventColumn {\r\n  column: ColumnConfig;\r\n  columnConfigurations: Array<ColumnConfig>;\r\n  type: ChangeColumnConfigurationType;\r\n}\r\n\r\nexport interface TotalTableHelisa {\r\n  column: ColumnConfig;\r\n  value: number;\r\n}\r\n\r\nexport interface TotalGroup {\r\n  sum: number;\r\n  count: number;\r\n}\r\n\r\nexport interface EventSearch {\r\n  text: string;\r\n  columnConfigurations: Array<ColumnConfig>;\r\n}\r\n\r\nexport interface RequestTableHelisa {\r\n  page: number;\r\n  body: any;\r\n}\r\n\r\nexport interface DropElement<T>{\r\n value: T;\r\n order: number;\r\n}\r\n\r\nexport interface SelectObject<T> {\r\n  value: T;\r\n  scope: EventScope;\r\n}\r\n\r\nexport enum TableHelisaType {\r\n  REMOTE, LOCAL\r\n}\r\n\r\n\r\nexport interface Cell {\r\n  column: ColumnConfig;\r\n  row: any;\r\n }\r\n\r\n export interface ConfigCellStyles{\r\n   cellData: any;\r\n   classCell: string \r\n }\r\n\r\n export interface ConfigRowStyles{\r\n  column: ColumnConfig;\r\n  data: any,\r\n  classRow: string \r\n}\r\n\r\n//@dynamic\r\nexport abstract class ColumnConfigUtil {\r\n  static getValue(obj: any, column: ColumnConfig): any {\r\n    return column.name.split('.').reduce((o, field) => o && o[field], obj);\r\n  }\r\n}\r\n\r\n","import {ColumnConfig} from \"./table-helisa.interface\";\r\nimport {Observable} from \"rxjs\";\r\n\r\n\r\nexport class TableHelisaConnectComponent<T> {\r\n  page: number;\r\n  isLastPage: boolean;\r\n  isUsed: boolean;\r\n\r\n  constructor() {\r\n    this.page = 0;\r\n    this.isLastPage = false;\r\n    this.isUsed = false;\r\n  }\r\n\r\n  public getBody(columnConfig: Array<ColumnConfig>, search: string): any {\r\n    return {};\r\n  }\r\n\r\n  nextPage() {\r\n    return this.page++;\r\n  }\r\n}\r\n","import { AfterViewInit, Component, EventEmitter, Input, OnInit, Output, ViewChild } from '@angular/core';\r\nimport { MatSort, MatTable, MatTableDataSource } from '@angular/material';\r\nimport { Sort } from '@angular/material/typings/sort';\r\nimport clonedeep from 'lodash.clonedeep';\r\nimport {\r\n  AddRowButton,\r\n  Cell,\r\n  ChangeColumnConfigurationType,\r\n  ColumnConfig,\r\n  ColumnConfigUtil,\r\n  ConfigCellStyles,\r\n  ConfigRowStyles,\r\n  DropElement,\r\n  EventColumn,\r\n  EventScope,\r\n  EventSearch,\r\n  RequestTableHelisa,\r\n  SelectObject,\r\n  TableHelisaType,\r\n  TotalGroup,\r\n  TotalType\r\n} from './table-helisa.interface';\r\nimport { TableHelisaService } from './table-helisa.service';\r\nimport { TableHelisaConnectComponent } from './table-helisa-connect.component';\r\nimport { CdkDragDrop, moveItemInArray } from '@angular/cdk/drag-drop';\r\n\r\ninterface RowData {\r\n  data: any;\r\n  rowType: RowType;\r\n}\r\n\r\nenum RowType {\r\n  GROUP_TITLE, GROUP_FOOTER, ROW\r\n}\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'hel-table',\r\n  templateUrl: './table-helisa.component.html',\r\n  styleUrls: ['./table-helisa.component.sass']\r\n})\r\nexport class TableHelisaComponent<T> implements OnInit, AfterViewInit {\r\n\r\n  private tableHelisaConnectComponent: TableHelisaConnectComponent<T>;\r\n  totalData: Array<number>;\r\n  rawData: Array<T>;\r\n  data: MatTableDataSource<RowData>;\r\n  displayedColumns: string[] = [];\r\n  columnConfig: Array<ColumnConfig>;\r\n  selectedObject: T;\r\n  lastSearch: string;\r\n  type: TableHelisaType = TableHelisaType.LOCAL;\r\n  isSetSelectedRow = false;\r\n  indexRowSelect: number;\r\n  private scrollCount: number = 0;\r\n  hasSubtitle = false;\r\n\r\n  @ViewChild(MatSort) matSort: MatSort;\r\n  @ViewChild(MatTable) matTable: MatTable<any>;\r\n\r\n  @Output() sort: EventEmitter<EventColumn> = new EventEmitter<EventColumn>();\r\n  @Output() total: EventEmitter<EventColumn> = new EventEmitter<EventColumn>();\r\n  @Output() search: EventEmitter<EventSearch> = new EventEmitter<EventSearch>();\r\n\r\n  /**\r\n   * Deprecado, cambiar por electObject\r\n   */\r\n  @Output() select: EventEmitter<T> = new EventEmitter<T>();\r\n  @Output() selectCell = new EventEmitter<Cell>();\r\n  @Output() selectObject: EventEmitter<SelectObject<T>> = new EventEmitter<SelectObject<T>>();\r\n  @Output() nextPage: EventEmitter<RequestTableHelisa> = new EventEmitter<RequestTableHelisa>();\r\n  @Input() showTitle = true;\r\n  @Input() isCellSelection = false;\r\n  @Input() count: number;\r\n  @Input() configCellStyles: Array<ConfigCellStyles>;\r\n  @Input() configRowStylesFromColumn: Array<ConfigRowStyles>;\r\n  @Input() selectedCells: Cell;\r\n  @Output() drop: EventEmitter<DropElement<T>> = new EventEmitter<DropElement<T>>();\r\n  @Input() isDragged = false;\r\n  @Input() addRowButton: AddRowButton = { showButton: false, text: \"\" };\r\n  @Output() addRow: EventEmitter<void> = new EventEmitter<void>();\r\n  @Output() bookClicked: EventEmitter<T> = new EventEmitter<T>();\r\n  @Input() addBookButton: boolean = false;\r\n  @Input() showToolTip: boolean = true;\r\n  showFooter = false;\r\n  showSearch = false;\r\n\r\n  private timeTooltip: any;\r\n\r\n  constructor(private tableService: TableHelisaService<T>) { }\r\n\r\n  ngOnInit() {\r\n    this.tableService.nextPageReturn.subscribe(\r\n      data => {\r\n        if (!data.table || data.table === this) {\r\n          this.receivePage(data.obj);\r\n        }\r\n      }\r\n    );\r\n    this.tableService.totalReturn.subscribe(info => {\r\n      if (info) {\r\n        this.columnConfig.forEach((column, idx) => {\r\n          if (column === info.obj.column) {\r\n            this.totalData[idx] = this.getGroupValue(column, { sum: info.obj.value, count: this.count });\r\n          }\r\n        });\r\n      }\r\n    });\r\n    this.matSort.sortChange.subscribe(\r\n      (event: Sort) => {\r\n        const column: ColumnConfig = this.columnConfig.find(c => c.name === event.active);\r\n        column.sortDirection = event.direction;\r\n        this.sort.emit({ column, columnConfigurations: this.columnConfig, type: ChangeColumnConfigurationType.SORT });\r\n      }\r\n    );\r\n\r\n    this.tableService.emitVisibleButton.subscribe(\r\n      data => {\r\n        if (data != undefined && data != null) {\r\n          this.addRowButton.showButton = data;\r\n        }\r\n\r\n      }\r\n    )\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    if (this.isCellSelection) {\r\n      this.matTable.renderRows();\r\n    }\r\n  }\r\n\r\n  @Input()\r\n  set isRemote(w: boolean) {\r\n    this.type = w ? TableHelisaType.REMOTE : TableHelisaType.LOCAL;\r\n    this.tableHelisaConnectComponent = new TableHelisaConnectComponent<T>();\r\n    if (this.type === TableHelisaType.REMOTE) {\r\n      this.goNextPage();\r\n    } else {\r\n      this.tableHelisaConnectComponent.page++;\r\n    }\r\n  }\r\n\r\n  @Input()\r\n  set columnConfiguration(columnConfiguration: Array<ColumnConfig>) {\r\n    this.hasSubtitle = false;\r\n    this.columnConfig = columnConfiguration;\r\n    this.displayedColumns.splice(0, this.displayedColumns.length);\r\n    if (columnConfiguration) {\r\n      columnConfiguration.forEach(column => {\r\n        if (column.visible) {\r\n          this.displayedColumns.push(column.name);\r\n        }\r\n        if (!this.hasSubtitle) {\r\n          this.hasSubtitle = column.subtitle != undefined;\r\n        }\r\n      });\r\n      if (this.rawData) {\r\n        this.dataSource = this.rawData;\r\n      }\r\n    }\r\n  }\r\n\r\n  @Input()\r\n  set dataSource(dataSource: Array<any>) {\r\n    this.rawData = dataSource;\r\n    if (this.rawData) { this.prepareDataSource(); }\r\n  }\r\n\r\n  @Input()\r\n  set selectedIndexRow(idRowSelected: number) {\r\n    this.indexRowSelect = idRowSelected;\r\n    if (this.rawData && this.rawData.length) {\r\n      if ((idRowSelected >= this.rawData.length || idRowSelected < 0)) {\r\n        this.indexRowSelect = 0;\r\n      }\r\n      this.selectRow({ data: this.rawData[this.indexRowSelect], rowType: RowType.ROW }, false);\r\n    }\r\n  }\r\n\r\n  private prepareDataSource() {\r\n    const changeData = Array<RowData>();\r\n    let haveGroup = false;\r\n    let groupFooter: Array<TotalGroup>;\r\n    this.columnConfig.forEach(column => {\r\n      if (column.totalType !== undefined && (this.type === TableHelisaType.LOCAL || this.tableHelisaConnectComponent.page <= 1)) {\r\n        this.totalData = new Array<number>(this.columnConfig.length);\r\n        this.showFooter = true;\r\n        this.total.emit({ column, columnConfigurations: this.columnConfig, type: ChangeColumnConfigurationType.TOTAL });\r\n      }\r\n      this.showSearch = this.showSearch || column.searchable;\r\n      haveGroup = haveGroup || column.groupable;\r\n    });\r\n    if (haveGroup) {\r\n      this.rawData = this.rawData.sort((a, b) => {\r\n        let result = 0;\r\n        this.columnConfig.forEach(column => {\r\n          if (result === 0) {\r\n            result = this.compare(a, b);\r\n          }\r\n        });\r\n        return result;\r\n      });\r\n    }\r\n    this.rawData.forEach(row => {\r\n      if (haveGroup && (changeData.length === 0 || this.compare(changeData[changeData.length - 1].data, row) !== 0)) {\r\n        if (groupFooter) {\r\n          changeData.push({ data: groupFooter, rowType: RowType.GROUP_FOOTER });\r\n        }\r\n        changeData.push({ data: row, rowType: RowType.GROUP_TITLE });\r\n        groupFooter = new Array<TotalGroup>(this.columnConfig.length);\r\n      }\r\n      if (haveGroup) { this.addTotalGroup(groupFooter, row); }\r\n      changeData.push({ data: row, rowType: RowType.ROW });\r\n    });\r\n    this.data = new MatTableDataSource<RowData>(changeData);\r\n    if (this.rawData && this.rawData.length && this.indexRowSelect && !this.selectedObject) {\r\n      if (this.indexRowSelect >= this.rawData.length || this.indexRowSelect < 0)\r\n        this.indexRowSelect = 0;\r\n      this.selectRow({ data: this.rawData[this.indexRowSelect], rowType: RowType.ROW }, false);\r\n    }\r\n  }\r\n\r\n  private addTotalGroup(rowTotal: Array<TotalGroup>, row: any) {\r\n    this.columnConfig.forEach((column, index) => {\r\n      if (column.totalType !== undefined) {\r\n        if (rowTotal[index] === undefined) {\r\n          rowTotal[index] = { sum: ColumnConfigUtil.getValue(row, column), count: 1 };\r\n        } else {\r\n          rowTotal[index].sum += ColumnConfigUtil.getValue(row, column);\r\n          rowTotal[index].count++;\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  private compare(a: any, b: any): number {\r\n    let ws = 0;\r\n    this.columnConfig.forEach(column => {\r\n      if (ws === 0 && column.groupable) {\r\n        if (ColumnConfigUtil.getValue(a, column) < ColumnConfigUtil.getValue(b, column)) { ws = -1; } else if (ColumnConfigUtil.getValue(a, column) > ColumnConfigUtil.getValue(b, column)) { ws = 1; }\r\n      }\r\n    });\r\n    return ws;\r\n  }\r\n\r\n  getGroupDescription(obj: any): string {\r\n    let result = '';\r\n    this.columnConfig.forEach(column => {\r\n      if (column.groupable) {\r\n        result += (result.length ? ' - ' : '') + ColumnConfigUtil.getValue(obj, column);\r\n      }\r\n    });\r\n    return result;\r\n  }\r\n\r\n  isGroupTitle(index, item): boolean {\r\n    return item.rowType === RowType.GROUP_TITLE;\r\n  }\r\n\r\n  isRow(index, item): boolean {\r\n    return item.rowType === RowType.ROW;\r\n  }\r\n\r\n  isGroupFooter(index, item): boolean {\r\n    return item.rowType === RowType.GROUP_FOOTER;\r\n  }\r\n\r\n  footerDisplayedColumns(): Array<string> {\r\n    return this.displayedColumns.map(name => 'footer-' + name);\r\n  }\r\n\r\n  getGroupValue(column: ColumnConfig, data: TotalGroup): number {\r\n    if (column.totalType === TotalType.SUM) { return data.sum; }\r\n    if (column.totalType === TotalType.COUNT) { return data.count; }\r\n    if (column.totalType === TotalType.AVERAGE) { return 1. * data.sum / data.count; }\r\n    return undefined;\r\n  }\r\n\r\n  getValue(obj: any, column: ColumnConfig) {\r\n    return ColumnConfigUtil.getValue(obj, column);\r\n  }\r\n\r\n  getValueTooltip(obj: any, column: ColumnConfig) {\r\n    if (this.showToolTip) {\r\n      return ColumnConfigUtil.getValue(obj, column);\r\n    } else { return null }\r\n  }\r\n\r\n  searchText(text) {\r\n    this.lastSearch = text;\r\n    this.search.emit({ text, columnConfigurations: this.columnConfig });\r\n  }\r\n\r\n  selectRow(row, isUser) {\r\n    this.selectedObject = row.data;\r\n    this.select.emit(this.selectedObject);\r\n    this.selectObject.emit({ value: this.selectedObject, scope: isUser ? EventScope.USER : EventScope.CODE_CALL });\r\n  }\r\n\r\n  onScroll(event) {\r\n    const element: HTMLDivElement = event.target;\r\n    if (element.scrollHeight - element.scrollTop < 1000) {\r\n      this.goNextPage();\r\n    }\r\n  }\r\n\r\n  private goNextPage() {\r\n    if (!this.tableHelisaConnectComponent.isLastPage && !this.tableHelisaConnectComponent.isUsed) {\r\n      this.tableHelisaConnectComponent.isUsed = true;\r\n      this.nextPage.emit({\r\n        page: this.tableHelisaConnectComponent.nextPage(),\r\n        body: this.tableHelisaConnectComponent.getBody(this.columnConfig, this.lastSearch)\r\n      });\r\n    }\r\n  }\r\n\r\n  private receivePage(data: T[]) {\r\n    if (!this.rawData) {\r\n      this.rawData = new Array<T>();\r\n    }\r\n    this.rawData = this.rawData.concat(data);\r\n    this.dataSource = this.rawData;\r\n    this.tableHelisaConnectComponent.isLastPage = data.length === 0;\r\n    this.tableHelisaConnectComponent.isUsed = false;\r\n  }\r\n\r\n  dblClickCell() {\r\n    this.selectCell.emit(this.selectedCells);\r\n  }\r\n\r\n  selectedCell(element, column: ColumnConfig) {\r\n    this.selectedCells = { column: column, row: element };\r\n    this.selectCell.emit(this.selectedCells);\r\n  }\r\n\r\n  isSelectedCell(row, column: ColumnConfig): boolean {\r\n    if (this.isCellSelection) {\r\n      if (this.selectedCells != null) {\r\n        if (this.selectedCells.column.name === column.name &&\r\n          this.selectedCells.row.data === row.data) {\r\n          return true;\r\n        }\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  getClassToCell(row, column: ColumnConfig) {\r\n    let classToCell = '';\r\n    if (this.configCellStyles) {\r\n      let found = this.configCellStyles.find(c => {\r\n        return c.cellData === this.getValue(row, column);\r\n      });\r\n      if (found) {\r\n        classToCell = found.classCell;\r\n      }\r\n    }\r\n    return classToCell;\r\n  }\r\n\r\n  getClassToRow(row) {\r\n    let classToRow = '';\r\n    if (this.configRowStylesFromColumn) {\r\n      let found = this.configRowStylesFromColumn.find(c => {\r\n        return c.data === this.getValue(row, c.column);\r\n      });\r\n      if (found) {\r\n        classToRow = found.classRow;\r\n      }\r\n    }\r\n    return classToRow;\r\n  }\r\n\r\n  onDrop(event: CdkDragDrop<any>) {\r\n    let array: RowData[] = this.data.data;\r\n    moveItemInArray(array, event.previousIndex, event.currentIndex);\r\n    this.drop.emit({ value: array[event.currentIndex].data, order: event.currentIndex });\r\n    this.data.data = clonedeep(array);\r\n  }\r\n\r\n  tableKeydown(event: KeyboardEvent) {\r\n    if (!this.isCellSelection) {\r\n      let currentIndex = this.data.data.findIndex(row => row.data === this.selectedObject);\r\n      let newSelection = -10;\r\n      if (event.key === 'ArrowDown') {\r\n        this.scrollCount++;\r\n        this.data.data.forEach((row, index) => {\r\n          if (newSelection == -10 && index > currentIndex && row.rowType == RowType.ROW)\r\n            newSelection = index;\r\n        });\r\n      }\r\n      if (event.key === 'ArrowUp') {\r\n        this.scrollCount--;\r\n        currentIndex = this.data.data.length - currentIndex - 1;\r\n        this.data.data.reverse().forEach((row, index) => {\r\n          if (newSelection == -10 && index > currentIndex && row.rowType == RowType.ROW)\r\n            newSelection = index;\r\n        });\r\n        this.data.data.reverse();\r\n        if (newSelection != -10) {\r\n          newSelection = this.data.data.length - newSelection - 1;\r\n        }\r\n      }\r\n      if (newSelection != -10) {\r\n        this.selectedObject = this.data.data[newSelection].data;\r\n      }\r\n      if (Math.abs(this.scrollCount) >= 2)\r\n        this.scrollCount = 0;\r\n      else\r\n        event.preventDefault();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Emite el evento cuando se da click al boton AddRow\r\n   */\r\n  onAddRow() {\r\n    this.addRow.emit();\r\n  }\r\n\r\n  onBookClicked(selectedObject) {\r\n    this.bookClicked.emit(selectedObject);\r\n  }\r\n\r\n  getHeaderSubtitle(): string[] {\r\n    let x = this.columnConfig.map((column, index) => {\r\n      if (column.visible && column.subtitle != undefined)\r\n        return 'subtitle' + index;\r\n      else\r\n        return null;\r\n    }).filter(data => data != null);\r\n    return x;\r\n  }\r\n\r\n  getColumnsWithTitle(){\r\n    return this.columnConfig.filter(column => \r\n        column.visible && column.title != undefined\r\n    ).map(col => col.name);\r\n  }\r\n  \r\n}\r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'hel-date-helisa',\r\n  templateUrl: './date-helisa.component.html',\r\n  styleUrls: ['./date-helisa.component.css']\r\n})\r\nexport class DateHelisaComponent implements OnInit {\r\n\r\n  @Input() placeholder = \"\";\r\n  @Input() dateFormControl: FormControl = new FormControl('');\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Subject, BehaviorSubject, Subscriber } from 'rxjs';\r\nimport { Node } from './node';\r\n\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class TreeHelisaService {\r\n\r\n    // Observable string sources\r\n    private emitNodeSelected = new BehaviorSubject<number | string>(1);\r\n    // Observable string streams\r\n    nodeSelected = this.emitNodeSelected.asObservable();\r\n    // Service message commands\r\n    changeNodeSelected(idResidentialArea: number | string) {\r\n        this.emitNodeSelected.next(idResidentialArea);\r\n    }\r\n\r\n\r\n\r\n    // Observable string sources\r\n    private emitDataSource = new BehaviorSubject<Node>(undefined);    \r\n    // Observable string streams\r\n    dataSourceObservable = this.emitDataSource.asObservable();\r\n    // Service message commands\r\n    changeDataSource(data:Node) {\r\n        this.emitDataSource.next(data);\r\n    }\r\n\r\n\r\n      \r\n    // Expand node observable\r\n      private emitExpandAllNodes = new BehaviorSubject<boolean>(null);          \r\n      nodeExpand = this.emitExpandAllNodes.asObservable();      \r\n      expandAllNodes(expand:boolean) {\r\n          this.emitExpandAllNodes.next(expand);\r\n      }\r\n\r\n\r\n      // Collapse node observable\r\n      private emitCollapseAllNodes = new BehaviorSubject<boolean>(null);          \r\n      nodeCollapse = this.emitCollapseAllNodes.asObservable();      \r\n      collapseAllNodes(collapse:boolean) {\r\n          this.emitCollapseAllNodes.next(collapse);\r\n      }\r\n\r\n\r\n      private emitRefreshTree = new Subject<void>();\r\n      refreshTreeObservable = this.emitRefreshTree.asObservable();\r\n      refreshTree(){\r\n          this.emitRefreshTree.next();\r\n      }\r\n\r\n      private emitRefreshTreeWithPagination = new Subject<void>();\r\n      refreshTreeWithPaginationObservable = this.emitRefreshTreeWithPagination.asObservable();\r\n      refreshTreeWithPagination(){\r\n          this.emitRefreshTreeWithPagination.next();\r\n      }\r\n\r\n\r\n\r\n      private emitExpandOneNode = new Subject<Node>();\r\n      expandOneNodeObservable = this.emitExpandOneNode.asObservable();\r\n      expandOneNode(node:Node){\r\n        this.emitExpandOneNode.next(node);\r\n      }\r\n\r\n      private emitCollapseOneNode = new Subject<Node>();\r\n      collapseOneNodeObservable = this.emitCollapseOneNode.asObservable();\r\n      collapseOneNode(node:Node){\r\n        this.emitCollapseOneNode.next(node);\r\n      }\r\n\r\n    constructor(){\r\n        \r\n    }\r\n  \r\n}\r\n","export class TreeHelisaConnect<T> {\r\n    page: number;\r\n    isLastPage: boolean;\r\n    isUsed: boolean;\r\n  \r\n    constructor() {\r\n      this.page = 0;\r\n      this.isLastPage = false;\r\n      this.isUsed = false;\r\n    }          \r\n  \r\n    nextPage() {\r\n      return this.page = this.page + 1;\r\n    }\r\n  }","import { Component, OnInit, Input, Output, EventEmitter, ViewChild, AfterViewInit, ElementRef } from '@angular/core';\r\nimport { NestedTreeControl } from '@angular/cdk/tree';\r\nimport { MatTreeNestedDataSource, MatTree } from '@angular/material';\r\nimport { Node } from './node';\r\nimport { TreeHelisaService } from './tree-helisa.service';\r\nimport { Router } from '@angular/router';\r\nimport * as _ from 'lodash';\r\nimport { TreeHelisaConnect } from './tree-helisa-connect';\r\nimport { FormControl } from '@angular/forms';\r\n\r\n\r\n\r\nexport interface RequestTreeHelisa {\r\n  page: number;  \r\n}\r\n\r\n@Component({\r\n  selector: 'hel-tree',\r\n  templateUrl: './tree-helisa.component.html',\r\n  styleUrls: ['./tree-helisa.component.sass'],\r\n  host:{\r\n    '(document:keyup)': 'onKeyDown($event)'\r\n  }\r\n})\r\nexport class TreeHelisaComponent implements OnInit,AfterViewInit {\r\n\r\n  //#region  ====== Variables =============\r\n  private treeHelisaConnect: TreeHelisaConnect<Node>;\r\n  formEdit:FormControl;\r\n  @ViewChild('tree') tree:MatTree<any>;\r\n  private selectedOptions = new Map<any, any>();\r\n  /**\r\n   * Datos del Arbol\r\n   */\r\n  @Input() data:Node;\r\n\r\n  \r\n  /**\r\n   * Establece si se mostraran las opciones de \r\n   * Creacion, ediciÃ³n y eliminacion del nodo\r\n   */\r\n  @Input() showOptionsNode:boolean = true; \r\n  \r\n\r\n  /**\r\n   * Retorna el id del nodo removido\r\n   */\r\n  @Output() removed = new EventEmitter<number | string>();\r\n\r\n  /**\r\n   * Retorna un nodo editado\r\n   */\r\n  @Output() edited = new EventEmitter<Node>();\r\n\r\n  /**\r\n   * Retorna un nodo sin id del nodo , pero si con el parent\r\n   * para conocer a cual fue aÃ±adido\r\n   */\r\n  @Output() added = new EventEmitter<Node>();\r\n  @Output() collapseParent = new EventEmitter<boolean>();\r\n  @Output() rangeScrolled = new EventEmitter<RequestTreeHelisa>();\r\n  @Output() nodeSelected = new EventEmitter<number | string>();\r\n  @Output() dobleClick = new EventEmitter<number | string>();\r\n  @Output() keypressDelete = new EventEmitter<number | string | null>();\r\n  @Output() keypressInsert = new EventEmitter<number | string | null>();\r\n  @Output() checkedOptionNode = new EventEmitter<number | string | null>();\r\n  @Output() uncheckedOptionNode = new EventEmitter<number | string | null>();\r\n  \r\n  treeControl = new NestedTreeControl<Node>(node => node.children);\r\n  dataSource = new MatTreeNestedDataSource<Node>();\r\n\r\n\r\n  isSingleClick: Boolean = true;  \r\n  currentNode: Node = null;\r\n\r\n  //#endregion ====== Variables ========\r\n\r\n  constructor(private treeHelisaService:TreeHelisaService,\r\n    private router:Router,\r\n    private elementRef:ElementRef) {    \r\n    //cargar datos pasados por el @Input\r\n    if (!!this.data) {      \r\n      let data = this.data;\r\n      this.data = null;\r\n      this.receivePage(data.children);\r\n    } else {\r\n      this.dataSource.data = [];     \r\n      this.treeControl.dataNodes = []; \r\n    }\r\n    \r\n  }\r\n\r\n  \r\n\r\n  ngOnInit() {     \r\n    // si se cargan datos por medio del servicio\r\n    this.treeHelisaService.dataSourceObservable    \r\n    .subscribe((res) => {         \r\n      if(!!res && !!res.children){              \r\n        this.receivePage(res.children)\r\n      }else{\r\n        this.dataSource.data = [];\r\n        this.treeControl.dataNodes = [];\r\n      }    \r\n    });\r\n\r\n    // Observable, si cambia el nodo seleccionado por medio del servicio\r\n    this.treeHelisaService.nodeSelected\r\n      .subscribe((res)=>{\r\n        if(!!this.data && !!this.data.children)\r\n        this.selectNode(this.data,res);\r\n      })\r\n\r\n    \r\n      this.treeHelisaService.refreshTreeObservable\r\n      .subscribe(res=>{\r\n        this.refreshTree();\r\n      })\r\n      \r\n      this.treeHelisaService.refreshTreeWithPaginationObservable\r\n      .subscribe(res=>{\r\n        this.refreshTreeWithPagination();\r\n      })    \r\n  }\r\n\r\n  ngAfterViewInit() {     \r\n    this.treeHelisaService.nodeExpand.subscribe(res=>{\r\n      if(res != null){\r\n        if(res){\r\n          this.tree.treeControl.expandAll();\r\n        }\r\n      }\r\n    })\r\n\r\n    this.treeHelisaService.nodeCollapse.subscribe(res=>{\r\n      if(res != null){\r\n        if(res){\r\n          this.tree.treeControl.collapseAll();\r\n        }\r\n      }\r\n    })\r\n\r\n\r\n    this.treeHelisaService.expandOneNodeObservable\r\n      .subscribe(res => {        \r\n        if (res != undefined) {          \r\n          this.treeControl.expand(res);          \r\n        }\r\n      })\r\n\r\n      this.treeHelisaService.collapseOneNodeObservable\r\n      .subscribe(res => {        \r\n        if (res != undefined) {\r\n          this.treeControl.collapse(res);\r\n        }\r\n      })\r\n  }\r\n\r\n\r\n  //#region  ====== Events ===========\r\n  onRedirect(node:Node){\r\n\r\n    this.isSingleClick = true;\r\n        setTimeout(()=>{\r\n            if(this.isSingleClick){\r\n              \r\n              this.selectNode(this.data,node.id);    \r\n\r\n              // if(!!node && !node.children){\r\n              if(!!node){\r\n                this.nodeSelected.emit(node.id);\r\n                this.currentNode = node;\r\n              }\r\n            }\r\n         },350)   \r\n  }\r\n\r\n  onScroll(event) {\r\n    const element: HTMLDivElement = event.target;\r\n\r\n    if ((element.offsetHeight + element.scrollTop) >= element.scrollHeight) {      \r\n      this.goNextPage();\r\n    }\r\n  }\r\n\r\n  onEdit(node:Node){  \r\n    node.isEditable = true;\r\n  }\r\n\r\n  onAdd(node:Node){\r\n    // si no tiene hijos instanciar el array\r\n    if(!node.children){\r\n      node.children = [];\r\n    }\r\n    node.children.push(\r\n      {\r\n        id: null,\r\n        name: \"\",       \r\n        isSelected: false,\r\n        parent : node,\r\n        isEditable : true\r\n      }\r\n    );     \r\n    this.refreshTree();\r\n  }\r\n\r\n  onDelete(node:Node){ \r\n    // Remueve el nodo utilizando la libreria de lodash   \r\n    _.remove(node.parent.children, node);\r\n    \r\n    this.refreshTree();\r\n    this.removed.emit(node.id);\r\n  }\r\n\r\n  onEdited(node:Node,value:any){\r\n    \r\n      node.name = value;\r\n\r\n      if(node.id == null && node.name == \"\"){              \r\n        _.remove(node.parent.children, node);\r\n        this.refreshTree();\r\n      }\r\n      else if(node.id && node.id != null && node.name.trim() !== \"\"){\r\n        this.edited.emit(node);\r\n        node.isEditable = false;\r\n      }else if(!!node.id && node.id == null && node.name.trim() !== \"\"){\r\n        this.added.emit(node);\r\n        node.isEditable = false;\r\n      }         \r\n  }\r\n\r\n  onCancel(node:Node,value:string){\r\n    // Si no tiene id por ser un nuevo item, lo elimina\r\n    if(node.id == null){\r\n      _.remove(node.parent.children, node);\r\n      this.refreshTree();  \r\n    }\r\n\r\n    node.isEditable = false; \r\n  }\r\n\r\n  onDblClick(node:Node){\r\n    this.isSingleClick = false;\r\n    this.dobleClick.emit(node.id);\r\n  }\r\n\r\n  onKeyDown(event:KeyboardEvent){      \r\n    switch (event.key) {\r\n      case 'Delete':\r\n        this.keypressDelete.emit((!!this.currentNode && this.currentNode.id)?this.currentNode.id:null)\r\n        break;\r\n      case 'Insert':\r\n        this.keypressInsert.emit((!!this.currentNode && this.currentNode.id)?this.currentNode.id:null)\r\n        break;\r\n      case 'ArrowDown':        \r\n        this.moveDownIntoTree();\r\n        break;\r\n      case 'ArrowUp':          \r\n          this.moveUpIntoTree();\r\n        break;     \r\n    }\r\n    \r\n  }\r\n\r\n  //#endregion ======= Events ========\r\n\r\n\r\n\r\n  //#region  ======== Metodos =============\r\n\r\n  private moveUpIntoTree(){\r\n    if(!!this.data){\r\n      // si aun no hay ningun node seleccionado selecciona el primero\r\n      if(this.currentNode == null){\r\n        this.selectNode(this.data,this.data.children[0].id);\r\n        this.currentNode = this.data.children[0];\r\n        if(!!this.currentNode.children && this.currentNode.children.length > 0){\r\n          this.treeHelisaService.expandOneNode(this.currentNode);\r\n        }\r\n      }else{\r\n        if(!!this.currentNode.parent && this.currentNode.id != null){\r\n          // obtiene el indice del nodo seleccionado actualmente\r\n          let index = this.currentNode.parent.children.indexOf(this.currentNode);\r\n          \r\n          if(this.currentNode.parent.id == null && index == 0){ \r\n            return 0;\r\n          }else{// si tiene nodos al mismo nivel salta al nodo anterior\r\n            if (index != undefined && index == 0) {\r\n              this.currentNode = this.currentNode.parent;\r\n              this.selectNode(this.data, this.currentNode.id);\r\n              if (!!this.currentNode.children && this.currentNode.children.length > 0) {\r\n                this.treeHelisaService.expandOneNode(this.currentNode);\r\n              }\r\n            } else { // si no tiene nodos al mismo nivel salta al nodo padre\r\n              this.currentNode = this.currentNode.parent.children[index - 1];\r\n              this.selectNode(this.data, this.currentNode.id);\r\n              if (!!this.currentNode.children && this.currentNode.children.length > 0) {\r\n                this.treeHelisaService.expandOneNode(this.currentNode);\r\n              }\r\n            } \r\n          }         \r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  private moveDownIntoTree(){      \r\n    if(!!this.data){\r\n      if(this.currentNode == null){\r\n        this.selectNode(this.data,this.data.children[0].id);\r\n        this.currentNode = this.data.children[0];\r\n        if(!!this.currentNode.children && this.currentNode.children.length > 0){\r\n          this.treeHelisaService.expandOneNode(this.currentNode);\r\n        }\r\n      }else{\r\n        if(!!this.currentNode){\r\n          // obtiene el indice del nodo seleccionado actualmente\r\n          let index = (!!this.currentNode && !!this.currentNode.parent)?this.currentNode.parent.children.indexOf(this.currentNode): null;\r\n          \r\n          // si tiene childrens pasa al primer children\r\n          if(!!this.currentNode.children  &&\r\n            this.currentNode.children.length > 0){\r\n\r\n            this.currentNode = this.currentNode.children[0];\r\n            this.selectNode(this.data,this.currentNode.id);\r\n            if(!!this.currentNode.children && this.currentNode.children.length > 0){\r\n              this.treeHelisaService.expandOneNode(this.currentNode);\r\n            }\r\n          }\r\n          // Si es el ultimo nodo del array pasa al nodo hermano del padre (tio) hacia abajo\r\n          else if(index != undefined &&  \r\n            index == this.currentNode.parent.children.length - 1 &&\r\n            this.currentNode.parent.parent != null &&\r\n            this.currentNode.parent.parent.children != null &&\r\n            this.currentNode.parent.parent.children.length > 0){\r\n\r\n            let indexOfParent = this.currentNode.parent.parent.children.indexOf(this.currentNode.parent); \r\n            this.currentNode = (this.currentNode.parent.parent.children[indexOfParent + 1] == undefined)? this.currentNode : this.currentNode.parent.parent.children[indexOfParent + 1];\r\n\r\n            this.selectNode(this.data,this.currentNode.id);\r\n            if(!!this.currentNode.children && this.currentNode.children.length > 0){\r\n              this.treeHelisaService.expandOneNode(this.currentNode);\r\n            }\r\n          }else{ // si no tiene nodos al mismo nivel salta al siguiente hacia abajo\r\n            this.currentNode = this.currentNode.parent.children[index + 1];\r\n            this.selectNode(this.data,this.currentNode.id);\r\n            if(!!this.currentNode.children && this.currentNode.children.length > 0){\r\n              this.treeHelisaService.expandOneNode(this.currentNode);\r\n            }\r\n          }\r\n\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Verifica si el nodo tiene hijos\r\n   */\r\n  hasChild = (_: number, node: Node) => !!node.children && node.children.length > 0;\r\n\r\n  /**\r\n   * Obtiene la descripcion completa del nodo\r\n   * @example Nodo padre,nodo hijo,nodo nieto\r\n   * @param node Debe tener todos los parent llenos hacia arriba\r\n   */\r\n  public static getDescription(node:Node):string{\r\n      let result:string[]=[node.name];        \r\n      let concat:string=\"\";\r\n\r\n      if(node.parent){          \r\n        result.push(this.getDescription(node.parent))\r\n      }                \r\n\r\n\r\n      if(result.length == 1)\r\n          return node.name;\r\n\r\n      result = result.reverse();\r\n\r\n      for (let i = 0; i < result.length; i++) {            \r\n          let element = result[i];\r\n          concat = concat + element + ((i == result.length-1)?\"\":\",\");                \r\n      }\r\n              \r\n      return concat;\r\n  }\r\n\r\n\r\n  /**\r\n   * Actualiza el arbol borrando toda la data , solo cuando no se utiliza paginacion\r\n   */\r\n  private refreshTree(){\r\n    this.data = null;\r\n    let _data = this.dataSource.data; \r\n    this.dataSource.data = null;\r\n    this.dataSource.data = _data;\r\n    this.treeControl.dataNodes = _data;\r\n  }\r\n\r\n  /**\r\n   * Actualiza el arbol cuando se utiliza la paginacion (Cuando no , utilice el metodo refreshTree())    \r\n   */\r\n  private refreshTreeWithPagination(){    \r\n    let _data = this.dataSource.data; \r\n    this.dataSource.data = null;\r\n    this.dataSource.data = _data;\r\n    this.treeControl.dataNodes = _data;\r\n  }\r\n\r\n\r\n\r\n\r\n  private goNextPage() {\r\n    if (!this.treeHelisaConnect.isLastPage && !this.treeHelisaConnect.isUsed) {\r\n      this.treeHelisaConnect.isUsed = true;\r\n      this.rangeScrolled.emit({\r\n        page: this.treeHelisaConnect.nextPage()              \r\n      });\r\n    }\r\n  }\r\n\r\n  private receivePage(data: Node[]) {    \r\n    if(!this.data){ this.data = {id:null,name:\"root\",isSelected:false}}\r\n    if (!this.data.children) { this.data.children = new Array<Node>(); this.treeHelisaConnect = new TreeHelisaConnect<Node>(); }    \r\n    this.data.children = this.data.children.concat(data);\r\n    this.data.children.forEach(node=>{\r\n      this.fillParent(node,this.data);\r\n    })\r\n\r\n    \r\n    this.data.children = this.reorderByOrderIndex(this.data.children);\r\n    \r\n    this.dataSource.data = this.data.children;    \r\n    this.treeControl.dataNodes = this.data.children;\r\n    this.treeHelisaConnect.isLastPage = data.length === 0;\r\n    this.treeHelisaConnect.isUsed = false;\r\n  }\r\n\r\n  /**\r\n   * Llenan el campo parent de todos los nodos hijos\r\n   * @param node \r\n   * @param parent \r\n   */\r\n  private fillParent(node:Node,parent:Node){\r\n\r\n    node.parent = parent;\r\n    if(node.children && node.children.length > 0){\r\n      node.children.forEach(item=>{\r\n        this.fillParent(item,node);   \r\n      })      \r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * coloca como true del isSelected del nodo que concuerde con el id\r\n   * @param node \r\n   * @param id \r\n   */\r\n  private selectNode(node:Node,id:number|string){ \r\n      \r\n      this.upSelectNode(node)\r\n   \r\n      if(node == undefined || node.id == undefined){\r\n        return null;\r\n      }\r\n      if(node.id == id){\r\n        node.isSelected = true\r\n        this.expandAllParents(node);\r\n        return node;\r\n      }else if (node.children != null){\r\n           var i;\r\n           var result = null;\r\n           for(i=0; result == null && i < node.children.length; i++){\r\n                result = this.selectNode(node.children[i], id);                \r\n           }\r\n           return result;\r\n      }\r\n      return null; \r\n  }\r\n\r\n  private expandAllParents(node:Node){\r\n    if(!!node && !!node.parent){\r\n      this.treeHelisaService.expandOneNode(node.parent);\r\n      this.expandAllParents(node.parent);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Elimina el isSelected de todos los nodos\r\n   * @param node \r\n   */\r\n  private upSelectNode(node: Node) {\r\n    if (!!node && node.isSelected != undefined) {\r\n      node.isSelected = false;\r\n      if (!!node.children)\r\n        for (var i = 0; i < node.children.length; i++) {\r\n          this.upSelectNode(node.children[i]);\r\n        }\r\n    }\r\n  }\r\n\r\n  getClassNode(node: Node): string[]{\r\n    let classNode = [];\r\n    if(node.isSelected) {\r\n      classNode.push(\"isSelected\");\r\n    }\r\n    if(node.classNode){\r\n      classNode.push(node.classNode);\r\n    }\r\n    return classNode;\r\n  }\r\n\r\n  onEditMode(node, editMode) {\r\n    this.getSelectedOptions(node).editMode = editMode;\r\n  }\r\n\r\n  onSelectOption(event, node) {\r\n    node.isCheckedOption = event.source.selected;\r\n    if (node.isCheckedOption)\r\n      this.checkedOptionNode.emit(node.id);\r\n    else\r\n      this.uncheckedOptionNode.emit(node.id);\r\n  }\r\n\r\n  getSelectedOptions(node: Node): any {\r\n    if (this.selectedOptions.has(node.id))\r\n      this.reloadSelectedOptions(node, this.selectedOptions.get(node.id).editMode);\r\n    else\r\n      this.reloadSelectedOptions(node, false);\r\n    return this.selectedOptions.get(node.id);\r\n  }\r\n\r\n  private reloadSelectedOptions(node: Node, editMode: boolean) {\r\n    const array = new Array();\r\n    node.options.forEach(option => {\r\n      if (option.isCheckedOption)\r\n        array.push(option.id);\r\n    });\r\n    const obj = {formControl: new FormControl(array), editMode: editMode};\r\n    this.selectedOptions.set(node.id, obj);\r\n  }\r\n\r\n  /**\r\n   * Retorna el primer Node que encuentre segun el id enviado o null si no hay ninguno\r\n   * @param id  number | string \r\n   * @returns Node o null si no hay un nodo con ese id\r\n   */\r\n  getNodeById(id: number | string) : Node{\r\n    let queue: Node[] = [...this.dataSource.data];\r\n    while(queue.length > 0){\r\n      let curr = queue.shift();\r\n      if(curr.id === id){\r\n        return curr;\r\n      } else {\r\n        if(!!curr.children)\r\n          queue.push(...curr.children)\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  reorderByOrderIndex(node:Node[]):Node[]{\r\n    if(!!node && node.length > 0){\r\n      \r\n      try {\r\n        node = _.orderBy(node, x=> x.orderIndex ,['asc'])        \r\n        node.forEach(element => {\r\n          if(!!element.children && element != null){\r\n            element.children = this.reorderByOrderIndex(element.children)\r\n          }\r\n        });\r\n        return node;\r\n      } catch (error) {\r\n        console.log(error)\r\n      }\r\n    }\r\n    \r\n    \r\n  }\r\n\r\n  //#endregion ====== Metodos ============\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from \"rxjs\";\r\nimport { OptionAutocompleteHelisa } from './autocomplete-helisa.component';\r\n\r\n@Injectable()\r\nexport class AutocompleteHelisaService<T> {\r\n\r\n  private emitChangeSource = new BehaviorSubject<Array<OptionAutocompleteHelisa<T>>>([]);\r\n  public dataSource$ = this.emitChangeSource.asObservable();\r\n\r\n  constructor() { }\r\n\r\n  setDataSource(options: Array<OptionAutocompleteHelisa<T>>) {\r\n    this.emitChangeSource.next(options);\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { Observable, of } from 'rxjs';\r\nimport { map, startWith } from 'rxjs/operators';\r\nimport { AutocompleteHelisaService } from './autocomplete-helisa.component.service';\r\n\r\nexport interface OptionAutocompleteHelisa<T> {\r\n  value: T;\r\n  displayText: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'hel-autocomplete',\r\n  templateUrl: './autocomplete-helisa.component.html',\r\n  styleUrls: ['./autocomplete-helisa.component.css'],\r\n  providers: [AutocompleteHelisaService]\r\n})\r\nexport class AutocompleteHelisaComponent<T> implements OnInit {\r\n\r\n  @Input() myControl = new FormControl();\r\n  @Input() options = new Array<OptionAutocompleteHelisa<T>>();\r\n  filteredOptions: Observable<OptionAutocompleteHelisa<T>[]>;\r\n  selectedValue: OptionAutocompleteHelisa<T>;\r\n  @Output() onSelectedValue: EventEmitter<T> = new EventEmitter<T>();\r\n  @Output() nextPage: EventEmitter<void> = new EventEmitter<void>();\r\n  @Input() isRemote = false;\r\n  isLoading = false;\r\n\r\n  constructor(private autocompleteHelisaService: AutocompleteHelisaService<T>) {\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n    if (this.isRemote) {\r\n      this.autocompleteHelisaService.dataSource$.subscribe(data => {\r\n        setTimeout(() => {\r\n          this.options = data;\r\n          this.filteredOptions = of<OptionAutocompleteHelisa<T>[]>(this.options);  \r\n        });        \r\n      });\r\n    }\r\n\r\n    this.filteredOptions = this.myControl.valueChanges.pipe(\r\n      startWith(''),\r\n      map(value => this._filter(value))\r\n    );\r\n\r\n  }\r\n\r\n  displayFn(option?: OptionAutocompleteHelisa<T>): string | undefined {    \r\n    return option ? option.displayText : undefined;\r\n  }\r\n\r\n  getService(): AutocompleteHelisaService<T> {\r\n    return this.autocompleteHelisaService;\r\n  }\r\n\r\n  private _filter(value): OptionAutocompleteHelisa<T>[] {    \r\n    if (!(value instanceof Object)) {      \r\n      if (!this.isRemote) {\r\n        const filterValue = value.toLowerCase().split(' ');\r\n        return this.options.filter(option => {\r\n          let ws = true;\r\n          filterValue.forEach(text => ws = ws && option.displayText.toLowerCase().indexOf(text) >= 0);\r\n          return ws;\r\n        }).splice(0, 5);\r\n      } else {        \r\n        return this.options;\r\n      }\r\n    }\r\n  }\r\n\r\n  public onSelected(event) {    \r\n    this.selectedValue = event.option.value;\r\n    this.onSelectedValue.emit(this.selectedValue.value);\r\n  }\r\n\r\n  getNextPage(){    \r\n    this.nextPage.emit();\r\n  }\r\n}\r\n","import {AfterViewInit, Directive, ElementRef, EventEmitter, Input, OnDestroy, OnInit, Output} from '@angular/core';\r\nimport {MatSelect, SELECT_ITEM_HEIGHT_EM, MatAutocomplete} from '@angular/material';\r\nimport {auditTime, takeUntil, tap} from 'rxjs/operators';\r\nimport {fromEvent, Subject, Subscription} from 'rxjs';\r\n\r\n\r\nexport interface IAutoCompleteScrollEvent {\r\n  autoComplete: MatAutocomplete;\r\n  scrollEvent: Event;\r\n}\r\n\r\n\r\n@Directive({\r\n  selector: 'mat-autocomplete[optionsScroll]'\r\n})\r\nexport class OptionsScrollDirective  {\r\n\r\n  @Input() thresholdPercent = .8;\r\n  @Output('optionsScroll') scroll = new EventEmitter<IAutoCompleteScrollEvent>();\r\n  _onDestroy = new Subject();\r\n\r\n  constructor(public autoComplete: MatAutocomplete) {\r\n    this.autoComplete.opened.pipe(\r\n      tap(() => {\r\n        // Note: When autocomplete raises opened, panel is not yet created (by Overlay)\r\n        // Note: The panel will be available on next tick\r\n        // Note: The panel wil NOT open if there are no options to display\r\n        setTimeout(() => {\r\n          // Note: remove listner just for safety, in case the close event is skipped.\r\n          this.removeScrollEventListener();\r\n          if(!!this.autoComplete &&\r\n            !!this.autoComplete.panel &&\r\n            !!this.autoComplete.panel.nativeElement){\r\n              this.autoComplete.panel.nativeElement\r\n                .addEventListener('scroll', this.onScroll.bind(this))\r\n            }\r\n        });\r\n      }),\r\n      takeUntil(this._onDestroy)).subscribe();\r\n\r\n    this.autoComplete.closed.pipe(\r\n      tap(() => this.removeScrollEventListener()),\r\n      takeUntil(this._onDestroy)).subscribe();\r\n  }\r\n\r\n  private removeScrollEventListener() {\r\n    if(!!this.autoComplete &&\r\n      !!this.autoComplete.panel &&\r\n      !!this.autoComplete.panel.nativeElement){\r\n    this.autoComplete.panel.nativeElement\r\n      .removeEventListener('scroll', this.onScroll);\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this._onDestroy.next();\r\n    this._onDestroy.complete();\r\n\r\n    this.removeScrollEventListener();\r\n  }\r\n\r\n  onScroll(event: any) {\r\n\r\n    if (this.thresholdPercent === undefined) {\r\n      this.scroll.next({ autoComplete: this.autoComplete, scrollEvent: event });\r\n    } else {\r\n      const threshold = this.thresholdPercent * 100 * event.target.scrollHeight / 100;\r\n      const current = event.target.scrollTop + event.target.clientHeight;\r\n\r\n      //console.log(`scroll ${current}, threshold: ${threshold}`)\r\n      if (current > threshold) {\r\n        //console.log('load next page');\r\n        this.scroll.next({ autoComplete: this.autoComplete, scrollEvent: event });\r\n      }\r\n    }\r\n  }\r\n  \r\n}","import { NgModule } from '@angular/core';\r\nimport { InputWithButtonComponent } from './components/input-with-button/input-with-button.component';\r\nimport { ToastHelisaComponent } from './components/toast-helisa/toast-helisa.component';\r\n\r\n\r\nimport {MatAutocompleteModule} from '@angular/material';\r\nimport {MatToolbarModule} from '@angular/material/toolbar';\r\nimport {MatExpansionModule} from '@angular/material/expansion';\r\nimport {MatFormFieldModule} from '@angular/material/form-field';\r\nimport {MatSelectModule} from '@angular/material/select';\r\nimport {MatListModule} from '@angular/material/list';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatCardModule} from '@angular/material/card';\r\nimport { LayoutModule } from '@angular/cdk/layout';\r\nimport { MatSidenavModule, MatGridListModule,  MatMenuModule, MatRadioModule, MatButtonModule, MatCheckboxModule, MatInputModule, MatOptionModule, MatSnackBarModule, MatTableModule, MatPaginatorModule, MatSortModule } from '@angular/material';\r\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\r\nimport {MatDialogModule} from '@angular/material/dialog';\r\nimport {MatTabsModule} from '@angular/material/tabs';\r\nimport {MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatNativeDateModule } from \"@angular/material\";\r\nimport {MatStepperModule} from '@angular/material/stepper';\r\nimport {MatChipsModule} from '@angular/material/chips';\r\nimport {DragDropModule} from '@angular/cdk/drag-drop';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { CommonModule } from '@angular/common';\r\nimport { AlertHelisaComponent } from './components/alert-helisa/alert-helisa.component';\r\nimport { DependencyTableHelisaComponent } from './components/dependency-table-helisa/dependency-table-helisa.component';\r\nimport { InputHelisaComponent } from './components/input-helisa/input-helisa.component';\r\nimport { TableHelisaComponent } from './components/table-helisa/table-helisa.component';\r\nimport {TableHelisaService} from \"./components/table-helisa/table-helisa.service\";\r\nimport {\r\n  ChangeColumnConfigurationType,\r\n  ColumnConfig,\r\n  EventColumn, TotalType\r\n} from \"./components/table-helisa/table-helisa.interface\";\r\nimport { TreeHelisaComponent } from './components/tree-helisa/tree-helisa.component';\r\nimport {MatTreeModule} from '@angular/material/tree';\r\nimport { DateHelisaComponent } from './components/date-helisa/date-helisa.component';\r\nimport {TreeHelisaService} from \"./components/tree-helisa/tree-helisa.service\";\r\nimport { AutocompleteHelisaComponent } from './components/autocomplete-helisa/autocomplete-helisa.component';\r\nimport { OptionsScrollDirective } from './directives/options-scroll.directive';\r\nimport {MatTooltipModule} from '@angular/material/tooltip';\r\n\r\n\r\n@NgModule({\r\n  declarations: [ \r\n    InputWithButtonComponent, \r\n    ToastHelisaComponent, \r\n    AlertHelisaComponent, \r\n    DependencyTableHelisaComponent, \r\n    InputHelisaComponent, \r\n    TableHelisaComponent,\r\n    TreeHelisaComponent,\r\n    DateHelisaComponent,\r\n    AutocompleteHelisaComponent,\r\n    OptionsScrollDirective\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n\r\n    MatAutocompleteModule,\r\n    MatButtonModule,\r\n    MatCheckboxModule,\r\n    MatToolbarModule,\r\n    MatExpansionModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatSelectModule,\r\n    MatOptionModule,\r\n    MatListModule, \r\n    MatIconModule,\r\n    MatSnackBarModule,\r\n    MatCardModule,\r\n    LayoutModule,\r\n    MatTooltipModule,\r\n    MatButtonModule,\r\n    MatSidenavModule,\r\n    MatIconModule,\r\n    MatListModule,\r\n    MatGridListModule,\r\n    MatCardModule,\r\n    MatMenuModule,\r\n    MatInputModule,\r\n    MatSelectModule,\r\n    MatRadioModule,\r\n    MatProgressSpinnerModule,    \r\n    MatTableModule,\r\n    MatPaginatorModule,\r\n    MatSortModule,\r\n    MatDialogModule,\r\n    MatTabsModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    MatStepperModule,\r\n    MatChipsModule,\r\n    DragDropModule,\r\n    MatTreeModule\r\n  ],\r\n  exports: [\r\n    InputWithButtonComponent, \r\n    ToastHelisaComponent, \r\n    AlertHelisaComponent, \r\n    DependencyTableHelisaComponent, \r\n    InputHelisaComponent, \r\n    TableHelisaComponent,\r\n    TreeHelisaComponent,\r\n    DateHelisaComponent,\r\n    AutocompleteHelisaComponent,\r\n    OptionsScrollDirective,\r\n\r\n    MatButtonModule,\r\n    MatCheckboxModule,\r\n    MatToolbarModule,\r\n    MatExpansionModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatSelectModule,\r\n    MatOptionModule,\r\n    MatListModule, \r\n    MatIconModule,\r\n    MatSnackBarModule,\r\n    MatCardModule,\r\n    LayoutModule,\r\n    MatTooltipModule,\r\n    MatButtonModule,\r\n    MatSidenavModule,\r\n    MatIconModule,\r\n    MatListModule,\r\n    MatGridListModule,\r\n    MatCardModule,\r\n    MatMenuModule,\r\n    MatInputModule,\r\n    MatSelectModule,\r\n    MatRadioModule,\r\n    MatProgressSpinnerModule,    \r\n    MatTableModule,\r\n    MatPaginatorModule,\r\n    MatSortModule,\r\n    MatDialogModule,\r\n    MatTabsModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    MatStepperModule,\r\n    MatChipsModule,\r\n    DragDropModule,\r\n    MatTreeModule\r\n  ],\r\n  providers: [\r\n    TableHelisaService,\r\n    TreeHelisaService\r\n  ]\r\n})\r\nexport class HelisaLibModule { }\r\n"],"names":["FormControl","Validators","EventEmitter","Component","Input","Output","Inject","MAT_SNACK_BAR_DATA","Injectable","MatSnackBar","MatDialogRef","MAT_DIALOG_DATA","MatDialog","Subject","ViewChildren","ViewChild","MatTableDataSource","moveItemInArray","MatSort","MatTable","BehaviorSubject","router","NestedTreeControl","MatTreeNestedDataSource","_","_.remove","_.orderBy","Router","ElementRef","of","startWith","map","tap","takeUntil","Directive","MatAutocomplete","NgModule","CommonModule","FormsModule","ReactiveFormsModule","MatAutocompleteModule","MatButtonModule","MatCheckboxModule","MatToolbarModule","MatExpansionModule","MatFormFieldModule","MatInputModule","MatSelectModule","MatOptionModule","MatListModule","MatIconModule","MatSnackBarModule","MatCardModule","LayoutModule","MatTooltipModule","MatSidenavModule","MatGridListModule","MatMenuModule","MatRadioModule","MatProgressSpinnerModule","MatTableModule","MatPaginatorModule","MatSortModule","MatDialogModule","MatTabsModule","MatDatepickerModule","MatNativeDateModule","MatStepperModule","MatChipsModule","DragDropModule","MatTreeModule"],"mappings":"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"}
